{
	"id": "04d16dd151072a7e2d8b48f1347a8de6",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// Compatible with OpenZeppelin Contracts ^5.0.0\npragma solidity ^0.8.20;\n\nimport \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\n\ncontract CryptoQuestTheShardsOfGenesisMMPORPG is Initializable, PausableUpgradeable, AccessControlUpgradeable, UUPSUpgradeable {\n    bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\");\n    bytes32 public constant UPGRADER_ROLE = keccak256(\"UPGRADER_ROLE\");\n    bytes32 public constant GAME_ADMIN_ROLE = keccak256(\"GAME_ADMIN_ROLE\");\n\n    struct Player {\n        uint level;\n        uint experience;\n        uint health;\n        uint mana;\n        uint attackDamage;\n        uint defense;\n        uint agility;\n        uint luck;\n        uint[] inventory;\n        uint[] skills;\n    }\n\n    struct Item {\n        uint id;\n        string name;\n        uint attackBonus;\n        uint defenseBonus;\n        uint manaBonus;\n        uint healthBonus;\n    }\n\n    struct Quest {\n        string title;\n        string description;\n        uint rewardXP;\n        bool completed;\n    }\n\n    struct Guild {\n        string name;\n        address leader;\n        address[] members;\n    }\n\n    struct Recipe {\n        uint[] itemIds;\n        uint resultItemId;\n    }\n\n    uint private nextItemId = 1;\n    uint private nextRecipeId = 1;\n\n    mapping(uint => Item) public items;\n    mapping(address => Player) public players;\n    mapping(address => Quest[]) public playerQuests;\n    mapping(address => Guild) public guilds;\n    mapping(string => address) guildNameToLeader;\n    mapping(uint => Recipe) public recipes;\n\n    event QuestCompleted(address indexed player, string questTitle);\n    event PlayerCreated(address indexed player);\n    event ItemAdded(uint itemId, string itemName);\n    event GuildCreated(string name, address leader);\n    event RecipeAdded(uint recipeId, uint resultItemId);\n\n    function initialize(address defaultAdmin, address pauser, address upgrader) initializer public {\n        __Pausable_init();\n        __AccessControl_init();\n        __UUPSUpgradeable_init();\n\n        _grantRole(DEFAULT_ADMIN_ROLE, defaultAdmin);\n        _grantRole(PAUSER_ROLE, pauser);\n        _grantRole(UPGRADER_ROLE, upgrader);\n        _grantRole(GAME_ADMIN_ROLE, defaultAdmin);\n    }\n\n    function pause() public onlyRole(PAUSER_ROLE) {\n        _pause();\n    }\n\n    function unpause() public onlyRole(PAUSER_ROLE) {\n        _unpause();\n    }\n\n    function _authorizeUpgrade(address newImplementation) internal override onlyRole(UPGRADER_ROLE) {}\n\n    function createPlayer() public {\n        require(players[msg.sender].level == 0, \"Player already exists\");\n        players[msg.sender] = Player(1, 0, 100, 50, 10, 5, 3, 2, new uint[](0), new uint[](0));\n        emit PlayerCreated(msg.sender);\n    }\n\n    function addItem(string memory name, uint attackBonus, uint defenseBonus, uint manaBonus, uint healthBonus) public onlyRole(GAME_ADMIN_ROLE) {\n        items[nextItemId] = Item(nextItemId, name, attackBonus, defenseBonus, manaBonus, healthBonus);\n        emit ItemAdded(nextItemId, name);\n        nextItemId++;\n    }\n\n    function startQuest(string memory title, string memory description, uint rewardXP) public onlyRole(GAME_ADMIN_ROLE) {\n        playerQuests[msg.sender].push(Quest(title, description, rewardXP, false));\n    }\n\n    function completeQuest(string memory questTitle) public {\n        for (uint i = 0; i < playerQuests[msg.sender].length; i++) {\n            Quest storage quest = playerQuests[msg.sender][i];\n            if (keccak256(abi.encodePacked(quest.title)) == keccak256(abi.encodePacked(questTitle)) && !quest.completed) {\n                quest.completed = true;\n                players[msg.sender].experience += quest.rewardXP;\n                emit QuestCompleted(msg.sender, questTitle);\n                break;\n            }\n        }\n    }\n\n    function createGuild(string memory name, address leader) public onlyRole(GAME_ADMIN_ROLE) {\n        require(guildNameToLeader[name] == address(0), \"Guild already exists\");\n        guilds[leader] = Guild(name, leader, new address[](1));\n        guilds[leader].members[0] = leader;\n        guildNameToLeader[name] = leader;\n        emit GuildCreated(name, leader);\n    }\n\n    function joinGuild(string memory guildName) public {\n        address leader = guildNameToLeader[guildName];\n        require(leader != address(0), \"Guild does not exist\");\n\n        // Adding a check to ensure the sender is not already a member of the guild\n        Guild storage guild = guilds[leader];\n        for (uint i = 0; i < guild.members.length; i++) {\n            require(guild.members[i] != msg.sender, \"Sender is already a member of the guild\");\n        }\n\n        guild.members.push(msg.sender);\n    }\n\n    function addRecipe(uint[] memory itemIds, uint resultItemId) public onlyRole(GAME_ADMIN_ROLE) {\n        recipes[nextRecipeId] = Recipe(itemIds, resultItemId);\n        emit RecipeAdded(nextRecipeId, resultItemId);\n        nextRecipeId++;\n    }\n\n    function craftItem(uint recipeId) public {\n        Recipe memory recipe = recipes[recipeId];\n        require(recipe.itemIds.length > 0, \"Invalid recipe\");\n\n        // Check if the player has all the required items\n        for (uint i = 0; i < recipe.itemIds.length; i++) {\n            bool hasItem = false;\n            for (uint j = 0; j < players[msg.sender].inventory.length; j++) {\n                if (players[msg.sender].inventory[j] == recipe.itemIds[i]) {\n                    hasItem = true;\n                    break;\n                }\n            }\n            require(hasItem, \"Player does not have all required items\");\n        }\n\n        // Remove required items from the player's inventory\n        for (uint i = 0; i < recipe.itemIds.length; i++) {\n            for (uint j = 0; j < players[msg.sender].inventory.length; j++) {\n                if (players[msg.sender].inventory[j] == recipe.itemIds[i]) {\n                    players[msg.sender].inventory[j] = players[msg.sender].inventory[players[msg.sender].inventory.length - 1];\n                    players[msg.sender].inventory.pop();\n                    break;\n                }\n            }\n        }\n\n        // Add the crafted item to the player's inventory\n        players[msg.sender].inventory.push(recipe.resultItemId);\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1822Proxiable} from \"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\";\nimport {ERC1967Utils} from \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable __self = address(this);\n\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev The call is from an unauthorized context.\n     */\n    error UUPSUnauthorizedCallContext();\n\n    /**\n     * @dev The storage `slot` is unsupported as a UUID.\n     */\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        _checkProxy();\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        _checkNotDelegated();\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data);\n    }\n\n    /**\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\n     * context is not of a proxy with an ERC1967-compliant implementation pointing to self.\n     * See {_onlyProxy}.\n     */\n    function _checkProxy() internal view virtual {\n        if (\n            address(this) == __self || // Must be called through delegatecall\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\n        ) {\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Reverts if the execution is performed via delegatecall.\n     * See {notDelegated}.\n     */\n    function _checkNotDelegated() internal view virtual {\n        if (address(this) != __self) {\n            // Must not be called through delegatecall\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n     *\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n     * is expected to be the implementation slot in ERC1967.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\n                revert UUPSUnsupportedProxiableUUID(slot);\n            }\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\n        } catch {\n            // The implementation is not UUPS\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"@openzeppelin/contracts/access/IAccessControl.sol\";\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {ERC165Upgradeable} from \"../utils/introspection/ERC165Upgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControlUpgradeable is Initializable, ContextUpgradeable, IAccessControl, ERC165Upgradeable {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.AccessControl\n    struct AccessControlStorage {\n        mapping(bytes32 role => RoleData) _roles;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.AccessControl\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant AccessControlStorageLocation = 0x02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800;\n\n    function _getAccessControlStorage() private pure returns (AccessControlStorage storage $) {\n        assembly {\n            $.slot := AccessControlStorageLocation\n        }\n    }\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    function __AccessControl_init() internal onlyInitializing {\n    }\n\n    function __AccessControl_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        return $._roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        return $._roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        $._roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        if (!hasRole(role, account)) {\n            $._roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        if (hasRole(role, account)) {\n            $._roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Pausable\n    struct PausableStorage {\n        bool _paused;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Pausable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant PausableStorageLocation = 0xcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300;\n\n    function _getPausableStorage() private pure returns (PausableStorage storage $) {\n        assembly {\n            $.slot := PausableStorageLocation\n        }\n    }\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    function __Pausable_init() internal onlyInitializing {\n        __Pausable_init_unchained();\n    }\n\n    function __Pausable_init_unchained() internal onlyInitializing {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        PausableStorage storage $ = _getPausableStorage();\n        return $._paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n */\nlibrary ERC1967Utils {\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165Upgradeable is Initializable, IERC165 {\n    function __ERC165_init() internal onlyInitializing {\n    }\n\n    function __ERC165_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol": {
				"AccessControlUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":\"AccessControlUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x6662ec4e5cefca03eeadd073e9469df8d2944bb2ee8ec8f7622c2c46aab5f225\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d8544c6f8daa4d1bc215c6a72fe0acdb748664a105b0e5efc19295667521d45\",\"dweb:/ipfs/QmdGWqdnXT8S3RgCR6aV8XHZrsybieMQLLnug1NtpSjEXN\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xdaba3f7c42c55b2896353f32bd27d4d5f8bae741b3b05d4c53f67abc4dc47ce8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fa2e61141c602510bcd2cd936ed9561922ac8772a9b9c9a9db091a74e354a45\",\"dweb:/ipfs/QmcHQDDoEBwJmwUbzoVkytvJsBx3KVHYFFnDkvRGWh9Wmh\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"UUPSUpgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"stateVariables": {
							"UPGRADE_INTERFACE_VERSION": {
								"details": "The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade."
							},
							"__self": {
								"custom:oz-upgrades-unsafe-allow": "state-variable-immutable"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"proxiableUUID()": "52d1902d",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930\",\"dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol": {
				"PausableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"errors": {
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":\"PausableUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0x92915b7f7f642c6be3f65bfd1522feb5d5b6ef25f755f4dbb51df32c868f2f97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85ad36d5cc7e190e1ee6c94b24659bc3a31396c4c36b6ffa6a509e10661f8007\",\"dweb:/ipfs/QmPFyc4zMh2zo6YWZt25gjm3YdR2hg6wGETaWw256fMmJJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
				"ERC165Upgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":\"ERC165Upgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xdaba3f7c42c55b2896353f32bd27d4d5f8bae741b3b05d4c53f67abc4dc47ce8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fa2e61141c602510bcd2cd936ed9561922ac8772a9b9c9a9db091a74e354a45\",\"dweb:/ipfs/QmcHQDDoEBwJmwUbzoVkytvJsBx3KVHYFFnDkvRGWh9Wmh\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"IERC1822Proxiable": {
					"abi": [
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.",
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"proxiableUUID()": "52d1902d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ERC1967Utils": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidAdmin",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidBeacon",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.",
						"errors": {
							"ERC1967InvalidAdmin(address)": [
								{
									"details": "The `admin` of the proxy is invalid."
								}
							],
							"ERC1967InvalidBeacon(address)": [
								{
									"details": "The `beacon` of the proxy is invalid."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							]
						},
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"ADMIN_SLOT": {
								"details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
							},
							"BEACON_SLOT": {
								"details": "The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
							},
							"IMPLEMENTATION_SLOT": {
								"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":449:6722  library ERC1967Utils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":449:6722  library ERC1967Utils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c42ac95af82140ea89348cb50ce0e35e1d71ea0959dafb2d3dbb3d804fe81b4b64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c42ac95af82140ea89348cb50ce0e35e1d71ea0959dafb2d3dbb3d804fe81b4b64736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 0x2A 0xC9 GAS 0xF8 0x21 BLOCKHASH 0xEA DUP10 CALLVALUE DUP13 0xB5 0xC 0xE0 0xE3 MCOPY SAR PUSH18 0xEA0959DAFB2D3DBB3D804FE81B4B64736F6C PUSH4 0x43000819 STOP CALLER ",
							"sourceMap": "449:6273:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;449:6273:8;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c42ac95af82140ea89348cb50ce0e35e1d71ea0959dafb2d3dbb3d804fe81b4b64736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 0x2A 0xC9 GAS 0xF8 0x21 BLOCKHASH 0xEA DUP10 CALLVALUE DUP13 0xB5 0xC 0xE0 0xE3 MCOPY SAR PUSH18 0xEA0959DAFB2D3DBB3D804FE81B4B64736F6C PUSH4 0x43000819 STOP CALLER ",
							"sourceMap": "449:6273:8:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_checkNonPayable()": "infinite",
								"_setAdmin(address)": "infinite",
								"_setBeacon(address)": "infinite",
								"_setImplementation(address)": "infinite",
								"changeAdmin(address)": "infinite",
								"getAdmin()": "infinite",
								"getBeacon()": "infinite",
								"getImplementation()": "infinite",
								"upgradeBeaconToAndCall(address,bytes memory)": "infinite",
								"upgradeToAndCall(address,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH #[$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH [$]",
									"source": 8,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 8,
									"value": "B"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "CODECOPY",
									"source": 8
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP1",
									"source": 8
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MLOAD",
									"source": 8
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "BYTE",
									"source": 8
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "EQ",
									"source": 8
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH [tag]",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "JUMPI",
									"source": 8
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 8,
									"value": "4"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 8,
									"value": "24"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "REVERT",
									"source": 8
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "tag",
									"source": 8,
									"value": "1"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "JUMPDEST",
									"source": 8
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "ADDRESS",
									"source": 8
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 8,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MSTORE",
									"source": 8
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 8,
									"value": "73"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MSTORE8",
									"source": 8
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP3",
									"source": 8
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP2",
									"source": 8
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "RETURN",
									"source": 8
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c42ac95af82140ea89348cb50ce0e35e1d71ea0959dafb2d3dbb3d804fe81b4b64736f6c63430008190033",
									".code": [
										{
											"begin": 449,
											"end": 6722,
											"name": "PUSHDEPLOYADDRESS",
											"source": 8
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "ADDRESS",
											"source": 8
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "PUSH",
											"source": 8,
											"value": "80"
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "REVERT",
											"source": 8
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"IBeacon": {
					"abi": [
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is the interface that {BeaconProxy} expects of its beacon.",
						"kind": "dev",
						"methods": {
							"implementation()": {
								"details": "Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"implementation()": "5c60da1b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c850201aa3fb2a5ef650558516dbe42dcd41181bc95adab2bd080a7385ed789264736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c850201aa3fb2a5ef650558516dbe42dcd41181bc95adab2bd080a7385ed789264736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 POP KECCAK256 BYTE LOG3 0xFB 0x2A MCOPY 0xF6 POP SSTORE DUP6 AND 0xDB 0xE4 0x2D 0xCD COINBASE XOR SHL 0xC9 GAS 0xDA 0xB2 0xBD ADDMOD EXP PUSH20 0x85ED789264736F6C634300081900330000000000 ",
							"sourceMap": "195:6066:10:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;195:6066:10;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c850201aa3fb2a5ef650558516dbe42dcd41181bc95adab2bd080a7385ed789264736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 POP KECCAK256 BYTE LOG3 0xFB 0x2A MCOPY 0xF6 POP SSTORE DUP6 AND 0xDB 0xE4 0x2D 0xCD COINBASE XOR SHL 0xC9 GAS 0xDA 0xB2 0xBD ADDMOD EXP PUSH20 0x85ED789264736F6C634300081900330000000000 ",
							"sourceMap": "195:6066:10:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 10,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 10,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 10
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 10,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 10,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 10,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 10,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 10,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 10
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 10
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c850201aa3fb2a5ef650558516dbe42dcd41181bc95adab2bd080a7385ed789264736f6c63430008190033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 10
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 10
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 10,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 10
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220df88fb0344753f545a845de418d08c2ad14d7427f23fe4d8255f5508210e4d9f64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220df88fb0344753f545a845de418d08c2ad14d7427f23fe4d8255f5508210e4d9f64736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF DUP9 0xFB SUB PREVRANDAO PUSH22 0x3F545A845DE418D08C2AD14D7427F23FE4D8255F5508 0x21 0xE 0x4D SWAP16 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "1245:2685:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1245:2685:11;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220df88fb0344753f545a845de418d08c2ad14d7427f23fe4d8255f5508210e4d9f64736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF DUP9 0xFB SUB PREVRANDAO PUSH22 0x3F545A845DE418D08C2AD14D7427F23FE4D8255F5508 0x21 0xE 0x4D SWAP16 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "1245:2685:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220df88fb0344753f545a845de418d08c2ad14d7427f23fe4d8255f5508210e4d9f64736f6c63430008190033",
									".code": [
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol": {
				"CryptoQuestTheShardsOfGenesisMMPORPG": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "leader",
									"type": "address"
								}
							],
							"name": "GuildCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "itemId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "itemName",
									"type": "string"
								}
							],
							"name": "ItemAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "player",
									"type": "address"
								}
							],
							"name": "PlayerCreated",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "player",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "string",
									"name": "questTitle",
									"type": "string"
								}
							],
							"name": "QuestCompleted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "recipeId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "resultItemId",
									"type": "uint256"
								}
							],
							"name": "RecipeAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "GAME_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PAUSER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "UPGRADER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "attackBonus",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "defenseBonus",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "manaBonus",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "healthBonus",
									"type": "uint256"
								}
							],
							"name": "addItem",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256[]",
									"name": "itemIds",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256",
									"name": "resultItemId",
									"type": "uint256"
								}
							],
							"name": "addRecipe",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "questTitle",
									"type": "string"
								}
							],
							"name": "completeQuest",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "recipeId",
									"type": "uint256"
								}
							],
							"name": "craftItem",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "leader",
									"type": "address"
								}
							],
							"name": "createGuild",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "createPlayer",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "guilds",
							"outputs": [
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "address",
									"name": "leader",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "defaultAdmin",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "pauser",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "upgrader",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "items",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "string",
									"name": "name",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "attackBonus",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "defenseBonus",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "manaBonus",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "healthBonus",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "guildName",
									"type": "string"
								}
							],
							"name": "joinGuild",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "playerQuests",
							"outputs": [
								{
									"internalType": "string",
									"name": "title",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "description",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "rewardXP",
									"type": "uint256"
								},
								{
									"internalType": "bool",
									"name": "completed",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "players",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "level",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "experience",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "health",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "mana",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "attackDamage",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "defense",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "agility",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "luck",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "recipes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "resultItemId",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "string",
									"name": "title",
									"type": "string"
								},
								{
									"internalType": "string",
									"name": "description",
									"type": "string"
								},
								{
									"internalType": "uint256",
									"name": "rewardXP",
									"type": "uint256"
								}
							],
							"name": "startQuest",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							],
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"proxiableUUID()": {
								"details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":420:6536  contract CryptoQuestTheShardsOfGenesisMMPORPG is Initializable, PausableUpgradeable, AccessControlUpgradeable, UUPSUpgradeable {... */\n  mstore(0x40, 0xa0)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1171:1175  this */\n  address\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1128:1176  address private immutable __self = address(this) */\n  0x80\n  mstore\n    /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":1512:1513  1 */\n  0x01\n    /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":1486:1513  uint private nextItemId = 1 */\n  0x00\n  dup2\n  swap1\n  sstore\n    /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":1519:1548  uint private nextRecipeId = 1 */\n  dup1\n  sstore\n    /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":420:6536  contract CryptoQuestTheShardsOfGenesisMMPORPG is Initializable, PausableUpgradeable, AccessControlUpgradeable, UUPSUpgradeable {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x3b04ad91523c4dcf551e081621e633b9099d51bf9c5461e58c3bc7354a578b27\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":420:6536  contract CryptoQuestTheShardsOfGenesisMMPORPG is Initializable, PausableUpgradeable, AccessControlUpgradeable, UUPSUpgradeable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x8456cb59\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xbfb231d2\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xe2eb41ff\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xe2eb41ff\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xe551ba4b\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xe63ab1e9\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xf72c0d8b\n      eq\n      tag_31\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      dup1\n      0xbfb231d2\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xc0c53b8b\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xd3dcff7c\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_27\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      dup1\n      0xa75859e1\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xa75859e1\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xa9834b67\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xad3cb1cc\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xbe22d27d\n      eq\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup1\n      0x8456cb59\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_18\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      dup1\n      0x3fa9fcf8\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x52d1902d\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x52d1902d\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x6f347a78\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x7309cbbd\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      dup1\n      0x3fa9fcf8\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x443c227c\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x4f1ef286\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x4fa4a1bb\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      dup1\n      0x2f2ff15d\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x31fee8be\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x17435e1a\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3443:3645  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_39\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      pop\n      tag_40\n      tag_41\n      calldatasize\n      0x04\n      tag_42\n      jump\t// in\n    tag_41:\n      tag_43\n      jump\t// in\n    tag_40:\n      mload(0x40)\n        /* \"#utility.yul\":470:484   */\n      swap1\n      iszero\n        /* \"#utility.yul\":463:485   */\n      iszero\n        /* \"#utility.yul\":445:486   */\n      dup2\n      mstore\n        /* \"#utility.yul\":433:435   */\n      0x20\n        /* \"#utility.yul\":418:436   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3443:3645  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_44:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3557:4089  function completeQuest(string memory questTitle) public {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_46\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_46:\n      pop\n      tag_47\n      tag_48\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_48:\n      tag_50\n      jump\t// in\n    tag_47:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4759:4950  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_51\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_51:\n      pop\n      tag_52\n      tag_53\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_53:\n      tag_55\n      jump\t// in\n    tag_52:\n      mload(0x40)\n        /* \"#utility.yul\":2206:2231   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":2194:2196   */\n      0x20\n        /* \"#utility.yul\":2179:2197   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4759:4950  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      tag_44\n        /* \"#utility.yul\":2060:2237   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5246:5382  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_58\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_58:\n      pop\n      tag_47\n      tag_60\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_60:\n      tag_62\n      jump\t// in\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3024:3339  function addItem(string memory name, uint attackBonus, uint defenseBonus, uint manaBonus, uint healthBonus) public onlyRole(GAME_ADMIN_ROLE) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_63\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_63:\n      pop\n      tag_47\n      tag_65\n      calldatasize\n      0x04\n      tag_66\n      jump\t// in\n    tag_65:\n      tag_67\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6348:6593  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_68\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_68:\n      pop\n      tag_47\n      tag_70\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_70:\n      tag_71\n      jump\t// in\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2585:2660  function unpause() public onlyRole(PAUSER_ROLE) {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_72\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_72:\n      pop\n      tag_47\n      tag_74\n      jump\t// in\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2770:3018  function createPlayer() public {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      pop\n      tag_47\n      tag_77\n      jump\t// in\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":1790:1828  mapping(uint => Recipe) public recipes */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_78\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_78:\n      pop\n      tag_52\n      tag_80\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_80:\n      mstore(0x20, 0x07)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      0x01\n      add\n      sload\n      dup2\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4158:4372  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_11:\n      tag_47\n      tag_86\n      calldatasize\n      0x04\n      tag_87\n      jump\t// in\n    tag_86:\n      tag_88\n      jump\t// in\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4095:4463  function createGuild(string memory name, address leader) public onlyRole(GAME_ADMIN_ROLE) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_89\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_89:\n      pop\n      tag_47\n      tag_91\n      calldatasize\n      0x04\n      tag_92\n      jump\t// in\n    tag_91:\n      tag_93\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3705:3839  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_94\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_94:\n      pop\n      tag_52\n      tag_96\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2692:2837  function paused() public view virtual returns (bool) {... */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_98\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_98:\n      pop\n      0x00\n      dup1\n      mload\n      0x20\n      data_c0c65a3718f3702d917c44106b91645b509d2e2d0979b70495c3babce192339f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2821:2830  $._paused */\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2692:2837  function paused() public view virtual returns (bool) {... */\n      jump(tag_40)\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3345:3551  function startQuest(string memory title, string memory description, uint rewardXP) public onlyRole(GAME_ADMIN_ROLE) {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_102\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_102:\n      pop\n      tag_47\n      tag_104\n      calldatasize\n      0x04\n      tag_105\n      jump\t// in\n    tag_104:\n      tag_106\n      jump\t// in\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5235:6534  function craftItem(uint recipeId) public {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_107\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_107:\n      pop\n      tag_47\n      tag_109\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_109:\n      tag_110\n      jump\t// in\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2508:2579  function pause() public onlyRole(PAUSER_ROLE) {... */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_111\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_111:\n      pop\n      tag_47\n      tag_113\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3732:3939  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_114\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_114:\n      pop\n      tag_40\n      tag_116\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_116:\n      tag_117\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2317:2366  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_119\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_119:\n      pop\n      tag_52\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2362:2366  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2317:2366  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup2\n      jump\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":1695:1734  mapping(address => Guild) public guilds */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_123\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_123:\n      pop\n      tag_124\n      tag_125\n      calldatasize\n      0x04\n      tag_126\n      jump\t// in\n    tag_125:\n      tag_127\n      jump\t// in\n    tag_124:\n      mload(0x40)\n      tag_44\n      swap3\n      swap2\n      swap1\n      tag_129\n      jump\t// in\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4987:5229  function addRecipe(uint[] memory itemIds, uint resultItemId) public onlyRole(GAME_ADMIN_ROLE) {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_130\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_130:\n      pop\n      tag_47\n      tag_132\n      calldatasize\n      0x04\n      tag_133\n      jump\t// in\n    tag_132:\n      tag_134\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1819:1877  string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\" */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_135\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_135:\n      pop\n      tag_136\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xdc, 0x0352e302e3)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\n    tag_136:\n      mload(0x40)\n      tag_44\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":693:763  bytes32 public constant GAME_ADMIN_ROLE = keccak256(\"GAME_ADMIN_ROLE\") */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_140\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_140:\n      pop\n      tag_52\n      0x00\n      dup1\n      mload\n      0x20\n      data_3059375685003c5c33343043cb51f6c6b03e849d5b2f19339e935f8b505d9fe3\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      dup2\n      jump\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":1555:1589  mapping(uint => Item) public items */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_144\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_144:\n      pop\n      tag_145\n      tag_146\n      calldatasize\n      0x04\n      tag_54\n      jump\t// in\n    tag_146:\n      tag_147\n      jump\t// in\n    tag_145:\n      mload(0x40)\n      tag_44\n      swap7\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_149\n      jump\t// in\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2115:2502  function initialize(address defaultAdmin, address pauser, address upgrader) initializer public {... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_150\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_150:\n      pop\n      tag_47\n      tag_152\n      calldatasize\n      0x04\n      tag_153\n      jump\t// in\n    tag_152:\n      tag_154\n      jump\t// in\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":1642:1689  mapping(address => Quest[]) public playerQuests */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_155\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_155:\n      pop\n      tag_156\n      tag_157\n      calldatasize\n      0x04\n      tag_158\n      jump\t// in\n    tag_157:\n      tag_159\n      jump\t// in\n    tag_156:\n      mload(0x40)\n      tag_44\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_161\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5662:5800  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_162\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_162:\n      pop\n      tag_47\n      tag_164\n      calldatasize\n      0x04\n      tag_61\n      jump\t// in\n    tag_164:\n      tag_165\n      jump\t// in\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":1595:1636  mapping(address => Player) public players */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_166\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_166:\n      pop\n      tag_167\n      tag_168\n      calldatasize\n      0x04\n      tag_126\n      jump\t// in\n    tag_168:\n      mstore(0x20, 0x03)\n      dup1\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      0x00\n      swap2\n      pop\n      swap1\n      pop\n      dup1\n      0x00\n      add\n      sload\n      swap1\n      dup1\n      0x01\n      add\n      sload\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      sload\n      swap1\n      dup1\n      0x05\n      add\n      sload\n      swap1\n      dup1\n      0x06\n      add\n      sload\n      swap1\n      dup1\n      0x07\n      add\n      sload\n      swap1\n      pop\n      dup9\n      jump\n    tag_167:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":9379:9404   */\n      swap9\n      dup10\n      mstore\n        /* \"#utility.yul\":9435:9437   */\n      0x20\n        /* \"#utility.yul\":9420:9438   */\n      dup10\n      add\n        /* \"#utility.yul\":9413:9447   */\n      swap8\n      swap1\n      swap8\n      mstore\n        /* \"#utility.yul\":9463:9481   */\n      swap6\n      dup8\n      add\n        /* \"#utility.yul\":9456:9490   */\n      swap5\n      swap1\n      swap5\n      mstore\n        /* \"#utility.yul\":9521:9523   */\n      0x60\n        /* \"#utility.yul\":9506:9524   */\n      dup7\n      add\n        /* \"#utility.yul\":9499:9533   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":9564:9567   */\n      0x80\n        /* \"#utility.yul\":9549:9568   */\n      dup6\n      add\n        /* \"#utility.yul\":9542:9577   */\n      mstore\n        /* \"#utility.yul\":9608:9611   */\n      0xa0\n        /* \"#utility.yul\":9593:9612   */\n      dup5\n      add\n        /* \"#utility.yul\":9586:9621   */\n      mstore\n        /* \"#utility.yul\":9652:9655   */\n      0xc0\n        /* \"#utility.yul\":9637:9656   */\n      dup4\n      add\n        /* \"#utility.yul\":9630:9665   */\n      mstore\n        /* \"#utility.yul\":9696:9699   */\n      0xe0\n        /* \"#utility.yul\":9681:9700   */\n      dup3\n      add\n        /* \"#utility.yul\":9674:9709   */\n      mstore\n        /* \"#utility.yul\":9366:9369   */\n      0x0100\n        /* \"#utility.yul\":9351:9370   */\n      add\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":1595:1636  mapping(address => Player) public players */\n      tag_44\n        /* \"#utility.yul\":9036:9715   */\n      jump\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4469:4981  function joinGuild(string memory guildName) public {... */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_172\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_172:\n      pop\n      tag_47\n      tag_174\n      calldatasize\n      0x04\n      tag_49\n      jump\t// in\n    tag_174:\n      tag_175\n      jump\t// in\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":553:615  bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\") */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_176\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_176:\n      pop\n      tag_52\n      0x00\n      dup1\n      mload\n      0x20\n      data_9b87106a812d214d41ad9b68a21119e2948eaaf1040375c939ec808b8862455c\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      dup2\n      jump\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":621:687  bytes32 public constant UPGRADER_ROLE = keccak256(\"UPGRADER_ROLE\") */\n    tag_31:\n      callvalue\n      dup1\n      iszero\n      tag_180\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_180:\n      pop\n      tag_52\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":661:687  keccak256(\"UPGRADER_ROLE\") */\n      0x189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":621:687  bytes32 public constant UPGRADER_ROLE = keccak256(\"UPGRADER_ROLE\") */\n      dup2\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3443:3645  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_43:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3528:3532  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3551:3598  interfaceId == type(IAccessControl).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x7965db0b)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3551:3638  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      tag_186\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":1133:1173  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3602:3638  super.supportsInterface(interfaceId) */\n    tag_186:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3544:3638  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3443:3645  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3557:4089  function completeQuest(string memory questTitle) public {... */\n    tag_50:\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3628:3634  uint i */\n      0x00\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3623:4083  for (uint i = 0; i < playerQuests[msg.sender].length; i++) {... */\n    tag_189:\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3657:3667  msg.sender */\n      caller\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3644:3668  playerQuests[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3644:3656  playerQuests */\n      0x04\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3644:3668  playerQuests[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3644:3675  playerQuests[msg.sender].length */\n      sload\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3640:3675  i < playerQuests[msg.sender].length */\n      dup2\n      lt\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3623:4083  for (uint i = 0; i < playerQuests[msg.sender].length; i++) {... */\n      iszero\n      tag_190\n      jumpi\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3731:3741  msg.sender */\n      caller\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3696:3715  Quest storage quest */\n      0x00\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3718:3742  playerQuests[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3718:3730  playerQuests */\n      0x04\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3718:3742  playerQuests[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3718:3745  playerQuests[msg.sender][i] */\n      dup1\n      sload\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3743:3744  i */\n      dup4\n      swap1\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3718:3745  playerQuests[msg.sender][i] */\n      dup2\n      lt\n      tag_193\n      jumpi\n      tag_193\n      tag_194\n      jump\t// in\n    tag_193:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3696:3745  Quest storage quest = playerQuests[msg.sender][i] */\n      swap1\n      pop\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3834:3844  questTitle */\n      dup3\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3817:3845  abi.encodePacked(questTitle) */\n      add(0x20, mload(0x40))\n      tag_196\n      swap2\n      swap1\n      tag_197\n      jump\t// in\n    tag_196:\n      0x40\n      dup1\n      mload\n      not(0x1f)\n      dup2\n      dup5\n      sub\n      add\n      dup2\n      mstore\n      swap1\n      dup3\n      swap1\n      mstore\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3807:3846  keccak256(abi.encodePacked(questTitle)) */\n      dup1\n      mload\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3817:3845  abi.encodePacked(questTitle) */\n      0x20\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3807:3846  keccak256(abi.encodePacked(questTitle)) */\n      swap2\n      dup3\n      add\n      keccak256\n      swap2\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3773:3802  abi.encodePacked(quest.title) */\n      tag_198\n      swap2\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3790:3795  quest */\n      dup5\n      swap2\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3773:3802  abi.encodePacked(quest.title) */\n      add\n      tag_199\n      jump\t// in\n    tag_198:\n      mload(0x40)\n      0x20\n      dup2\n      dup4\n      sub\n      sub\n      dup2\n      mstore\n      swap1\n      0x40\n      mstore\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3763:3803  keccak256(abi.encodePacked(quest.title)) */\n      dup1\n      mload\n      swap1\n      0x20\n      add\n      keccak256\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3763:3846  keccak256(abi.encodePacked(quest.title)) == keccak256(abi.encodePacked(questTitle)) */\n      eq\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3763:3866  keccak256(abi.encodePacked(quest.title)) == keccak256(abi.encodePacked(questTitle)) && !quest.completed */\n      dup1\n      iszero\n      tag_200\n      jumpi\n      pop\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3851:3866  quest.completed */\n      0x03\n      dup2\n      add\n      sload\n      0xff\n      and\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3850:3866  !quest.completed */\n      iszero\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3763:3866  keccak256(abi.encodePacked(quest.title)) == keccak256(abi.encodePacked(questTitle)) && !quest.completed */\n    tag_200:\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3759:4073  if (keccak256(abi.encodePacked(quest.title)) == keccak256(abi.encodePacked(questTitle)) && !quest.completed) {... */\n      iszero\n      tag_201\n      jumpi\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3886:3901  quest.completed */\n      0x03\n      dup1\n      dup3\n      add\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3886:3908  quest.completed = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3904:3908  true */\n      0x01\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3886:3908  quest.completed = true */\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3960:3974  quest.rewardXP */\n      0x02\n      dup4\n      add\n      sload\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3934:3944  msg.sender */\n      caller\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3886:3901  quest.completed */\n      0x00\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3926:3945  players[msg.sender] */\n      swap1\n      dup2\n      mstore\n      0x20\n      swap4\n      swap1\n      swap4\n      mstore\n      0x40\n      dup4\n      keccak256\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3926:3956  players[msg.sender].experience */\n      swap1\n      swap2\n      add\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3926:3974  players[msg.sender].experience += quest.rewardXP */\n      dup1\n      sload\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3960:3974  quest.rewardXP */\n      swap2\n      swap3\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3926:3956  players[msg.sender].experience */\n      swap1\n      swap2\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3926:3974  players[msg.sender].experience += quest.rewardXP */\n      tag_202\n      swap1\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3960:3974  quest.rewardXP */\n      dup5\n      swap1\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3926:3974  players[msg.sender].experience += quest.rewardXP */\n      tag_203\n      jump\t// in\n    tag_202:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3997:4035  QuestCompleted(msg.sender, questTitle) */\n      mload(0x40)\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4012:4022  msg.sender */\n      caller\n      swap1\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3997:4035  QuestCompleted(msg.sender, questTitle) */\n      0xbe21664565742a9f42cbb6d005f92db59c7bcad35b12ef5b57b79e75676b247a\n      swap1\n      tag_204\n      swap1\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4024:4034  questTitle */\n      dup7\n      swap1\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3997:4035  QuestCompleted(msg.sender, questTitle) */\n      tag_139\n      jump\t// in\n    tag_204:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4053:4058  break */\n      pop\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3623:4083  for (uint i = 0; i < playerQuests[msg.sender].length; i++) {... */\n      pop\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3557:4089  function completeQuest(string memory questTitle) public {... */\n      pop\n      jump\t// out\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3759:4073  if (keccak256(abi.encodePacked(quest.title)) == keccak256(abi.encodePacked(questTitle)) && !quest.completed) {... */\n    tag_201:\n      pop\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3677:3680  i++ */\n      0x01\n      add\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3623:4083  for (uint i = 0; i < playerQuests[msg.sender].length; i++) {... */\n      jump(tag_189)\n    tag_190:\n      pop\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3557:4089  function completeQuest(string memory questTitle) public {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4759:4950  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_55:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4824:4831  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4919:4933  $._roles[role] */\n      swap1\n      dup2\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_b3da67d1b252aeab7c8063542d95e75f82a5307a82535949bc38f7cf7ba8897f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4919:4943  $._roles[role].adminRole */\n      0x01\n      add\n      sload\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4759:4950  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5246:5382  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_62:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5320:5338  getRoleAdmin(role) */\n      tag_208\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5333:5337  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5320:5332  getRoleAdmin */\n      tag_55\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5320:5338  getRoleAdmin(role) */\n      jump\t// in\n    tag_208:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_210\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_211\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_210:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5350:5375  _grantRole(role, account) */\n      tag_213\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5361:5365  role */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5367:5374  account */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5350:5360  _grantRole */\n      tag_214\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5350:5375  _grantRole(role, account) */\n      jump\t// in\n    tag_213:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5246:5382  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3024:3339  function addItem(string memory name, uint attackBonus, uint defenseBonus, uint manaBonus, uint healthBonus) public onlyRole(GAME_ADMIN_ROLE) {... */\n    tag_67:\n      0x00\n      dup1\n      mload\n      0x20\n      data_3059375685003c5c33343043cb51f6c6b03e849d5b2f19339e935f8b505d9fe3\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_216\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_211\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_216:\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3195:3268  Item(nextItemId, name, attackBonus, defenseBonus, manaBonus, healthBonus) */\n      0x40\n      dup1\n      mload\n      0xc0\n      dup2\n      add\n      dup3\n      mstore\n      0x00\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3200:3210  nextItemId */\n      dup1\n      sload\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3195:3268  Item(nextItemId, name, attackBonus, defenseBonus, manaBonus, healthBonus) */\n      dup1\n      dup4\n      mstore\n      0x20\n      dup1\n      dup5\n      add\n      dup12\n      dup2\n      mstore\n      dup5\n      dup7\n      add\n      dup12\n      swap1\n      mstore\n      0x60\n      dup6\n      add\n      dup11\n      swap1\n      mstore\n      0x80\n      dup6\n      add\n      dup10\n      swap1\n      mstore\n      0xa0\n      dup6\n      add\n      dup9\n      swap1\n      mstore\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3175:3192  items[nextItemId] */\n      swap2\n      dup4\n      mstore\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3175:3180  items */\n      0x02\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3175:3192  items[nextItemId] */\n      swap1\n      mstore\n      swap3\n      swap1\n      keccak256\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3175:3268  items[nextItemId] = Item(nextItemId, name, attackBonus, defenseBonus, manaBonus, healthBonus) */\n      dup2\n      mload\n      dup2\n      sstore\n      swap2\n      mload\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3195:3268  Item(nextItemId, name, attackBonus, defenseBonus, manaBonus, healthBonus) */\n      swap1\n      swap2\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3175:3192  items[nextItemId] */\n      swap1\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3175:3268  items[nextItemId] = Item(nextItemId, name, attackBonus, defenseBonus, manaBonus, healthBonus) */\n      0x01\n      dup3\n      add\n      swap1\n      tag_218\n      swap1\n      dup3\n      tag_219\n      jump\t// in\n    tag_218:\n      pop\n      0x40\n      dup3\n      add\n      mload\n      dup2\n      0x02\n      add\n      sstore\n      0x60\n      dup3\n      add\n      mload\n      dup2\n      0x03\n      add\n      sstore\n      0x80\n      dup3\n      add\n      mload\n      dup2\n      0x04\n      add\n      sstore\n      0xa0\n      dup3\n      add\n      mload\n      dup2\n      0x05\n      add\n      sstore\n      swap1\n      pop\n      pop\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3283:3310  ItemAdded(nextItemId, name) */\n      0x78d68ba0e8c23b92e7c700d99efed2719520cbd4af845b2c03ae251f9cdf3d52\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3293:3303  nextItemId */\n      sload(0x00)\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3305:3309  name */\n      dup8\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3283:3310  ItemAdded(nextItemId, name) */\n      mload(0x40)\n      tag_220\n      swap3\n      swap2\n      swap1\n      tag_221\n      jump\t// in\n    tag_220:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3320:3330  nextItemId */\n      0x00\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3320:3332  nextItemId++ */\n      dup1\n      sload\n      swap1\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3320:3330  nextItemId */\n      dup1\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3320:3332  nextItemId++ */\n      tag_222\n      dup4\n      tag_223\n      jump\t// in\n    tag_222:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3024:3339  function addItem(string memory name, uint attackBonus, uint defenseBonus, uint manaBonus, uint healthBonus) public onlyRole(GAME_ADMIN_ROLE) {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6348:6593  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_71:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6441:6475  callerConfirmation != _msgSender() */\n      dup2\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6441:6475  callerConfirmation != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6437:6539  if (callerConfirmation != _msgSender()) {... */\n      tag_227\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6498:6528  AccessControlBadConfirmation() */\n      mload(0x40)\n      shl(0xe1, 0x334bd919)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6437:6539  if (callerConfirmation != _msgSender()) {... */\n    tag_227:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6549:6586  _revokeRole(role, callerConfirmation) */\n      tag_228\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6561:6565  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6567:6585  callerConfirmation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6549:6560  _revokeRole */\n      tag_229\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6549:6586  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_228:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6348:6593  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2585:2660  function unpause() public onlyRole(PAUSER_ROLE) {... */\n    tag_74:\n      0x00\n      dup1\n      mload\n      0x20\n      data_9b87106a812d214d41ad9b68a21119e2948eaaf1040375c939ec808b8862455c\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_231\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_211\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_231:\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2643:2653  _unpause() */\n      tag_233\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2643:2651  _unpause */\n      tag_234\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2643:2653  _unpause() */\n      jump\t// in\n    tag_233:\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2585:2660  function unpause() public onlyRole(PAUSER_ROLE) {... */\n      pop\n      jump\t// out\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2770:3018  function createPlayer() public {... */\n    tag_77:\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2827:2837  msg.sender */\n      caller\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2819:2838  players[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2819:2826  players */\n      0x03\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2819:2838  players[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2819:2844  players[msg.sender].level */\n      sload\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2819:2849  players[msg.sender].level == 0 */\n      iszero\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2811:2875  require(players[msg.sender].level == 0, \"Player already exists\") */\n      tag_236\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14580:14582   */\n      0x20\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2811:2875  require(players[msg.sender].level == 0, \"Player already exists\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14562:14583   */\n      mstore\n        /* \"#utility.yul\":14619:14621   */\n      0x15\n        /* \"#utility.yul\":14599:14617   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14592:14622   */\n      mstore\n      shl(0x58, 0x506c6179657220616c726561647920657869737473)\n        /* \"#utility.yul\":14638:14656   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14631:14682   */\n      mstore\n        /* \"#utility.yul\":14699:14717   */\n      0x64\n      add\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2811:2875  require(players[msg.sender].level == 0, \"Player already exists\") */\n    tag_237:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_236:\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2907:2971  Player(1, 0, 100, 50, 10, 5, 3, 2, new uint[](0), new uint[](0)) */\n      mload(0x40)\n      dup1\n      0x0140\n      add\n      0x40\n      mstore\n      dup1\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2914:2915  1 */\n      0x01\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2907:2971  Player(1, 0, 100, 50, 10, 5, 3, 2, new uint[](0), new uint[](0)) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2917:2918  0 */\n      0x00\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2907:2971  Player(1, 0, 100, 50, 10, 5, 3, 2, new uint[](0), new uint[](0)) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2920:2923  100 */\n      0x64\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2907:2971  Player(1, 0, 100, 50, 10, 5, 3, 2, new uint[](0), new uint[](0)) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2925:2927  50 */\n      0x32\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2907:2971  Player(1, 0, 100, 50, 10, 5, 3, 2, new uint[](0), new uint[](0)) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2929:2931  10 */\n      0x0a\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2907:2971  Player(1, 0, 100, 50, 10, 5, 3, 2, new uint[](0), new uint[](0)) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2933:2934  5 */\n      0x05\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2907:2971  Player(1, 0, 100, 50, 10, 5, 3, 2, new uint[](0), new uint[](0)) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2936:2937  3 */\n      0x03\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2907:2971  Player(1, 0, 100, 50, 10, 5, 3, 2, new uint[](0), new uint[](0)) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2939:2940  2 */\n      0x02\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2907:2971  Player(1, 0, 100, 50, 10, 5, 3, 2, new uint[](0), new uint[](0)) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2953:2954  0 */\n      0x00\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2942:2955  new uint[](0) */\n      0xffffffffffffffff\n      dup2\n      gt\n      iszero\n      tag_240\n      jumpi\n      tag_240\n      tag_241\n      jump\t// in\n    tag_240:\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_242\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_242:\n      pop\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2907:2971  Player(1, 0, 100, 50, 10, 5, 3, 2, new uint[](0), new uint[](0)) */\n      dup2\n      mstore\n      0x20\n      add\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2968:2969  0 */\n      0x00\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2957:2970  new uint[](0) */\n      mload(0x40)\n      swap1\n      dup1\n      dup3\n      mstore\n      dup1\n      0x20\n      mul\n      0x20\n      add\n      dup3\n      add\n      0x40\n      mstore\n      dup1\n      iszero\n      tag_245\n      jumpi\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      add\n      swap1\n      pop\n    tag_245:\n      pop\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2907:2971  Player(1, 0, 100, 50, 10, 5, 3, 2, new uint[](0), new uint[](0)) */\n      swap1\n      mstore\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2893:2903  msg.sender */\n      caller\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2885:2904  players[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2885:2892  players */\n      0x03\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2885:2904  players[msg.sender] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      swap3\n      dup4\n      swap1\n      keccak256\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2885:2971  players[msg.sender] = Player(1, 0, 100, 50, 10, 5, 3, 2, new uint[](0), new uint[](0)) */\n      dup5\n      mload\n      dup2\n      sstore\n      dup5\n      dup3\n      add\n      mload\n      0x01\n      dup3\n      add\n      sstore\n      swap3\n      dup5\n      add\n      mload\n      0x02\n      dup5\n      add\n      sstore\n      0x60\n      dup5\n      add\n      mload\n      swap2\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      sstore\n      0x80\n      dup4\n      add\n      mload\n      0x04\n      dup4\n      add\n      sstore\n      0xa0\n      dup4\n      add\n      mload\n      0x05\n      dup4\n      add\n      sstore\n      0xc0\n      dup4\n      add\n      mload\n      0x06\n      dup4\n      add\n      sstore\n      0xe0\n      dup4\n      add\n      mload\n      0x07\n      dup4\n      add\n      sstore\n      0x0100\n      dup4\n      add\n      mload\n      dup1\n      mload\n      tag_246\n      swap3\n      0x08\n      dup6\n      add\n      swap3\n      add\n      swap1\n      tag_247\n      jump\t// in\n    tag_246:\n      pop\n      0x0120\n      dup3\n      add\n      mload\n      dup1\n      mload\n      tag_248\n      swap2\n      0x09\n      dup5\n      add\n      swap2\n      0x20\n      swap1\n      swap2\n      add\n      swap1\n      tag_247\n      jump\t// in\n    tag_248:\n      pop\n      pop\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2986:3011  PlayerCreated(msg.sender) */\n      mload(0x40)\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3000:3010  msg.sender */\n      caller\n      swap2\n      pop\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2986:3011  PlayerCreated(msg.sender) */\n      0xb4cca19a27ce42915c3cee0cee28fc5d90969ee49f09ec71659546a63b5f7bc0\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2770:3018  function createPlayer() public {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4158:4372  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_88:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2653:2666  _checkProxy() */\n      tag_250\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2653:2664  _checkProxy */\n      tag_251\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2653:2666  _checkProxy() */\n      jump\t// in\n    tag_250:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4273:4309  _authorizeUpgrade(newImplementation) */\n      tag_253\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4291:4308  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4273:4290  _authorizeUpgrade */\n      tag_254\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4273:4309  _authorizeUpgrade(newImplementation) */\n      jump\t// in\n    tag_253:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4319:4365  _upgradeToAndCallUUPS(newImplementation, data) */\n      tag_190\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4341:4358  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4360:4364  data */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4319:4340  _upgradeToAndCallUUPS */\n      tag_256\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4319:4365  _upgradeToAndCallUUPS(newImplementation, data) */\n      jump\t// in\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4095:4463  function createGuild(string memory name, address leader) public onlyRole(GAME_ADMIN_ROLE) {... */\n    tag_93:\n      0x00\n      dup1\n      mload\n      0x20\n      data_3059375685003c5c33343043cb51f6c6b03e849d5b2f19339e935f8b505d9fe3\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_258\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_211\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_258:\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4238:4239  0 */\n      0x00\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4203:4240  guildNameToLeader[name] == address(0) */\n      and\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4203:4220  guildNameToLeader */\n      0x06\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4221:4225  name */\n      dup5\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4203:4226  guildNameToLeader[name] */\n      mload(0x40)\n      tag_260\n      swap2\n      swap1\n      tag_197\n      jump\t// in\n    tag_260:\n      swap1\n      dup2\n      mstore\n      mload(0x40)\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4203:4240  guildNameToLeader[name] == address(0) */\n      eq\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4195:4265  require(guildNameToLeader[name] == address(0), \"Guild already exists\") */\n      tag_261\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14930:14932   */\n      0x20\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4195:4265  require(guildNameToLeader[name] == address(0), \"Guild already exists\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14912:14933   */\n      mstore\n        /* \"#utility.yul\":14969:14971   */\n      0x14\n        /* \"#utility.yul\":14949:14967   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14942:14972   */\n      mstore\n      shl(0x60, 0x4775696c6420616c726561647920657869737473)\n        /* \"#utility.yul\":14988:15006   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14981:15031   */\n      mstore\n        /* \"#utility.yul\":15048:15066   */\n      0x64\n      add\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4195:4265  require(guildNameToLeader[name] == address(0), \"Guild already exists\") */\n      tag_237\n        /* \"#utility.yul\":14728:15072   */\n      jump\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4195:4265  require(guildNameToLeader[name] == address(0), \"Guild already exists\") */\n    tag_261:\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4292:4329  Guild(name, leader, new address[](1)) */\n      0x40\n      dup1\n      mload\n      0x60\n      dup2\n      add\n      dup3\n      mstore\n      dup5\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup5\n      and\n      0x20\n      dup3\n      add\n      mstore\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4312:4328  new address[](1) */\n      dup2\n      mload\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4326:4327  1 */\n      0x01\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4312:4328  new address[](1) */\n      dup1\n      dup3\n      mstore\n      dup2\n      dup5\n      add\n      dup5\n      mstore\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4292:4329  Guild(name, leader, new address[](1)) */\n      swap2\n      swap3\n      dup4\n      add\n      swap2\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4312:4328  new address[](1) */\n      dup2\n      0x20\n      add\n      0x20\n      dup3\n      mul\n      dup1\n      calldatasize\n      dup4\n      calldatacopy\n      pop\n      pop\n      pop\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4292:4329  Guild(name, leader, new address[](1)) */\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4275:4289  guilds[leader] */\n      dup4\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4275:4281  guilds */\n      0x05\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4275:4289  guilds[leader] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4275:4329  guilds[leader] = Guild(name, leader, new address[](1)) */\n      dup2\n      mload\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4275:4289  guilds[leader] */\n      dup2\n      swap1\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4275:4329  guilds[leader] = Guild(name, leader, new address[](1)) */\n      tag_267\n      swap1\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4275:4289  guilds[leader] */\n      dup3\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4275:4329  guilds[leader] = Guild(name, leader, new address[](1)) */\n      tag_219\n      jump\t// in\n    tag_267:\n      pop\n      0x20\n      dup3\n      dup2\n      add\n      mload\n      0x01\n      dup4\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      0x40\n      dup4\n      add\n      mload\n      dup1\n      mload\n      tag_268\n      swap3\n      0x02\n      dup6\n      add\n      swap3\n      add\n      swap1\n      tag_269\n      jump\t// in\n    tag_268:\n      pop\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4339:4353  guilds[leader] */\n      dup3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4339:4345  guilds */\n      0x05\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4339:4353  guilds[leader] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4339:4361  guilds[leader].members */\n      0x02\n      add\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4339:4364  guilds[leader].members[0] */\n      dup1\n      sload\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4367:4373  leader */\n      dup5\n      swap3\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4339:4353  guilds[leader] */\n      swap1\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4339:4364  guilds[leader].members[0] */\n      tag_271\n      jumpi\n      tag_271\n      tag_194\n      jump\t// in\n    tag_271:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4339:4373  guilds[leader].members[0] = leader */\n      0x0100\n      exp\n      dup2\n      sload\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n      mul\n      not\n      and\n      swap1\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      mul\n      or\n      swap1\n      sstore\n      pop\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4409:4415  leader */\n      dup2\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4383:4400  guildNameToLeader */\n      0x06\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4401:4405  name */\n      dup5\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4383:4406  guildNameToLeader[name] */\n      mload(0x40)\n      tag_273\n      swap2\n      swap1\n      tag_197\n      jump\t// in\n    tag_273:\n      swap1\n      dup2\n      mstore\n      mload(0x40)\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      dup2\n      keccak256\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4383:4415  guildNameToLeader[name] = leader */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap4\n      swap1\n      swap4\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap1\n      swap4\n      and\n      swap3\n      swap1\n      swap3\n      or\n      swap1\n      swap2\n      sstore\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4430:4456  GuildCreated(name, leader) */\n      0x072208535a97b2e307167838c66aacd47f8de3a2cb92bc2ddb2b2b52009c9fd5\n      swap1\n      tag_274\n      swap1\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4443:4447  name */\n      dup6\n      swap1\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4449:4455  leader */\n      dup6\n      swap1\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4430:4456  GuildCreated(name, leader) */\n      tag_129\n      jump\t// in\n    tag_274:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4095:4463  function createGuild(string memory name, address leader) public onlyRole(GAME_ADMIN_ROLE) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3705:3839  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_96:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3774:3781  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2924:2944  _checkNotDelegated() */\n      tag_276\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2924:2942  _checkNotDelegated */\n      tag_277\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2924:2944  _checkNotDelegated() */\n      jump\t// in\n    tag_276:\n      pop\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3705:3839  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3345:3551  function startQuest(string memory title, string memory description, uint rewardXP) public onlyRole(GAME_ADMIN_ROLE) {... */\n    tag_106:\n      0x00\n      dup1\n      mload\n      0x20\n      data_3059375685003c5c33343043cb51f6c6b03e849d5b2f19339e935f8b505d9fe3\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_283\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_211\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_283:\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3484:3494  msg.sender */\n      caller\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3471:3495  playerQuests[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3471:3483  playerQuests */\n      0x04\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3471:3495  playerQuests[msg.sender] */\n      0x20\n      dup2\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3501:3543  Quest(title, description, rewardXP, false) */\n      dup2\n      mload\n      0x80\n      dup2\n      add\n      dup4\n      mstore\n      dup10\n      dup2\n      mstore\n      dup1\n      dup5\n      add\n      dup10\n      swap1\n      mstore\n      swap2\n      dup3\n      add\n      dup8\n      swap1\n      mstore\n      0x60\n      dup3\n      add\n      dup6\n      swap1\n      mstore\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3471:3544  playerQuests[msg.sender].push(Quest(title, description, rewardXP, false)) */\n      dup1\n      sload\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3501:3543  Quest(title, description, rewardXP, false) */\n      0x01\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3471:3544  playerQuests[msg.sender].push(Quest(title, description, rewardXP, false)) */\n      dup2\n      add\n      dup3\n      sstore\n      swap1\n      dup6\n      mstore\n      swap2\n      swap1\n      swap4\n      keccak256\n      dup4\n      mload\n      swap2\n      swap1\n      swap3\n      mul\n      swap1\n      swap2\n      add\n      swap1\n      dup2\n      swap1\n      tag_286\n      swap1\n      dup3\n      tag_219\n      jump\t// in\n    tag_286:\n      pop\n      0x20\n      dup3\n      add\n      mload\n      0x01\n      dup3\n      add\n      swap1\n      tag_287\n      swap1\n      dup3\n      tag_219\n      jump\t// in\n    tag_287:\n      pop\n      0x40\n      dup3\n      add\n      mload\n      0x02\n      dup3\n      add\n      sstore\n      0x60\n      swap1\n      swap2\n      add\n      mload\n      0x03\n      swap1\n      swap2\n      add\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      pop\n      pop\n      pop\n      pop\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":3345:3551  function startQuest(string memory title, string memory description, uint rewardXP) public onlyRole(GAME_ADMIN_ROLE) {... */\n      jump\t// out\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5235:6534  function craftItem(uint recipeId) public {... */\n    tag_110:\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5286:5306  Recipe memory recipe */\n      0x00\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5309:5326  recipes[recipeId] */\n      dup2\n      dup2\n      mstore\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5309:5316  recipes */\n      0x07\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5309:5326  recipes[recipeId] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5286:5326  Recipe memory recipe = recipes[recipeId] */\n      dup2\n      mload\n      dup2\n      sload\n      0x60\n      swap5\n      dup2\n      mul\n      dup3\n      add\n      dup6\n      add\n      dup5\n      mstore\n      swap3\n      dup2\n      add\n      dup4\n      dup2\n      mstore\n      swap1\n      swap4\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5309:5326  recipes[recipeId] */\n      swap2\n      swap3\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5286:5326  Recipe memory recipe = recipes[recipeId] */\n      dup5\n      swap3\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5309:5326  recipes[recipeId] */\n      dup5\n      swap2\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5286:5326  Recipe memory recipe = recipes[recipeId] */\n      swap1\n      dup5\n      add\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5309:5326  recipes[recipeId] */\n      dup3\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5286:5326  Recipe memory recipe = recipes[recipeId] */\n      dup3\n      dup1\n      iszero\n      tag_289\n      jumpi\n      0x20\n      mul\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_290:\n      dup2\n      sload\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      0x01\n      add\n      swap1\n      dup1\n      dup4\n      gt\n      tag_290\n      jumpi\n    tag_289:\n      pop\n      pop\n      pop\n      pop\n      pop\n      dup2\n      mstore\n      0x20\n      add\n      0x01\n      dup3\n      add\n      sload\n      dup2\n      mstore\n      pop\n      pop\n      swap1\n      pop\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5368:5369  0 */\n      0x00\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5344:5350  recipe */\n      dup2\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5344:5358  recipe.itemIds */\n      0x00\n      add\n      mload\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5344:5365  recipe.itemIds.length */\n      mload\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5344:5369  recipe.itemIds.length > 0 */\n      gt\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5336:5388  require(recipe.itemIds.length > 0, \"Invalid recipe\") */\n      tag_291\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15279:15281   */\n      0x20\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5336:5388  require(recipe.itemIds.length > 0, \"Invalid recipe\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15261:15282   */\n      mstore\n        /* \"#utility.yul\":15318:15320   */\n      0x0e\n        /* \"#utility.yul\":15298:15316   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15291:15321   */\n      mstore\n      shl(0x90, 0x496e76616c696420726563697065)\n        /* \"#utility.yul\":15337:15355   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15330:15374   */\n      mstore\n        /* \"#utility.yul\":15391:15409   */\n      0x64\n      add\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5336:5388  require(recipe.itemIds.length > 0, \"Invalid recipe\") */\n      tag_237\n        /* \"#utility.yul\":15077:15415   */\n      jump\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5336:5388  require(recipe.itemIds.length > 0, \"Invalid recipe\") */\n    tag_291:\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5462:5468  uint i */\n      0x00\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5457:5874  for (uint i = 0; i < recipe.itemIds.length; i++) {... */\n    tag_294:\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5478:5492  recipe.itemIds */\n      dup2\n      mload\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5478:5499  recipe.itemIds.length */\n      mload\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5474:5499  i < recipe.itemIds.length */\n      dup2\n      lt\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5457:5874  for (uint i = 0; i < recipe.itemIds.length; i++) {... */\n      iszero\n      tag_295\n      jumpi\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5520:5532  bool hasItem */\n      0x00\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5559:5565  uint j */\n      dup1\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5554:5791  for (uint j = 0; j < players[msg.sender].inventory.length; j++) {... */\n    tag_297:\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5583:5593  msg.sender */\n      caller\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5575:5594  players[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5575:5582  players */\n      0x03\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5575:5594  players[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5575:5604  players[msg.sender].inventory */\n      0x08\n      add\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5575:5611  players[msg.sender].inventory.length */\n      sload\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5571:5611  j < players[msg.sender].inventory.length */\n      dup2\n      lt\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5554:5791  for (uint j = 0; j < players[msg.sender].inventory.length; j++) {... */\n      iszero\n      tag_298\n      jumpi\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5676:5690  recipe.itemIds */\n      dup4\n      mload\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5676:5693  recipe.itemIds[i] */\n      dup1\n      mload\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5691:5692  i */\n      dup5\n      swap1\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5676:5693  recipe.itemIds[i] */\n      dup2\n      lt\n      tag_301\n      jumpi\n      tag_301\n      tag_194\n      jump\t// in\n    tag_301:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5640:5647  players */\n      0x03\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5640:5659  players[msg.sender] */\n      0x00\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5648:5658  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5640:5659  players[msg.sender] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5640:5669  players[msg.sender].inventory */\n      0x08\n      add\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5670:5671  j */\n      dup3\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5640:5672  players[msg.sender].inventory[j] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_303\n      jumpi\n      tag_303\n      tag_194\n      jump\t// in\n    tag_303:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5640:5693  players[msg.sender].inventory[j] == recipe.itemIds[i] */\n      sub\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5636:5777  if (players[msg.sender].inventory[j] == recipe.itemIds[i]) {... */\n      tag_305\n      jumpi\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5727:5731  true */\n      0x01\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5717:5731  hasItem = true */\n      swap2\n      pop\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5753:5758  break */\n      jump(tag_298)\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5636:5777  if (players[msg.sender].inventory[j] == recipe.itemIds[i]) {... */\n    tag_305:\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5613:5616  j++ */\n      0x01\n      add\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5554:5791  for (uint j = 0; j < players[msg.sender].inventory.length; j++) {... */\n      jump(tag_297)\n    tag_298:\n      pop\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5812:5819  hasItem */\n      dup1\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5804:5863  require(hasItem, \"Player does not have all required items\") */\n      tag_306\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15622:15624   */\n      0x20\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5804:5863  require(hasItem, \"Player does not have all required items\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15604:15625   */\n      mstore\n        /* \"#utility.yul\":15661:15663   */\n      0x27\n        /* \"#utility.yul\":15641:15659   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15634:15664   */\n      mstore\n        /* \"#utility.yul\":15700:15734   */\n      0x506c6179657220646f6573206e6f74206861766520616c6c2072657175697265\n        /* \"#utility.yul\":15680:15698   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15673:15735   */\n      mstore\n      shl(0xc8, 0x64206974656d73)\n        /* \"#utility.yul\":15751:15769   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":15744:15781   */\n      mstore\n        /* \"#utility.yul\":15798:15817   */\n      0x84\n      add\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5804:5863  require(hasItem, \"Player does not have all required items\") */\n      tag_237\n        /* \"#utility.yul\":15420:15823   */\n      jump\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5804:5863  require(hasItem, \"Player does not have all required items\") */\n    tag_306:\n      pop\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5501:5504  i++ */\n      0x01\n      add\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5457:5874  for (uint i = 0; i < recipe.itemIds.length; i++) {... */\n      jump(tag_294)\n    tag_295:\n      pop\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5950:5956  uint i */\n      0x00\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5945:6404  for (uint i = 0; i < recipe.itemIds.length; i++) {... */\n    tag_309:\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5966:5980  recipe.itemIds */\n      dup2\n      mload\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5966:5987  recipe.itemIds.length */\n      mload\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5962:5987  i < recipe.itemIds.length */\n      dup2\n      lt\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5945:6404  for (uint i = 0; i < recipe.itemIds.length; i++) {... */\n      iszero\n      tag_310\n      jumpi\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6013:6019  uint j */\n      0x00\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6008:6394  for (uint j = 0; j < players[msg.sender].inventory.length; j++) {... */\n    tag_312:\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6037:6047  msg.sender */\n      caller\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6029:6048  players[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6029:6036  players */\n      0x03\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6029:6048  players[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6029:6058  players[msg.sender].inventory */\n      0x08\n      add\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6029:6065  players[msg.sender].inventory.length */\n      sload\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6025:6065  j < players[msg.sender].inventory.length */\n      dup2\n      lt\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6008:6394  for (uint j = 0; j < players[msg.sender].inventory.length; j++) {... */\n      iszero\n      tag_313\n      jumpi\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6130:6144  recipe.itemIds */\n      dup3\n      mload\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6130:6147  recipe.itemIds[i] */\n      dup1\n      mload\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6145:6146  i */\n      dup4\n      swap1\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6130:6147  recipe.itemIds[i] */\n      dup2\n      lt\n      tag_316\n      jumpi\n      tag_316\n      tag_194\n      jump\t// in\n    tag_316:\n      0x20\n      mul\n      0x20\n      add\n      add\n      mload\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6094:6101  players */\n      0x03\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6094:6113  players[msg.sender] */\n      0x00\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6102:6112  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6094:6113  players[msg.sender] */\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6094:6123  players[msg.sender].inventory */\n      0x08\n      add\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6124:6125  j */\n      dup3\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6094:6126  players[msg.sender].inventory[j] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_318\n      jumpi\n      tag_318\n      tag_194\n      jump\t// in\n    tag_318:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      sload\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6094:6147  players[msg.sender].inventory[j] == recipe.itemIds[i] */\n      sub\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6090:6380  if (players[msg.sender].inventory[j] == recipe.itemIds[i]) {... */\n      tag_320\n      jumpi\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6214:6224  msg.sender */\n      caller\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6206:6225  players[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6206:6213  players */\n      0x03\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6206:6225  players[msg.sender] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6206:6235  players[msg.sender].inventory */\n      0x08\n      add\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6236:6272  players[msg.sender].inventory.length */\n      dup1\n      sload\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6236:6276  players[msg.sender].inventory.length - 1 */\n      tag_321\n      swap1\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6275:6276  1 */\n      0x01\n      swap1\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6236:6276  players[msg.sender].inventory.length - 1 */\n      tag_322\n      jump\t// in\n    tag_321:\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6206:6277  players[msg.sender].inventory[players[msg.sender].inventory.length - 1] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_324\n      jumpi\n      tag_324\n      tag_194\n      jump\t// in\n    tag_324:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n      sload\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6179:6189  msg.sender */\n      caller\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6171:6190  players[msg.sender] */\n      dup4\n      mstore\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6171:6178  players */\n      0x03\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6171:6190  players[msg.sender] */\n      swap1\n      swap2\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6171:6200  players[msg.sender].inventory */\n      0x08\n      add\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6171:6203  players[msg.sender].inventory[j] */\n      dup1\n      sload\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6201:6202  j */\n      dup4\n      swap1\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6171:6203  players[msg.sender].inventory[j] */\n      dup2\n      lt\n      tag_327\n      jumpi\n      tag_327\n      tag_194\n      jump\t// in\n    tag_327:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n      swap1\n      swap2\n      add\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6171:6277  players[msg.sender].inventory[j] = players[msg.sender].inventory[players[msg.sender].inventory.length - 1] */\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6307:6317  msg.sender */\n      caller\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6299:6318  players[msg.sender] */\n      dup2\n      mstore\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6299:6306  players */\n      0x03\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6299:6318  players[msg.sender] */\n      swap1\n      swap2\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6299:6328  players[msg.sender].inventory */\n      0x08\n      add\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6299:6334  players[msg.sender].inventory.pop() */\n      dup1\n      sload\n      dup1\n      tag_330\n      jumpi\n      tag_330\n      tag_331\n      jump\t// in\n    tag_330:\n      0x01\n      swap1\n      sub\n      dup2\n      dup2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      add\n      0x00\n      swap1\n      sstore\n      swap1\n      sstore\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6356:6361  break */\n      jump(tag_313)\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6090:6380  if (players[msg.sender].inventory[j] == recipe.itemIds[i]) {... */\n    tag_320:\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6067:6070  j++ */\n      0x01\n      add\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6008:6394  for (uint j = 0; j < players[msg.sender].inventory.length; j++) {... */\n      jump(tag_312)\n    tag_313:\n      pop\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5989:5992  i++ */\n      0x01\n      add\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5945:6404  for (uint i = 0; i < recipe.itemIds.length; i++) {... */\n      jump(tag_309)\n    tag_310:\n      pop\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6480:6490  msg.sender */\n      caller\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6472:6491  players[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6472:6479  players */\n      0x03\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6472:6491  players[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6507:6526  recipe.resultItemId */\n      swap3\n      dup2\n      add\n      mload\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6472:6501  players[msg.sender].inventory */\n      0x08\n      swap1\n      swap4\n      add\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":6472:6527  players[msg.sender].inventory.push(recipe.resultItemId) */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      dup3\n      sstore\n      swap1\n      dup4\n      mstore\n      swap2\n      keccak256\n      add\n      sstore\n      pop\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5235:6534  function craftItem(uint recipeId) public {... */\n      jump\t// out\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2508:2579  function pause() public onlyRole(PAUSER_ROLE) {... */\n    tag_113:\n      0x00\n      dup1\n      mload\n      0x20\n      data_9b87106a812d214d41ad9b68a21119e2948eaaf1040375c939ec808b8862455c\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_335\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_211\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_335:\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2564:2572  _pause() */\n      tag_233\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2564:2570  _pause */\n      tag_338\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2564:2572  _pause() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3732:3939  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_117:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3809:3813  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3901:3915  $._roles[role] */\n      swap2\n      dup3\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_b3da67d1b252aeab7c8063542d95e75f82a5307a82535949bc38f7cf7ba8897f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3901:3932  $._roles[role].hasRole[account] */\n      swap4\n      swap1\n      swap4\n      and\n      dup5\n      mstore\n      swap2\n      swap1\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3732:3939  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      jump\t// out\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":1695:1734  mapping(address => Guild) public guilds */\n    tag_127:\n      mstore(0x20, 0x05)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      dup2\n      swap1\n      tag_341\n      swap1\n      tag_342\n      jump\t// in\n    tag_341:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_343\n      swap1\n      tag_342\n      jump\t// in\n    tag_343:\n      dup1\n      iszero\n      tag_344\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_345\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_344)\n    tag_345:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_346:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_346\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_344:\n      pop\n      pop\n      pop\n      0x01\n      swap1\n      swap4\n      add\n      sload\n      swap2\n      swap3\n      pop\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup3\n      jump\t// out\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4987:5229  function addRecipe(uint[] memory itemIds, uint resultItemId) public onlyRole(GAME_ADMIN_ROLE) {... */\n    tag_134:\n      0x00\n      dup1\n      mload\n      0x20\n      data_3059375685003c5c33343043cb51f6c6b03e849d5b2f19339e935f8b505d9fe3\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_348\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_211\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_348:\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5115:5144  Recipe(itemIds, resultItemId) */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      dup3\n      mstore\n      dup5\n      dup2\n      mstore\n      0x20\n      dup1\n      dup3\n      add\n      dup6\n      swap1\n      mstore\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5099:5111  nextRecipeId */\n      sload(0x01)\n      0x00\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5091:5112  recipes[nextRecipeId] */\n      swap1\n      dup2\n      mstore\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5091:5098  recipes */\n      0x07\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5091:5112  recipes[nextRecipeId] */\n      dup3\n      mstore\n      swap3\n      swap1\n      swap3\n      keccak256\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5091:5144  recipes[nextRecipeId] = Recipe(itemIds, resultItemId) */\n      dup2\n      mload\n      dup1\n      mload\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5115:5144  Recipe(itemIds, resultItemId) */\n      swap3\n      swap4\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5091:5112  recipes[nextRecipeId] */\n      swap2\n      swap3\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5091:5144  recipes[nextRecipeId] = Recipe(itemIds, resultItemId) */\n      tag_350\n      swap3\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5091:5112  recipes[nextRecipeId] */\n      dup5\n      swap3\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5091:5144  recipes[nextRecipeId] = Recipe(itemIds, resultItemId) */\n      add\n      swap1\n      tag_247\n      jump\t// in\n    tag_350:\n      pop\n      0x20\n      swap2\n      dup3\n      add\n      mload\n      0x01\n      swap2\n      dup3\n      add\n      sstore\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5171:5183  nextRecipeId */\n      sload\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5159:5198  RecipeAdded(nextRecipeId, resultItemId) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":16267:16292   */\n      swap2\n      dup3\n      mstore\n        /* \"#utility.yul\":16308:16326   */\n      swap2\n      dup2\n      add\n        /* \"#utility.yul\":16301:16335   */\n      dup5\n      swap1\n      mstore\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5159:5198  RecipeAdded(nextRecipeId, resultItemId) */\n      0x9becfd2b1fc8127387c5b0002a6cbc8382e6c8fb9f76dfd6cfd92cbe94383d0e\n      swap2\n        /* \"#utility.yul\":16240:16258   */\n      add\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5159:5198  RecipeAdded(nextRecipeId, resultItemId) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5208:5220  nextRecipeId */\n      0x01\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5208:5222  nextRecipeId++ */\n      dup1\n      sload\n      swap1\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5208:5220  nextRecipeId */\n      0x00\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":5208:5222  nextRecipeId++ */\n      tag_353\n      dup4\n      tag_223\n      jump\t// in\n    tag_353:\n      swap2\n      swap1\n      pop\n      sstore\n      pop\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4987:5229  function addRecipe(uint[] memory itemIds, uint resultItemId) public onlyRole(GAME_ADMIN_ROLE) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":1555:1589  mapping(uint => Item) public items */\n    tag_147:\n      mstore(0x20, 0x02)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      dup1\n      sload\n      swap2\n      swap3\n      swap2\n      tag_354\n      swap1\n      tag_342\n      jump\t// in\n    tag_354:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_355\n      swap1\n      tag_342\n      jump\t// in\n    tag_355:\n      dup1\n      iszero\n      tag_356\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_357\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_356)\n    tag_357:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_358:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_358\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_356:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      dup1\n      0x02\n      add\n      sload\n      swap1\n      dup1\n      0x03\n      add\n      sload\n      swap1\n      dup1\n      0x04\n      add\n      sload\n      swap1\n      dup1\n      0x05\n      add\n      sload\n      swap1\n      pop\n      dup7\n      jump\t// out\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2115:2502  function initialize(address defaultAdmin, address pauser, address upgrader) initializer public {... */\n    tag_154:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      dup1\n      sload\n      shl(0x40, 0x01)\n      dup2\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4742  initialized == 0 */\n      dup2\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_362\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4746:4760  isTopLevelCall */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n    tag_362:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4760  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4787  bool construction */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4801  initialized */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4805:4806  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_363\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4818:4822  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4835  address(this).code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4840  address(this).code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n    tag_363:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4840  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4856:4868  initialSetup */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4868  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_364\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4873:4885  construction */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4872:4885  !construction */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n    tag_364:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n      iszero\n      tag_365\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4908:4931  InvalidInitialization() */\n      mload(0x40)\n      shl(0xe0, 0xf92ee8a9)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n    tag_365:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      dup5\n      sload\n      not(0xffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4968:4969  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      or\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n      dup4\n      iszero\n      tag_366\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5035  $._initializing = true */\n      dup5\n      sload\n      not(shl(0x40, 0xff))\n      and\n      shl(0x40, 0x01)\n      or\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n    tag_366:\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2220:2237  __Pausable_init() */\n      tag_368\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2220:2235  __Pausable_init */\n      tag_369\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2220:2237  __Pausable_init() */\n      jump\t// in\n    tag_368:\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2247:2269  __AccessControl_init() */\n      tag_370\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2247:2267  __AccessControl_init */\n      tag_371\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2247:2269  __AccessControl_init() */\n      jump\t// in\n    tag_370:\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2279:2303  __UUPSUpgradeable_init() */\n      tag_372\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2279:2301  __UUPSUpgradeable_init */\n      tag_371\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2279:2303  __UUPSUpgradeable_init() */\n      jump\t// in\n    tag_372:\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2314:2358  _grantRole(DEFAULT_ADMIN_ROLE, defaultAdmin) */\n      tag_374\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2362:2366  0x00 */\n      0x00\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2345:2357  defaultAdmin */\n      dup10\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2314:2324  _grantRole */\n      tag_214\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2314:2358  _grantRole(DEFAULT_ADMIN_ROLE, defaultAdmin) */\n      jump\t// in\n    tag_374:\n      pop\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2368:2399  _grantRole(PAUSER_ROLE, pauser) */\n      tag_375\n      0x00\n      dup1\n      mload\n      0x20\n      data_9b87106a812d214d41ad9b68a21119e2948eaaf1040375c939ec808b8862455c\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2392:2398  pauser */\n      dup9\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2368:2378  _grantRole */\n      tag_214\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2368:2399  _grantRole(PAUSER_ROLE, pauser) */\n      jump\t// in\n    tag_375:\n      pop\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2409:2444  _grantRole(UPGRADER_ROLE, upgrader) */\n      tag_376\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":661:687  keccak256(\"UPGRADER_ROLE\") */\n      0x189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2435:2443  upgrader */\n      dup8\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2409:2419  _grantRole */\n      tag_214\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2409:2444  _grantRole(UPGRADER_ROLE, upgrader) */\n      jump\t// in\n    tag_376:\n      pop\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2454:2495  _grantRole(GAME_ADMIN_ROLE, defaultAdmin) */\n      tag_377\n      0x00\n      dup1\n      mload\n      0x20\n      data_3059375685003c5c33343043cb51f6c6b03e849d5b2f19339e935f8b505d9fe3\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2482:2494  defaultAdmin */\n      dup10\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2454:2464  _grantRole */\n      tag_214\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2454:2495  _grantRole(GAME_ADMIN_ROLE, defaultAdmin) */\n      jump\t// in\n    tag_377:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5070:5084  isTopLevelCall */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n      iszero\n      tag_378\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5123  $._initializing = false */\n      dup5\n      sload\n      not(shl(0x40, 0xff))\n      and\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      0x01\n        /* \"#utility.yul\":16499:16549   */\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n      swap1\n        /* \"#utility.yul\":16487:16489   */\n      0x20\n        /* \"#utility.yul\":16472:16490   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n    tag_378:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4092:5173  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2115:2502  function initialize(address defaultAdmin, address pauser, address upgrader) initializer public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":1642:1689  mapping(address => Quest[]) public playerQuests */\n    tag_159:\n      mstore(0x20, 0x04)\n      dup2\n      0x00\n      mstore\n      keccak256(0x00, 0x40)\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_381\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_381:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x04\n      mul\n      add\n      0x00\n      swap2\n      pop\n      swap2\n      pop\n      pop\n      dup1\n      0x00\n      add\n      dup1\n      sload\n      tag_383\n      swap1\n      tag_342\n      jump\t// in\n    tag_383:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_384\n      swap1\n      tag_342\n      jump\t// in\n    tag_384:\n      dup1\n      iszero\n      tag_385\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_386\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_385)\n    tag_386:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_387:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_387\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_385:\n      pop\n      pop\n      pop\n      pop\n      pop\n      swap1\n      dup1\n      0x01\n      add\n      dup1\n      sload\n      tag_388\n      swap1\n      tag_342\n      jump\t// in\n    tag_388:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_389\n      swap1\n      tag_342\n      jump\t// in\n    tag_389:\n      dup1\n      iszero\n      tag_390\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_391\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_390)\n    tag_391:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_392:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_392\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_390:\n      pop\n      pop\n      pop\n      pop\n      0x02\n      dup4\n      add\n      sload\n      0x03\n      swap1\n      swap4\n      add\n      sload\n      swap2\n      swap3\n      swap2\n      0xff\n      and\n      swap1\n      pop\n      dup5\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5662:5800  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_165:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5737:5755  getRoleAdmin(role) */\n      tag_393\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5750:5754  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5737:5749  getRoleAdmin */\n      tag_55\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5737:5755  getRoleAdmin(role) */\n      jump\t// in\n    tag_393:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_395\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_211\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_395:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5767:5793  _revokeRole(role, account) */\n      tag_213\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5779:5783  role */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5785:5792  account */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5767:5778  _revokeRole */\n      tag_229\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5767:5793  _revokeRole(role, account) */\n      jump\t// in\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4469:4981  function joinGuild(string memory guildName) public {... */\n    tag_175:\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4530:4544  address leader */\n      0x00\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4547:4564  guildNameToLeader */\n      0x06\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4565:4574  guildName */\n      dup3\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4547:4575  guildNameToLeader[guildName] */\n      mload(0x40)\n      tag_399\n      swap2\n      swap1\n      tag_197\n      jump\t// in\n    tag_399:\n      swap1\n      dup2\n      mstore\n      mload(0x40)\n      swap1\n      dup2\n      swap1\n      sub\n      0x20\n      add\n      swap1\n      keccak256\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n      pop\n      dup1\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4585:4638  require(leader != address(0), \"Guild does not exist\") */\n      tag_400\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":16762:16764   */\n      0x20\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4585:4638  require(leader != address(0), \"Guild does not exist\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":16744:16765   */\n      mstore\n        /* \"#utility.yul\":16801:16803   */\n      0x14\n        /* \"#utility.yul\":16781:16799   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":16774:16804   */\n      mstore\n      shl(0x62, 0x11dd5a5b1908191bd95cc81b9bdd08195e1a5cdd)\n        /* \"#utility.yul\":16820:16838   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":16813:16863   */\n      mstore\n        /* \"#utility.yul\":16880:16898   */\n      0x64\n      add\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4585:4638  require(leader != address(0), \"Guild does not exist\") */\n      tag_237\n        /* \"#utility.yul\":16560:16904   */\n      jump\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4585:4638  require(leader != address(0), \"Guild does not exist\") */\n    tag_400:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4755:4769  guilds[leader] */\n      dup2\n      and\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4733:4752  Guild storage guild */\n      0x00\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4755:4769  guilds[leader] */\n      swap1\n      dup2\n      mstore\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4755:4761  guilds */\n      0x05\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4755:4769  guilds[leader] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n      swap1\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4779:4934  for (uint i = 0; i < guild.members.length; i++) {... */\n    tag_403:\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4800:4813  guild.members */\n      0x02\n      dup3\n      add\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4800:4820  guild.members.length */\n      sload\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4796:4820  i < guild.members.length */\n      dup2\n      lt\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4779:4934  for (uint i = 0; i < guild.members.length; i++) {... */\n      iszero\n      tag_404\n      jumpi\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4869:4879  msg.sender */\n      caller\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4849:4879  guild.members[i] != msg.sender */\n      and\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4849:4854  guild */\n      dup3\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4849:4862  guild.members */\n      0x02\n      add\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4863:4864  i */\n      dup3\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4849:4865  guild.members[i] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_407\n      jumpi\n      tag_407\n      tag_194\n      jump\t// in\n    tag_407:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4849:4879  guild.members[i] != msg.sender */\n      sub\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4841:4923  require(guild.members[i] != msg.sender, \"Sender is already a member of the guild\") */\n      tag_409\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":17111:17113   */\n      0x20\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4841:4923  require(guild.members[i] != msg.sender, \"Sender is already a member of the guild\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":17093:17114   */\n      mstore\n        /* \"#utility.yul\":17150:17152   */\n      0x27\n        /* \"#utility.yul\":17130:17148   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":17123:17153   */\n      mstore\n        /* \"#utility.yul\":17189:17223   */\n      0x53656e64657220697320616c72656164792061206d656d626572206f66207468\n        /* \"#utility.yul\":17169:17187   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":17162:17224   */\n      mstore\n      shl(0xca, 0x194819dd5a5b19)\n        /* \"#utility.yul\":17240:17258   */\n      0x64\n      dup3\n      add\n        /* \"#utility.yul\":17233:17270   */\n      mstore\n        /* \"#utility.yul\":17287:17306   */\n      0x84\n      add\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4841:4923  require(guild.members[i] != msg.sender, \"Sender is already a member of the guild\") */\n      tag_237\n        /* \"#utility.yul\":16909:17312   */\n      jump\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4841:4923  require(guild.members[i] != msg.sender, \"Sender is already a member of the guild\") */\n    tag_409:\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4822:4825  i++ */\n      0x01\n      add\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4779:4934  for (uint i = 0; i < guild.members.length; i++) {... */\n      jump(tag_403)\n    tag_404:\n      pop\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4944:4957  guild.members */\n      0x02\n      add\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4944:4974  guild.members.push(msg.sender) */\n      dup1\n      sload\n      0x01\n      dup2\n      add\n      dup3\n      sstore\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4963:4973  msg.sender */\n      caller\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4944:4974  guild.members.push(msg.sender) */\n      or\n      swap1\n      sstore\n      pop\n      pop\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":4469:4981  function joinGuild(string memory guildName) public {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4148:4251  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_211:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4214:4244  _checkRole(role, _msgSender()) */\n      tag_233\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4225:4229  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4214:4224  _checkRole */\n      tag_418\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4214:4244  _checkRole(role, _msgSender()) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7270:7657  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_214:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7347:7351  bool */\n      0x00\n      0x00\n      dup1\n      mload\n      0x20\n      data_b3da67d1b252aeab7c8063542d95e75f82a5307a82535949bc38f7cf7ba8897f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7437:7459  hasRole(role, account) */\n      tag_421\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7445:7449  role */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7451:7458  account */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7437:7444  hasRole */\n      tag_117\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7437:7459  hasRole(role, account) */\n      jump\t// in\n    tag_421:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7432:7651  if (!hasRole(role, account)) {... */\n      tag_422\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7475:7483  $._roles */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7475:7489  $._roles[role] */\n      dup5\n      dup2\n      mstore\n      0x20\n      dup3\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7475:7506  $._roles[role].hasRole[account] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7475:7513  $._roles[role].hasRole[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7509:7513  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7475:7513  $._roles[role].hasRole[account] = true */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7559:7571  _msgSender() */\n      tag_423\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7559:7571  _msgSender() */\n    tag_423:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7532:7572  RoleGranted(role, account, _msgSender()) */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7550:7557  account */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7532:7572  RoleGranted(role, account, _msgSender()) */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7544:7548  role */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7532:7572  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7593:7597  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7586:7597  return true */\n      swap2\n      pop\n      pop\n      jump(tag_186)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7432:7651  if (!hasRole(role, account)) {... */\n    tag_422:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7635:7640  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7628:7640  return false */\n      swap2\n      pop\n      pop\n      jump(tag_186)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7892:8280  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_229:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7970:7974  bool */\n      0x00\n      0x00\n      dup1\n      mload\n      0x20\n      data_b3da67d1b252aeab7c8063542d95e75f82a5307a82535949bc38f7cf7ba8897f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8059:8081  hasRole(role, account) */\n      tag_428\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8067:8071  role */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8073:8080  account */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8059:8066  hasRole */\n      tag_117\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8059:8081  hasRole(role, account) */\n      jump\t// in\n    tag_428:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8055:8274  if (hasRole(role, account)) {... */\n      iszero\n      tag_422\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8131:8136  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8097:8111  $._roles[role] */\n      dup5\n      dup2\n      mstore\n      0x20\n      dup3\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8097:8128  $._roles[role].hasRole[account] */\n      dup8\n      and\n      dup1\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8097:8136  $._roles[role].hasRole[account] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8155:8195  RoleRevoked(role, account, _msgSender()) */\n      mload\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n      swap3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8097:8111  $._roles[role] */\n      dup8\n      swap2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8155:8195  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      swap2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8131:8136  false */\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8155:8195  RoleRevoked(role, account, _msgSender()) */\n      log4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8216:8220  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8209:8220  return true */\n      swap2\n      pop\n      pop\n      jump(tag_186)\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3674:3852  function _unpause() internal virtual whenPaused {... */\n    tag_234:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2563:2579  _requirePaused() */\n      tag_433\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2563:2577  _requirePaused */\n      tag_434\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2563:2579  _requirePaused() */\n      jump\t// in\n    tag_433:\n      0x00\n      dup1\n      mload\n      0x20\n      data_c0c65a3718f3702d917c44106b91645b509d2e2d0979b70495c3babce192339f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3791:3808  $._paused = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup2\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3823:3845  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3832:3844  _msgSender() */\n    tag_437:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3823:3845  Unpaused(_msgSender()) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":17481:17513   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":17463:17514   */\n      dup2\n      mstore\n        /* \"#utility.yul\":17451:17453   */\n      0x20\n        /* \"#utility.yul\":17436:17454   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3823:3845  Unpaused(_msgSender()) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3722:3852  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3674:3852  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4599:4911  function _checkProxy() internal view virtual {... */\n    tag_251:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4679:4683  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4688:4694  __self */\n      immutable(\"0x3b04ad91523c4dcf551e081621e633b9099d51bf9c5461e58c3bc7354a578b27\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4671:4694  address(this) == __self */\n      and\n      eq\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4671:4791  address(this) == __self || // Must be called through delegatecall... */\n      tag_441\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4785:4791  __self */\n      immutable(\"0x3b04ad91523c4dcf551e081621e633b9099d51bf9c5461e58c3bc7354a578b27\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4749:4791  ERC1967Utils.getImplementation() != __self */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4749:4781  ERC1967Utils.getImplementation() */\n      tag_442\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2035:2088  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1957:2095  function getImplementation() internal view returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4749:4781  ERC1967Utils.getImplementation() */\n    tag_442:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4749:4791  ERC1967Utils.getImplementation() != __self */\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4671:4791  address(this) == __self || // Must be called through delegatecall... */\n    tag_441:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4654:4905  if (... */\n      iszero\n      tag_444\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4865:4894  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      shl(0xe1, 0x703e46dd)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4654:4905  if (... */\n    tag_444:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4599:4911  function _checkProxy() internal view virtual {... */\n      jump\t// out\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":2666:2764  function _authorizeUpgrade(address newImplementation) internal override onlyRole(UPGRADER_ROLE) {} */\n    tag_254:\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":661:687  keccak256(\"UPGRADER_ROLE\") */\n      0x189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_190\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_211\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6052:6590  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {... */\n    tag_256:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6169:6186  newImplementation */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6151:6201  IERC1822Proxiable(newImplementation).proxiableUUID */\n      and\n      0x52d1902d\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6151:6203  IERC1822Proxiable(newImplementation).proxiableUUID() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_449\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_450\n      swap2\n      dup2\n      add\n      swap1\n      tag_451\n      jump\t// in\n    tag_450:\n      0x01\n    tag_449:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6147:6584  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n      tag_452\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6513:6573  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      shl(0xe0, 0x4c9c8ce3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":17481:17513   */\n      dup4\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6513:6573  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":17463:17514   */\n      mstore\n        /* \"#utility.yul\":17436:17454   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6513:6573  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      tag_237\n        /* \"#utility.yul\":17317:17520   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6147:6584  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n    tag_452:\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6245:6285  slot != ERC1967Utils.IMPLEMENTATION_SLOT */\n      dup2\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6241:6361  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n      tag_458\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6312:6346  UUPSUnsupportedProxiableUUID(slot) */\n      mload(0x40)\n      shl(0xe2, 0x2a875269)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":2206:2231   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":2179:2197   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6312:6346  UUPSUnsupportedProxiableUUID(slot) */\n      tag_237\n        /* \"#utility.yul\":2060:2237   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6241:6361  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n    tag_458:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6374:6428  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      tag_228\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6404:6421  newImplementation */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6423:6427  data */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6374:6403  ERC1967Utils.upgradeToAndCall */\n      tag_461\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6374:6428  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5028:5241  function _checkNotDelegated() internal view virtual {... */\n    tag_277:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5102:5106  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5111:5117  __self */\n      immutable(\"0x3b04ad91523c4dcf551e081621e633b9099d51bf9c5461e58c3bc7354a578b27\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5094:5117  address(this) != __self */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5090:5235  if (address(this) != __self) {... */\n      tag_444\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5195:5224  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      shl(0xe1, 0x703e46dd)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3366:3542  function _pause() internal virtual whenNotPaused {... */\n    tag_338:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      tag_466\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2333  _requireNotPaused */\n      tag_467\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      jump\t// in\n    tag_466:\n      0x00\n      dup1\n      mload\n      0x20\n      data_c0c65a3718f3702d917c44106b91645b509d2e2d0979b70495c3babce192339f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3484:3500  $._paused = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3496:3500  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3484:3500  $._paused = true */\n      or\n      dup2\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3515:3535  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3522:3534  _msgSender() */\n      tag_437\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1836:1933  function __Pausable_init() internal onlyInitializing {... */\n    tag_369:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_474\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_475\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_474:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1899:1926  __Pausable_init_unchained() */\n      tag_444\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1899:1924  __Pausable_init_unchained */\n      tag_478\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1899:1926  __Pausable_init_unchained() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3231:3296  function __AccessControl_init() internal onlyInitializing {... */\n    tag_371:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_444\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_475\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4381:4578  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_418:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4469:4491  hasRole(role, account) */\n      tag_486\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4477:4481  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4483:4490  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4469:4476  hasRole */\n      tag_117\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4469:4491  hasRole(role, account) */\n      jump\t// in\n    tag_486:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4464:4572  if (!hasRole(role, account)) {... */\n      tag_190\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4514:4561  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      shl(0xe0, 0xe2517d3f)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":17906:17938   */\n      dup3\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4514:4561  AccessControlUnauthorizedAccount(account, role) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":17888:17939   */\n      mstore\n        /* \"#utility.yul\":17955:17973   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":17948:17982   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":17861:17879   */\n      0x44\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4514:4561  AccessControlUnauthorizedAccount(account, role) */\n      tag_237\n        /* \"#utility.yul\":17714:17988   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3105:3231  function _requirePaused() internal view virtual {... */\n    tag_434:\n      0x00\n      dup1\n      mload\n      0x20\n      data_c0c65a3718f3702d917c44106b91645b509d2e2d0979b70495c3babce192339f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2821:2830  $._paused */\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3163:3225  if (!paused()) {... */\n      tag_444\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3199:3214  ExpectedPause() */\n      mload(0x40)\n      shl(0xe0, 0x8dfc202b)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2779:3114  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n    tag_461:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2870:2907  _setImplementation(newImplementation) */\n      tag_497\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2889:2906  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2870:2888  _setImplementation */\n      tag_498\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2870:2907  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_497:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2922:2949  Upgraded(newImplementation) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2964:2975  data.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2964:2979  data.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2960:3108  if (data.length > 0) {... */\n      tag_499\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2995:3048  Address.functionDelegateCall(newImplementation, data) */\n      tag_228\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3024:3041  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3043:3047  data */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2995:3023  Address.functionDelegateCall */\n      tag_501\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2995:3048  Address.functionDelegateCall(newImplementation, data) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2960:3108  if (data.length > 0) {... */\n    tag_499:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3079:3097  _checkNonPayable() */\n      tag_190\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3079:3095  _checkNonPayable */\n      tag_504\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3079:3097  _checkNonPayable() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2905:3033  function _requireNotPaused() internal view virtual {... */\n    tag_467:\n      0x00\n      dup1\n      mload\n      0x20\n      data_c0c65a3718f3702d917c44106b91645b509d2e2d0979b70495c3babce192339f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2821:2830  $._paused */\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2966:3027  if (paused()) {... */\n      iszero\n      tag_444\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3001:3016  EnforcedPause() */\n      mload(0x40)\n      shl(0xe0, 0xd93c0665)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n    tag_475:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8600  _getInitializableStorage()._initializing */\n      sload\n      shl(0x40, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n      tag_444\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7191:7208  NotInitializing() */\n      mload(0x40)\n      shl(0xe3, 0x1afcd79f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1939:2095  function __Pausable_init_unchained() internal onlyInitializing {... */\n    tag_478:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_513\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_475\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_513:\n      0x00\n      dup1\n      mload\n      0x20\n      data_c0c65a3718f3702d917c44106b91645b509d2e2d0979b70495c3babce192339f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2071:2088  $._paused = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1939:2095  function __Pausable_init_unchained() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2186:2467  function _setImplementation(address newImplementation) private {... */\n    tag_498:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2263:2280  newImplementation */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2263:2292  newImplementation.code.length */\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2296:2297  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2263:2297  newImplementation.code.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2259:2378  if (newImplementation.code.length == 0) {... */\n      tag_518\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2320:2367  ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      shl(0xe0, 0x4c9c8ce3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":17481:17513   */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2320:2367  ERC1967InvalidImplementation(newImplementation) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":17463:17514   */\n      mstore\n        /* \"#utility.yul\":17436:17454   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2320:2367  ERC1967InvalidImplementation(newImplementation) */\n      tag_237\n        /* \"#utility.yul\":17317:17520   */\n      jump\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2259:2378  if (newImplementation.code.length == 0) {... */\n    tag_518:\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2387:2460  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2186:2467  function _setImplementation(address newImplementation) private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4106:4359  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_501:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4189:4201  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4214:4226  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4228:4251  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4255:4261  target */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4255:4274  target.delegatecall */\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4275:4279  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4255:4280  target.delegatecall(data) */\n      mload(0x40)\n      tag_522\n      swap2\n      swap1\n      tag_197\n      jump\t// in\n    tag_522:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_526\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_525)\n    tag_526:\n      0x60\n      swap2\n      pop\n    tag_525:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4213:4280  (bool success, bytes memory returndata) = target.delegatecall(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4297:4352  verifyCallResultFromTarget(target, success, returndata) */\n      tag_527\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4324:4330  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4332:4339  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4341:4351  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4297:4323  verifyCallResultFromTarget */\n      tag_528\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4297:4352  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_527:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4290:4352  return verifyCallResultFromTarget(target, success, returndata) */\n      swap6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4106:4359  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6598:6720  function _checkNonPayable() private {... */\n    tag_504:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6648:6657  msg.value */\n      callvalue\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6648:6661  msg.value > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6644:6714  if (msg.value > 0) {... */\n      tag_444\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6684:6703  ERC1967NonPayable() */\n      mload(0x40)\n      shl(0xe0, 0xb398979f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_528:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4769:4781  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4798:4805  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      tag_534\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      tag_535\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4829:4839  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4828  _revert */\n      tag_536\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      jump\t// in\n    tag_535:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      jump(tag_537)\n    tag_534:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5062  returndata.length */\n      dup2\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5067  returndata.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_538\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5089  target.code.length */\n      dup5\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5094  target.code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n    tag_538:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_539\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      mload(0x40)\n      shl(0xe0, 0x9996b315)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":17481:17513   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":17463:17514   */\n      mstore\n        /* \"#utility.yul\":17436:17454   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      tag_237\n        /* \"#utility.yul\":17317:17520   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_539:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5180:5190  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n    tag_537:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5743:6259  function _revert(bytes memory returndata) private pure {... */\n    tag_536:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5891  returndata.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5895  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n      tag_542\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6102:6112  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6096:6113  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6158:6173  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6145:6155  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6141:6143  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6137:6156  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6130:6174  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n    tag_542:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6225:6242  FailedInnerCall() */\n      mload(0x40)\n      shl(0xe1, 0x0a12f521)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_247:\n      dup3\n      dup1\n      sload\n      dup3\n      dup3\n      sstore\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      dup2\n      add\n      swap3\n      dup3\n      iszero\n      tag_546\n      jumpi\n      swap2\n      0x20\n      mul\n      dup3\n      add\n    tag_545:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_546\n      jumpi\n      dup3\n      mload\n      dup3\n      sstore\n      swap2\n      0x20\n      add\n      swap2\n      swap1\n      0x01\n      add\n      swap1\n      jump(tag_545)\n    tag_546:\n      pop\n      tag_547\n      swap3\n      swap2\n      pop\n      tag_548\n      jump\t// in\n    tag_547:\n      pop\n      swap1\n      jump\t// out\n    tag_269:\n      dup3\n      dup1\n      sload\n      dup3\n      dup3\n      sstore\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      dup2\n      add\n      swap3\n      dup3\n      iszero\n      tag_546\n      jumpi\n      swap2\n      0x20\n      mul\n      dup3\n      add\n    tag_550:\n      dup3\n      dup2\n      gt\n      iszero\n      tag_546\n      jumpi\n      dup3\n      mload\n      dup3\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap2\n      and\n      or\n      dup3\n      sstore\n      0x20\n      swap1\n      swap3\n      add\n      swap2\n      0x01\n      swap1\n      swap2\n      add\n      swap1\n      jump(tag_550)\n    tag_548:\n    tag_553:\n      dup1\n      dup3\n      gt\n      iszero\n      tag_547\n      jumpi\n      0x00\n      dup2\n      sstore\n      0x01\n      add\n      jump(tag_553)\n        /* \"#utility.yul\":14:300   */\n    tag_42:\n        /* \"#utility.yul\":72:78   */\n      0x00\n        /* \"#utility.yul\":125:127   */\n      0x20\n        /* \"#utility.yul\":113:122   */\n      dup3\n        /* \"#utility.yul\":104:111   */\n      dup5\n        /* \"#utility.yul\":100:123   */\n      sub\n        /* \"#utility.yul\":96:128   */\n      slt\n        /* \"#utility.yul\":93:145   */\n      iszero\n      tag_567\n      jumpi\n        /* \"#utility.yul\":141:142   */\n      0x00\n        /* \"#utility.yul\":138:139   */\n      dup1\n        /* \"#utility.yul\":131:143   */\n      revert\n        /* \"#utility.yul\":93:145   */\n    tag_567:\n        /* \"#utility.yul\":167:190   */\n      dup2\n      calldataload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":219:251   */\n      dup2\n      and\n        /* \"#utility.yul\":209:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":199:270   */\n      tag_537\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      dup1\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":497:624   */\n    tag_241:\n        /* \"#utility.yul\":558:568   */\n      0x4e487b71\n        /* \"#utility.yul\":553:556   */\n      0xe0\n        /* \"#utility.yul\":549:569   */\n      shl\n        /* \"#utility.yul\":546:547   */\n      0x00\n        /* \"#utility.yul\":539:570   */\n      mstore\n        /* \"#utility.yul\":589:593   */\n      0x41\n        /* \"#utility.yul\":586:587   */\n      0x04\n        /* \"#utility.yul\":579:594   */\n      mstore\n        /* \"#utility.yul\":613:617   */\n      0x24\n        /* \"#utility.yul\":610:611   */\n      0x00\n        /* \"#utility.yul\":603:618   */\n      revert\n        /* \"#utility.yul\":629:904   */\n    tag_555:\n        /* \"#utility.yul\":700:702   */\n      0x40\n        /* \"#utility.yul\":694:703   */\n      mload\n        /* \"#utility.yul\":765:767   */\n      0x1f\n        /* \"#utility.yul\":746:759   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":742:769   */\n      and\n        /* \"#utility.yul\":730:770   */\n      dup2\n      add\n        /* \"#utility.yul\":800:818   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":785:819   */\n      dup2\n      gt\n        /* \"#utility.yul\":821:843   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":782:844   */\n      or\n        /* \"#utility.yul\":779:867   */\n      iszero\n      tag_573\n      jumpi\n        /* \"#utility.yul\":847:865   */\n      tag_573\n      tag_241\n      jump\t// in\n    tag_573:\n        /* \"#utility.yul\":883:885   */\n      0x40\n        /* \"#utility.yul\":876:898   */\n      mstore\n        /* \"#utility.yul\":629:904   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":909:1316   */\n    tag_556:\n        /* \"#utility.yul\":974:979   */\n      0x00\n        /* \"#utility.yul\":1008:1026   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1000:1006   */\n      dup4\n        /* \"#utility.yul\":997:1027   */\n      gt\n        /* \"#utility.yul\":994:1050   */\n      iszero\n      tag_576\n      jumpi\n        /* \"#utility.yul\":1030:1048   */\n      tag_576\n      tag_241\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":1068:1125   */\n      tag_577\n        /* \"#utility.yul\":1113:1115   */\n      0x1f\n        /* \"#utility.yul\":1092:1107   */\n      dup5\n      add\n      not(0x1f)\n        /* \"#utility.yul\":1088:1117   */\n      and\n        /* \"#utility.yul\":1119:1123   */\n      0x20\n        /* \"#utility.yul\":1084:1124   */\n      add\n        /* \"#utility.yul\":1068:1125   */\n      tag_555\n      jump\t// in\n    tag_577:\n        /* \"#utility.yul\":1059:1125   */\n      swap1\n      pop\n        /* \"#utility.yul\":1148:1154   */\n      dup3\n        /* \"#utility.yul\":1141:1146   */\n      dup2\n        /* \"#utility.yul\":1134:1155   */\n      mstore\n        /* \"#utility.yul\":1188:1191   */\n      dup4\n        /* \"#utility.yul\":1179:1185   */\n      dup4\n        /* \"#utility.yul\":1174:1177   */\n      dup4\n        /* \"#utility.yul\":1170:1186   */\n      add\n        /* \"#utility.yul\":1167:1192   */\n      gt\n        /* \"#utility.yul\":1164:1209   */\n      iszero\n      tag_578\n      jumpi\n        /* \"#utility.yul\":1205:1206   */\n      0x00\n        /* \"#utility.yul\":1202:1203   */\n      dup1\n        /* \"#utility.yul\":1195:1207   */\n      revert\n        /* \"#utility.yul\":1164:1209   */\n    tag_578:\n        /* \"#utility.yul\":1254:1260   */\n      dup3\n        /* \"#utility.yul\":1249:1252   */\n      dup3\n        /* \"#utility.yul\":1242:1246   */\n      0x20\n        /* \"#utility.yul\":1235:1240   */\n      dup4\n        /* \"#utility.yul\":1231:1247   */\n      add\n        /* \"#utility.yul\":1218:1261   */\n      calldatacopy\n        /* \"#utility.yul\":1308:1309   */\n      0x00\n        /* \"#utility.yul\":1301:1305   */\n      0x20\n        /* \"#utility.yul\":1292:1298   */\n      dup5\n        /* \"#utility.yul\":1285:1290   */\n      dup4\n        /* \"#utility.yul\":1281:1299   */\n      add\n        /* \"#utility.yul\":1277:1306   */\n      add\n        /* \"#utility.yul\":1270:1310   */\n      mstore\n        /* \"#utility.yul\":909:1316   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1321:1543   */\n    tag_557:\n        /* \"#utility.yul\":1364:1369   */\n      0x00\n        /* \"#utility.yul\":1417:1420   */\n      dup3\n        /* \"#utility.yul\":1410:1414   */\n      0x1f\n        /* \"#utility.yul\":1402:1408   */\n      dup4\n        /* \"#utility.yul\":1398:1415   */\n      add\n        /* \"#utility.yul\":1394:1421   */\n      slt\n        /* \"#utility.yul\":1384:1439   */\n      tag_580\n      jumpi\n        /* \"#utility.yul\":1435:1436   */\n      0x00\n        /* \"#utility.yul\":1432:1433   */\n      dup1\n        /* \"#utility.yul\":1425:1437   */\n      revert\n        /* \"#utility.yul\":1384:1439   */\n    tag_580:\n        /* \"#utility.yul\":1457:1537   */\n      tag_537\n        /* \"#utility.yul\":1533:1536   */\n      dup4\n        /* \"#utility.yul\":1524:1530   */\n      dup4\n        /* \"#utility.yul\":1511:1531   */\n      calldataload\n        /* \"#utility.yul\":1504:1508   */\n      0x20\n        /* \"#utility.yul\":1496:1502   */\n      dup6\n        /* \"#utility.yul\":1492:1509   */\n      add\n        /* \"#utility.yul\":1457:1537   */\n      tag_556\n      jump\t// in\n        /* \"#utility.yul\":1548:1870   */\n    tag_49:\n        /* \"#utility.yul\":1617:1623   */\n      0x00\n        /* \"#utility.yul\":1670:1672   */\n      0x20\n        /* \"#utility.yul\":1658:1667   */\n      dup3\n        /* \"#utility.yul\":1649:1656   */\n      dup5\n        /* \"#utility.yul\":1645:1668   */\n      sub\n        /* \"#utility.yul\":1641:1673   */\n      slt\n        /* \"#utility.yul\":1638:1690   */\n      iszero\n      tag_583\n      jumpi\n        /* \"#utility.yul\":1686:1687   */\n      0x00\n        /* \"#utility.yul\":1683:1684   */\n      dup1\n        /* \"#utility.yul\":1676:1688   */\n      revert\n        /* \"#utility.yul\":1638:1690   */\n    tag_583:\n        /* \"#utility.yul\":1726:1735   */\n      dup2\n        /* \"#utility.yul\":1713:1736   */\n      calldataload\n        /* \"#utility.yul\":1759:1777   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":1751:1757   */\n      dup2\n        /* \"#utility.yul\":1748:1778   */\n      gt\n        /* \"#utility.yul\":1745:1795   */\n      iszero\n      tag_584\n      jumpi\n        /* \"#utility.yul\":1791:1792   */\n      0x00\n        /* \"#utility.yul\":1788:1789   */\n      dup1\n        /* \"#utility.yul\":1781:1793   */\n      revert\n        /* \"#utility.yul\":1745:1795   */\n    tag_584:\n        /* \"#utility.yul\":1814:1864   */\n      tag_585\n        /* \"#utility.yul\":1856:1863   */\n      dup5\n        /* \"#utility.yul\":1847:1853   */\n      dup3\n        /* \"#utility.yul\":1836:1845   */\n      dup6\n        /* \"#utility.yul\":1832:1854   */\n      add\n        /* \"#utility.yul\":1814:1864   */\n      tag_557\n      jump\t// in\n    tag_585:\n        /* \"#utility.yul\":1804:1864   */\n      swap5\n        /* \"#utility.yul\":1548:1870   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1875:2055   */\n    tag_54:\n        /* \"#utility.yul\":1934:1940   */\n      0x00\n        /* \"#utility.yul\":1987:1989   */\n      0x20\n        /* \"#utility.yul\":1975:1984   */\n      dup3\n        /* \"#utility.yul\":1966:1973   */\n      dup5\n        /* \"#utility.yul\":1962:1985   */\n      sub\n        /* \"#utility.yul\":1958:1990   */\n      slt\n        /* \"#utility.yul\":1955:2007   */\n      iszero\n      tag_587\n      jumpi\n        /* \"#utility.yul\":2003:2004   */\n      0x00\n        /* \"#utility.yul\":2000:2001   */\n      dup1\n        /* \"#utility.yul\":1993:2005   */\n      revert\n        /* \"#utility.yul\":1955:2007   */\n    tag_587:\n      pop\n        /* \"#utility.yul\":2026:2049   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1875:2055   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2242:2415   */\n    tag_558:\n        /* \"#utility.yul\":2310:2330   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2359:2390   */\n      dup2\n      and\n        /* \"#utility.yul\":2349:2391   */\n      dup2\n      eq\n        /* \"#utility.yul\":2339:2409   */\n      tag_590\n      jumpi\n        /* \"#utility.yul\":2405:2406   */\n      0x00\n        /* \"#utility.yul\":2402:2403   */\n      dup1\n        /* \"#utility.yul\":2395:2407   */\n      revert\n        /* \"#utility.yul\":2339:2409   */\n    tag_590:\n        /* \"#utility.yul\":2242:2415   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2420:2674   */\n    tag_61:\n        /* \"#utility.yul\":2488:2494   */\n      0x00\n        /* \"#utility.yul\":2496:2502   */\n      dup1\n        /* \"#utility.yul\":2549:2551   */\n      0x40\n        /* \"#utility.yul\":2537:2546   */\n      dup4\n        /* \"#utility.yul\":2528:2535   */\n      dup6\n        /* \"#utility.yul\":2524:2547   */\n      sub\n        /* \"#utility.yul\":2520:2552   */\n      slt\n        /* \"#utility.yul\":2517:2569   */\n      iszero\n      tag_592\n      jumpi\n        /* \"#utility.yul\":2565:2566   */\n      0x00\n        /* \"#utility.yul\":2562:2563   */\n      dup1\n        /* \"#utility.yul\":2555:2567   */\n      revert\n        /* \"#utility.yul\":2517:2569   */\n    tag_592:\n        /* \"#utility.yul\":2601:2610   */\n      dup3\n        /* \"#utility.yul\":2588:2611   */\n      calldataload\n        /* \"#utility.yul\":2578:2611   */\n      swap2\n      pop\n        /* \"#utility.yul\":2630:2668   */\n      tag_593\n        /* \"#utility.yul\":2664:2666   */\n      0x20\n        /* \"#utility.yul\":2653:2662   */\n      dup5\n        /* \"#utility.yul\":2649:2667   */\n      add\n        /* \"#utility.yul\":2630:2668   */\n      tag_558\n      jump\t// in\n    tag_593:\n        /* \"#utility.yul\":2620:2668   */\n      swap1\n      pop\n        /* \"#utility.yul\":2420:2674   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2679:3275   */\n    tag_66:\n        /* \"#utility.yul\":2784:2790   */\n      0x00\n        /* \"#utility.yul\":2792:2798   */\n      dup1\n        /* \"#utility.yul\":2800:2806   */\n      0x00\n        /* \"#utility.yul\":2808:2814   */\n      dup1\n        /* \"#utility.yul\":2816:2822   */\n      0x00\n        /* \"#utility.yul\":2869:2872   */\n      0xa0\n        /* \"#utility.yul\":2857:2866   */\n      dup7\n        /* \"#utility.yul\":2848:2855   */\n      dup9\n        /* \"#utility.yul\":2844:2867   */\n      sub\n        /* \"#utility.yul\":2840:2873   */\n      slt\n        /* \"#utility.yul\":2837:2890   */\n      iszero\n      tag_595\n      jumpi\n        /* \"#utility.yul\":2886:2887   */\n      0x00\n        /* \"#utility.yul\":2883:2884   */\n      dup1\n        /* \"#utility.yul\":2876:2888   */\n      revert\n        /* \"#utility.yul\":2837:2890   */\n    tag_595:\n        /* \"#utility.yul\":2926:2935   */\n      dup6\n        /* \"#utility.yul\":2913:2936   */\n      calldataload\n        /* \"#utility.yul\":2959:2977   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2951:2957   */\n      dup2\n        /* \"#utility.yul\":2948:2978   */\n      gt\n        /* \"#utility.yul\":2945:2995   */\n      iszero\n      tag_596\n      jumpi\n        /* \"#utility.yul\":2991:2992   */\n      0x00\n        /* \"#utility.yul\":2988:2989   */\n      dup1\n        /* \"#utility.yul\":2981:2993   */\n      revert\n        /* \"#utility.yul\":2945:2995   */\n    tag_596:\n        /* \"#utility.yul\":3014:3064   */\n      tag_597\n        /* \"#utility.yul\":3056:3063   */\n      dup9\n        /* \"#utility.yul\":3047:3053   */\n      dup3\n        /* \"#utility.yul\":3036:3045   */\n      dup10\n        /* \"#utility.yul\":3032:3054   */\n      add\n        /* \"#utility.yul\":3014:3064   */\n      tag_557\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":3004:3064   */\n      swap9\n        /* \"#utility.yul\":3111:3113   */\n      0x20\n        /* \"#utility.yul\":3096:3114   */\n      dup9\n      add\n        /* \"#utility.yul\":3083:3115   */\n      calldataload\n      swap9\n      pop\n        /* \"#utility.yul\":3162:3164   */\n      0x40\n        /* \"#utility.yul\":3147:3165   */\n      dup9\n      add\n        /* \"#utility.yul\":3134:3166   */\n      calldataload\n      swap8\n        /* \"#utility.yul\":3213:3215   */\n      0x60\n        /* \"#utility.yul\":3198:3216   */\n      dup2\n      add\n        /* \"#utility.yul\":3185:3217   */\n      calldataload\n      swap8\n      pop\n        /* \"#utility.yul\":3264:3267   */\n      0x80\n        /* \"#utility.yul\":3249:3268   */\n      add\n        /* \"#utility.yul\":3236:3269   */\n      calldataload\n      swap6\n      pop\n        /* \"#utility.yul\":2679:3275   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3647:4171   */\n    tag_87:\n        /* \"#utility.yul\":3724:3730   */\n      0x00\n        /* \"#utility.yul\":3732:3738   */\n      dup1\n        /* \"#utility.yul\":3785:3787   */\n      0x40\n        /* \"#utility.yul\":3773:3782   */\n      dup4\n        /* \"#utility.yul\":3764:3771   */\n      dup6\n        /* \"#utility.yul\":3760:3783   */\n      sub\n        /* \"#utility.yul\":3756:3788   */\n      slt\n        /* \"#utility.yul\":3753:3805   */\n      iszero\n      tag_602\n      jumpi\n        /* \"#utility.yul\":3801:3802   */\n      0x00\n        /* \"#utility.yul\":3798:3799   */\n      dup1\n        /* \"#utility.yul\":3791:3803   */\n      revert\n        /* \"#utility.yul\":3753:3805   */\n    tag_602:\n        /* \"#utility.yul\":3824:3853   */\n      tag_603\n        /* \"#utility.yul\":3843:3852   */\n      dup4\n        /* \"#utility.yul\":3824:3853   */\n      tag_558\n      jump\t// in\n    tag_603:\n        /* \"#utility.yul\":3814:3853   */\n      swap2\n      pop\n        /* \"#utility.yul\":3904:3906   */\n      0x20\n        /* \"#utility.yul\":3893:3902   */\n      dup4\n        /* \"#utility.yul\":3889:3907   */\n      add\n        /* \"#utility.yul\":3876:3908   */\n      calldataload\n        /* \"#utility.yul\":3931:3949   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3923:3929   */\n      dup2\n        /* \"#utility.yul\":3920:3950   */\n      gt\n        /* \"#utility.yul\":3917:3967   */\n      iszero\n      tag_604\n      jumpi\n        /* \"#utility.yul\":3963:3964   */\n      0x00\n        /* \"#utility.yul\":3960:3961   */\n      dup1\n        /* \"#utility.yul\":3953:3965   */\n      revert\n        /* \"#utility.yul\":3917:3967   */\n    tag_604:\n        /* \"#utility.yul\":3986:4008   */\n      dup4\n      add\n        /* \"#utility.yul\":4039:4043   */\n      0x1f\n        /* \"#utility.yul\":4031:4044   */\n      dup2\n      add\n        /* \"#utility.yul\":4027:4054   */\n      dup6\n      sgt\n        /* \"#utility.yul\":4017:4072   */\n      tag_605\n      jumpi\n        /* \"#utility.yul\":4068:4069   */\n      0x00\n        /* \"#utility.yul\":4065:4066   */\n      dup1\n        /* \"#utility.yul\":4058:4070   */\n      revert\n        /* \"#utility.yul\":4017:4072   */\n    tag_605:\n        /* \"#utility.yul\":4091:4165   */\n      tag_606\n        /* \"#utility.yul\":4157:4164   */\n      dup6\n        /* \"#utility.yul\":4152:4154   */\n      dup3\n        /* \"#utility.yul\":4139:4155   */\n      calldataload\n        /* \"#utility.yul\":4134:4136   */\n      0x20\n        /* \"#utility.yul\":4130:4132   */\n      dup5\n        /* \"#utility.yul\":4126:4137   */\n      add\n        /* \"#utility.yul\":4091:4165   */\n      tag_556\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":4081:4165   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3647:4171   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4176:4572   */\n    tag_92:\n        /* \"#utility.yul\":4254:4260   */\n      0x00\n        /* \"#utility.yul\":4262:4268   */\n      dup1\n        /* \"#utility.yul\":4315:4317   */\n      0x40\n        /* \"#utility.yul\":4303:4312   */\n      dup4\n        /* \"#utility.yul\":4294:4301   */\n      dup6\n        /* \"#utility.yul\":4290:4313   */\n      sub\n        /* \"#utility.yul\":4286:4318   */\n      slt\n        /* \"#utility.yul\":4283:4335   */\n      iszero\n      tag_608\n      jumpi\n        /* \"#utility.yul\":4331:4332   */\n      0x00\n        /* \"#utility.yul\":4328:4329   */\n      dup1\n        /* \"#utility.yul\":4321:4333   */\n      revert\n        /* \"#utility.yul\":4283:4335   */\n    tag_608:\n        /* \"#utility.yul\":4371:4380   */\n      dup3\n        /* \"#utility.yul\":4358:4381   */\n      calldataload\n        /* \"#utility.yul\":4404:4422   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4396:4402   */\n      dup2\n        /* \"#utility.yul\":4393:4423   */\n      gt\n        /* \"#utility.yul\":4390:4440   */\n      iszero\n      tag_609\n      jumpi\n        /* \"#utility.yul\":4436:4437   */\n      0x00\n        /* \"#utility.yul\":4433:4434   */\n      dup1\n        /* \"#utility.yul\":4426:4438   */\n      revert\n        /* \"#utility.yul\":4390:4440   */\n    tag_609:\n        /* \"#utility.yul\":4459:4509   */\n      tag_610\n        /* \"#utility.yul\":4501:4508   */\n      dup6\n        /* \"#utility.yul\":4492:4498   */\n      dup3\n        /* \"#utility.yul\":4481:4490   */\n      dup7\n        /* \"#utility.yul\":4477:4499   */\n      add\n        /* \"#utility.yul\":4459:4509   */\n      tag_557\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":4449:4509   */\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":4528:4566   */\n      tag_593\n        /* \"#utility.yul\":4562:4564   */\n      0x20\n        /* \"#utility.yul\":4551:4560   */\n      dup5\n        /* \"#utility.yul\":4547:4565   */\n      add\n        /* \"#utility.yul\":4528:4566   */\n      tag_558\n      jump\t// in\n        /* \"#utility.yul\":4577:5188   */\n    tag_105:\n        /* \"#utility.yul\":4674:4680   */\n      0x00\n        /* \"#utility.yul\":4682:4688   */\n      dup1\n        /* \"#utility.yul\":4690:4696   */\n      0x00\n        /* \"#utility.yul\":4743:4745   */\n      0x60\n        /* \"#utility.yul\":4731:4740   */\n      dup5\n        /* \"#utility.yul\":4722:4729   */\n      dup7\n        /* \"#utility.yul\":4718:4741   */\n      sub\n        /* \"#utility.yul\":4714:4746   */\n      slt\n        /* \"#utility.yul\":4711:4763   */\n      iszero\n      tag_613\n      jumpi\n        /* \"#utility.yul\":4759:4760   */\n      0x00\n        /* \"#utility.yul\":4756:4757   */\n      dup1\n        /* \"#utility.yul\":4749:4761   */\n      revert\n        /* \"#utility.yul\":4711:4763   */\n    tag_613:\n        /* \"#utility.yul\":4799:4808   */\n      dup4\n        /* \"#utility.yul\":4786:4809   */\n      calldataload\n        /* \"#utility.yul\":4828:4846   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4869:4871   */\n      dup1\n        /* \"#utility.yul\":4861:4867   */\n      dup3\n        /* \"#utility.yul\":4858:4872   */\n      gt\n        /* \"#utility.yul\":4855:4889   */\n      iszero\n      tag_614\n      jumpi\n        /* \"#utility.yul\":4885:4886   */\n      0x00\n        /* \"#utility.yul\":4882:4883   */\n      dup1\n        /* \"#utility.yul\":4875:4887   */\n      revert\n        /* \"#utility.yul\":4855:4889   */\n    tag_614:\n        /* \"#utility.yul\":4908:4958   */\n      tag_615\n        /* \"#utility.yul\":4950:4957   */\n      dup8\n        /* \"#utility.yul\":4941:4947   */\n      dup4\n        /* \"#utility.yul\":4930:4939   */\n      dup9\n        /* \"#utility.yul\":4926:4948   */\n      add\n        /* \"#utility.yul\":4908:4958   */\n      tag_557\n      jump\t// in\n    tag_615:\n        /* \"#utility.yul\":4898:4958   */\n      swap5\n      pop\n        /* \"#utility.yul\":5011:5013   */\n      0x20\n        /* \"#utility.yul\":5000:5009   */\n      dup7\n        /* \"#utility.yul\":4996:5014   */\n      add\n        /* \"#utility.yul\":4983:5015   */\n      calldataload\n        /* \"#utility.yul\":4967:5015   */\n      swap2\n      pop\n        /* \"#utility.yul\":5040:5042   */\n      dup1\n        /* \"#utility.yul\":5030:5038   */\n      dup3\n        /* \"#utility.yul\":5027:5043   */\n      gt\n        /* \"#utility.yul\":5024:5060   */\n      iszero\n      tag_616\n      jumpi\n        /* \"#utility.yul\":5056:5057   */\n      0x00\n        /* \"#utility.yul\":5053:5054   */\n      dup1\n        /* \"#utility.yul\":5046:5058   */\n      revert\n        /* \"#utility.yul\":5024:5060   */\n    tag_616:\n      pop\n        /* \"#utility.yul\":5079:5131   */\n      tag_617\n        /* \"#utility.yul\":5123:5130   */\n      dup7\n        /* \"#utility.yul\":5112:5120   */\n      dup3\n        /* \"#utility.yul\":5101:5110   */\n      dup8\n        /* \"#utility.yul\":5097:5121   */\n      add\n        /* \"#utility.yul\":5079:5131   */\n      tag_557\n      jump\t// in\n    tag_617:\n        /* \"#utility.yul\":5069:5131   */\n      swap3\n      pop\n      pop\n        /* \"#utility.yul\":5178:5180   */\n      0x40\n        /* \"#utility.yul\":5167:5176   */\n      dup5\n        /* \"#utility.yul\":5163:5181   */\n      add\n        /* \"#utility.yul\":5150:5182   */\n      calldataload\n        /* \"#utility.yul\":5140:5182   */\n      swap1\n      pop\n        /* \"#utility.yul\":4577:5188   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5193:5379   */\n    tag_126:\n        /* \"#utility.yul\":5252:5258   */\n      0x00\n        /* \"#utility.yul\":5305:5307   */\n      0x20\n        /* \"#utility.yul\":5293:5302   */\n      dup3\n        /* \"#utility.yul\":5284:5291   */\n      dup5\n        /* \"#utility.yul\":5280:5303   */\n      sub\n        /* \"#utility.yul\":5276:5308   */\n      slt\n        /* \"#utility.yul\":5273:5325   */\n      iszero\n      tag_619\n      jumpi\n        /* \"#utility.yul\":5321:5322   */\n      0x00\n        /* \"#utility.yul\":5318:5319   */\n      dup1\n        /* \"#utility.yul\":5311:5323   */\n      revert\n        /* \"#utility.yul\":5273:5325   */\n    tag_619:\n        /* \"#utility.yul\":5344:5373   */\n      tag_537\n        /* \"#utility.yul\":5363:5372   */\n      dup3\n        /* \"#utility.yul\":5344:5373   */\n      tag_558\n      jump\t// in\n        /* \"#utility.yul\":5384:5684   */\n    tag_559:\n        /* \"#utility.yul\":5437:5440   */\n      0x00\n        /* \"#utility.yul\":5475:5480   */\n      dup2\n        /* \"#utility.yul\":5469:5481   */\n      mload\n        /* \"#utility.yul\":5502:5508   */\n      dup1\n        /* \"#utility.yul\":5497:5500   */\n      dup5\n        /* \"#utility.yul\":5490:5509   */\n      mstore\n        /* \"#utility.yul\":5558:5564   */\n      dup1\n        /* \"#utility.yul\":5551:5555   */\n      0x20\n        /* \"#utility.yul\":5544:5549   */\n      dup5\n        /* \"#utility.yul\":5540:5556   */\n      add\n        /* \"#utility.yul\":5533:5537   */\n      0x20\n        /* \"#utility.yul\":5528:5531   */\n      dup7\n        /* \"#utility.yul\":5524:5538   */\n      add\n        /* \"#utility.yul\":5518:5565   */\n      mcopy\n        /* \"#utility.yul\":5610:5611   */\n      0x00\n        /* \"#utility.yul\":5603:5607   */\n      0x20\n        /* \"#utility.yul\":5594:5600   */\n      dup3\n        /* \"#utility.yul\":5589:5592   */\n      dup7\n        /* \"#utility.yul\":5585:5601   */\n      add\n        /* \"#utility.yul\":5581:5608   */\n      add\n        /* \"#utility.yul\":5574:5612   */\n      mstore\n        /* \"#utility.yul\":5673:5677   */\n      0x20\n        /* \"#utility.yul\":5666:5668   */\n      0x1f\n        /* \"#utility.yul\":5662:5669   */\n      not\n        /* \"#utility.yul\":5657:5659   */\n      0x1f\n        /* \"#utility.yul\":5649:5655   */\n      dup4\n        /* \"#utility.yul\":5645:5660   */\n      add\n        /* \"#utility.yul\":5641:5670   */\n      and\n        /* \"#utility.yul\":5636:5639   */\n      dup6\n        /* \"#utility.yul\":5632:5671   */\n      add\n        /* \"#utility.yul\":5628:5678   */\n      add\n        /* \"#utility.yul\":5621:5678   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":5384:5684   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5689:6017   */\n    tag_129:\n        /* \"#utility.yul\":5866:5868   */\n      0x40\n        /* \"#utility.yul\":5855:5864   */\n      dup2\n        /* \"#utility.yul\":5848:5869   */\n      mstore\n        /* \"#utility.yul\":5829:5833   */\n      0x00\n        /* \"#utility.yul\":5886:5942   */\n      tag_623\n        /* \"#utility.yul\":5938:5940   */\n      0x40\n        /* \"#utility.yul\":5927:5936   */\n      dup4\n        /* \"#utility.yul\":5923:5941   */\n      add\n        /* \"#utility.yul\":5915:5921   */\n      dup6\n        /* \"#utility.yul\":5886:5942   */\n      tag_559\n      jump\t// in\n    tag_623:\n        /* \"#utility.yul\":5878:5942   */\n      swap1\n      pop\n        /* \"#utility.yul\":6007:6008   */\n      0x01\n        /* \"#utility.yul\":6003:6004   */\n      dup1\n        /* \"#utility.yul\":5998:6001   */\n      0xa0\n        /* \"#utility.yul\":5994:6005   */\n      shl\n        /* \"#utility.yul\":5990:6009   */\n      sub\n        /* \"#utility.yul\":5982:5988   */\n      dup4\n        /* \"#utility.yul\":5978:6010   */\n      and\n        /* \"#utility.yul\":5973:5975   */\n      0x20\n        /* \"#utility.yul\":5962:5971   */\n      dup4\n        /* \"#utility.yul\":5958:5976   */\n      add\n        /* \"#utility.yul\":5951:6011   */\n      mstore\n        /* \"#utility.yul\":5689:6017   */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":6022:7038   */\n    tag_133:\n        /* \"#utility.yul\":6115:6121   */\n      0x00\n        /* \"#utility.yul\":6123:6129   */\n      dup1\n        /* \"#utility.yul\":6176:6178   */\n      0x40\n        /* \"#utility.yul\":6164:6173   */\n      dup4\n        /* \"#utility.yul\":6155:6162   */\n      dup6\n        /* \"#utility.yul\":6151:6174   */\n      sub\n        /* \"#utility.yul\":6147:6179   */\n      slt\n        /* \"#utility.yul\":6144:6196   */\n      iszero\n      tag_625\n      jumpi\n        /* \"#utility.yul\":6192:6193   */\n      0x00\n        /* \"#utility.yul\":6189:6190   */\n      dup1\n        /* \"#utility.yul\":6182:6194   */\n      revert\n        /* \"#utility.yul\":6144:6196   */\n    tag_625:\n        /* \"#utility.yul\":6232:6241   */\n      dup3\n        /* \"#utility.yul\":6219:6242   */\n      calldataload\n        /* \"#utility.yul\":6261:6279   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":6302:6304   */\n      dup1\n        /* \"#utility.yul\":6294:6300   */\n      dup3\n        /* \"#utility.yul\":6291:6305   */\n      gt\n        /* \"#utility.yul\":6288:6322   */\n      iszero\n      tag_626\n      jumpi\n        /* \"#utility.yul\":6318:6319   */\n      0x00\n        /* \"#utility.yul\":6315:6316   */\n      dup1\n        /* \"#utility.yul\":6308:6320   */\n      revert\n        /* \"#utility.yul\":6288:6322   */\n    tag_626:\n        /* \"#utility.yul\":6356:6362   */\n      dup2\n        /* \"#utility.yul\":6345:6354   */\n      dup6\n        /* \"#utility.yul\":6341:6363   */\n      add\n        /* \"#utility.yul\":6331:6363   */\n      swap2\n      pop\n        /* \"#utility.yul\":6401:6408   */\n      dup6\n        /* \"#utility.yul\":6394:6398   */\n      0x1f\n        /* \"#utility.yul\":6390:6392   */\n      dup4\n        /* \"#utility.yul\":6386:6399   */\n      add\n        /* \"#utility.yul\":6382:6409   */\n      slt\n        /* \"#utility.yul\":6372:6427   */\n      tag_627\n      jumpi\n        /* \"#utility.yul\":6423:6424   */\n      0x00\n        /* \"#utility.yul\":6420:6421   */\n      dup1\n        /* \"#utility.yul\":6413:6425   */\n      revert\n        /* \"#utility.yul\":6372:6427   */\n    tag_627:\n        /* \"#utility.yul\":6459:6461   */\n      dup2\n        /* \"#utility.yul\":6446:6462   */\n      calldataload\n        /* \"#utility.yul\":6481:6485   */\n      0x20\n        /* \"#utility.yul\":6504:6506   */\n      dup3\n        /* \"#utility.yul\":6500:6502   */\n      dup3\n        /* \"#utility.yul\":6497:6507   */\n      gt\n        /* \"#utility.yul\":6494:6530   */\n      iszero\n      tag_629\n      jumpi\n        /* \"#utility.yul\":6510:6528   */\n      tag_629\n      tag_241\n      jump\t// in\n    tag_629:\n        /* \"#utility.yul\":6556:6558   */\n      dup2\n        /* \"#utility.yul\":6553:6554   */\n      0x05\n        /* \"#utility.yul\":6549:6559   */\n      shl\n        /* \"#utility.yul\":6539:6559   */\n      swap3\n      pop\n        /* \"#utility.yul\":6579:6607   */\n      tag_630\n        /* \"#utility.yul\":6603:6605   */\n      dup2\n        /* \"#utility.yul\":6599:6601   */\n      dup5\n        /* \"#utility.yul\":6595:6606   */\n      add\n        /* \"#utility.yul\":6579:6607   */\n      tag_555\n      jump\t// in\n    tag_630:\n        /* \"#utility.yul\":6641:6656   */\n      dup3\n      dup2\n      mstore\n        /* \"#utility.yul\":6711:6722   */\n      swap3\n      dup5\n      add\n        /* \"#utility.yul\":6707:6727   */\n      dup2\n      add\n      swap3\n        /* \"#utility.yul\":6672:6684   */\n      dup2\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":6739:6758   */\n      dup10\n      dup6\n      gt\n        /* \"#utility.yul\":6736:6775   */\n      iszero\n      tag_631\n      jumpi\n        /* \"#utility.yul\":6771:6772   */\n      0x00\n        /* \"#utility.yul\":6768:6769   */\n      dup1\n        /* \"#utility.yul\":6761:6773   */\n      revert\n        /* \"#utility.yul\":6736:6775   */\n    tag_631:\n        /* \"#utility.yul\":6795:6806   */\n      swap5\n      dup3\n      add\n      swap5\n        /* \"#utility.yul\":6815:6957   */\n    tag_632:\n        /* \"#utility.yul\":6831:6837   */\n      dup5\n        /* \"#utility.yul\":6826:6829   */\n      dup7\n        /* \"#utility.yul\":6823:6838   */\n      lt\n        /* \"#utility.yul\":6815:6957   */\n      iszero\n      tag_634\n      jumpi\n        /* \"#utility.yul\":6897:6914   */\n      dup6\n      calldataload\n        /* \"#utility.yul\":6885:6915   */\n      dup3\n      mstore\n        /* \"#utility.yul\":6848:6860   */\n      swap5\n      dup3\n      add\n      swap5\n        /* \"#utility.yul\":6935:6947   */\n      swap1\n      dup3\n      add\n      swap1\n        /* \"#utility.yul\":6815:6957   */\n      jump(tag_632)\n    tag_634:\n        /* \"#utility.yul\":6976:6981   */\n      swap10\n        /* \"#utility.yul\":7013:7031   */\n      swap8\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":7000:7032   */\n      calldataload\n      swap8\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":6022:7038   */\n      jump\t// out\n        /* \"#utility.yul\":7043:7274   */\n    tag_139:\n        /* \"#utility.yul\":7192:7194   */\n      0x20\n        /* \"#utility.yul\":7181:7190   */\n      dup2\n        /* \"#utility.yul\":7174:7195   */\n      mstore\n        /* \"#utility.yul\":7155:7159   */\n      0x00\n        /* \"#utility.yul\":7212:7268   */\n      tag_537\n        /* \"#utility.yul\":7264:7266   */\n      0x20\n        /* \"#utility.yul\":7253:7262   */\n      dup4\n        /* \"#utility.yul\":7249:7267   */\n      add\n        /* \"#utility.yul\":7241:7247   */\n      dup5\n        /* \"#utility.yul\":7212:7268   */\n      tag_559\n      jump\t// in\n        /* \"#utility.yul\":7279:7869   */\n    tag_149:\n        /* \"#utility.yul\":7568:7574   */\n      dup7\n        /* \"#utility.yul\":7557:7566   */\n      dup2\n        /* \"#utility.yul\":7550:7575   */\n      mstore\n        /* \"#utility.yul\":7611:7614   */\n      0xc0\n        /* \"#utility.yul\":7606:7608   */\n      0x20\n        /* \"#utility.yul\":7595:7604   */\n      dup3\n        /* \"#utility.yul\":7591:7609   */\n      add\n        /* \"#utility.yul\":7584:7615   */\n      mstore\n        /* \"#utility.yul\":7531:7535   */\n      0x00\n        /* \"#utility.yul\":7632:7689   */\n      tag_638\n        /* \"#utility.yul\":7684:7687   */\n      0xc0\n        /* \"#utility.yul\":7673:7682   */\n      dup4\n        /* \"#utility.yul\":7669:7688   */\n      add\n        /* \"#utility.yul\":7661:7667   */\n      dup9\n        /* \"#utility.yul\":7632:7689   */\n      tag_559\n      jump\t// in\n    tag_638:\n        /* \"#utility.yul\":7624:7689   */\n      swap1\n      pop\n        /* \"#utility.yul\":7725:7731   */\n      dup6\n        /* \"#utility.yul\":7720:7722   */\n      0x40\n        /* \"#utility.yul\":7709:7718   */\n      dup4\n        /* \"#utility.yul\":7705:7723   */\n      add\n        /* \"#utility.yul\":7698:7732   */\n      mstore\n        /* \"#utility.yul\":7768:7774   */\n      dup5\n        /* \"#utility.yul\":7763:7765   */\n      0x60\n        /* \"#utility.yul\":7752:7761   */\n      dup4\n        /* \"#utility.yul\":7748:7766   */\n      add\n        /* \"#utility.yul\":7741:7775   */\n      mstore\n        /* \"#utility.yul\":7812:7818   */\n      dup4\n        /* \"#utility.yul\":7806:7809   */\n      0x80\n        /* \"#utility.yul\":7795:7804   */\n      dup4\n        /* \"#utility.yul\":7791:7810   */\n      add\n        /* \"#utility.yul\":7784:7819   */\n      mstore\n        /* \"#utility.yul\":7856:7862   */\n      dup3\n        /* \"#utility.yul\":7850:7853   */\n      0xa0\n        /* \"#utility.yul\":7839:7848   */\n      dup4\n        /* \"#utility.yul\":7835:7854   */\n      add\n        /* \"#utility.yul\":7828:7863   */\n      mstore\n        /* \"#utility.yul\":7279:7869   */\n      swap8\n      swap7\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7874:8208   */\n    tag_153:\n        /* \"#utility.yul\":7951:7957   */\n      0x00\n        /* \"#utility.yul\":7959:7965   */\n      dup1\n        /* \"#utility.yul\":7967:7973   */\n      0x00\n        /* \"#utility.yul\":8020:8022   */\n      0x60\n        /* \"#utility.yul\":8008:8017   */\n      dup5\n        /* \"#utility.yul\":7999:8006   */\n      dup7\n        /* \"#utility.yul\":7995:8018   */\n      sub\n        /* \"#utility.yul\":7991:8023   */\n      slt\n        /* \"#utility.yul\":7988:8040   */\n      iszero\n      tag_640\n      jumpi\n        /* \"#utility.yul\":8036:8037   */\n      0x00\n        /* \"#utility.yul\":8033:8034   */\n      dup1\n        /* \"#utility.yul\":8026:8038   */\n      revert\n        /* \"#utility.yul\":7988:8040   */\n    tag_640:\n        /* \"#utility.yul\":8059:8088   */\n      tag_641\n        /* \"#utility.yul\":8078:8087   */\n      dup5\n        /* \"#utility.yul\":8059:8088   */\n      tag_558\n      jump\t// in\n    tag_641:\n        /* \"#utility.yul\":8049:8088   */\n      swap3\n      pop\n        /* \"#utility.yul\":8107:8145   */\n      tag_642\n        /* \"#utility.yul\":8141:8143   */\n      0x20\n        /* \"#utility.yul\":8130:8139   */\n      dup6\n        /* \"#utility.yul\":8126:8144   */\n      add\n        /* \"#utility.yul\":8107:8145   */\n      tag_558\n      jump\t// in\n    tag_642:\n        /* \"#utility.yul\":8097:8145   */\n      swap2\n      pop\n        /* \"#utility.yul\":8164:8202   */\n      tag_643\n        /* \"#utility.yul\":8198:8200   */\n      0x40\n        /* \"#utility.yul\":8187:8196   */\n      dup6\n        /* \"#utility.yul\":8183:8201   */\n      add\n        /* \"#utility.yul\":8164:8202   */\n      tag_558\n      jump\t// in\n    tag_643:\n        /* \"#utility.yul\":8154:8202   */\n      swap1\n      pop\n        /* \"#utility.yul\":7874:8208   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":8213:8467   */\n    tag_158:\n        /* \"#utility.yul\":8281:8287   */\n      0x00\n        /* \"#utility.yul\":8289:8295   */\n      dup1\n        /* \"#utility.yul\":8342:8344   */\n      0x40\n        /* \"#utility.yul\":8330:8339   */\n      dup4\n        /* \"#utility.yul\":8321:8328   */\n      dup6\n        /* \"#utility.yul\":8317:8340   */\n      sub\n        /* \"#utility.yul\":8313:8345   */\n      slt\n        /* \"#utility.yul\":8310:8362   */\n      iszero\n      tag_645\n      jumpi\n        /* \"#utility.yul\":8358:8359   */\n      0x00\n        /* \"#utility.yul\":8355:8356   */\n      dup1\n        /* \"#utility.yul\":8348:8360   */\n      revert\n        /* \"#utility.yul\":8310:8362   */\n    tag_645:\n        /* \"#utility.yul\":8381:8410   */\n      tag_646\n        /* \"#utility.yul\":8400:8409   */\n      dup4\n        /* \"#utility.yul\":8381:8410   */\n      tag_558\n      jump\t// in\n    tag_646:\n        /* \"#utility.yul\":8371:8410   */\n      swap5\n        /* \"#utility.yul\":8457:8459   */\n      0x20\n        /* \"#utility.yul\":8442:8460   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":8429:8461   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":8213:8467   */\n      jump\t// out\n        /* \"#utility.yul\":8472:9031   */\n    tag_161:\n        /* \"#utility.yul\":8719:8722   */\n      0x80\n        /* \"#utility.yul\":8708:8717   */\n      dup2\n        /* \"#utility.yul\":8701:8723   */\n      mstore\n        /* \"#utility.yul\":8682:8686   */\n      0x00\n        /* \"#utility.yul\":8746:8803   */\n      tag_648\n        /* \"#utility.yul\":8798:8801   */\n      0x80\n        /* \"#utility.yul\":8787:8796   */\n      dup4\n        /* \"#utility.yul\":8783:8802   */\n      add\n        /* \"#utility.yul\":8775:8781   */\n      dup8\n        /* \"#utility.yul\":8746:8803   */\n      tag_559\n      jump\t// in\n    tag_648:\n        /* \"#utility.yul\":8851:8860   */\n      dup3\n        /* \"#utility.yul\":8843:8849   */\n      dup2\n        /* \"#utility.yul\":8839:8861   */\n      sub\n        /* \"#utility.yul\":8834:8836   */\n      0x20\n        /* \"#utility.yul\":8823:8832   */\n      dup5\n        /* \"#utility.yul\":8819:8837   */\n      add\n        /* \"#utility.yul\":8812:8862   */\n      mstore\n        /* \"#utility.yul\":8879:8923   */\n      tag_649\n        /* \"#utility.yul\":8916:8922   */\n      dup2\n        /* \"#utility.yul\":8908:8914   */\n      dup8\n        /* \"#utility.yul\":8879:8923   */\n      tag_559\n      jump\t// in\n    tag_649:\n        /* \"#utility.yul\":8954:8956   */\n      0x40\n        /* \"#utility.yul\":8939:8957   */\n      dup5\n      add\n        /* \"#utility.yul\":8932:8966   */\n      swap6\n      swap1\n      swap6\n      mstore\n      pop\n      pop\n        /* \"#utility.yul\":9009:9023   */\n      swap1\n      iszero\n        /* \"#utility.yul\":9002:9024   */\n      iszero\n        /* \"#utility.yul\":8997:8999   */\n      0x60\n        /* \"#utility.yul\":8982:9000   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":8975:9025   */\n      mstore\n        /* \"#utility.yul\":8871:8923   */\n      swap3\n        /* \"#utility.yul\":8472:9031   */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9720:9847   */\n    tag_194:\n        /* \"#utility.yul\":9781:9791   */\n      0x4e487b71\n        /* \"#utility.yul\":9776:9779   */\n      0xe0\n        /* \"#utility.yul\":9772:9792   */\n      shl\n        /* \"#utility.yul\":9769:9770   */\n      0x00\n        /* \"#utility.yul\":9762:9793   */\n      mstore\n        /* \"#utility.yul\":9812:9816   */\n      0x32\n        /* \"#utility.yul\":9809:9810   */\n      0x04\n        /* \"#utility.yul\":9802:9817   */\n      mstore\n        /* \"#utility.yul\":9836:9840   */\n      0x24\n        /* \"#utility.yul\":9833:9834   */\n      0x00\n        /* \"#utility.yul\":9826:9841   */\n      revert\n        /* \"#utility.yul\":9852:10064   */\n    tag_560:\n        /* \"#utility.yul\":9894:9897   */\n      0x00\n        /* \"#utility.yul\":9932:9937   */\n      dup2\n        /* \"#utility.yul\":9926:9938   */\n      mload\n        /* \"#utility.yul\":9976:9982   */\n      dup1\n        /* \"#utility.yul\":9969:9973   */\n      0x20\n        /* \"#utility.yul\":9962:9967   */\n      dup5\n        /* \"#utility.yul\":9958:9974   */\n      add\n        /* \"#utility.yul\":9953:9956   */\n      dup6\n        /* \"#utility.yul\":9947:9983   */\n      mcopy\n        /* \"#utility.yul\":10038:10039   */\n      0x00\n        /* \"#utility.yul\":10002:10018   */\n      swap4\n      add\n        /* \"#utility.yul\":10027:10040   */\n      swap3\n      dup4\n      mstore\n      pop\n        /* \"#utility.yul\":10002:10018   */\n      swap1\n      swap2\n        /* \"#utility.yul\":9852:10064   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10069:10261   */\n    tag_197:\n        /* \"#utility.yul\":10200:10203   */\n      0x00\n        /* \"#utility.yul\":10225:10255   */\n      tag_537\n        /* \"#utility.yul\":10251:10254   */\n      dup3\n        /* \"#utility.yul\":10243:10249   */\n      dup5\n        /* \"#utility.yul\":10225:10255   */\n      tag_560\n      jump\t// in\n        /* \"#utility.yul\":10266:10646   */\n    tag_342:\n        /* \"#utility.yul\":10345:10346   */\n      0x01\n        /* \"#utility.yul\":10341:10353   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":10388:10400   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":10409:10470   */\n      tag_656\n      jumpi\n        /* \"#utility.yul\":10463:10467   */\n      0x7f\n        /* \"#utility.yul\":10455:10461   */\n      dup3\n        /* \"#utility.yul\":10451:10468   */\n      and\n        /* \"#utility.yul\":10441:10468   */\n      swap2\n      pop\n        /* \"#utility.yul\":10409:10470   */\n    tag_656:\n        /* \"#utility.yul\":10516:10518   */\n      0x20\n        /* \"#utility.yul\":10508:10514   */\n      dup3\n        /* \"#utility.yul\":10505:10519   */\n      lt\n        /* \"#utility.yul\":10485:10503   */\n      dup2\n        /* \"#utility.yul\":10482:10520   */\n      sub\n        /* \"#utility.yul\":10479:10640   */\n      tag_657\n      jumpi\n        /* \"#utility.yul\":10562:10572   */\n      0x4e487b71\n        /* \"#utility.yul\":10557:10560   */\n      0xe0\n        /* \"#utility.yul\":10553:10573   */\n      shl\n        /* \"#utility.yul\":10550:10551   */\n      0x00\n        /* \"#utility.yul\":10543:10574   */\n      mstore\n        /* \"#utility.yul\":10597:10601   */\n      0x22\n        /* \"#utility.yul\":10594:10595   */\n      0x04\n        /* \"#utility.yul\":10587:10602   */\n      mstore\n        /* \"#utility.yul\":10625:10629   */\n      0x24\n        /* \"#utility.yul\":10622:10623   */\n      0x00\n        /* \"#utility.yul\":10615:10630   */\n      revert\n        /* \"#utility.yul\":10479:10640   */\n    tag_657:\n      pop\n        /* \"#utility.yul\":10266:10646   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":10777:11620   */\n    tag_199:\n        /* \"#utility.yul\":10905:10908   */\n      0x00\n        /* \"#utility.yul\":10934:10935   */\n      dup1\n        /* \"#utility.yul\":10967:10973   */\n      dup4\n        /* \"#utility.yul\":10961:10974   */\n      sload\n        /* \"#utility.yul\":10997:11033   */\n      tag_660\n        /* \"#utility.yul\":11023:11032   */\n      dup2\n        /* \"#utility.yul\":10997:11033   */\n      tag_342\n      jump\t// in\n    tag_660:\n        /* \"#utility.yul\":11052:11053   */\n      0x01\n        /* \"#utility.yul\":11069:11086   */\n      dup3\n      dup2\n      and\n        /* \"#utility.yul\":11095:11228   */\n      dup1\n      iszero\n      tag_662\n      jumpi\n        /* \"#utility.yul\":11242:11243   */\n      0x01\n        /* \"#utility.yul\":11237:11595   */\n      dup2\n      eq\n      tag_663\n      jumpi\n        /* \"#utility.yul\":11062:11595   */\n      jump(tag_661)\n        /* \"#utility.yul\":11095:11228   */\n    tag_662:\n      not(0xff)\n        /* \"#utility.yul\":11128:11152   */\n      dup5\n      and\n        /* \"#utility.yul\":11116:11153   */\n      dup8\n      mstore\n        /* \"#utility.yul\":11201:11215   */\n      dup3\n      iszero\n        /* \"#utility.yul\":11194:11216   */\n      iszero\n        /* \"#utility.yul\":11182:11217   */\n      dup4\n      mul\n        /* \"#utility.yul\":11173:11218   */\n      dup8\n      add\n      swap5\n      pop\n        /* \"#utility.yul\":11095:11228   */\n      jump(tag_661)\n        /* \"#utility.yul\":11237:11595   */\n    tag_663:\n        /* \"#utility.yul\":11268:11274   */\n      dup8\n        /* \"#utility.yul\":11265:11266   */\n      0x00\n        /* \"#utility.yul\":11258:11275   */\n      mstore\n        /* \"#utility.yul\":11298:11302   */\n      0x20\n        /* \"#utility.yul\":11343:11347   */\n      dup1\n        /* \"#utility.yul\":11340:11341   */\n      0x00\n        /* \"#utility.yul\":11330:11348   */\n      keccak256\n        /* \"#utility.yul\":11370:11371   */\n      0x00\n        /* \"#utility.yul\":11384:11549   */\n    tag_664:\n        /* \"#utility.yul\":11398:11404   */\n      dup6\n        /* \"#utility.yul\":11395:11396   */\n      dup2\n        /* \"#utility.yul\":11392:11405   */\n      lt\n        /* \"#utility.yul\":11384:11549   */\n      iszero\n      tag_666\n      jumpi\n        /* \"#utility.yul\":11476:11490   */\n      dup2\n      sload\n        /* \"#utility.yul\":11463:11474   */\n      dup11\n      dup3\n      add\n        /* \"#utility.yul\":11456:11491   */\n      mstore\n        /* \"#utility.yul\":11519:11535   */\n      swap1\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":11413:11423   */\n      dup3\n      add\n        /* \"#utility.yul\":11384:11549   */\n      jump(tag_664)\n    tag_666:\n        /* \"#utility.yul\":11388:11391   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":11578:11584   */\n      dup3\n        /* \"#utility.yul\":11573:11576   */\n      dup8\n        /* \"#utility.yul\":11569:11585   */\n      add\n        /* \"#utility.yul\":11562:11585   */\n      swap5\n      pop\n        /* \"#utility.yul\":11062:11595   */\n    tag_661:\n      pop\n        /* \"#utility.yul\":11611:11614   */\n      swap3\n      swap7\n        /* \"#utility.yul\":10777:11620   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11625:11752   */\n    tag_562:\n        /* \"#utility.yul\":11686:11696   */\n      0x4e487b71\n        /* \"#utility.yul\":11681:11684   */\n      0xe0\n        /* \"#utility.yul\":11677:11697   */\n      shl\n        /* \"#utility.yul\":11674:11675   */\n      0x00\n        /* \"#utility.yul\":11667:11698   */\n      mstore\n        /* \"#utility.yul\":11717:11721   */\n      0x11\n        /* \"#utility.yul\":11714:11715   */\n      0x04\n        /* \"#utility.yul\":11707:11722   */\n      mstore\n        /* \"#utility.yul\":11741:11745   */\n      0x24\n        /* \"#utility.yul\":11738:11739   */\n      0x00\n        /* \"#utility.yul\":11731:11746   */\n      revert\n        /* \"#utility.yul\":11757:11882   */\n    tag_203:\n        /* \"#utility.yul\":11822:11831   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":11843:11853   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":11840:11876   */\n      iszero\n      tag_186\n      jumpi\n        /* \"#utility.yul\":11856:11874   */\n      tag_186\n      tag_562\n      jump\t// in\n        /* \"#utility.yul\":11887:12405   */\n    tag_563:\n        /* \"#utility.yul\":11989:11991   */\n      0x1f\n        /* \"#utility.yul\":11984:11987   */\n      dup3\n        /* \"#utility.yul\":11981:11992   */\n      gt\n        /* \"#utility.yul\":11978:12399   */\n      iszero\n      tag_228\n      jumpi\n        /* \"#utility.yul\":12025:12030   */\n      dup1\n        /* \"#utility.yul\":12022:12023   */\n      0x00\n        /* \"#utility.yul\":12015:12031   */\n      mstore\n        /* \"#utility.yul\":12069:12073   */\n      0x20\n        /* \"#utility.yul\":12066:12067   */\n      0x00\n        /* \"#utility.yul\":12056:12074   */\n      keccak256\n        /* \"#utility.yul\":12139:12141   */\n      0x1f\n        /* \"#utility.yul\":12127:12137   */\n      dup5\n        /* \"#utility.yul\":12123:12142   */\n      add\n        /* \"#utility.yul\":12120:12121   */\n      0x05\n        /* \"#utility.yul\":12116:12143   */\n      shr\n        /* \"#utility.yul\":12110:12114   */\n      dup2\n        /* \"#utility.yul\":12106:12144   */\n      add\n        /* \"#utility.yul\":12175:12179   */\n      0x20\n        /* \"#utility.yul\":12163:12173   */\n      dup6\n        /* \"#utility.yul\":12160:12180   */\n      lt\n        /* \"#utility.yul\":12157:12204   */\n      iszero\n      tag_673\n      jumpi\n      pop\n        /* \"#utility.yul\":12198:12202   */\n      dup1\n        /* \"#utility.yul\":12157:12204   */\n    tag_673:\n        /* \"#utility.yul\":12253:12255   */\n      0x1f\n        /* \"#utility.yul\":12248:12251   */\n      dup5\n        /* \"#utility.yul\":12244:12256   */\n      add\n        /* \"#utility.yul\":12241:12242   */\n      0x05\n        /* \"#utility.yul\":12237:12257   */\n      shr\n        /* \"#utility.yul\":12231:12235   */\n      dup3\n        /* \"#utility.yul\":12227:12258   */\n      add\n        /* \"#utility.yul\":12217:12258   */\n      swap2\n      pop\n        /* \"#utility.yul\":12308:12389   */\n    tag_674:\n        /* \"#utility.yul\":12326:12328   */\n      dup2\n        /* \"#utility.yul\":12319:12324   */\n      dup2\n        /* \"#utility.yul\":12316:12329   */\n      lt\n        /* \"#utility.yul\":12308:12389   */\n      iszero\n      tag_676\n      jumpi\n        /* \"#utility.yul\":12385:12386   */\n      0x00\n        /* \"#utility.yul\":12371:12387   */\n      dup2\n      sstore\n        /* \"#utility.yul\":12352:12353   */\n      0x01\n        /* \"#utility.yul\":12341:12354   */\n      add\n        /* \"#utility.yul\":12308:12389   */\n      jump(tag_674)\n    tag_676:\n        /* \"#utility.yul\":12312:12315   */\n      pop\n      pop\n        /* \"#utility.yul\":11887:12405   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12581:13926   */\n    tag_219:\n        /* \"#utility.yul\":12707:12710   */\n      dup2\n        /* \"#utility.yul\":12701:12711   */\n      mload\n        /* \"#utility.yul\":12734:12752   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":12726:12732   */\n      dup2\n        /* \"#utility.yul\":12723:12753   */\n      gt\n        /* \"#utility.yul\":12720:12776   */\n      iszero\n      tag_680\n      jumpi\n        /* \"#utility.yul\":12756:12774   */\n      tag_680\n      tag_241\n      jump\t// in\n    tag_680:\n        /* \"#utility.yul\":12785:12882   */\n      tag_681\n        /* \"#utility.yul\":12875:12881   */\n      dup2\n        /* \"#utility.yul\":12835:12873   */\n      tag_682\n        /* \"#utility.yul\":12867:12871   */\n      dup5\n        /* \"#utility.yul\":12861:12872   */\n      sload\n        /* \"#utility.yul\":12835:12873   */\n      tag_342\n      jump\t// in\n    tag_682:\n        /* \"#utility.yul\":12829:12833   */\n      dup5\n        /* \"#utility.yul\":12785:12882   */\n      tag_563\n      jump\t// in\n    tag_681:\n        /* \"#utility.yul\":12937:12941   */\n      0x20\n      dup1\n        /* \"#utility.yul\":12994:12996   */\n      0x1f\n        /* \"#utility.yul\":12983:12997   */\n      dup4\n      gt\n        /* \"#utility.yul\":13011:13012   */\n      0x01\n        /* \"#utility.yul\":13006:13669   */\n      dup2\n      eq\n      tag_684\n      jumpi\n        /* \"#utility.yul\":13713:13714   */\n      0x00\n        /* \"#utility.yul\":13730:13736   */\n      dup5\n        /* \"#utility.yul\":13727:13816   */\n      iszero\n      tag_685\n      jumpi\n      pop\n        /* \"#utility.yul\":13782:13801   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":13776:13802   */\n      mload\n        /* \"#utility.yul\":13727:13816   */\n    tag_685:\n      not(0x00)\n        /* \"#utility.yul\":12538:12539   */\n      0x03\n        /* \"#utility.yul\":12534:12545   */\n      dup7\n      swap1\n      shl\n        /* \"#utility.yul\":12530:12554   */\n      shr\n        /* \"#utility.yul\":12526:12555   */\n      not\n        /* \"#utility.yul\":12516:12556   */\n      and\n        /* \"#utility.yul\":12562:12563   */\n      0x01\n        /* \"#utility.yul\":12558:12569   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":12513:12570   */\n      or\n        /* \"#utility.yul\":13829:13910   */\n      dup6\n      sstore\n        /* \"#utility.yul\":12976:13920   */\n      jump(tag_683)\n        /* \"#utility.yul\":13006:13669   */\n    tag_684:\n        /* \"#utility.yul\":10724:10725   */\n      0x00\n        /* \"#utility.yul\":10717:10731   */\n      dup6\n      dup2\n      mstore\n        /* \"#utility.yul\":10761:10765   */\n      0x20\n        /* \"#utility.yul\":10748:10766   */\n      dup2\n      keccak256\n      not(0x1f)\n        /* \"#utility.yul\":13042:13062   */\n      dup7\n      and\n      swap2\n        /* \"#utility.yul\":13160:13396   */\n    tag_688:\n        /* \"#utility.yul\":13174:13181   */\n      dup3\n        /* \"#utility.yul\":13171:13172   */\n      dup2\n        /* \"#utility.yul\":13168:13182   */\n      lt\n        /* \"#utility.yul\":13160:13396   */\n      iszero\n      tag_690\n      jumpi\n        /* \"#utility.yul\":13263:13282   */\n      dup9\n      dup7\n      add\n        /* \"#utility.yul\":13257:13283   */\n      mload\n        /* \"#utility.yul\":13242:13284   */\n      dup3\n      sstore\n        /* \"#utility.yul\":13355:13382   */\n      swap5\n      dup5\n      add\n      swap5\n        /* \"#utility.yul\":13323:13324   */\n      0x01\n        /* \"#utility.yul\":13311:13325   */\n      swap1\n      swap2\n      add\n      swap1\n        /* \"#utility.yul\":13190:13209   */\n      dup5\n      add\n        /* \"#utility.yul\":13160:13396   */\n      jump(tag_688)\n    tag_690:\n        /* \"#utility.yul\":13164:13167   */\n      pop\n        /* \"#utility.yul\":13424:13430   */\n      dup6\n        /* \"#utility.yul\":13415:13422   */\n      dup3\n        /* \"#utility.yul\":13412:13431   */\n      lt\n        /* \"#utility.yul\":13409:13610   */\n      iszero\n      tag_691\n      jumpi\n        /* \"#utility.yul\":13485:13504   */\n      dup8\n      dup6\n      add\n        /* \"#utility.yul\":13479:13505   */\n      mload\n      not(0x00)\n        /* \"#utility.yul\":13568:13569   */\n      0x03\n        /* \"#utility.yul\":13564:13578   */\n      dup9\n      swap1\n      shl\n        /* \"#utility.yul\":13580:13583   */\n      0xf8\n        /* \"#utility.yul\":13560:13584   */\n      and\n        /* \"#utility.yul\":13556:13593   */\n      shr\n        /* \"#utility.yul\":13552:13594   */\n      not\n        /* \"#utility.yul\":13537:13595   */\n      and\n        /* \"#utility.yul\":13522:13596   */\n      dup2\n      sstore\n        /* \"#utility.yul\":13409:13610   */\n    tag_691:\n      pop\n      pop\n        /* \"#utility.yul\":13656:13657   */\n      0x01\n        /* \"#utility.yul\":13647:13653   */\n      dup5\n        /* \"#utility.yul\":13644:13645   */\n      0x01\n        /* \"#utility.yul\":13640:13654   */\n      shl\n        /* \"#utility.yul\":13636:13658   */\n      add\n        /* \"#utility.yul\":13630:13634   */\n      dup6\n        /* \"#utility.yul\":13623:13659   */\n      sstore\n        /* \"#utility.yul\":12976:13920   */\n    tag_683:\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":12581:13926   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13931:14233   */\n    tag_221:\n        /* \"#utility.yul\":14108:14114   */\n      dup3\n        /* \"#utility.yul\":14097:14106   */\n      dup2\n        /* \"#utility.yul\":14090:14115   */\n      mstore\n        /* \"#utility.yul\":14151:14153   */\n      0x40\n        /* \"#utility.yul\":14146:14148   */\n      0x20\n        /* \"#utility.yul\":14135:14144   */\n      dup3\n        /* \"#utility.yul\":14131:14149   */\n      add\n        /* \"#utility.yul\":14124:14154   */\n      mstore\n        /* \"#utility.yul\":14071:14075   */\n      0x00\n        /* \"#utility.yul\":14171:14227   */\n      tag_585\n        /* \"#utility.yul\":14223:14225   */\n      0x40\n        /* \"#utility.yul\":14212:14221   */\n      dup4\n        /* \"#utility.yul\":14208:14226   */\n      add\n        /* \"#utility.yul\":14200:14206   */\n      dup5\n        /* \"#utility.yul\":14171:14227   */\n      tag_559\n      jump\t// in\n        /* \"#utility.yul\":14238:14373   */\n    tag_223:\n        /* \"#utility.yul\":14277:14280   */\n      0x00\n        /* \"#utility.yul\":14298:14315   */\n      0x01\n      dup3\n      add\n        /* \"#utility.yul\":14295:14338   */\n      tag_696\n      jumpi\n        /* \"#utility.yul\":14318:14336   */\n      tag_696\n      tag_562\n      jump\t// in\n    tag_696:\n      pop\n        /* \"#utility.yul\":14365:14366   */\n      0x01\n        /* \"#utility.yul\":14354:14367   */\n      add\n      swap1\n        /* \"#utility.yul\":14238:14373   */\n      jump\t// out\n        /* \"#utility.yul\":15828:15956   */\n    tag_322:\n        /* \"#utility.yul\":15895:15904   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":15916:15927   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":15913:15950   */\n      iszero\n      tag_186\n      jumpi\n        /* \"#utility.yul\":15930:15948   */\n      tag_186\n      tag_562\n      jump\t// in\n        /* \"#utility.yul\":15961:16088   */\n    tag_331:\n        /* \"#utility.yul\":16022:16032   */\n      0x4e487b71\n        /* \"#utility.yul\":16017:16020   */\n      0xe0\n        /* \"#utility.yul\":16013:16033   */\n      shl\n        /* \"#utility.yul\":16010:16011   */\n      0x00\n        /* \"#utility.yul\":16003:16034   */\n      mstore\n        /* \"#utility.yul\":16053:16057   */\n      0x31\n        /* \"#utility.yul\":16050:16051   */\n      0x04\n        /* \"#utility.yul\":16043:16058   */\n      mstore\n        /* \"#utility.yul\":16077:16081   */\n      0x24\n        /* \"#utility.yul\":16074:16075   */\n      0x00\n        /* \"#utility.yul\":16067:16082   */\n      revert\n        /* \"#utility.yul\":17525:17709   */\n    tag_451:\n        /* \"#utility.yul\":17595:17601   */\n      0x00\n        /* \"#utility.yul\":17648:17650   */\n      0x20\n        /* \"#utility.yul\":17636:17645   */\n      dup3\n        /* \"#utility.yul\":17627:17634   */\n      dup5\n        /* \"#utility.yul\":17623:17646   */\n      sub\n        /* \"#utility.yul\":17619:17651   */\n      slt\n        /* \"#utility.yul\":17616:17668   */\n      iszero\n      tag_711\n      jumpi\n        /* \"#utility.yul\":17664:17665   */\n      0x00\n        /* \"#utility.yul\":17661:17662   */\n      dup1\n        /* \"#utility.yul\":17654:17666   */\n      revert\n        /* \"#utility.yul\":17616:17668   */\n    tag_711:\n      pop\n        /* \"#utility.yul\":17687:17703   */\n      mload\n      swap2\n        /* \"#utility.yul\":17525:17709   */\n      swap1\n      pop\n      jump\t// out\n    stop\n    data_3059375685003c5c33343043cb51f6c6b03e849d5b2f19339e935f8b505d9fe3 9b7946abd96dccbe6cfc6cc2c13300ab429d93e16fa72dc459eeccda73817f08\n    data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d 360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n    data_9b87106a812d214d41ad9b68a21119e2948eaaf1040375c939ec808b8862455c 65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a\n    data_b3da67d1b252aeab7c8063542d95e75f82a5307a82535949bc38f7cf7ba8897f 02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800\n    data_c0c65a3718f3702d917c44106b91645b509d2e2d0979b70495c3babce192339f cd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300\n\n    auxdata: 0xa2646970667358221220ea2b3697326adffd8de11773ad2c8d3456aac56c13e47a40f02f25681bd8a0f164736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60a06040523060805260015f8190558055348015601a575f80fd5b5060805161272e6100415f395f818161194c015281816119750152611ad8015261272e5ff3fe6080604052600436106101c5575f3560e01c80638456cb59116100f2578063bfb231d211610092578063e2eb41ff11610062578063e2eb41ff14610532578063e551ba4b146105cb578063e63ab1e9146105ea578063f72c0d8b1461060a575f80fd5b8063bfb231d214610494578063c0c53b8b146104c5578063d3dcff7c146104e4578063d547741f14610513575f80fd5b8063a75859e1116100cd578063a75859e1146103eb578063a9834b6714610418578063ad3cb1cc14610437578063be22d27d14610474575f80fd5b80638456cb59146103a557806391d14854146103b9578063a217fddf146103d8575f80fd5b80633fa9fcf81161016857806352d1902d1161013857806352d1902d146103305780635c975abb146103445780636f347a78146103675780637309cbbd14610386575f80fd5b80633fa9fcf8146102bc578063443c227c146102d05780634f1ef286146102fe5780634fa4a1bb14610311575f80fd5b80632f2ff15d116101a35780632f2ff15d1461024b57806331fee8be1461026a57806336568abe146102895780633f4ba83a146102a8575f80fd5b806301ffc9a7146101c957806317435e1a146101fd578063248a9ca31461021e575b5f80fd5b3480156101d4575f80fd5b506101e86101e3366004611ef8565b61063d565b60405190151581526020015b60405180910390f35b348015610208575f80fd5b5061021c610217366004611fd7565b610673565b005b348015610229575f80fd5b5061023d610238366004612011565b6107a9565b6040519081526020016101f4565b348015610256575f80fd5b5061021c610265366004612043565b6107c9565b348015610275575f80fd5b5061021c61028436600461206d565b6107eb565b348015610294575f80fd5b5061021c6102a3366004612043565b6108d8565b3480156102b3575f80fd5b5061021c610910565b3480156102c7575f80fd5b5061021c610932565b3480156102db575f80fd5b5061023d6102ea366004612011565b60076020525f908152604090206001015481565b61021c61030c3660046120c5565b610b03565b34801561031c575f80fd5b5061021c61032b366004612123565b610b1e565b34801561033b575f80fd5b5061023d610d24565b34801561034f575f80fd5b505f805160206126d98339815191525460ff166101e8565b348015610372575f80fd5b5061021c610381366004612165565b610d3f565b348015610391575f80fd5b5061021c6103a0366004612011565b610dea565b3480156103b0575f80fd5b5061021c611109565b3480156103c4575f80fd5b506101e86103d3366004612043565b611128565b3480156103e3575f80fd5b5061023d5f81565b3480156103f6575f80fd5b5061040a6104053660046121cd565b61115e565b6040516101f4929190612214565b348015610423575f80fd5b5061021c61043236600461223d565b611208565b348015610442575f80fd5b50610467604051806040016040528060058152602001640352e302e360dc1b81525081565b6040516101f491906122e4565b34801561047f575f80fd5b5061023d5f8051602061265983398151915281565b34801561049f575f80fd5b506104b36104ae366004612011565b6112b6565b6040516101f4969594939291906122f6565b3480156104d0575f80fd5b5061021c6104df366004612333565b611370565b3480156104ef575f80fd5b506105036104fe366004612373565b6114f5565b6040516101f4949392919061239b565b34801561051e575f80fd5b5061021c61052d366004612043565b61164b565b34801561053d575f80fd5b5061059061054c3660046121cd565b6003602052805f5260405f205f91509050805f0154908060010154908060020154908060030154908060040154908060050154908060060154908060070154905088565b604080519889526020890197909752958701949094526060860192909252608085015260a084015260c083015260e0820152610100016101f4565b3480156105d6575f80fd5b5061021c6105e5366004611fd7565b611667565b3480156105f5575f80fd5b5061023d5f8051602061269983398151915281565b348015610615575f80fd5b5061023d7f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e381565b5f6001600160e01b03198216637965db0b60e01b148061066d57506301ffc9a760e01b6001600160e01b03198316145b92915050565b5f5b335f908152600460205260409020548110156107a557335f9081526004602052604081208054839081106106ab576106ab6123d8565b905f5260205f2090600402019050826040516020016106ca9190612403565b60408051601f19818403018152908290528051602091820120916106f091849101612446565b604051602081830303815290604052805190602001201480156107185750600381015460ff16155b1561079c576003808201805460ff191660019081179091556002830154335f908152602093909352604083209091018054919290916107589084906124cc565b909155505060405133907fbe21664565742a9f42cbb6d005f92db59c7bcad35b12ef5b57b79e75676b247a9061078f9086906122e4565b60405180910390a2505050565b50600101610675565b5050565b5f9081525f805160206126b9833981519152602052604090206001015490565b6107d2826107a9565b6107db816117be565b6107e583836117c8565b50505050565b5f80516020612659833981519152610802816117be565b6040805160c0810182525f805480835260208084018b81528486018b9052606085018a90526080850189905260a08501889052918352600290529290208151815591519091906001820190610857908261252a565b5060408201518160020155606082015181600301556080820151816004015560a082015181600501559050507f78d68ba0e8c23b92e7c700d99efed2719520cbd4af845b2c03ae251f9cdf3d525f54876040516108b59291906125ea565b60405180910390a15f805490806108cb83612602565b9190505550505050505050565b6001600160a01b03811633146109015760405163334bd91960e11b815260040160405180910390fd5b61090b8282611869565b505050565b5f80516020612699833981519152610927816117be565b61092f6118e2565b50565b335f908152600360205260409020541561098b5760405162461bcd60e51b8152602060048201526015602482015274506c6179657220616c72656164792065786973747360581b60448201526064015b60405180910390fd5b604051806101400160405280600181526020015f81526020016064815260200160328152602001600a81526020016005815260200160038152602001600281526020015f67ffffffffffffffff8111156109e7576109e7611f1f565b604051908082528060200260200182016040528015610a10578160200160208202803683370190505b5081526020015f604051908082528060200260200182016040528015610a40578160200160208202803683370190505b509052335f90815260036020818152604092839020845181558482015160018201559284015160028401556060840151918301919091556080830151600483015560a0830151600583015560c0830151600683015560e083015160078301556101008301518051610ab79260088501920190611e48565b506101208201518051610ad4916009840191602090910190611e48565b50506040513391507fb4cca19a27ce42915c3cee0cee28fc5d90969ee49f09ec71659546a63b5f7bc0905f90a2565b610b0b611941565b610b14826119e7565b6107a58282611a11565b5f80516020612659833981519152610b35816117be565b5f6001600160a01b0316600684604051610b4f9190612403565b908152604051908190036020019020546001600160a01b031614610bac5760405162461bcd60e51b81526020600482015260146024820152734775696c6420616c72656164792065786973747360601b6044820152606401610982565b604080516060810182528481526001600160a01b0384166020820152815160018082528184018452919283019181602001602082028036833750505090526001600160a01b0383165f90815260056020526040902081518190610c0f908261252a565b506020828101516001830180546001600160a01b0319166001600160a01b0390921691909117905560408301518051610c4e9260028501920190611e91565b5050506001600160a01b0382165f9081526005602052604081206002018054849290610c7c57610c7c6123d8565b905f5260205f20015f6101000a8154816001600160a01b0302191690836001600160a01b0316021790555081600684604051610cb89190612403565b90815260405190819003602001812080546001600160a01b03939093166001600160a01b0319909316929092179091557f072208535a97b2e307167838c66aacd47f8de3a2cb92bc2ddb2b2b52009c9fd590610d179085908590612214565b60405180910390a1505050565b5f610d2d611acd565b505f8051602061267983398151915290565b5f80516020612659833981519152610d56816117be565b335f908152600460208181526040808420815160808101835289815280840189905291820187905260608201859052805460018101825590855291909320835191909202909101908190610daa908261252a565b5060208201516001820190610dbf908261252a565b50604082015160028201556060909101516003909101805460ff191691151591909117905550505050565b5f818152600760209081526040808320815181546060948102820185018452928101838152909391928492849190840182828015610e4557602002820191905f5260205f20905b815481526020019060010190808311610e31575b5050505050815260200160018201548152505090505f815f01515111610e9e5760405162461bcd60e51b815260206004820152600e60248201526d496e76616c69642072656369706560901b6044820152606401610982565b5f5b815151811015610f9f575f805b335f90815260036020526040902060080154811015610f38578351805184908110610eda57610eda6123d8565b602002602001015160035f336001600160a01b03166001600160a01b031681526020019081526020015f206008018281548110610f1957610f196123d8565b905f5260205f20015403610f305760019150610f38565b600101610ead565b5080610f965760405162461bcd60e51b815260206004820152602760248201527f506c6179657220646f6573206e6f74206861766520616c6c207265717569726560448201526664206974656d7360c81b6064820152608401610982565b50600101610ea0565b505f5b8151518110156110dd575f5b335f908152600360205260409020600801548110156110d4578251805183908110610fdb57610fdb6123d8565b602002602001015160035f336001600160a01b03166001600160a01b031681526020019081526020015f20600801828154811061101a5761101a6123d8565b905f5260205f200154036110cc57335f90815260036020526040902060080180546110479060019061261a565b81548110611057576110576123d8565b5f91825260208083209091015433835260039091526040909120600801805483908110611086576110866123d8565b5f9182526020808320909101929092553381526003909152604090206008018054806110b4576110b461262d565b600190038181905f5260205f20015f905590556110d4565b600101610fae565b50600101610fa2565b50335f908152600360209081526040822092810151600890930180546001810182559083529120015550565b5f80516020612699833981519152611120816117be565b61092f611b16565b5f9182525f805160206126b9833981519152602090815260408084206001600160a01b0393909316845291905290205460ff1690565b60056020525f90815260409020805481906111789061240e565b80601f01602080910402602001604051908101604052809291908181526020018280546111a49061240e565b80156111ef5780601f106111c6576101008083540402835291602001916111ef565b820191905f5260205f20905b8154815290600101906020018083116111d257829003601f168201915b505050600190930154919250506001600160a01b031682565b5f8051602061265983398151915261121f816117be565b60408051808201825284815260208082018590526001545f908152600782529290922081518051929391926112579284920190611e48565b5060209182015160019182015554604080519182529181018490527f9becfd2b1fc8127387c5b0002a6cbc8382e6c8fb9f76dfd6cfd92cbe94383d0e910160405180910390a160018054905f6112ac83612602565b9190505550505050565b60026020525f9081526040902080546001820180549192916112d79061240e565b80601f01602080910402602001604051908101604052809291908181526020018280546113039061240e565b801561134e5780601f106113255761010080835404028352916020019161134e565b820191905f5260205f20905b81548152906001019060200180831161133157829003601f168201915b5050505050908060020154908060030154908060040154908060050154905086565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff165f811580156113b55750825b90505f8267ffffffffffffffff1660011480156113d15750303b155b9050811580156113df575080155b156113fd5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561142757845460ff60401b1916600160401b1785555b61142f611b5e565b611437611b6e565b61143f611b6e565b6114495f896117c8565b506114615f80516020612699833981519152886117c8565b5061148c7f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3876117c8565b506114a45f80516020612659833981519152896117c8565b5083156114eb57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b5050505050505050565b6004602052815f5260405f20818154811061150e575f80fd5b905f5260205f2090600402015f9150915050805f01805461152e9061240e565b80601f016020809104026020016040519081016040528092919081815260200182805461155a9061240e565b80156115a55780601f1061157c576101008083540402835291602001916115a5565b820191905f5260205f20905b81548152906001019060200180831161158857829003601f168201915b5050505050908060010180546115ba9061240e565b80601f01602080910402602001604051908101604052809291908181526020018280546115e69061240e565b80156116315780601f1061160857610100808354040283529160200191611631565b820191905f5260205f20905b81548152906001019060200180831161161457829003601f168201915b50505050600283015460039093015491929160ff16905084565b611654826107a9565b61165d816117be565b6107e58383611869565b5f6006826040516116789190612403565b908152604051908190036020019020546001600160a01b03169050806116d75760405162461bcd60e51b815260206004820152601460248201527311dd5a5b1908191bd95cc81b9bdd08195e1a5cdd60621b6044820152606401610982565b6001600160a01b0381165f908152600560205260408120905b600282015481101561179457336001600160a01b031682600201828154811061171b5761171b6123d8565b5f918252602090912001546001600160a01b03160361178c5760405162461bcd60e51b815260206004820152602760248201527f53656e64657220697320616c72656164792061206d656d626572206f66207468604482015266194819dd5a5b1960ca1b6064820152608401610982565b6001016116f0565b5060020180546001810182555f91825260209091200180546001600160a01b031916331790555050565b61092f8133611b76565b5f5f805160206126b98339815191526117e18484611128565b611860575f848152602082815260408083206001600160a01b03871684529091529020805460ff191660011790556118163390565b6001600160a01b0316836001600160a01b0316857f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4600191505061066d565b5f91505061066d565b5f5f805160206126b98339815191526118828484611128565b15611860575f848152602082815260408083206001600160a01b0387168085529252808320805460ff1916905551339287917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a4600191505061066d565b6118ea611baf565b5f805160206126d9833981519152805460ff191681557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a150565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614806119c757507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166119bb5f80516020612679833981519152546001600160a01b031690565b6001600160a01b031614155b156119e55760405163703e46dd60e11b815260040160405180910390fd5b565b7f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e36107a5816117be565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611a6b575060408051601f3d908101601f19168201909252611a6891810190612641565b60015b611a9357604051634c9c8ce360e01b81526001600160a01b0383166004820152602401610982565b5f805160206126798339815191528114611ac357604051632a87526960e21b815260048101829052602401610982565b61090b8383611bde565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146119e55760405163703e46dd60e11b815260040160405180910390fd5b611b1e611c33565b5f805160206126d9833981519152805460ff191660011781557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833611923565b611b66611c63565b6119e5611cac565b6119e5611c63565b611b808282611128565b6107a55760405163e2517d3f60e01b81526001600160a01b038216600482015260248101839052604401610982565b5f805160206126d98339815191525460ff166119e557604051638dfc202b60e01b815260040160405180910390fd5b611be782611ccc565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a2805115611c2b5761090b8282611d2f565b6107a5611da1565b5f805160206126d98339815191525460ff16156119e55760405163d93c066560e01b815260040160405180910390fd5b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff166119e557604051631afcd79f60e31b815260040160405180910390fd5b611cb4611c63565b5f805160206126d9833981519152805460ff19169055565b806001600160a01b03163b5f03611d0157604051634c9c8ce360e01b81526001600160a01b0382166004820152602401610982565b5f8051602061267983398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b60605f80846001600160a01b031684604051611d4b9190612403565b5f60405180830381855af49150503d805f8114611d83576040519150601f19603f3d011682016040523d82523d5f602084013e611d88565b606091505b5091509150611d98858383611dc0565b95945050505050565b34156119e55760405163b398979f60e01b815260040160405180910390fd5b606082611dd557611dd082611e1f565b611e18565b8151158015611dec57506001600160a01b0384163b155b15611e1557604051639996b31560e01b81526001600160a01b0385166004820152602401610982565b50805b9392505050565b805115611e2f5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b828054828255905f5260205f20908101928215611e81579160200282015b82811115611e81578251825591602001919060010190611e66565b50611e8d929150611ee4565b5090565b828054828255905f5260205f20908101928215611e81579160200282015b82811115611e8157825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190611eaf565b5b80821115611e8d575f8155600101611ee5565b5f60208284031215611f08575f80fd5b81356001600160e01b031981168114611e18575f80fd5b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611f5c57611f5c611f1f565b604052919050565b5f67ffffffffffffffff831115611f7d57611f7d611f1f565b611f90601f8401601f1916602001611f33565b9050828152838383011115611fa3575f80fd5b828260208301375f602084830101529392505050565b5f82601f830112611fc8575f80fd5b611e1883833560208501611f64565b5f60208284031215611fe7575f80fd5b813567ffffffffffffffff811115611ffd575f80fd5b61200984828501611fb9565b949350505050565b5f60208284031215612021575f80fd5b5035919050565b80356001600160a01b038116811461203e575f80fd5b919050565b5f8060408385031215612054575f80fd5b8235915061206460208401612028565b90509250929050565b5f805f805f60a08688031215612081575f80fd5b853567ffffffffffffffff811115612097575f80fd5b6120a388828901611fb9565b9860208801359850604088013597606081013597506080013595509350505050565b5f80604083850312156120d6575f80fd5b6120df83612028565b9150602083013567ffffffffffffffff8111156120fa575f80fd5b8301601f8101851361210a575f80fd5b61211985823560208401611f64565b9150509250929050565b5f8060408385031215612134575f80fd5b823567ffffffffffffffff81111561214a575f80fd5b61215685828601611fb9565b92505061206460208401612028565b5f805f60608486031215612177575f80fd5b833567ffffffffffffffff8082111561218e575f80fd5b61219a87838801611fb9565b945060208601359150808211156121af575f80fd5b506121bc86828701611fb9565b925050604084013590509250925092565b5f602082840312156121dd575f80fd5b611e1882612028565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b604081525f61222660408301856121e6565b905060018060a01b03831660208301529392505050565b5f806040838503121561224e575f80fd5b823567ffffffffffffffff80821115612265575f80fd5b818501915085601f830112612278575f80fd5b813560208282111561228c5761228c611f1f565b8160051b925061229d818401611f33565b82815292840181019281810190898511156122b6575f80fd5b948201945b848610156122d4578535825294820194908201906122bb565b9997909101359750505050505050565b602081525f611e1860208301846121e6565b86815260c060208201525f61230e60c08301886121e6565b90508560408301528460608301528360808301528260a0830152979650505050505050565b5f805f60608486031215612345575f80fd5b61234e84612028565b925061235c60208501612028565b915061236a60408501612028565b90509250925092565b5f8060408385031215612384575f80fd5b61238d83612028565b946020939093013593505050565b608081525f6123ad60808301876121e6565b82810360208401526123bf81876121e6565b6040840195909552505090151560609091015292915050565b634e487b7160e01b5f52603260045260245ffd5b5f81518060208401855e5f93019283525090919050565b5f611e1882846123ec565b600181811c9082168061242257607f821691505b60208210810361244057634e487b7160e01b5f52602260045260245ffd5b50919050565b5f8083546124538161240e565b6001828116801561246b5760018114612480576124ac565b60ff19841687528215158302870194506124ac565b875f526020805f205f5b858110156124a35781548a82015290840190820161248a565b50505082870194505b50929695505050505050565b634e487b7160e01b5f52601160045260245ffd5b8082018082111561066d5761066d6124b8565b601f82111561090b57805f5260205f20601f840160051c810160208510156125045750805b601f840160051c820191505b81811015612523575f8155600101612510565b5050505050565b815167ffffffffffffffff81111561254457612544611f1f565b61255881612552845461240e565b846124df565b602080601f83116001811461258b575f84156125745750858301515b5f19600386901b1c1916600185901b1785556125e2565b5f85815260208120601f198616915b828110156125b95788860151825594840194600190910190840161259a565b50858210156125d657878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b828152604060208201525f61200960408301846121e6565b5f60018201612613576126136124b8565b5060010190565b8181038181111561066d5761066d6124b8565b634e487b7160e01b5f52603160045260245ffd5b5f60208284031215612651575f80fd5b505191905056fe9b7946abd96dccbe6cfc6cc2c13300ab429d93e16fa72dc459eeccda73817f08360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800cd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300a2646970667358221220ea2b3697326adffd8de11773ad2c8d3456aac56c13e47a40f02f25681bd8a0f164736f6c63430008190033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH1 0x80 MSTORE PUSH1 0x1 PUSH0 DUP2 SWAP1 SSTORE DUP1 SSTORE CALLVALUE DUP1 ISZERO PUSH1 0x1A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x80 MLOAD PUSH2 0x272E PUSH2 0x41 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x194C ADD MSTORE DUP2 DUP2 PUSH2 0x1975 ADD MSTORE PUSH2 0x1AD8 ADD MSTORE PUSH2 0x272E PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C5 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8456CB59 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0xBFB231D2 GT PUSH2 0x92 JUMPI DUP1 PUSH4 0xE2EB41FF GT PUSH2 0x62 JUMPI DUP1 PUSH4 0xE2EB41FF EQ PUSH2 0x532 JUMPI DUP1 PUSH4 0xE551BA4B EQ PUSH2 0x5CB JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x5EA JUMPI DUP1 PUSH4 0xF72C0D8B EQ PUSH2 0x60A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBFB231D2 EQ PUSH2 0x494 JUMPI DUP1 PUSH4 0xC0C53B8B EQ PUSH2 0x4C5 JUMPI DUP1 PUSH4 0xD3DCFF7C EQ PUSH2 0x4E4 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x513 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA75859E1 GT PUSH2 0xCD JUMPI DUP1 PUSH4 0xA75859E1 EQ PUSH2 0x3EB JUMPI DUP1 PUSH4 0xA9834B67 EQ PUSH2 0x418 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x437 JUMPI DUP1 PUSH4 0xBE22D27D EQ PUSH2 0x474 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x3A5 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x3B9 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x3D8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3FA9FCF8 GT PUSH2 0x168 JUMPI DUP1 PUSH4 0x52D1902D GT PUSH2 0x138 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x344 JUMPI DUP1 PUSH4 0x6F347A78 EQ PUSH2 0x367 JUMPI DUP1 PUSH4 0x7309CBBD EQ PUSH2 0x386 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3FA9FCF8 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0x443C227C EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0x4FA4A1BB EQ PUSH2 0x311 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x31FEE8BE EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x289 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x2A8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x17435E1A EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x21E JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E8 PUSH2 0x1E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EF8 JUMP JUMPDEST PUSH2 0x63D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x208 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21C PUSH2 0x217 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FD7 JUMP JUMPDEST PUSH2 0x673 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x229 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x23D PUSH2 0x238 CALLDATASIZE PUSH1 0x4 PUSH2 0x2011 JUMP JUMPDEST PUSH2 0x7A9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x256 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21C PUSH2 0x265 CALLDATASIZE PUSH1 0x4 PUSH2 0x2043 JUMP JUMPDEST PUSH2 0x7C9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x275 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21C PUSH2 0x284 CALLDATASIZE PUSH1 0x4 PUSH2 0x206D JUMP JUMPDEST PUSH2 0x7EB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x294 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21C PUSH2 0x2A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2043 JUMP JUMPDEST PUSH2 0x8D8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21C PUSH2 0x910 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21C PUSH2 0x932 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x23D PUSH2 0x2EA CALLDATASIZE PUSH1 0x4 PUSH2 0x2011 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 JUMP JUMPDEST PUSH2 0x21C PUSH2 0x30C CALLDATASIZE PUSH1 0x4 PUSH2 0x20C5 JUMP JUMPDEST PUSH2 0xB03 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21C PUSH2 0x32B CALLDATASIZE PUSH1 0x4 PUSH2 0x2123 JUMP JUMPDEST PUSH2 0xB1E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x23D PUSH2 0xD24 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x26D9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF AND PUSH2 0x1E8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x372 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21C PUSH2 0x381 CALLDATASIZE PUSH1 0x4 PUSH2 0x2165 JUMP JUMPDEST PUSH2 0xD3F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x391 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21C PUSH2 0x3A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2011 JUMP JUMPDEST PUSH2 0xDEA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21C PUSH2 0x1109 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E8 PUSH2 0x3D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2043 JUMP JUMPDEST PUSH2 0x1128 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x23D PUSH0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x40A PUSH2 0x405 CALLDATASIZE PUSH1 0x4 PUSH2 0x21CD JUMP JUMPDEST PUSH2 0x115E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP3 SWAP2 SWAP1 PUSH2 0x2214 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x423 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21C PUSH2 0x432 CALLDATASIZE PUSH1 0x4 PUSH2 0x223D JUMP JUMPDEST PUSH2 0x1208 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x442 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x467 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x352E302E3 PUSH1 0xDC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x22E4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x23D PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2659 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4B3 PUSH2 0x4AE CALLDATASIZE PUSH1 0x4 PUSH2 0x2011 JUMP JUMPDEST PUSH2 0x12B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22F6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21C PUSH2 0x4DF CALLDATASIZE PUSH1 0x4 PUSH2 0x2333 JUMP JUMPDEST PUSH2 0x1370 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4EF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x503 PUSH2 0x4FE CALLDATASIZE PUSH1 0x4 PUSH2 0x2373 JUMP JUMPDEST PUSH2 0x14F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x239B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21C PUSH2 0x52D CALLDATASIZE PUSH1 0x4 PUSH2 0x2043 JUMP JUMPDEST PUSH2 0x164B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x590 PUSH2 0x54C CALLDATASIZE PUSH1 0x4 PUSH2 0x21CD JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 DUP1 PUSH1 0x7 ADD SLOAD SWAP1 POP DUP9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP9 DUP10 MSTORE PUSH1 0x20 DUP10 ADD SWAP8 SWAP1 SWAP8 MSTORE SWAP6 DUP8 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x60 DUP7 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 ADD PUSH2 0x1F4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21C PUSH2 0x5E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FD7 JUMP JUMPDEST PUSH2 0x1667 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x23D PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2699 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x615 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x23D PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x66D JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0x7A5 JUMPI CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0x6AB JUMPI PUSH2 0x6AB PUSH2 0x23D8 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6CA SWAP2 SWAP1 PUSH2 0x2403 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 SWAP2 PUSH2 0x6F0 SWAP2 DUP5 SWAP2 ADD PUSH2 0x2446 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ DUP1 ISZERO PUSH2 0x718 JUMPI POP PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x79C JUMPI PUSH1 0x3 DUP1 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP4 ADD SLOAD CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP1 SWAP2 ADD DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x758 SWAP1 DUP5 SWAP1 PUSH2 0x24CC JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD CALLER SWAP1 PUSH32 0xBE21664565742A9F42CBB6D005F92DB59C7BCAD35B12EF5B57B79E75676B247A SWAP1 PUSH2 0x78F SWAP1 DUP7 SWAP1 PUSH2 0x22E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x675 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x26B9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x7D2 DUP3 PUSH2 0x7A9 JUMP JUMPDEST PUSH2 0x7DB DUP2 PUSH2 0x17BE JUMP JUMPDEST PUSH2 0x7E5 DUP4 DUP4 PUSH2 0x17C8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2659 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x802 DUP2 PUSH2 0x17BE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH0 DUP1 SLOAD DUP1 DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 ADD DUP12 DUP2 MSTORE DUP5 DUP7 ADD DUP12 SWAP1 MSTORE PUSH1 0x60 DUP6 ADD DUP11 SWAP1 MSTORE PUSH1 0x80 DUP6 ADD DUP10 SWAP1 MSTORE PUSH1 0xA0 DUP6 ADD DUP9 SWAP1 MSTORE SWAP2 DUP4 MSTORE PUSH1 0x2 SWAP1 MSTORE SWAP3 SWAP1 KECCAK256 DUP2 MLOAD DUP2 SSTORE SWAP2 MLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x1 DUP3 ADD SWAP1 PUSH2 0x857 SWAP1 DUP3 PUSH2 0x252A JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE SWAP1 POP POP PUSH32 0x78D68BA0E8C23B92E7C700D99EFED2719520CBD4AF845B2C03AE251F9CDF3D52 PUSH0 SLOAD DUP8 PUSH1 0x40 MLOAD PUSH2 0x8B5 SWAP3 SWAP2 SWAP1 PUSH2 0x25EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH0 DUP1 SLOAD SWAP1 DUP1 PUSH2 0x8CB DUP4 PUSH2 0x2602 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x901 JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x90B DUP3 DUP3 PUSH2 0x1869 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2699 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x927 DUP2 PUSH2 0x17BE JUMP JUMPDEST PUSH2 0x92F PUSH2 0x18E2 JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x98B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x506C6179657220616C726561647920657869737473 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x64 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x32 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9E7 JUMPI PUSH2 0x9E7 PUSH2 0x1F1F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA10 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA40 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 MSTORE CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP5 MLOAD DUP2 SSTORE DUP5 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE SWAP3 DUP5 ADD MLOAD PUSH1 0x2 DUP5 ADD SSTORE PUSH1 0x60 DUP5 ADD MLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x4 DUP4 ADD SSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0x5 DUP4 ADD SSTORE PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0x6 DUP4 ADD SSTORE PUSH1 0xE0 DUP4 ADD MLOAD PUSH1 0x7 DUP4 ADD SSTORE PUSH2 0x100 DUP4 ADD MLOAD DUP1 MLOAD PUSH2 0xAB7 SWAP3 PUSH1 0x8 DUP6 ADD SWAP3 ADD SWAP1 PUSH2 0x1E48 JUMP JUMPDEST POP PUSH2 0x120 DUP3 ADD MLOAD DUP1 MLOAD PUSH2 0xAD4 SWAP2 PUSH1 0x9 DUP5 ADD SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1E48 JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD CALLER SWAP2 POP PUSH32 0xB4CCA19A27CE42915C3CEE0CEE28FC5D90969EE49F09EC71659546A63B5F7BC0 SWAP1 PUSH0 SWAP1 LOG2 JUMP JUMPDEST PUSH2 0xB0B PUSH2 0x1941 JUMP JUMPDEST PUSH2 0xB14 DUP3 PUSH2 0x19E7 JUMP JUMPDEST PUSH2 0x7A5 DUP3 DUP3 PUSH2 0x1A11 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2659 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xB35 DUP2 PUSH2 0x17BE JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x6 DUP5 PUSH1 0x40 MLOAD PUSH2 0xB4F SWAP2 SWAP1 PUSH2 0x2403 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xBAC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4775696C6420616C726561647920657869737473 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x982 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE DUP2 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP5 ADD DUP5 MSTORE SWAP2 SWAP3 DUP4 ADD SWAP2 DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP POP SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 MLOAD DUP2 SWAP1 PUSH2 0xC0F SWAP1 DUP3 PUSH2 0x252A JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x1 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 DUP4 ADD MLOAD DUP1 MLOAD PUSH2 0xC4E SWAP3 PUSH1 0x2 DUP6 ADD SWAP3 ADD SWAP1 PUSH2 0x1E91 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xC7C JUMPI PUSH2 0xC7C PUSH2 0x23D8 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x6 DUP5 PUSH1 0x40 MLOAD PUSH2 0xCB8 SWAP2 SWAP1 PUSH2 0x2403 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH32 0x72208535A97B2E307167838C66AACD47F8DE3A2CB92BC2DDB2B2B52009C9FD5 SWAP1 PUSH2 0xD17 SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH2 0x2214 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD2D PUSH2 0x1ACD JUMP JUMPDEST POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2679 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2659 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xD56 DUP2 PUSH2 0x17BE JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 MLOAD PUSH1 0x80 DUP2 ADD DUP4 MSTORE DUP10 DUP2 MSTORE DUP1 DUP5 ADD DUP10 SWAP1 MSTORE SWAP2 DUP3 ADD DUP8 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD DUP6 SWAP1 MSTORE DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP6 MSTORE SWAP2 SWAP1 SWAP4 KECCAK256 DUP4 MLOAD SWAP2 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD SWAP1 DUP2 SWAP1 PUSH2 0xDAA SWAP1 DUP3 PUSH2 0x252A JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SWAP1 PUSH2 0xDBF SWAP1 DUP3 PUSH2 0x252A JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x60 SWAP1 SWAP2 ADD MLOAD PUSH1 0x3 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD DUP2 SLOAD PUSH1 0x60 SWAP5 DUP2 MUL DUP3 ADD DUP6 ADD DUP5 MSTORE SWAP3 DUP2 ADD DUP4 DUP2 MSTORE SWAP1 SWAP4 SWAP2 SWAP3 DUP5 SWAP3 DUP5 SWAP2 SWAP1 DUP5 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xE45 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xE31 JUMPI JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH0 DUP2 PUSH0 ADD MLOAD MLOAD GT PUSH2 0xE9E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x496E76616C696420726563697065 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x982 JUMP JUMPDEST PUSH0 JUMPDEST DUP2 MLOAD MLOAD DUP2 LT ISZERO PUSH2 0xF9F JUMPI PUSH0 DUP1 JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD DUP2 LT ISZERO PUSH2 0xF38 JUMPI DUP4 MLOAD DUP1 MLOAD DUP5 SWAP1 DUP2 LT PUSH2 0xEDA JUMPI PUSH2 0xEDA PUSH2 0x23D8 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x3 PUSH0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x8 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xF19 JUMPI PUSH2 0xF19 PUSH2 0x23D8 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SUB PUSH2 0xF30 JUMPI PUSH1 0x1 SWAP2 POP PUSH2 0xF38 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xEAD JUMP JUMPDEST POP DUP1 PUSH2 0xF96 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506C6179657220646F6573206E6F74206861766520616C6C2072657175697265 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x64206974656D73 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x982 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0xEA0 JUMP JUMPDEST POP PUSH0 JUMPDEST DUP2 MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x10DD JUMPI PUSH0 JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD DUP2 LT ISZERO PUSH2 0x10D4 JUMPI DUP3 MLOAD DUP1 MLOAD DUP4 SWAP1 DUP2 LT PUSH2 0xFDB JUMPI PUSH2 0xFDB PUSH2 0x23D8 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x3 PUSH0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x8 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x101A JUMPI PUSH2 0x101A PUSH2 0x23D8 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SUB PUSH2 0x10CC JUMPI CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH2 0x1047 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x261A JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1057 JUMPI PUSH2 0x1057 PUSH2 0x23D8 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD CALLER DUP4 MSTORE PUSH1 0x3 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0x1086 JUMPI PUSH2 0x1086 PUSH2 0x23D8 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE CALLER DUP2 MSTORE PUSH1 0x3 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD DUP1 PUSH2 0x10B4 JUMPI PUSH2 0x10B4 PUSH2 0x262D JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SSTORE SWAP1 SSTORE PUSH2 0x10D4 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xFAE JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0xFA2 JUMP JUMPDEST POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP3 DUP2 ADD MLOAD PUSH1 0x8 SWAP1 SWAP4 ADD DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP4 MSTORE SWAP2 KECCAK256 ADD SSTORE POP JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2699 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1120 DUP2 PUSH2 0x17BE JUMP JUMPDEST PUSH2 0x92F PUSH2 0x1B16 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x26B9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP2 SWAP1 PUSH2 0x1178 SWAP1 PUSH2 0x240E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x11A4 SWAP1 PUSH2 0x240E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x11EF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x11C6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x11EF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x11D2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x1 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2659 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x121F DUP2 PUSH2 0x17BE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 SLOAD PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 DUP3 MSTORE SWAP3 SWAP1 SWAP3 KECCAK256 DUP2 MLOAD DUP1 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH2 0x1257 SWAP3 DUP5 SWAP3 ADD SWAP1 PUSH2 0x1E48 JUMP JUMPDEST POP PUSH1 0x20 SWAP2 DUP3 ADD MLOAD PUSH1 0x1 SWAP2 DUP3 ADD SSTORE SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE SWAP2 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x9BECFD2B1FC8127387C5B0002A6CBC8382E6C8FB9F76DFD6CFD92CBE94383D0E SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 DUP1 SLOAD SWAP1 PUSH0 PUSH2 0x12AC DUP4 PUSH2 0x2602 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD SWAP2 SWAP3 SWAP2 PUSH2 0x12D7 SWAP1 PUSH2 0x240E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1303 SWAP1 PUSH2 0x240E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x134E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1325 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x134E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1331 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 POP DUP7 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x13B5 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x13D1 JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x13DF JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x13FD JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x1427 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0x142F PUSH2 0x1B5E JUMP JUMPDEST PUSH2 0x1437 PUSH2 0x1B6E JUMP JUMPDEST PUSH2 0x143F PUSH2 0x1B6E JUMP JUMPDEST PUSH2 0x1449 PUSH0 DUP10 PUSH2 0x17C8 JUMP JUMPDEST POP PUSH2 0x1461 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2699 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP9 PUSH2 0x17C8 JUMP JUMPDEST POP PUSH2 0x148C PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 DUP8 PUSH2 0x17C8 JUMP JUMPDEST POP PUSH2 0x14A4 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2659 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP10 PUSH2 0x17C8 JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x14EB JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x150E JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH0 SWAP2 POP SWAP2 POP POP DUP1 PUSH0 ADD DUP1 SLOAD PUSH2 0x152E SWAP1 PUSH2 0x240E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x155A SWAP1 PUSH2 0x240E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x15A5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x157C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x15A5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1588 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x15BA SWAP1 PUSH2 0x240E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x15E6 SWAP1 PUSH2 0x240E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1631 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1608 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1631 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1614 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 SWAP2 PUSH1 0xFF AND SWAP1 POP DUP5 JUMP JUMPDEST PUSH2 0x1654 DUP3 PUSH2 0x7A9 JUMP JUMPDEST PUSH2 0x165D DUP2 PUSH2 0x17BE JUMP JUMPDEST PUSH2 0x7E5 DUP4 DUP4 PUSH2 0x1869 JUMP JUMPDEST PUSH0 PUSH1 0x6 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1678 SWAP2 SWAP1 PUSH2 0x2403 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP1 PUSH2 0x16D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x11DD5A5B1908191BD95CC81B9BDD08195E1A5CDD PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x982 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 JUMPDEST PUSH1 0x2 DUP3 ADD SLOAD DUP2 LT ISZERO PUSH2 0x1794 JUMPI CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x2 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x171B JUMPI PUSH2 0x171B PUSH2 0x23D8 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x178C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656E64657220697320616C72656164792061206D656D626572206F66207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x194819DD5A5B19 PUSH1 0xCA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x982 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x16F0 JUMP JUMPDEST POP PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x92F DUP2 CALLER PUSH2 0x1B76 JUMP JUMPDEST PUSH0 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x26B9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x17E1 DUP5 DUP5 PUSH2 0x1128 JUMP JUMPDEST PUSH2 0x1860 JUMPI PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x1816 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x66D JUMP JUMPDEST PUSH0 SWAP2 POP POP PUSH2 0x66D JUMP JUMPDEST PUSH0 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x26B9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1882 DUP5 DUP5 PUSH2 0x1128 JUMP JUMPDEST ISZERO PUSH2 0x1860 JUMPI PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP8 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x66D JUMP JUMPDEST PUSH2 0x18EA PUSH2 0x1BAF JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x26D9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0x19C7 JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x19BB PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2679 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x19E5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 PUSH2 0x7A5 DUP2 PUSH2 0x17BE JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1A6B JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1A68 SWAP2 DUP2 ADD SWAP1 PUSH2 0x2641 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1A93 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x982 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2679 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0x1AC3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x982 JUMP JUMPDEST PUSH2 0x90B DUP4 DUP4 PUSH2 0x1BDE JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x19E5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B1E PUSH2 0x1C33 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x26D9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR DUP2 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 CALLER PUSH2 0x1923 JUMP JUMPDEST PUSH2 0x1B66 PUSH2 0x1C63 JUMP JUMPDEST PUSH2 0x19E5 PUSH2 0x1CAC JUMP JUMPDEST PUSH2 0x19E5 PUSH2 0x1C63 JUMP JUMPDEST PUSH2 0x1B80 DUP3 DUP3 PUSH2 0x1128 JUMP JUMPDEST PUSH2 0x7A5 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x982 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x26D9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF AND PUSH2 0x19E5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1BE7 DUP3 PUSH2 0x1CCC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x1C2B JUMPI PUSH2 0x90B DUP3 DUP3 PUSH2 0x1D2F JUMP JUMPDEST PUSH2 0x7A5 PUSH2 0x1DA1 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x26D9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x19E5 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x19E5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1CB4 PUSH2 0x1C63 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x26D9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH0 SUB PUSH2 0x1D01 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x982 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2679 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x1D4B SWAP2 SWAP1 PUSH2 0x2403 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1D83 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1D88 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1D98 DUP6 DUP4 DUP4 PUSH2 0x1DC0 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x19E5 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x1DD5 JUMPI PUSH2 0x1DD0 DUP3 PUSH2 0x1E1F JUMP JUMPDEST PUSH2 0x1E18 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x1DEC JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x1E15 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x982 JUMP JUMPDEST POP DUP1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x1E2F JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x1E81 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1E81 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1E66 JUMP JUMPDEST POP PUSH2 0x1E8D SWAP3 SWAP2 POP PUSH2 0x1EE4 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x1E81 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1E81 JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1EAF JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1E8D JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1EE5 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F08 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1E18 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1F5C JUMPI PUSH2 0x1F5C PUSH2 0x1F1F JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x1F7D JUMPI PUSH2 0x1F7D PUSH2 0x1F1F JUMP JUMPDEST PUSH2 0x1F90 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x1F33 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE DUP4 DUP4 DUP4 ADD GT ISZERO PUSH2 0x1FA3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 DUP3 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1FC8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1E18 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x1F64 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FE7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1FFD JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x2009 DUP5 DUP3 DUP6 ADD PUSH2 0x1FB9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2021 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x203E JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2054 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x2064 PUSH1 0x20 DUP5 ADD PUSH2 0x2028 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2081 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2097 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x20A3 DUP9 DUP3 DUP10 ADD PUSH2 0x1FB9 JUMP JUMPDEST SWAP9 PUSH1 0x20 DUP9 ADD CALLDATALOAD SWAP9 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP8 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP8 POP PUSH1 0x80 ADD CALLDATALOAD SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x20DF DUP4 PUSH2 0x2028 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20FA JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x210A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x2119 DUP6 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1F64 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2134 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x214A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x2156 DUP6 DUP3 DUP7 ADD PUSH2 0x1FB9 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x2064 PUSH1 0x20 DUP5 ADD PUSH2 0x2028 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2177 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x218E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x219A DUP8 DUP4 DUP9 ADD PUSH2 0x1FB9 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x21AF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21BC DUP7 DUP3 DUP8 ADD PUSH2 0x1FB9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21DD JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1E18 DUP3 PUSH2 0x2028 JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH0 PUSH2 0x2226 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x21E6 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x224E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2265 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2278 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 DUP3 DUP3 GT ISZERO PUSH2 0x228C JUMPI PUSH2 0x228C PUSH2 0x1F1F JUMP JUMPDEST DUP2 PUSH1 0x5 SHL SWAP3 POP PUSH2 0x229D DUP2 DUP5 ADD PUSH2 0x1F33 JUMP JUMPDEST DUP3 DUP2 MSTORE SWAP3 DUP5 ADD DUP2 ADD SWAP3 DUP2 DUP2 ADD SWAP1 DUP10 DUP6 GT ISZERO PUSH2 0x22B6 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP5 DUP7 LT ISZERO PUSH2 0x22D4 JUMPI DUP6 CALLDATALOAD DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x22BB JUMP JUMPDEST SWAP10 SWAP8 SWAP1 SWAP2 ADD CALLDATALOAD SWAP8 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x1E18 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x21E6 JUMP JUMPDEST DUP7 DUP2 MSTORE PUSH1 0xC0 PUSH1 0x20 DUP3 ADD MSTORE PUSH0 PUSH2 0x230E PUSH1 0xC0 DUP4 ADD DUP9 PUSH2 0x21E6 JUMP JUMPDEST SWAP1 POP DUP6 PUSH1 0x40 DUP4 ADD MSTORE DUP5 PUSH1 0x60 DUP4 ADD MSTORE DUP4 PUSH1 0x80 DUP4 ADD MSTORE DUP3 PUSH1 0xA0 DUP4 ADD MSTORE SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2345 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x234E DUP5 PUSH2 0x2028 JUMP JUMPDEST SWAP3 POP PUSH2 0x235C PUSH1 0x20 DUP6 ADD PUSH2 0x2028 JUMP JUMPDEST SWAP2 POP PUSH2 0x236A PUSH1 0x40 DUP6 ADD PUSH2 0x2028 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2384 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x238D DUP4 PUSH2 0x2028 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH0 PUSH2 0x23AD PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x21E6 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x23BF DUP2 DUP8 PUSH2 0x21E6 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD SWAP6 SWAP1 SWAP6 MSTORE POP POP SWAP1 ISZERO ISZERO PUSH1 0x60 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 MLOAD DUP1 PUSH1 0x20 DUP5 ADD DUP6 MCOPY PUSH0 SWAP4 ADD SWAP3 DUP4 MSTORE POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E18 DUP3 DUP5 PUSH2 0x23EC JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2422 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2440 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP4 SLOAD PUSH2 0x2453 DUP2 PUSH2 0x240E JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0x246B JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x2480 JUMPI PUSH2 0x24AC JUMP JUMPDEST PUSH1 0xFF NOT DUP5 AND DUP8 MSTORE DUP3 ISZERO ISZERO DUP4 MUL DUP8 ADD SWAP5 POP PUSH2 0x24AC JUMP JUMPDEST DUP8 PUSH0 MSTORE PUSH1 0x20 DUP1 PUSH0 KECCAK256 PUSH0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x24A3 JUMPI DUP2 SLOAD DUP11 DUP3 ADD MSTORE SWAP1 DUP5 ADD SWAP1 DUP3 ADD PUSH2 0x248A JUMP JUMPDEST POP POP POP DUP3 DUP8 ADD SWAP5 POP JUMPDEST POP SWAP3 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x66D JUMPI PUSH2 0x66D PUSH2 0x24B8 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x90B JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2504 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2523 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2510 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2544 JUMPI PUSH2 0x2544 PUSH2 0x1F1F JUMP JUMPDEST PUSH2 0x2558 DUP2 PUSH2 0x2552 DUP5 SLOAD PUSH2 0x240E JUMP JUMPDEST DUP5 PUSH2 0x24DF JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x258B JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2574 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x25E2 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x25B9 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x259A JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x25D6 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH0 PUSH2 0x2009 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x21E6 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x2613 JUMPI PUSH2 0x2613 PUSH2 0x24B8 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x66D JUMPI PUSH2 0x66D PUSH2 0x24B8 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2651 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID SWAP12 PUSH26 0x46ABD96DCCBE6CFC6CC2C13300AB429D93E16FA72DC459EECCDA PUSH20 0x817F08360894A13BA1A3210667C828492DB98DCA RETURNDATACOPY KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC65D7A28E3265B37A647492 SWAP16 CALLER PUSH6 0x21B332C1681B SWAP4 EXTCODEHASH PUSH13 0xB9F3376673440D862A02DD7BC7 0xDE 0xC4 0xDC 0xEE 0xDD 0xA7 PUSH22 0xE58DD541E08A116C6C53815C0BD028192F7B626800CD MCOPY 0xD1 TLOAD PUSH15 0x187E77E9AEE88184C21F4F2182AB58 0x27 0xCB EXTCODESIZE PUSH31 0x7FBEDCD63F03300A2646970667358221220EA2B3697326ADFFD8DE11773AD 0x2C DUP14 CALLVALUE JUMP 0xAA 0xC5 PUSH13 0x13E47A40F02F25681BD8A0F164 PUSH20 0x6F6C634300081900330000000000000000000000 ",
							"sourceMap": "420:6116:13:-:0;;;1171:4:2;1128:48;;1512:1:13;1486:27;;;;1519:29;;420:6116;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEFAULT_ADMIN_ROLE_28": {
									"entryPoint": null,
									"id": 28,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@GAME_ADMIN_ROLE_1870": {
									"entryPoint": null,
									"id": 1870,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@PAUSER_ROLE_1860": {
									"entryPoint": null,
									"id": 1860,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@UPGRADER_ROLE_1865": {
									"entryPoint": null,
									"id": 1865,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@UPGRADE_INTERFACE_VERSION_640": {
									"entryPoint": null,
									"id": 640,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__AccessControl_init_63": {
									"entryPoint": 7022,
									"id": 63,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Pausable_init_896": {
									"entryPoint": 7006,
									"id": 896,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Pausable_init_unchained_914": {
									"entryPoint": 7340,
									"id": 914,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__UUPSUpgradeable_init_670": {
									"entryPoint": null,
									"id": 670,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_authorizeUpgrade_2064": {
									"entryPoint": 6631,
									"id": 2064,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkInitializing_538": {
									"entryPoint": 7267,
									"id": 538,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkNonPayable_1455": {
									"entryPoint": 7585,
									"id": 1455,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkNotDelegated_746": {
									"entryPoint": 6861,
									"id": 746,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkProxy_730": {
									"entryPoint": 6465,
									"id": 730,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkRole_129": {
									"entryPoint": 6078,
									"id": 129,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkRole_150": {
									"entryPoint": 7030,
									"id": 150,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_getAccessControlStorage_46": {
									"entryPoint": null,
									"id": 46,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getInitializableStorage_615": {
									"entryPoint": null,
									"id": 615,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getPausableStorage_870": {
									"entryPoint": null,
									"id": 870,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_grantRole_315": {
									"entryPoint": 6088,
									"id": 315,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_isInitializing_606": {
									"entryPoint": null,
									"id": 606,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_826": {
									"entryPoint": null,
									"id": 826,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_995": {
									"entryPoint": 6934,
									"id": 995,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_958": {
									"entryPoint": 7219,
									"id": 958,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_971": {
									"entryPoint": 7087,
									"id": 971,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revert_1718": {
									"entryPoint": 7711,
									"id": 1718,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_revokeRole_361": {
									"entryPoint": 6249,
									"id": 361,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_setImplementation_1241": {
									"entryPoint": 7372,
									"id": 1241,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_unpause_1019": {
									"entryPoint": 6370,
									"id": 1019,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_upgradeToAndCallUUPS_797": {
									"entryPoint": 6673,
									"id": 797,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@addItem_2148": {
									"entryPoint": 2027,
									"id": 2148,
									"parameterSlots": 5,
									"returnSlots": 0
								},
								"@addRecipe_2397": {
									"entryPoint": 4616,
									"id": 2397,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@completeQuest_2248": {
									"entryPoint": 1651,
									"id": 2248,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@craftItem_2565": {
									"entryPoint": 3562,
									"id": 2565,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@createGuild_2305": {
									"entryPoint": 2846,
									"id": 2305,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@createPlayer_2110": {
									"entryPoint": 2354,
									"id": 2110,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@functionDelegateCall_1638": {
									"entryPoint": 7471,
									"id": 1638,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getAddressSlot_1751": {
									"entryPoint": null,
									"id": 1751,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getImplementation_1214": {
									"entryPoint": null,
									"id": 1214,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRoleAdmin_171": {
									"entryPoint": 1961,
									"id": 171,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_190": {
									"entryPoint": 1993,
									"id": 190,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@guilds_1956": {
									"entryPoint": 4446,
									"id": 1956,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@hasRole_116": {
									"entryPoint": 4392,
									"id": 116,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@initialize_2034": {
									"entryPoint": 4976,
									"id": 2034,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@items_1940": {
									"entryPoint": 4790,
									"id": 1940,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@joinGuild_2368": {
									"entryPoint": 5735,
									"id": 2368,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@pause_2044": {
									"entryPoint": 4361,
									"id": 2044,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_946": {
									"entryPoint": null,
									"id": 946,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@playerQuests_1951": {
									"entryPoint": 5365,
									"id": 1951,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@players_1945": {
									"entryPoint": null,
									"id": 1945,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@proxiableUUID_688": {
									"entryPoint": 3364,
									"id": 688,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@recipes_1965": {
									"entryPoint": null,
									"id": 1965,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@renounceRole_232": {
									"entryPoint": 2264,
									"id": 232,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_209": {
									"entryPoint": 5707,
									"id": 209,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@startQuest_2174": {
									"entryPoint": 3391,
									"id": 2174,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@supportsInterface_1059": {
									"entryPoint": null,
									"id": 1059,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_91": {
									"entryPoint": 1597,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@unpause_2054": {
									"entryPoint": 2320,
									"id": 2054,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@upgradeToAndCall_1275": {
									"entryPoint": 7134,
									"id": 1275,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@upgradeToAndCall_708": {
									"entryPoint": 2819,
									"id": 708,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_1678": {
									"entryPoint": 7616,
									"id": 1678,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 8232,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_available_length_string": {
									"entryPoint": 8036,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_string": {
									"entryPoint": 8121,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 8653,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_address": {
									"entryPoint": 9011,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_bytes_memory_ptr": {
									"entryPoint": 8389,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 9075,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptrt_uint256": {
									"entryPoint": 8765,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": 8209,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32_fromMemory": {
									"entryPoint": 9793,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 8259,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 7928,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptr": {
									"entryPoint": 8151,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_string_memory_ptrt_address": {
									"entryPoint": 8483,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256": {
									"entryPoint": 8549,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_string_memory_ptrt_uint256t_uint256t_uint256t_uint256": {
									"entryPoint": 8301,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 5
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string": {
									"entryPoint": 9196,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_string_memory_ptr": {
									"entryPoint": 8678,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 9219,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_string_storage__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 9286,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8932,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr_t_address__to_t_string_memory_ptr_t_address__fromStack_reversed": {
									"entryPoint": 8724,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_bool__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_bool__fromStack_reversed": {
									"entryPoint": 9115,
									"id": null,
									"parameterSlots": 5,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_60488ddff5208baf36b3dd08007032a8dda5e33f922203c6a10ac3af154485c2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6549b2fa5584e8c8ec502931a0b58219efc997d0668f171ad9fa4547ef7827c7__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c02f3e50ed6b54b03eba0a4b156b8b2c122f79039273c822fbda9326f1dec609__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_df115ebb113eb795e874836f8b2917a4781efe582dc2481c741971644f30822e__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e62d5747e47bcd18d9ddf74b7bcef9f67e80418a4c933197d321fea58848ef3f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_ffd94407a19cf8baf61f33fd1e368fd23471d93aa28c06b7e15811441edc47e5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 9706,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": 8950,
									"id": null,
									"parameterSlots": 7,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 9,
									"returnSlots": 1
								},
								"allocate_memory": {
									"entryPoint": 7987,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_dataslot_string_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 9420,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 9754,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_string_storage": {
									"entryPoint": 9439,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage": {
									"entryPoint": 9514,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 9230,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"increment_t_uint256": {
									"entryPoint": 9730,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 9400,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x31": {
									"entryPoint": 9773,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 9176,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7967,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:18185:14",
										"nodeType": "YulBlock",
										"src": "0:18185:14",
										"statements": [
											{
												"nativeSrc": "6:3:14",
												"nodeType": "YulBlock",
												"src": "6:3:14",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "83:217:14",
													"nodeType": "YulBlock",
													"src": "83:217:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "129:16:14",
																"nodeType": "YulBlock",
																"src": "129:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "138:1:14",
																					"nodeType": "YulLiteral",
																					"src": "138:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "141:1:14",
																					"nodeType": "YulLiteral",
																					"src": "141:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "131:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "131:6:14"
																			},
																			"nativeSrc": "131:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "131:12:14"
																		},
																		"nativeSrc": "131:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "131:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "104:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "104:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "113:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "113:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "100:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "100:3:14"
																		},
																		"nativeSrc": "100:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "100:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "125:2:14",
																		"nodeType": "YulLiteral",
																		"src": "125:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "96:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "96:3:14"
																},
																"nativeSrc": "96:32:14",
																"nodeType": "YulFunctionCall",
																"src": "96:32:14"
															},
															"nativeSrc": "93:52:14",
															"nodeType": "YulIf",
															"src": "93:52:14"
														},
														{
															"nativeSrc": "154:36:14",
															"nodeType": "YulVariableDeclaration",
															"src": "154:36:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "180:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "180:9:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "167:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "167:12:14"
																},
																"nativeSrc": "167:23:14",
																"nodeType": "YulFunctionCall",
																"src": "167:23:14"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "158:5:14",
																	"nodeType": "YulTypedName",
																	"src": "158:5:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "254:16:14",
																"nodeType": "YulBlock",
																"src": "254:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "263:1:14",
																					"nodeType": "YulLiteral",
																					"src": "263:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "266:1:14",
																					"nodeType": "YulLiteral",
																					"src": "266:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "256:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:14"
																			},
																			"nativeSrc": "256:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:14"
																		},
																		"nativeSrc": "256:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "212:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "212:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "223:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "223:5:14"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "234:3:14",
																								"nodeType": "YulLiteral",
																								"src": "234:3:14",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "239:10:14",
																								"nodeType": "YulLiteral",
																								"src": "239:10:14",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "230:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "230:3:14"
																						},
																						"nativeSrc": "230:20:14",
																						"nodeType": "YulFunctionCall",
																						"src": "230:20:14"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "219:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "219:3:14"
																				},
																				"nativeSrc": "219:32:14",
																				"nodeType": "YulFunctionCall",
																				"src": "219:32:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "209:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "209:2:14"
																		},
																		"nativeSrc": "209:43:14",
																		"nodeType": "YulFunctionCall",
																		"src": "209:43:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "202:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "202:6:14"
																},
																"nativeSrc": "202:51:14",
																"nodeType": "YulFunctionCall",
																"src": "202:51:14"
															},
															"nativeSrc": "199:71:14",
															"nodeType": "YulIf",
															"src": "199:71:14"
														},
														{
															"nativeSrc": "279:15:14",
															"nodeType": "YulAssignment",
															"src": "279:15:14",
															"value": {
																"name": "value",
																"nativeSrc": "289:5:14",
																"nodeType": "YulIdentifier",
																"src": "289:5:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "279:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "14:286:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "49:9:14",
														"nodeType": "YulTypedName",
														"src": "49:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "60:7:14",
														"nodeType": "YulTypedName",
														"src": "60:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "72:6:14",
														"nodeType": "YulTypedName",
														"src": "72:6:14",
														"type": ""
													}
												],
												"src": "14:286:14"
											},
											{
												"body": {
													"nativeSrc": "400:92:14",
													"nodeType": "YulBlock",
													"src": "400:92:14",
													"statements": [
														{
															"nativeSrc": "410:26:14",
															"nodeType": "YulAssignment",
															"src": "410:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "422:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "422:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "433:2:14",
																		"nodeType": "YulLiteral",
																		"src": "433:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "418:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "418:3:14"
																},
																"nativeSrc": "418:18:14",
																"nodeType": "YulFunctionCall",
																"src": "418:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "410:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "410:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "452:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "452:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "477:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "477:6:14"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "470:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "470:6:14"
																				},
																				"nativeSrc": "470:14:14",
																				"nodeType": "YulFunctionCall",
																				"src": "470:14:14"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "463:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "463:6:14"
																		},
																		"nativeSrc": "463:22:14",
																		"nodeType": "YulFunctionCall",
																		"src": "463:22:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "445:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "445:6:14"
																},
																"nativeSrc": "445:41:14",
																"nodeType": "YulFunctionCall",
																"src": "445:41:14"
															},
															"nativeSrc": "445:41:14",
															"nodeType": "YulExpressionStatement",
															"src": "445:41:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "305:187:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "369:9:14",
														"nodeType": "YulTypedName",
														"src": "369:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "380:6:14",
														"nodeType": "YulTypedName",
														"src": "380:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "391:4:14",
														"nodeType": "YulTypedName",
														"src": "391:4:14",
														"type": ""
													}
												],
												"src": "305:187:14"
											},
											{
												"body": {
													"nativeSrc": "529:95:14",
													"nodeType": "YulBlock",
													"src": "529:95:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "546:1:14",
																		"nodeType": "YulLiteral",
																		"src": "546:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "553:3:14",
																				"nodeType": "YulLiteral",
																				"src": "553:3:14",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "558:10:14",
																				"nodeType": "YulLiteral",
																				"src": "558:10:14",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "549:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "549:3:14"
																		},
																		"nativeSrc": "549:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "549:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "539:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "539:6:14"
																},
																"nativeSrc": "539:31:14",
																"nodeType": "YulFunctionCall",
																"src": "539:31:14"
															},
															"nativeSrc": "539:31:14",
															"nodeType": "YulExpressionStatement",
															"src": "539:31:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "586:1:14",
																		"nodeType": "YulLiteral",
																		"src": "586:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "589:4:14",
																		"nodeType": "YulLiteral",
																		"src": "589:4:14",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "579:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "579:6:14"
																},
																"nativeSrc": "579:15:14",
																"nodeType": "YulFunctionCall",
																"src": "579:15:14"
															},
															"nativeSrc": "579:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "579:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "610:1:14",
																		"nodeType": "YulLiteral",
																		"src": "610:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "613:4:14",
																		"nodeType": "YulLiteral",
																		"src": "613:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "603:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "603:6:14"
																},
																"nativeSrc": "603:15:14",
																"nodeType": "YulFunctionCall",
																"src": "603:15:14"
															},
															"nativeSrc": "603:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "603:15:14"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "497:127:14",
												"nodeType": "YulFunctionDefinition",
												"src": "497:127:14"
											},
											{
												"body": {
													"nativeSrc": "674:230:14",
													"nodeType": "YulBlock",
													"src": "674:230:14",
													"statements": [
														{
															"nativeSrc": "684:19:14",
															"nodeType": "YulAssignment",
															"src": "684:19:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "700:2:14",
																		"nodeType": "YulLiteral",
																		"src": "700:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "694:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "694:5:14"
																},
																"nativeSrc": "694:9:14",
																"nodeType": "YulFunctionCall",
																"src": "694:9:14"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "684:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "684:6:14"
																}
															]
														},
														{
															"nativeSrc": "712:58:14",
															"nodeType": "YulVariableDeclaration",
															"src": "712:58:14",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "734:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "734:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "size",
																						"nativeSrc": "750:4:14",
																						"nodeType": "YulIdentifier",
																						"src": "750:4:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "756:2:14",
																						"nodeType": "YulLiteral",
																						"src": "756:2:14",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "746:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "746:3:14"
																				},
																				"nativeSrc": "746:13:14",
																				"nodeType": "YulFunctionCall",
																				"src": "746:13:14"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "765:2:14",
																						"nodeType": "YulLiteral",
																						"src": "765:2:14",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "761:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "761:3:14"
																				},
																				"nativeSrc": "761:7:14",
																				"nodeType": "YulFunctionCall",
																				"src": "761:7:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "742:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "742:3:14"
																		},
																		"nativeSrc": "742:27:14",
																		"nodeType": "YulFunctionCall",
																		"src": "742:27:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "730:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "730:3:14"
																},
																"nativeSrc": "730:40:14",
																"nodeType": "YulFunctionCall",
																"src": "730:40:14"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "716:10:14",
																	"nodeType": "YulTypedName",
																	"src": "716:10:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "845:22:14",
																"nodeType": "YulBlock",
																"src": "845:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "847:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "847:16:14"
																			},
																			"nativeSrc": "847:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "847:18:14"
																		},
																		"nativeSrc": "847:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "847:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "788:10:14",
																				"nodeType": "YulIdentifier",
																				"src": "788:10:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "800:18:14",
																				"nodeType": "YulLiteral",
																				"src": "800:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "785:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "785:2:14"
																		},
																		"nativeSrc": "785:34:14",
																		"nodeType": "YulFunctionCall",
																		"src": "785:34:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "824:10:14",
																				"nodeType": "YulIdentifier",
																				"src": "824:10:14"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "836:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "836:6:14"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "821:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "821:2:14"
																		},
																		"nativeSrc": "821:22:14",
																		"nodeType": "YulFunctionCall",
																		"src": "821:22:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "782:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "782:2:14"
																},
																"nativeSrc": "782:62:14",
																"nodeType": "YulFunctionCall",
																"src": "782:62:14"
															},
															"nativeSrc": "779:88:14",
															"nodeType": "YulIf",
															"src": "779:88:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "883:2:14",
																		"nodeType": "YulLiteral",
																		"src": "883:2:14",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "887:10:14",
																		"nodeType": "YulIdentifier",
																		"src": "887:10:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "876:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "876:6:14"
																},
																"nativeSrc": "876:22:14",
																"nodeType": "YulFunctionCall",
																"src": "876:22:14"
															},
															"nativeSrc": "876:22:14",
															"nodeType": "YulExpressionStatement",
															"src": "876:22:14"
														}
													]
												},
												"name": "allocate_memory",
												"nativeSrc": "629:275:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "size",
														"nativeSrc": "654:4:14",
														"nodeType": "YulTypedName",
														"src": "654:4:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "663:6:14",
														"nodeType": "YulTypedName",
														"src": "663:6:14",
														"type": ""
													}
												],
												"src": "629:275:14"
											},
											{
												"body": {
													"nativeSrc": "984:332:14",
													"nodeType": "YulBlock",
													"src": "984:332:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "1028:22:14",
																"nodeType": "YulBlock",
																"src": "1028:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "1030:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "1030:16:14"
																			},
																			"nativeSrc": "1030:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1030:18:14"
																		},
																		"nativeSrc": "1030:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "1030:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "1000:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1000:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1008:18:14",
																		"nodeType": "YulLiteral",
																		"src": "1008:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "997:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "997:2:14"
																},
																"nativeSrc": "997:30:14",
																"nodeType": "YulFunctionCall",
																"src": "997:30:14"
															},
															"nativeSrc": "994:56:14",
															"nodeType": "YulIf",
															"src": "994:56:14"
														},
														{
															"nativeSrc": "1059:66:14",
															"nodeType": "YulAssignment",
															"src": "1059:66:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "1096:6:14",
																								"nodeType": "YulIdentifier",
																								"src": "1096:6:14"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "1104:2:14",
																								"nodeType": "YulLiteral",
																								"src": "1104:2:14",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "1092:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "1092:3:14"
																						},
																						"nativeSrc": "1092:15:14",
																						"nodeType": "YulFunctionCall",
																						"src": "1092:15:14"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "1113:2:14",
																								"nodeType": "YulLiteral",
																								"src": "1113:2:14",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "1109:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "1109:3:14"
																						},
																						"nativeSrc": "1109:7:14",
																						"nodeType": "YulFunctionCall",
																						"src": "1109:7:14"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "1088:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "1088:3:14"
																				},
																				"nativeSrc": "1088:29:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1088:29:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1119:4:14",
																				"nodeType": "YulLiteral",
																				"src": "1119:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1084:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1084:3:14"
																		},
																		"nativeSrc": "1084:40:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1084:40:14"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "1068:15:14",
																	"nodeType": "YulIdentifier",
																	"src": "1068:15:14"
																},
																"nativeSrc": "1068:57:14",
																"nodeType": "YulFunctionCall",
																"src": "1068:57:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1059:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "1059:5:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "array",
																		"nativeSrc": "1141:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "1141:5:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1148:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1148:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1134:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1134:6:14"
																},
																"nativeSrc": "1134:21:14",
																"nodeType": "YulFunctionCall",
																"src": "1134:21:14"
															},
															"nativeSrc": "1134:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "1134:21:14"
														},
														{
															"body": {
																"nativeSrc": "1193:16:14",
																"nodeType": "YulBlock",
																"src": "1193:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1202:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1202:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1205:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1205:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1195:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1195:6:14"
																			},
																			"nativeSrc": "1195:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1195:12:14"
																		},
																		"nativeSrc": "1195:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "1195:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "src",
																				"nativeSrc": "1174:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "1174:3:14"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "1179:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1179:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1170:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1170:3:14"
																		},
																		"nativeSrc": "1170:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1170:16:14"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "1188:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "1188:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1167:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "1167:2:14"
																},
																"nativeSrc": "1167:25:14",
																"nodeType": "YulFunctionCall",
																"src": "1167:25:14"
															},
															"nativeSrc": "1164:45:14",
															"nodeType": "YulIf",
															"src": "1164:45:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "array",
																				"nativeSrc": "1235:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "1235:5:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1242:4:14",
																				"nodeType": "YulLiteral",
																				"src": "1242:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1231:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1231:3:14"
																		},
																		"nativeSrc": "1231:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1231:16:14"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "1249:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "1249:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1254:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1254:6:14"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "1218:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "1218:12:14"
																},
																"nativeSrc": "1218:43:14",
																"nodeType": "YulFunctionCall",
																"src": "1218:43:14"
															},
															"nativeSrc": "1218:43:14",
															"nodeType": "YulExpressionStatement",
															"src": "1218:43:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "array",
																						"nativeSrc": "1285:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "1285:5:14"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "1292:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "1292:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1281:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "1281:3:14"
																				},
																				"nativeSrc": "1281:18:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1281:18:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1301:4:14",
																				"nodeType": "YulLiteral",
																				"src": "1301:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1277:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1277:3:14"
																		},
																		"nativeSrc": "1277:29:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1277:29:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1308:1:14",
																		"nodeType": "YulLiteral",
																		"src": "1308:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1270:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1270:6:14"
																},
																"nativeSrc": "1270:40:14",
																"nodeType": "YulFunctionCall",
																"src": "1270:40:14"
															},
															"nativeSrc": "1270:40:14",
															"nodeType": "YulExpressionStatement",
															"src": "1270:40:14"
														}
													]
												},
												"name": "abi_decode_available_length_string",
												"nativeSrc": "909:407:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "953:3:14",
														"nodeType": "YulTypedName",
														"src": "953:3:14",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "958:6:14",
														"nodeType": "YulTypedName",
														"src": "958:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "966:3:14",
														"nodeType": "YulTypedName",
														"src": "966:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "974:5:14",
														"nodeType": "YulTypedName",
														"src": "974:5:14",
														"type": ""
													}
												],
												"src": "909:407:14"
											},
											{
												"body": {
													"nativeSrc": "1374:169:14",
													"nodeType": "YulBlock",
													"src": "1374:169:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "1423:16:14",
																"nodeType": "YulBlock",
																"src": "1423:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1432:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1432:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1435:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1435:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1425:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1425:6:14"
																			},
																			"nativeSrc": "1425:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1425:12:14"
																		},
																		"nativeSrc": "1425:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "1425:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "1402:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "1402:6:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "1410:4:14",
																						"nodeType": "YulLiteral",
																						"src": "1410:4:14",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1398:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "1398:3:14"
																				},
																				"nativeSrc": "1398:17:14",
																				"nodeType": "YulFunctionCall",
																				"src": "1398:17:14"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "1417:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "1417:3:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "1394:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1394:3:14"
																		},
																		"nativeSrc": "1394:27:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1394:27:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1387:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1387:6:14"
																},
																"nativeSrc": "1387:35:14",
																"nodeType": "YulFunctionCall",
																"src": "1387:35:14"
															},
															"nativeSrc": "1384:55:14",
															"nodeType": "YulIf",
															"src": "1384:55:14"
														},
														{
															"nativeSrc": "1448:89:14",
															"nodeType": "YulAssignment",
															"src": "1448:89:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "1496:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1496:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1504:4:14",
																				"nodeType": "YulLiteral",
																				"src": "1504:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1492:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1492:3:14"
																		},
																		"nativeSrc": "1492:17:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1492:17:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "1524:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1524:6:14"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "1511:12:14",
																			"nodeType": "YulIdentifier",
																			"src": "1511:12:14"
																		},
																		"nativeSrc": "1511:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1511:20:14"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "1533:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "1533:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_string",
																	"nativeSrc": "1457:34:14",
																	"nodeType": "YulIdentifier",
																	"src": "1457:34:14"
																},
																"nativeSrc": "1457:80:14",
																"nodeType": "YulFunctionCall",
																"src": "1457:80:14"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "1448:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "1448:5:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_string",
												"nativeSrc": "1321:222:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1348:6:14",
														"nodeType": "YulTypedName",
														"src": "1348:6:14",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1356:3:14",
														"nodeType": "YulTypedName",
														"src": "1356:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "1364:5:14",
														"nodeType": "YulTypedName",
														"src": "1364:5:14",
														"type": ""
													}
												],
												"src": "1321:222:14"
											},
											{
												"body": {
													"nativeSrc": "1628:242:14",
													"nodeType": "YulBlock",
													"src": "1628:242:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "1674:16:14",
																"nodeType": "YulBlock",
																"src": "1674:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1683:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1683:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1686:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1686:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1676:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1676:6:14"
																			},
																			"nativeSrc": "1676:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1676:12:14"
																		},
																		"nativeSrc": "1676:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "1676:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1649:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "1649:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1658:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "1658:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1645:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1645:3:14"
																		},
																		"nativeSrc": "1645:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1645:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1670:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1670:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1641:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1641:3:14"
																},
																"nativeSrc": "1641:32:14",
																"nodeType": "YulFunctionCall",
																"src": "1641:32:14"
															},
															"nativeSrc": "1638:52:14",
															"nodeType": "YulIf",
															"src": "1638:52:14"
														},
														{
															"nativeSrc": "1699:37:14",
															"nodeType": "YulVariableDeclaration",
															"src": "1699:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1726:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "1726:9:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1713:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "1713:12:14"
																},
																"nativeSrc": "1713:23:14",
																"nodeType": "YulFunctionCall",
																"src": "1713:23:14"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "1703:6:14",
																	"nodeType": "YulTypedName",
																	"src": "1703:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "1779:16:14",
																"nodeType": "YulBlock",
																"src": "1779:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1788:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1788:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1791:1:14",
																					"nodeType": "YulLiteral",
																					"src": "1791:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1781:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1781:6:14"
																			},
																			"nativeSrc": "1781:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1781:12:14"
																		},
																		"nativeSrc": "1781:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "1781:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1751:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "1751:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1759:18:14",
																		"nodeType": "YulLiteral",
																		"src": "1759:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "1748:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "1748:2:14"
																},
																"nativeSrc": "1748:30:14",
																"nodeType": "YulFunctionCall",
																"src": "1748:30:14"
															},
															"nativeSrc": "1745:50:14",
															"nodeType": "YulIf",
															"src": "1745:50:14"
														},
														{
															"nativeSrc": "1804:60:14",
															"nodeType": "YulAssignment",
															"src": "1804:60:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1836:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "1836:9:14"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "1847:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1847:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1832:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1832:3:14"
																		},
																		"nativeSrc": "1832:22:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1832:22:14"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "1856:7:14",
																		"nodeType": "YulIdentifier",
																		"src": "1856:7:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nativeSrc": "1814:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "1814:17:14"
																},
																"nativeSrc": "1814:50:14",
																"nodeType": "YulFunctionCall",
																"src": "1814:50:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1804:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1804:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptr",
												"nativeSrc": "1548:322:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1594:9:14",
														"nodeType": "YulTypedName",
														"src": "1594:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1605:7:14",
														"nodeType": "YulTypedName",
														"src": "1605:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1617:6:14",
														"nodeType": "YulTypedName",
														"src": "1617:6:14",
														"type": ""
													}
												],
												"src": "1548:322:14"
											},
											{
												"body": {
													"nativeSrc": "1945:110:14",
													"nodeType": "YulBlock",
													"src": "1945:110:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "1991:16:14",
																"nodeType": "YulBlock",
																"src": "1991:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2000:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2000:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2003:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2003:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1993:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "1993:6:14"
																			},
																			"nativeSrc": "1993:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "1993:12:14"
																		},
																		"nativeSrc": "1993:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "1993:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1966:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "1966:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1975:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "1975:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1962:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "1962:3:14"
																		},
																		"nativeSrc": "1962:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "1962:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1987:2:14",
																		"nodeType": "YulLiteral",
																		"src": "1987:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1958:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "1958:3:14"
																},
																"nativeSrc": "1958:32:14",
																"nodeType": "YulFunctionCall",
																"src": "1958:32:14"
															},
															"nativeSrc": "1955:52:14",
															"nodeType": "YulIf",
															"src": "1955:52:14"
														},
														{
															"nativeSrc": "2016:33:14",
															"nodeType": "YulAssignment",
															"src": "2016:33:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2039:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "2039:9:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2026:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "2026:12:14"
																},
																"nativeSrc": "2026:23:14",
																"nodeType": "YulFunctionCall",
																"src": "2026:23:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2016:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2016:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "1875:180:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1911:9:14",
														"nodeType": "YulTypedName",
														"src": "1911:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1922:7:14",
														"nodeType": "YulTypedName",
														"src": "1922:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1934:6:14",
														"nodeType": "YulTypedName",
														"src": "1934:6:14",
														"type": ""
													}
												],
												"src": "1875:180:14"
											},
											{
												"body": {
													"nativeSrc": "2161:76:14",
													"nodeType": "YulBlock",
													"src": "2161:76:14",
													"statements": [
														{
															"nativeSrc": "2171:26:14",
															"nodeType": "YulAssignment",
															"src": "2171:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2183:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "2183:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2194:2:14",
																		"nodeType": "YulLiteral",
																		"src": "2194:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2179:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2179:3:14"
																},
																"nativeSrc": "2179:18:14",
																"nodeType": "YulFunctionCall",
																"src": "2179:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2171:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "2171:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2213:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "2213:9:14"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "2224:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2224:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2206:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2206:6:14"
																},
																"nativeSrc": "2206:25:14",
																"nodeType": "YulFunctionCall",
																"src": "2206:25:14"
															},
															"nativeSrc": "2206:25:14",
															"nodeType": "YulExpressionStatement",
															"src": "2206:25:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "2060:177:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2130:9:14",
														"nodeType": "YulTypedName",
														"src": "2130:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2141:6:14",
														"nodeType": "YulTypedName",
														"src": "2141:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2152:4:14",
														"nodeType": "YulTypedName",
														"src": "2152:4:14",
														"type": ""
													}
												],
												"src": "2060:177:14"
											},
											{
												"body": {
													"nativeSrc": "2291:124:14",
													"nodeType": "YulBlock",
													"src": "2291:124:14",
													"statements": [
														{
															"nativeSrc": "2301:29:14",
															"nodeType": "YulAssignment",
															"src": "2301:29:14",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2323:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2323:6:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2310:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "2310:12:14"
																},
																"nativeSrc": "2310:20:14",
																"nodeType": "YulFunctionCall",
																"src": "2310:20:14"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2301:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "2301:5:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2393:16:14",
																"nodeType": "YulBlock",
																"src": "2393:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2402:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2402:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2405:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2405:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2395:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2395:6:14"
																			},
																			"nativeSrc": "2395:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2395:12:14"
																		},
																		"nativeSrc": "2395:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2395:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2352:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "2352:5:14"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2363:5:14",
																						"nodeType": "YulIdentifier",
																						"src": "2363:5:14"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "2378:3:14",
																										"nodeType": "YulLiteral",
																										"src": "2378:3:14",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2383:1:14",
																										"nodeType": "YulLiteral",
																										"src": "2383:1:14",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "2374:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "2374:3:14"
																								},
																								"nativeSrc": "2374:11:14",
																								"nodeType": "YulFunctionCall",
																								"src": "2374:11:14"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2387:1:14",
																								"nodeType": "YulLiteral",
																								"src": "2387:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "2370:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "2370:3:14"
																						},
																						"nativeSrc": "2370:19:14",
																						"nodeType": "YulFunctionCall",
																						"src": "2370:19:14"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "2359:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "2359:3:14"
																				},
																				"nativeSrc": "2359:31:14",
																				"nodeType": "YulFunctionCall",
																				"src": "2359:31:14"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2349:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "2349:2:14"
																		},
																		"nativeSrc": "2349:42:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2349:42:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2342:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2342:6:14"
																},
																"nativeSrc": "2342:50:14",
																"nodeType": "YulFunctionCall",
																"src": "2342:50:14"
															},
															"nativeSrc": "2339:70:14",
															"nodeType": "YulIf",
															"src": "2339:70:14"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "2242:173:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2270:6:14",
														"nodeType": "YulTypedName",
														"src": "2270:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2281:5:14",
														"nodeType": "YulTypedName",
														"src": "2281:5:14",
														"type": ""
													}
												],
												"src": "2242:173:14"
											},
											{
												"body": {
													"nativeSrc": "2507:167:14",
													"nodeType": "YulBlock",
													"src": "2507:167:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "2553:16:14",
																"nodeType": "YulBlock",
																"src": "2553:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2562:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2562:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2565:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2565:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2555:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2555:6:14"
																			},
																			"nativeSrc": "2555:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2555:12:14"
																		},
																		"nativeSrc": "2555:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2555:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2528:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "2528:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2537:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "2537:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2524:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2524:3:14"
																		},
																		"nativeSrc": "2524:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2524:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2549:2:14",
																		"nodeType": "YulLiteral",
																		"src": "2549:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2520:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2520:3:14"
																},
																"nativeSrc": "2520:32:14",
																"nodeType": "YulFunctionCall",
																"src": "2520:32:14"
															},
															"nativeSrc": "2517:52:14",
															"nodeType": "YulIf",
															"src": "2517:52:14"
														},
														{
															"nativeSrc": "2578:33:14",
															"nodeType": "YulAssignment",
															"src": "2578:33:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2601:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "2601:9:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2588:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "2588:12:14"
																},
																"nativeSrc": "2588:23:14",
																"nodeType": "YulFunctionCall",
																"src": "2588:23:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2578:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2578:6:14"
																}
															]
														},
														{
															"nativeSrc": "2620:48:14",
															"nodeType": "YulAssignment",
															"src": "2620:48:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2653:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "2653:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2664:2:14",
																				"nodeType": "YulLiteral",
																				"src": "2664:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2649:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2649:3:14"
																		},
																		"nativeSrc": "2649:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2649:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2630:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "2630:18:14"
																},
																"nativeSrc": "2630:38:14",
																"nodeType": "YulFunctionCall",
																"src": "2630:38:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2620:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2620:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "2420:254:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2465:9:14",
														"nodeType": "YulTypedName",
														"src": "2465:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2476:7:14",
														"nodeType": "YulTypedName",
														"src": "2476:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2488:6:14",
														"nodeType": "YulTypedName",
														"src": "2488:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2496:6:14",
														"nodeType": "YulTypedName",
														"src": "2496:6:14",
														"type": ""
													}
												],
												"src": "2420:254:14"
											},
											{
												"body": {
													"nativeSrc": "2827:448:14",
													"nodeType": "YulBlock",
													"src": "2827:448:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "2874:16:14",
																"nodeType": "YulBlock",
																"src": "2874:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2883:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2883:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2886:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2886:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2876:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2876:6:14"
																			},
																			"nativeSrc": "2876:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2876:12:14"
																		},
																		"nativeSrc": "2876:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2876:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2848:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "2848:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2857:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "2857:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2844:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "2844:3:14"
																		},
																		"nativeSrc": "2844:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "2844:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2869:3:14",
																		"nodeType": "YulLiteral",
																		"src": "2869:3:14",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2840:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "2840:3:14"
																},
																"nativeSrc": "2840:33:14",
																"nodeType": "YulFunctionCall",
																"src": "2840:33:14"
															},
															"nativeSrc": "2837:53:14",
															"nodeType": "YulIf",
															"src": "2837:53:14"
														},
														{
															"nativeSrc": "2899:37:14",
															"nodeType": "YulVariableDeclaration",
															"src": "2899:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2926:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "2926:9:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2913:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "2913:12:14"
																},
																"nativeSrc": "2913:23:14",
																"nodeType": "YulFunctionCall",
																"src": "2913:23:14"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "2903:6:14",
																	"nodeType": "YulTypedName",
																	"src": "2903:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2979:16:14",
																"nodeType": "YulBlock",
																"src": "2979:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2988:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2988:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2991:1:14",
																					"nodeType": "YulLiteral",
																					"src": "2991:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2981:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "2981:6:14"
																			},
																			"nativeSrc": "2981:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "2981:12:14"
																		},
																		"nativeSrc": "2981:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "2981:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2951:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "2951:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2959:18:14",
																		"nodeType": "YulLiteral",
																		"src": "2959:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2948:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "2948:2:14"
																},
																"nativeSrc": "2948:30:14",
																"nodeType": "YulFunctionCall",
																"src": "2948:30:14"
															},
															"nativeSrc": "2945:50:14",
															"nodeType": "YulIf",
															"src": "2945:50:14"
														},
														{
															"nativeSrc": "3004:60:14",
															"nodeType": "YulAssignment",
															"src": "3004:60:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3036:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3036:9:14"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3047:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "3047:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3032:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3032:3:14"
																		},
																		"nativeSrc": "3032:22:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3032:22:14"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "3056:7:14",
																		"nodeType": "YulIdentifier",
																		"src": "3056:7:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nativeSrc": "3014:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "3014:17:14"
																},
																"nativeSrc": "3014:50:14",
																"nodeType": "YulFunctionCall",
																"src": "3014:50:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3004:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3004:6:14"
																}
															]
														},
														{
															"nativeSrc": "3073:42:14",
															"nodeType": "YulAssignment",
															"src": "3073:42:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3100:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3100:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3111:2:14",
																				"nodeType": "YulLiteral",
																				"src": "3111:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3096:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3096:3:14"
																		},
																		"nativeSrc": "3096:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3096:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3083:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "3083:12:14"
																},
																"nativeSrc": "3083:32:14",
																"nodeType": "YulFunctionCall",
																"src": "3083:32:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3073:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3073:6:14"
																}
															]
														},
														{
															"nativeSrc": "3124:42:14",
															"nodeType": "YulAssignment",
															"src": "3124:42:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3151:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3151:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3162:2:14",
																				"nodeType": "YulLiteral",
																				"src": "3162:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3147:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3147:3:14"
																		},
																		"nativeSrc": "3147:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3147:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3134:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "3134:12:14"
																},
																"nativeSrc": "3134:32:14",
																"nodeType": "YulFunctionCall",
																"src": "3134:32:14"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "3124:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3124:6:14"
																}
															]
														},
														{
															"nativeSrc": "3175:42:14",
															"nodeType": "YulAssignment",
															"src": "3175:42:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3202:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3202:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3213:2:14",
																				"nodeType": "YulLiteral",
																				"src": "3213:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3198:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3198:3:14"
																		},
																		"nativeSrc": "3198:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3198:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3185:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "3185:12:14"
																},
																"nativeSrc": "3185:32:14",
																"nodeType": "YulFunctionCall",
																"src": "3185:32:14"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "3175:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3175:6:14"
																}
															]
														},
														{
															"nativeSrc": "3226:43:14",
															"nodeType": "YulAssignment",
															"src": "3226:43:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3253:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3253:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3264:3:14",
																				"nodeType": "YulLiteral",
																				"src": "3264:3:14",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3249:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3249:3:14"
																		},
																		"nativeSrc": "3249:19:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3249:19:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3236:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "3236:12:14"
																},
																"nativeSrc": "3236:33:14",
																"nodeType": "YulFunctionCall",
																"src": "3236:33:14"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "3226:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3226:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_uint256t_uint256t_uint256t_uint256",
												"nativeSrc": "2679:596:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2761:9:14",
														"nodeType": "YulTypedName",
														"src": "2761:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2772:7:14",
														"nodeType": "YulTypedName",
														"src": "2772:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2784:6:14",
														"nodeType": "YulTypedName",
														"src": "2784:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2792:6:14",
														"nodeType": "YulTypedName",
														"src": "2792:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "2800:6:14",
														"nodeType": "YulTypedName",
														"src": "2800:6:14",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "2808:6:14",
														"nodeType": "YulTypedName",
														"src": "2808:6:14",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "2816:6:14",
														"nodeType": "YulTypedName",
														"src": "2816:6:14",
														"type": ""
													}
												],
												"src": "2679:596:14"
											},
											{
												"body": {
													"nativeSrc": "3350:110:14",
													"nodeType": "YulBlock",
													"src": "3350:110:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "3396:16:14",
																"nodeType": "YulBlock",
																"src": "3396:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3405:1:14",
																					"nodeType": "YulLiteral",
																					"src": "3405:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3408:1:14",
																					"nodeType": "YulLiteral",
																					"src": "3408:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3398:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "3398:6:14"
																			},
																			"nativeSrc": "3398:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "3398:12:14"
																		},
																		"nativeSrc": "3398:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "3398:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3371:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "3371:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3380:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3380:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3367:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3367:3:14"
																		},
																		"nativeSrc": "3367:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3367:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3392:2:14",
																		"nodeType": "YulLiteral",
																		"src": "3392:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3363:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3363:3:14"
																},
																"nativeSrc": "3363:32:14",
																"nodeType": "YulFunctionCall",
																"src": "3363:32:14"
															},
															"nativeSrc": "3360:52:14",
															"nodeType": "YulIf",
															"src": "3360:52:14"
														},
														{
															"nativeSrc": "3421:33:14",
															"nodeType": "YulAssignment",
															"src": "3421:33:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3444:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "3444:9:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3431:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "3431:12:14"
																},
																"nativeSrc": "3431:23:14",
																"nodeType": "YulFunctionCall",
																"src": "3431:23:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3421:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3421:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "3280:180:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3316:9:14",
														"nodeType": "YulTypedName",
														"src": "3316:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3327:7:14",
														"nodeType": "YulTypedName",
														"src": "3327:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3339:6:14",
														"nodeType": "YulTypedName",
														"src": "3339:6:14",
														"type": ""
													}
												],
												"src": "3280:180:14"
											},
											{
												"body": {
													"nativeSrc": "3566:76:14",
													"nodeType": "YulBlock",
													"src": "3566:76:14",
													"statements": [
														{
															"nativeSrc": "3576:26:14",
															"nodeType": "YulAssignment",
															"src": "3576:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3588:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "3588:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3599:2:14",
																		"nodeType": "YulLiteral",
																		"src": "3599:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3584:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3584:3:14"
																},
																"nativeSrc": "3584:18:14",
																"nodeType": "YulFunctionCall",
																"src": "3584:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3576:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "3576:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3618:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "3618:9:14"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "3629:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "3629:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3611:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3611:6:14"
																},
																"nativeSrc": "3611:25:14",
																"nodeType": "YulFunctionCall",
																"src": "3611:25:14"
															},
															"nativeSrc": "3611:25:14",
															"nodeType": "YulExpressionStatement",
															"src": "3611:25:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3465:177:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3535:9:14",
														"nodeType": "YulTypedName",
														"src": "3535:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3546:6:14",
														"nodeType": "YulTypedName",
														"src": "3546:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3557:4:14",
														"nodeType": "YulTypedName",
														"src": "3557:4:14",
														"type": ""
													}
												],
												"src": "3465:177:14"
											},
											{
												"body": {
													"nativeSrc": "3743:428:14",
													"nodeType": "YulBlock",
													"src": "3743:428:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "3789:16:14",
																"nodeType": "YulBlock",
																"src": "3789:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3798:1:14",
																					"nodeType": "YulLiteral",
																					"src": "3798:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3801:1:14",
																					"nodeType": "YulLiteral",
																					"src": "3801:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3791:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "3791:6:14"
																			},
																			"nativeSrc": "3791:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "3791:12:14"
																		},
																		"nativeSrc": "3791:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "3791:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3764:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "3764:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3773:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3773:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3760:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3760:3:14"
																		},
																		"nativeSrc": "3760:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3760:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3785:2:14",
																		"nodeType": "YulLiteral",
																		"src": "3785:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3756:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3756:3:14"
																},
																"nativeSrc": "3756:32:14",
																"nodeType": "YulFunctionCall",
																"src": "3756:32:14"
															},
															"nativeSrc": "3753:52:14",
															"nodeType": "YulIf",
															"src": "3753:52:14"
														},
														{
															"nativeSrc": "3814:39:14",
															"nodeType": "YulAssignment",
															"src": "3814:39:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3843:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "3843:9:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3824:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "3824:18:14"
																},
																"nativeSrc": "3824:29:14",
																"nodeType": "YulFunctionCall",
																"src": "3824:29:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3814:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3814:6:14"
																}
															]
														},
														{
															"nativeSrc": "3862:46:14",
															"nodeType": "YulVariableDeclaration",
															"src": "3862:46:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3893:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "3893:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3904:2:14",
																				"nodeType": "YulLiteral",
																				"src": "3904:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3889:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "3889:3:14"
																		},
																		"nativeSrc": "3889:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "3889:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3876:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "3876:12:14"
																},
																"nativeSrc": "3876:32:14",
																"nodeType": "YulFunctionCall",
																"src": "3876:32:14"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "3866:6:14",
																	"nodeType": "YulTypedName",
																	"src": "3866:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3951:16:14",
																"nodeType": "YulBlock",
																"src": "3951:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3960:1:14",
																					"nodeType": "YulLiteral",
																					"src": "3960:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3963:1:14",
																					"nodeType": "YulLiteral",
																					"src": "3963:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3953:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "3953:6:14"
																			},
																			"nativeSrc": "3953:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "3953:12:14"
																		},
																		"nativeSrc": "3953:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "3953:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3923:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "3923:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3931:18:14",
																		"nodeType": "YulLiteral",
																		"src": "3931:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3920:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "3920:2:14"
																},
																"nativeSrc": "3920:30:14",
																"nodeType": "YulFunctionCall",
																"src": "3920:30:14"
															},
															"nativeSrc": "3917:50:14",
															"nodeType": "YulIf",
															"src": "3917:50:14"
														},
														{
															"nativeSrc": "3976:32:14",
															"nodeType": "YulVariableDeclaration",
															"src": "3976:32:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3990:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "3990:9:14"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "4001:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "4001:6:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3986:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "3986:3:14"
																},
																"nativeSrc": "3986:22:14",
																"nodeType": "YulFunctionCall",
																"src": "3986:22:14"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "3980:2:14",
																	"nodeType": "YulTypedName",
																	"src": "3980:2:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4056:16:14",
																"nodeType": "YulBlock",
																"src": "4056:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4065:1:14",
																					"nodeType": "YulLiteral",
																					"src": "4065:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4068:1:14",
																					"nodeType": "YulLiteral",
																					"src": "4068:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4058:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "4058:6:14"
																			},
																			"nativeSrc": "4058:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "4058:12:14"
																		},
																		"nativeSrc": "4058:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "4058:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "4035:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "4035:2:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4039:4:14",
																						"nodeType": "YulLiteral",
																						"src": "4039:4:14",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4031:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "4031:3:14"
																				},
																				"nativeSrc": "4031:13:14",
																				"nodeType": "YulFunctionCall",
																				"src": "4031:13:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4046:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "4046:7:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "4027:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4027:3:14"
																		},
																		"nativeSrc": "4027:27:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4027:27:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "4020:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4020:6:14"
																},
																"nativeSrc": "4020:35:14",
																"nodeType": "YulFunctionCall",
																"src": "4020:35:14"
															},
															"nativeSrc": "4017:55:14",
															"nodeType": "YulIf",
															"src": "4017:55:14"
														},
														{
															"nativeSrc": "4081:84:14",
															"nodeType": "YulAssignment",
															"src": "4081:84:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "4130:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "4130:2:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4134:2:14",
																				"nodeType": "YulLiteral",
																				"src": "4134:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4126:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4126:3:14"
																		},
																		"nativeSrc": "4126:11:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4126:11:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "4152:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "4152:2:14"
																			}
																		],
																		"functionName": {
																			"name": "calldataload",
																			"nativeSrc": "4139:12:14",
																			"nodeType": "YulIdentifier",
																			"src": "4139:12:14"
																		},
																		"nativeSrc": "4139:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4139:16:14"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "4157:7:14",
																		"nodeType": "YulIdentifier",
																		"src": "4157:7:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_available_length_string",
																	"nativeSrc": "4091:34:14",
																	"nodeType": "YulIdentifier",
																	"src": "4091:34:14"
																},
																"nativeSrc": "4091:74:14",
																"nodeType": "YulFunctionCall",
																"src": "4091:74:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4081:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4081:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_memory_ptr",
												"nativeSrc": "3647:524:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3701:9:14",
														"nodeType": "YulTypedName",
														"src": "3701:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3712:7:14",
														"nodeType": "YulTypedName",
														"src": "3712:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3724:6:14",
														"nodeType": "YulTypedName",
														"src": "3724:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3732:6:14",
														"nodeType": "YulTypedName",
														"src": "3732:6:14",
														"type": ""
													}
												],
												"src": "3647:524:14"
											},
											{
												"body": {
													"nativeSrc": "4273:299:14",
													"nodeType": "YulBlock",
													"src": "4273:299:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "4319:16:14",
																"nodeType": "YulBlock",
																"src": "4319:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4328:1:14",
																					"nodeType": "YulLiteral",
																					"src": "4328:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4331:1:14",
																					"nodeType": "YulLiteral",
																					"src": "4331:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4321:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "4321:6:14"
																			},
																			"nativeSrc": "4321:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "4321:12:14"
																		},
																		"nativeSrc": "4321:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "4321:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4294:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "4294:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4303:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "4303:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4290:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4290:3:14"
																		},
																		"nativeSrc": "4290:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4290:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4315:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4315:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4286:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4286:3:14"
																},
																"nativeSrc": "4286:32:14",
																"nodeType": "YulFunctionCall",
																"src": "4286:32:14"
															},
															"nativeSrc": "4283:52:14",
															"nodeType": "YulIf",
															"src": "4283:52:14"
														},
														{
															"nativeSrc": "4344:37:14",
															"nodeType": "YulVariableDeclaration",
															"src": "4344:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4371:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "4371:9:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4358:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "4358:12:14"
																},
																"nativeSrc": "4358:23:14",
																"nodeType": "YulFunctionCall",
																"src": "4358:23:14"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "4348:6:14",
																	"nodeType": "YulTypedName",
																	"src": "4348:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4424:16:14",
																"nodeType": "YulBlock",
																"src": "4424:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4433:1:14",
																					"nodeType": "YulLiteral",
																					"src": "4433:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4436:1:14",
																					"nodeType": "YulLiteral",
																					"src": "4436:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4426:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "4426:6:14"
																			},
																			"nativeSrc": "4426:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "4426:12:14"
																		},
																		"nativeSrc": "4426:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "4426:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4396:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "4396:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4404:18:14",
																		"nodeType": "YulLiteral",
																		"src": "4404:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4393:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "4393:2:14"
																},
																"nativeSrc": "4393:30:14",
																"nodeType": "YulFunctionCall",
																"src": "4393:30:14"
															},
															"nativeSrc": "4390:50:14",
															"nodeType": "YulIf",
															"src": "4390:50:14"
														},
														{
															"nativeSrc": "4449:60:14",
															"nodeType": "YulAssignment",
															"src": "4449:60:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4481:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "4481:9:14"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "4492:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "4492:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4477:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4477:3:14"
																		},
																		"nativeSrc": "4477:22:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4477:22:14"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "4501:7:14",
																		"nodeType": "YulIdentifier",
																		"src": "4501:7:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nativeSrc": "4459:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "4459:17:14"
																},
																"nativeSrc": "4459:50:14",
																"nodeType": "YulFunctionCall",
																"src": "4459:50:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4449:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4449:6:14"
																}
															]
														},
														{
															"nativeSrc": "4518:48:14",
															"nodeType": "YulAssignment",
															"src": "4518:48:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4551:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "4551:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4562:2:14",
																				"nodeType": "YulLiteral",
																				"src": "4562:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4547:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4547:3:14"
																		},
																		"nativeSrc": "4547:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4547:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "4528:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "4528:18:14"
																},
																"nativeSrc": "4528:38:14",
																"nodeType": "YulFunctionCall",
																"src": "4528:38:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4518:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4518:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_address",
												"nativeSrc": "4176:396:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4231:9:14",
														"nodeType": "YulTypedName",
														"src": "4231:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4242:7:14",
														"nodeType": "YulTypedName",
														"src": "4242:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4254:6:14",
														"nodeType": "YulTypedName",
														"src": "4254:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4262:6:14",
														"nodeType": "YulTypedName",
														"src": "4262:6:14",
														"type": ""
													}
												],
												"src": "4176:396:14"
											},
											{
												"body": {
													"nativeSrc": "4701:487:14",
													"nodeType": "YulBlock",
													"src": "4701:487:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "4747:16:14",
																"nodeType": "YulBlock",
																"src": "4747:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4756:1:14",
																					"nodeType": "YulLiteral",
																					"src": "4756:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4759:1:14",
																					"nodeType": "YulLiteral",
																					"src": "4759:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4749:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "4749:6:14"
																			},
																			"nativeSrc": "4749:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "4749:12:14"
																		},
																		"nativeSrc": "4749:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "4749:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "4722:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "4722:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "4731:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "4731:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "4718:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4718:3:14"
																		},
																		"nativeSrc": "4718:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4718:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4743:2:14",
																		"nodeType": "YulLiteral",
																		"src": "4743:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "4714:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "4714:3:14"
																},
																"nativeSrc": "4714:32:14",
																"nodeType": "YulFunctionCall",
																"src": "4714:32:14"
															},
															"nativeSrc": "4711:52:14",
															"nodeType": "YulIf",
															"src": "4711:52:14"
														},
														{
															"nativeSrc": "4772:37:14",
															"nodeType": "YulVariableDeclaration",
															"src": "4772:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4799:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "4799:9:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4786:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "4786:12:14"
																},
																"nativeSrc": "4786:23:14",
																"nodeType": "YulFunctionCall",
																"src": "4786:23:14"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "4776:6:14",
																	"nodeType": "YulTypedName",
																	"src": "4776:6:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4818:28:14",
															"nodeType": "YulVariableDeclaration",
															"src": "4818:28:14",
															"value": {
																"kind": "number",
																"nativeSrc": "4828:18:14",
																"nodeType": "YulLiteral",
																"src": "4828:18:14",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "4822:2:14",
																	"nodeType": "YulTypedName",
																	"src": "4822:2:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4873:16:14",
																"nodeType": "YulBlock",
																"src": "4873:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4882:1:14",
																					"nodeType": "YulLiteral",
																					"src": "4882:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4885:1:14",
																					"nodeType": "YulLiteral",
																					"src": "4885:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4875:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "4875:6:14"
																			},
																			"nativeSrc": "4875:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "4875:12:14"
																		},
																		"nativeSrc": "4875:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "4875:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "4861:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "4861:6:14"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "4869:2:14",
																		"nodeType": "YulIdentifier",
																		"src": "4869:2:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4858:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "4858:2:14"
																},
																"nativeSrc": "4858:14:14",
																"nodeType": "YulFunctionCall",
																"src": "4858:14:14"
															},
															"nativeSrc": "4855:34:14",
															"nodeType": "YulIf",
															"src": "4855:34:14"
														},
														{
															"nativeSrc": "4898:60:14",
															"nodeType": "YulAssignment",
															"src": "4898:60:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4930:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "4930:9:14"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "4941:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "4941:6:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4926:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4926:3:14"
																		},
																		"nativeSrc": "4926:22:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4926:22:14"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "4950:7:14",
																		"nodeType": "YulIdentifier",
																		"src": "4950:7:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nativeSrc": "4908:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "4908:17:14"
																},
																"nativeSrc": "4908:50:14",
																"nodeType": "YulFunctionCall",
																"src": "4908:50:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "4898:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "4898:6:14"
																}
															]
														},
														{
															"nativeSrc": "4967:48:14",
															"nodeType": "YulVariableDeclaration",
															"src": "4967:48:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5000:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "5000:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5011:2:14",
																				"nodeType": "YulLiteral",
																				"src": "5011:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4996:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "4996:3:14"
																		},
																		"nativeSrc": "4996:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "4996:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4983:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "4983:12:14"
																},
																"nativeSrc": "4983:32:14",
																"nodeType": "YulFunctionCall",
																"src": "4983:32:14"
															},
															"variables": [
																{
																	"name": "offset_1",
																	"nativeSrc": "4971:8:14",
																	"nodeType": "YulTypedName",
																	"src": "4971:8:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5044:16:14",
																"nodeType": "YulBlock",
																"src": "5044:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5053:1:14",
																					"nodeType": "YulLiteral",
																					"src": "5053:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5056:1:14",
																					"nodeType": "YulLiteral",
																					"src": "5056:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5046:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "5046:6:14"
																			},
																			"nativeSrc": "5046:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "5046:12:14"
																		},
																		"nativeSrc": "5046:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "5046:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset_1",
																		"nativeSrc": "5030:8:14",
																		"nodeType": "YulIdentifier",
																		"src": "5030:8:14"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "5040:2:14",
																		"nodeType": "YulIdentifier",
																		"src": "5040:2:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5027:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "5027:2:14"
																},
																"nativeSrc": "5027:16:14",
																"nodeType": "YulFunctionCall",
																"src": "5027:16:14"
															},
															"nativeSrc": "5024:36:14",
															"nodeType": "YulIf",
															"src": "5024:36:14"
														},
														{
															"nativeSrc": "5069:62:14",
															"nodeType": "YulAssignment",
															"src": "5069:62:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5101:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "5101:9:14"
																			},
																			{
																				"name": "offset_1",
																				"nativeSrc": "5112:8:14",
																				"nodeType": "YulIdentifier",
																				"src": "5112:8:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5097:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5097:3:14"
																		},
																		"nativeSrc": "5097:24:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5097:24:14"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "5123:7:14",
																		"nodeType": "YulIdentifier",
																		"src": "5123:7:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_string",
																	"nativeSrc": "5079:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "5079:17:14"
																},
																"nativeSrc": "5079:52:14",
																"nodeType": "YulFunctionCall",
																"src": "5079:52:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "5069:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5069:6:14"
																}
															]
														},
														{
															"nativeSrc": "5140:42:14",
															"nodeType": "YulAssignment",
															"src": "5140:42:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5167:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "5167:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5178:2:14",
																				"nodeType": "YulLiteral",
																				"src": "5178:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5163:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5163:3:14"
																		},
																		"nativeSrc": "5163:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5163:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5150:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "5150:12:14"
																},
																"nativeSrc": "5150:32:14",
																"nodeType": "YulFunctionCall",
																"src": "5150:32:14"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "5140:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5140:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256",
												"nativeSrc": "4577:611:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4651:9:14",
														"nodeType": "YulTypedName",
														"src": "4651:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "4662:7:14",
														"nodeType": "YulTypedName",
														"src": "4662:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "4674:6:14",
														"nodeType": "YulTypedName",
														"src": "4674:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4682:6:14",
														"nodeType": "YulTypedName",
														"src": "4682:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4690:6:14",
														"nodeType": "YulTypedName",
														"src": "4690:6:14",
														"type": ""
													}
												],
												"src": "4577:611:14"
											},
											{
												"body": {
													"nativeSrc": "5263:116:14",
													"nodeType": "YulBlock",
													"src": "5263:116:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "5309:16:14",
																"nodeType": "YulBlock",
																"src": "5309:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5318:1:14",
																					"nodeType": "YulLiteral",
																					"src": "5318:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5321:1:14",
																					"nodeType": "YulLiteral",
																					"src": "5321:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5311:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "5311:6:14"
																			},
																			"nativeSrc": "5311:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "5311:12:14"
																		},
																		"nativeSrc": "5311:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "5311:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5284:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "5284:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5293:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "5293:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5280:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5280:3:14"
																		},
																		"nativeSrc": "5280:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5280:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5305:2:14",
																		"nodeType": "YulLiteral",
																		"src": "5305:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5276:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5276:3:14"
																},
																"nativeSrc": "5276:32:14",
																"nodeType": "YulFunctionCall",
																"src": "5276:32:14"
															},
															"nativeSrc": "5273:52:14",
															"nodeType": "YulIf",
															"src": "5273:52:14"
														},
														{
															"nativeSrc": "5334:39:14",
															"nodeType": "YulAssignment",
															"src": "5334:39:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5363:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "5363:9:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "5344:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "5344:18:14"
																},
																"nativeSrc": "5344:29:14",
																"nodeType": "YulFunctionCall",
																"src": "5344:29:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5334:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5334:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "5193:186:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5229:9:14",
														"nodeType": "YulTypedName",
														"src": "5229:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5240:7:14",
														"nodeType": "YulTypedName",
														"src": "5240:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5252:6:14",
														"nodeType": "YulTypedName",
														"src": "5252:6:14",
														"type": ""
													}
												],
												"src": "5193:186:14"
											},
											{
												"body": {
													"nativeSrc": "5445:239:14",
													"nodeType": "YulBlock",
													"src": "5445:239:14",
													"statements": [
														{
															"nativeSrc": "5455:26:14",
															"nodeType": "YulVariableDeclaration",
															"src": "5455:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5475:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "5475:5:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5469:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "5469:5:14"
																},
																"nativeSrc": "5469:12:14",
																"nodeType": "YulFunctionCall",
																"src": "5469:12:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "5459:6:14",
																	"nodeType": "YulTypedName",
																	"src": "5459:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "5497:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "5497:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5502:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "5502:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5490:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5490:6:14"
																},
																"nativeSrc": "5490:19:14",
																"nodeType": "YulFunctionCall",
																"src": "5490:19:14"
															},
															"nativeSrc": "5490:19:14",
															"nodeType": "YulExpressionStatement",
															"src": "5490:19:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "5528:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "5528:3:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5533:4:14",
																				"nodeType": "YulLiteral",
																				"src": "5533:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5524:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5524:3:14"
																		},
																		"nativeSrc": "5524:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5524:14:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "5544:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "5544:5:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5551:4:14",
																				"nodeType": "YulLiteral",
																				"src": "5551:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5540:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5540:3:14"
																		},
																		"nativeSrc": "5540:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5540:16:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5558:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "5558:6:14"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "5518:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "5518:5:14"
																},
																"nativeSrc": "5518:47:14",
																"nodeType": "YulFunctionCall",
																"src": "5518:47:14"
															},
															"nativeSrc": "5518:47:14",
															"nodeType": "YulExpressionStatement",
															"src": "5518:47:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "5589:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "5589:3:14"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "5594:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "5594:6:14"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5585:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "5585:3:14"
																				},
																				"nativeSrc": "5585:16:14",
																				"nodeType": "YulFunctionCall",
																				"src": "5585:16:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5603:4:14",
																				"nodeType": "YulLiteral",
																				"src": "5603:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5581:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5581:3:14"
																		},
																		"nativeSrc": "5581:27:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5581:27:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5610:1:14",
																		"nodeType": "YulLiteral",
																		"src": "5610:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5574:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5574:6:14"
																},
																"nativeSrc": "5574:38:14",
																"nodeType": "YulFunctionCall",
																"src": "5574:38:14"
															},
															"nativeSrc": "5574:38:14",
															"nodeType": "YulExpressionStatement",
															"src": "5574:38:14"
														},
														{
															"nativeSrc": "5621:57:14",
															"nodeType": "YulAssignment",
															"src": "5621:57:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "5636:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "5636:3:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "5649:6:14",
																								"nodeType": "YulIdentifier",
																								"src": "5649:6:14"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5657:2:14",
																								"nodeType": "YulLiteral",
																								"src": "5657:2:14",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "5645:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "5645:3:14"
																						},
																						"nativeSrc": "5645:15:14",
																						"nodeType": "YulFunctionCall",
																						"src": "5645:15:14"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5666:2:14",
																								"nodeType": "YulLiteral",
																								"src": "5666:2:14",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "5662:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "5662:3:14"
																						},
																						"nativeSrc": "5662:7:14",
																						"nodeType": "YulFunctionCall",
																						"src": "5662:7:14"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "5641:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "5641:3:14"
																				},
																				"nativeSrc": "5641:29:14",
																				"nodeType": "YulFunctionCall",
																				"src": "5641:29:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5632:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5632:3:14"
																		},
																		"nativeSrc": "5632:39:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5632:39:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5673:4:14",
																		"nodeType": "YulLiteral",
																		"src": "5673:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5628:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5628:3:14"
																},
																"nativeSrc": "5628:50:14",
																"nodeType": "YulFunctionCall",
																"src": "5628:50:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "5621:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "5621:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_string_memory_ptr",
												"nativeSrc": "5384:300:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "5422:5:14",
														"nodeType": "YulTypedName",
														"src": "5422:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "5429:3:14",
														"nodeType": "YulTypedName",
														"src": "5429:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "5437:3:14",
														"nodeType": "YulTypedName",
														"src": "5437:3:14",
														"type": ""
													}
												],
												"src": "5384:300:14"
											},
											{
												"body": {
													"nativeSrc": "5838:179:14",
													"nodeType": "YulBlock",
													"src": "5838:179:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5855:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "5855:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5866:2:14",
																		"nodeType": "YulLiteral",
																		"src": "5866:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5848:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5848:6:14"
																},
																"nativeSrc": "5848:21:14",
																"nodeType": "YulFunctionCall",
																"src": "5848:21:14"
															},
															"nativeSrc": "5848:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "5848:21:14"
														},
														{
															"nativeSrc": "5878:64:14",
															"nodeType": "YulAssignment",
															"src": "5878:64:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5915:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "5915:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5927:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "5927:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5938:2:14",
																				"nodeType": "YulLiteral",
																				"src": "5938:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5923:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5923:3:14"
																		},
																		"nativeSrc": "5923:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5923:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string_memory_ptr",
																	"nativeSrc": "5886:28:14",
																	"nodeType": "YulIdentifier",
																	"src": "5886:28:14"
																},
																"nativeSrc": "5886:56:14",
																"nodeType": "YulFunctionCall",
																"src": "5886:56:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5878:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "5878:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5962:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "5962:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5973:2:14",
																				"nodeType": "YulLiteral",
																				"src": "5973:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5958:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5958:3:14"
																		},
																		"nativeSrc": "5958:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5958:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "5982:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "5982:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5998:3:14",
																								"nodeType": "YulLiteral",
																								"src": "5998:3:14",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6003:1:14",
																								"nodeType": "YulLiteral",
																								"src": "6003:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "5994:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "5994:3:14"
																						},
																						"nativeSrc": "5994:11:14",
																						"nodeType": "YulFunctionCall",
																						"src": "5994:11:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6007:1:14",
																						"nodeType": "YulLiteral",
																						"src": "6007:1:14",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "5990:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "5990:3:14"
																				},
																				"nativeSrc": "5990:19:14",
																				"nodeType": "YulFunctionCall",
																				"src": "5990:19:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "5978:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "5978:3:14"
																		},
																		"nativeSrc": "5978:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "5978:32:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5951:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "5951:6:14"
																},
																"nativeSrc": "5951:60:14",
																"nodeType": "YulFunctionCall",
																"src": "5951:60:14"
															},
															"nativeSrc": "5951:60:14",
															"nodeType": "YulExpressionStatement",
															"src": "5951:60:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr_t_address__to_t_string_memory_ptr_t_address__fromStack_reversed",
												"nativeSrc": "5689:328:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5799:9:14",
														"nodeType": "YulTypedName",
														"src": "5799:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5810:6:14",
														"nodeType": "YulTypedName",
														"src": "5810:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "5818:6:14",
														"nodeType": "YulTypedName",
														"src": "5818:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5829:4:14",
														"nodeType": "YulTypedName",
														"src": "5829:4:14",
														"type": ""
													}
												],
												"src": "5689:328:14"
											},
											{
												"body": {
													"nativeSrc": "6134:904:14",
													"nodeType": "YulBlock",
													"src": "6134:904:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "6180:16:14",
																"nodeType": "YulBlock",
																"src": "6180:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6189:1:14",
																					"nodeType": "YulLiteral",
																					"src": "6189:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6192:1:14",
																					"nodeType": "YulLiteral",
																					"src": "6192:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6182:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "6182:6:14"
																			},
																			"nativeSrc": "6182:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6182:12:14"
																		},
																		"nativeSrc": "6182:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "6182:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6155:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "6155:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "6164:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "6164:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "6151:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6151:3:14"
																		},
																		"nativeSrc": "6151:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6151:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6176:2:14",
																		"nodeType": "YulLiteral",
																		"src": "6176:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "6147:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6147:3:14"
																},
																"nativeSrc": "6147:32:14",
																"nodeType": "YulFunctionCall",
																"src": "6147:32:14"
															},
															"nativeSrc": "6144:52:14",
															"nodeType": "YulIf",
															"src": "6144:52:14"
														},
														{
															"nativeSrc": "6205:37:14",
															"nodeType": "YulVariableDeclaration",
															"src": "6205:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6232:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "6232:9:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6219:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "6219:12:14"
																},
																"nativeSrc": "6219:23:14",
																"nodeType": "YulFunctionCall",
																"src": "6219:23:14"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "6209:6:14",
																	"nodeType": "YulTypedName",
																	"src": "6209:6:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6251:28:14",
															"nodeType": "YulVariableDeclaration",
															"src": "6251:28:14",
															"value": {
																"kind": "number",
																"nativeSrc": "6261:18:14",
																"nodeType": "YulLiteral",
																"src": "6261:18:14",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "6255:2:14",
																	"nodeType": "YulTypedName",
																	"src": "6255:2:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6306:16:14",
																"nodeType": "YulBlock",
																"src": "6306:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6315:1:14",
																					"nodeType": "YulLiteral",
																					"src": "6315:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6318:1:14",
																					"nodeType": "YulLiteral",
																					"src": "6318:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6308:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "6308:6:14"
																			},
																			"nativeSrc": "6308:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6308:12:14"
																		},
																		"nativeSrc": "6308:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "6308:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "6294:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6294:6:14"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "6302:2:14",
																		"nodeType": "YulIdentifier",
																		"src": "6302:2:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6291:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "6291:2:14"
																},
																"nativeSrc": "6291:14:14",
																"nodeType": "YulFunctionCall",
																"src": "6291:14:14"
															},
															"nativeSrc": "6288:34:14",
															"nodeType": "YulIf",
															"src": "6288:34:14"
														},
														{
															"nativeSrc": "6331:32:14",
															"nodeType": "YulVariableDeclaration",
															"src": "6331:32:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6345:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "6345:9:14"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "6356:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6356:6:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6341:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6341:3:14"
																},
																"nativeSrc": "6341:22:14",
																"nodeType": "YulFunctionCall",
																"src": "6341:22:14"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "6335:2:14",
																	"nodeType": "YulTypedName",
																	"src": "6335:2:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6411:16:14",
																"nodeType": "YulBlock",
																"src": "6411:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6420:1:14",
																					"nodeType": "YulLiteral",
																					"src": "6420:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6423:1:14",
																					"nodeType": "YulLiteral",
																					"src": "6423:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6413:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "6413:6:14"
																			},
																			"nativeSrc": "6413:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6413:12:14"
																		},
																		"nativeSrc": "6413:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "6413:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_2",
																						"nativeSrc": "6390:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "6390:2:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6394:4:14",
																						"nodeType": "YulLiteral",
																						"src": "6394:4:14",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "6386:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "6386:3:14"
																				},
																				"nativeSrc": "6386:13:14",
																				"nodeType": "YulFunctionCall",
																				"src": "6386:13:14"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "6401:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "6401:7:14"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "6382:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6382:3:14"
																		},
																		"nativeSrc": "6382:27:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6382:27:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "6375:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6375:6:14"
																},
																"nativeSrc": "6375:35:14",
																"nodeType": "YulFunctionCall",
																"src": "6375:35:14"
															},
															"nativeSrc": "6372:55:14",
															"nodeType": "YulIf",
															"src": "6372:55:14"
														},
														{
															"nativeSrc": "6436:26:14",
															"nodeType": "YulVariableDeclaration",
															"src": "6436:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nativeSrc": "6459:2:14",
																		"nodeType": "YulIdentifier",
																		"src": "6459:2:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6446:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "6446:12:14"
																},
																"nativeSrc": "6446:16:14",
																"nodeType": "YulFunctionCall",
																"src": "6446:16:14"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "6440:2:14",
																	"nodeType": "YulTypedName",
																	"src": "6440:2:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6471:14:14",
															"nodeType": "YulVariableDeclaration",
															"src": "6471:14:14",
															"value": {
																"kind": "number",
																"nativeSrc": "6481:4:14",
																"nodeType": "YulLiteral",
																"src": "6481:4:14",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "_4",
																	"nativeSrc": "6475:2:14",
																	"nodeType": "YulTypedName",
																	"src": "6475:2:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6508:22:14",
																"nodeType": "YulBlock",
																"src": "6508:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "6510:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "6510:16:14"
																			},
																			"nativeSrc": "6510:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6510:18:14"
																		},
																		"nativeSrc": "6510:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "6510:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_3",
																		"nativeSrc": "6500:2:14",
																		"nodeType": "YulIdentifier",
																		"src": "6500:2:14"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "6504:2:14",
																		"nodeType": "YulIdentifier",
																		"src": "6504:2:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6497:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "6497:2:14"
																},
																"nativeSrc": "6497:10:14",
																"nodeType": "YulFunctionCall",
																"src": "6497:10:14"
															},
															"nativeSrc": "6494:36:14",
															"nodeType": "YulIf",
															"src": "6494:36:14"
														},
														{
															"nativeSrc": "6539:20:14",
															"nodeType": "YulVariableDeclaration",
															"src": "6539:20:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6553:1:14",
																		"nodeType": "YulLiteral",
																		"src": "6553:1:14",
																		"type": "",
																		"value": "5"
																	},
																	{
																		"name": "_3",
																		"nativeSrc": "6556:2:14",
																		"nodeType": "YulIdentifier",
																		"src": "6556:2:14"
																	}
																],
																"functionName": {
																	"name": "shl",
																	"nativeSrc": "6549:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6549:3:14"
																},
																"nativeSrc": "6549:10:14",
																"nodeType": "YulFunctionCall",
																"src": "6549:10:14"
															},
															"variables": [
																{
																	"name": "_5",
																	"nativeSrc": "6543:2:14",
																	"nodeType": "YulTypedName",
																	"src": "6543:2:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6568:39:14",
															"nodeType": "YulVariableDeclaration",
															"src": "6568:39:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_5",
																				"nativeSrc": "6599:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "6599:2:14"
																			},
																			{
																				"name": "_4",
																				"nativeSrc": "6603:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "6603:2:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6595:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6595:3:14"
																		},
																		"nativeSrc": "6595:11:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6595:11:14"
																	}
																],
																"functionName": {
																	"name": "allocate_memory",
																	"nativeSrc": "6579:15:14",
																	"nodeType": "YulIdentifier",
																	"src": "6579:15:14"
																},
																"nativeSrc": "6579:28:14",
																"nodeType": "YulFunctionCall",
																"src": "6579:28:14"
															},
															"variables": [
																{
																	"name": "dst",
																	"nativeSrc": "6572:3:14",
																	"nodeType": "YulTypedName",
																	"src": "6572:3:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "6616:16:14",
															"nodeType": "YulVariableDeclaration",
															"src": "6616:16:14",
															"value": {
																"name": "dst",
																"nativeSrc": "6629:3:14",
																"nodeType": "YulIdentifier",
																"src": "6629:3:14"
															},
															"variables": [
																{
																	"name": "dst_1",
																	"nativeSrc": "6620:5:14",
																	"nodeType": "YulTypedName",
																	"src": "6620:5:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "6648:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "6648:3:14"
																	},
																	{
																		"name": "_3",
																		"nativeSrc": "6653:2:14",
																		"nodeType": "YulIdentifier",
																		"src": "6653:2:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6641:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6641:6:14"
																},
																"nativeSrc": "6641:15:14",
																"nodeType": "YulFunctionCall",
																"src": "6641:15:14"
															},
															"nativeSrc": "6641:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "6641:15:14"
														},
														{
															"nativeSrc": "6665:19:14",
															"nodeType": "YulAssignment",
															"src": "6665:19:14",
															"value": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "6676:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "6676:3:14"
																	},
																	{
																		"name": "_4",
																		"nativeSrc": "6681:2:14",
																		"nodeType": "YulIdentifier",
																		"src": "6681:2:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6672:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6672:3:14"
																},
																"nativeSrc": "6672:12:14",
																"nodeType": "YulFunctionCall",
																"src": "6672:12:14"
															},
															"variableNames": [
																{
																	"name": "dst",
																	"nativeSrc": "6665:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6665:3:14"
																}
															]
														},
														{
															"nativeSrc": "6693:34:14",
															"nodeType": "YulVariableDeclaration",
															"src": "6693:34:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "_2",
																				"nativeSrc": "6715:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "6715:2:14"
																			},
																			{
																				"name": "_5",
																				"nativeSrc": "6719:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "6719:2:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6711:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "6711:3:14"
																		},
																		"nativeSrc": "6711:11:14",
																		"nodeType": "YulFunctionCall",
																		"src": "6711:11:14"
																	},
																	{
																		"name": "_4",
																		"nativeSrc": "6724:2:14",
																		"nodeType": "YulIdentifier",
																		"src": "6724:2:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6707:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6707:3:14"
																},
																"nativeSrc": "6707:20:14",
																"nodeType": "YulFunctionCall",
																"src": "6707:20:14"
															},
															"variables": [
																{
																	"name": "srcEnd",
																	"nativeSrc": "6697:6:14",
																	"nodeType": "YulTypedName",
																	"src": "6697:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6759:16:14",
																"nodeType": "YulBlock",
																"src": "6759:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "6768:1:14",
																					"nodeType": "YulLiteral",
																					"src": "6768:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "6771:1:14",
																					"nodeType": "YulLiteral",
																					"src": "6771:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6761:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "6761:6:14"
																			},
																			"nativeSrc": "6761:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6761:12:14"
																		},
																		"nativeSrc": "6761:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "6761:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "srcEnd",
																		"nativeSrc": "6742:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6742:6:14"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "6750:7:14",
																		"nodeType": "YulIdentifier",
																		"src": "6750:7:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "6739:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "6739:2:14"
																},
																"nativeSrc": "6739:19:14",
																"nodeType": "YulFunctionCall",
																"src": "6739:19:14"
															},
															"nativeSrc": "6736:39:14",
															"nodeType": "YulIf",
															"src": "6736:39:14"
														},
														{
															"nativeSrc": "6784:22:14",
															"nodeType": "YulVariableDeclaration",
															"src": "6784:22:14",
															"value": {
																"arguments": [
																	{
																		"name": "_2",
																		"nativeSrc": "6799:2:14",
																		"nodeType": "YulIdentifier",
																		"src": "6799:2:14"
																	},
																	{
																		"name": "_4",
																		"nativeSrc": "6803:2:14",
																		"nodeType": "YulIdentifier",
																		"src": "6803:2:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6795:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "6795:3:14"
																},
																"nativeSrc": "6795:11:14",
																"nodeType": "YulFunctionCall",
																"src": "6795:11:14"
															},
															"variables": [
																{
																	"name": "src",
																	"nativeSrc": "6788:3:14",
																	"nodeType": "YulTypedName",
																	"src": "6788:3:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "6871:86:14",
																"nodeType": "YulBlock",
																"src": "6871:86:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "6892:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "6892:3:14"
																				},
																				{
																					"arguments": [
																						{
																							"name": "src",
																							"nativeSrc": "6910:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "6910:3:14"
																						}
																					],
																					"functionName": {
																						"name": "calldataload",
																						"nativeSrc": "6897:12:14",
																						"nodeType": "YulIdentifier",
																						"src": "6897:12:14"
																					},
																					"nativeSrc": "6897:17:14",
																					"nodeType": "YulFunctionCall",
																					"src": "6897:17:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "6885:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "6885:6:14"
																			},
																			"nativeSrc": "6885:30:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6885:30:14"
																		},
																		"nativeSrc": "6885:30:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "6885:30:14"
																	},
																	{
																		"nativeSrc": "6928:19:14",
																		"nodeType": "YulAssignment",
																		"src": "6928:19:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "dst",
																					"nativeSrc": "6939:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "6939:3:14"
																				},
																				{
																					"name": "_4",
																					"nativeSrc": "6944:2:14",
																					"nodeType": "YulIdentifier",
																					"src": "6944:2:14"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6935:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "6935:3:14"
																			},
																			"nativeSrc": "6935:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6935:12:14"
																		},
																		"variableNames": [
																			{
																				"name": "dst",
																				"nativeSrc": "6928:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "6928:3:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "6826:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "6826:3:14"
																	},
																	{
																		"name": "srcEnd",
																		"nativeSrc": "6831:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "6831:6:14"
																	}
																],
																"functionName": {
																	"name": "lt",
																	"nativeSrc": "6823:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "6823:2:14"
																},
																"nativeSrc": "6823:15:14",
																"nodeType": "YulFunctionCall",
																"src": "6823:15:14"
															},
															"nativeSrc": "6815:142:14",
															"nodeType": "YulForLoop",
															"post": {
																"nativeSrc": "6839:23:14",
																"nodeType": "YulBlock",
																"src": "6839:23:14",
																"statements": [
																	{
																		"nativeSrc": "6841:19:14",
																		"nodeType": "YulAssignment",
																		"src": "6841:19:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "src",
																					"nativeSrc": "6852:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "6852:3:14"
																				},
																				{
																					"name": "_4",
																					"nativeSrc": "6857:2:14",
																					"nodeType": "YulIdentifier",
																					"src": "6857:2:14"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "6848:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "6848:3:14"
																			},
																			"nativeSrc": "6848:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6848:12:14"
																		},
																		"variableNames": [
																			{
																				"name": "src",
																				"nativeSrc": "6841:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "6841:3:14"
																			}
																		]
																	}
																]
															},
															"pre": {
																"nativeSrc": "6819:3:14",
																"nodeType": "YulBlock",
																"src": "6819:3:14",
																"statements": []
															},
															"src": "6815:142:14"
														},
														{
															"nativeSrc": "6966:15:14",
															"nodeType": "YulAssignment",
															"src": "6966:15:14",
															"value": {
																"name": "dst_1",
																"nativeSrc": "6976:5:14",
																"nodeType": "YulIdentifier",
																"src": "6976:5:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "6966:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6966:6:14"
																}
															]
														},
														{
															"nativeSrc": "6990:42:14",
															"nodeType": "YulAssignment",
															"src": "6990:42:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7017:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "7017:9:14"
																			},
																			{
																				"name": "_4",
																				"nativeSrc": "7028:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "7028:2:14"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7013:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7013:3:14"
																		},
																		"nativeSrc": "7013:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7013:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "7000:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "7000:12:14"
																},
																"nativeSrc": "7000:32:14",
																"nodeType": "YulFunctionCall",
																"src": "7000:32:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "6990:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "6990:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptrt_uint256",
												"nativeSrc": "6022:1016:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6092:9:14",
														"nodeType": "YulTypedName",
														"src": "6092:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "6103:7:14",
														"nodeType": "YulTypedName",
														"src": "6103:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "6115:6:14",
														"nodeType": "YulTypedName",
														"src": "6115:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "6123:6:14",
														"nodeType": "YulTypedName",
														"src": "6123:6:14",
														"type": ""
													}
												],
												"src": "6022:1016:14"
											},
											{
												"body": {
													"nativeSrc": "7164:110:14",
													"nodeType": "YulBlock",
													"src": "7164:110:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7181:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "7181:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7192:2:14",
																		"nodeType": "YulLiteral",
																		"src": "7192:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7174:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7174:6:14"
																},
																"nativeSrc": "7174:21:14",
																"nodeType": "YulFunctionCall",
																"src": "7174:21:14"
															},
															"nativeSrc": "7174:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "7174:21:14"
														},
														{
															"nativeSrc": "7204:64:14",
															"nodeType": "YulAssignment",
															"src": "7204:64:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "7241:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7241:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7253:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "7253:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7264:2:14",
																				"nodeType": "YulLiteral",
																				"src": "7264:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7249:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7249:3:14"
																		},
																		"nativeSrc": "7249:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7249:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string_memory_ptr",
																	"nativeSrc": "7212:28:14",
																	"nodeType": "YulIdentifier",
																	"src": "7212:28:14"
																},
																"nativeSrc": "7212:56:14",
																"nodeType": "YulFunctionCall",
																"src": "7212:56:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7204:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "7204:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7043:231:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7133:9:14",
														"nodeType": "YulTypedName",
														"src": "7133:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7144:6:14",
														"nodeType": "YulTypedName",
														"src": "7144:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7155:4:14",
														"nodeType": "YulTypedName",
														"src": "7155:4:14",
														"type": ""
													}
												],
												"src": "7043:231:14"
											},
											{
												"body": {
													"nativeSrc": "7540:329:14",
													"nodeType": "YulBlock",
													"src": "7540:329:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7557:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "7557:9:14"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "7568:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7568:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7550:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7550:6:14"
																},
																"nativeSrc": "7550:25:14",
																"nodeType": "YulFunctionCall",
																"src": "7550:25:14"
															},
															"nativeSrc": "7550:25:14",
															"nodeType": "YulExpressionStatement",
															"src": "7550:25:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7595:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "7595:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7606:2:14",
																				"nodeType": "YulLiteral",
																				"src": "7606:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7591:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7591:3:14"
																		},
																		"nativeSrc": "7591:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7591:18:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7611:3:14",
																		"nodeType": "YulLiteral",
																		"src": "7611:3:14",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7584:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7584:6:14"
																},
																"nativeSrc": "7584:31:14",
																"nodeType": "YulFunctionCall",
																"src": "7584:31:14"
															},
															"nativeSrc": "7584:31:14",
															"nodeType": "YulExpressionStatement",
															"src": "7584:31:14"
														},
														{
															"nativeSrc": "7624:65:14",
															"nodeType": "YulAssignment",
															"src": "7624:65:14",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "7661:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7661:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7673:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "7673:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7684:3:14",
																				"nodeType": "YulLiteral",
																				"src": "7684:3:14",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7669:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7669:3:14"
																		},
																		"nativeSrc": "7669:19:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7669:19:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string_memory_ptr",
																	"nativeSrc": "7632:28:14",
																	"nodeType": "YulIdentifier",
																	"src": "7632:28:14"
																},
																"nativeSrc": "7632:57:14",
																"nodeType": "YulFunctionCall",
																"src": "7632:57:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7624:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "7624:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7709:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "7709:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7720:2:14",
																				"nodeType": "YulLiteral",
																				"src": "7720:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7705:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7705:3:14"
																		},
																		"nativeSrc": "7705:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7705:18:14"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "7725:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7725:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7698:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7698:6:14"
																},
																"nativeSrc": "7698:34:14",
																"nodeType": "YulFunctionCall",
																"src": "7698:34:14"
															},
															"nativeSrc": "7698:34:14",
															"nodeType": "YulExpressionStatement",
															"src": "7698:34:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7752:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "7752:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7763:2:14",
																				"nodeType": "YulLiteral",
																				"src": "7763:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7748:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7748:3:14"
																		},
																		"nativeSrc": "7748:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7748:18:14"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "7768:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7768:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7741:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7741:6:14"
																},
																"nativeSrc": "7741:34:14",
																"nodeType": "YulFunctionCall",
																"src": "7741:34:14"
															},
															"nativeSrc": "7741:34:14",
															"nodeType": "YulExpressionStatement",
															"src": "7741:34:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7795:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "7795:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7806:3:14",
																				"nodeType": "YulLiteral",
																				"src": "7806:3:14",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7791:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7791:3:14"
																		},
																		"nativeSrc": "7791:19:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7791:19:14"
																	},
																	{
																		"name": "value4",
																		"nativeSrc": "7812:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7812:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7784:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7784:6:14"
																},
																"nativeSrc": "7784:35:14",
																"nodeType": "YulFunctionCall",
																"src": "7784:35:14"
															},
															"nativeSrc": "7784:35:14",
															"nodeType": "YulExpressionStatement",
															"src": "7784:35:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7839:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "7839:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7850:3:14",
																				"nodeType": "YulLiteral",
																				"src": "7850:3:14",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7835:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7835:3:14"
																		},
																		"nativeSrc": "7835:19:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7835:19:14"
																	},
																	{
																		"name": "value5",
																		"nativeSrc": "7856:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "7856:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7828:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "7828:6:14"
																},
																"nativeSrc": "7828:35:14",
																"nodeType": "YulFunctionCall",
																"src": "7828:35:14"
															},
															"nativeSrc": "7828:35:14",
															"nodeType": "YulExpressionStatement",
															"src": "7828:35:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "7279:590:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7469:9:14",
														"nodeType": "YulTypedName",
														"src": "7469:9:14",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "7480:6:14",
														"nodeType": "YulTypedName",
														"src": "7480:6:14",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "7488:6:14",
														"nodeType": "YulTypedName",
														"src": "7488:6:14",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "7496:6:14",
														"nodeType": "YulTypedName",
														"src": "7496:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7504:6:14",
														"nodeType": "YulTypedName",
														"src": "7504:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7512:6:14",
														"nodeType": "YulTypedName",
														"src": "7512:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7520:6:14",
														"nodeType": "YulTypedName",
														"src": "7520:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7531:4:14",
														"nodeType": "YulTypedName",
														"src": "7531:4:14",
														"type": ""
													}
												],
												"src": "7279:590:14"
											},
											{
												"body": {
													"nativeSrc": "7978:230:14",
													"nodeType": "YulBlock",
													"src": "7978:230:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "8024:16:14",
																"nodeType": "YulBlock",
																"src": "8024:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8033:1:14",
																					"nodeType": "YulLiteral",
																					"src": "8033:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8036:1:14",
																					"nodeType": "YulLiteral",
																					"src": "8036:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8026:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "8026:6:14"
																			},
																			"nativeSrc": "8026:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "8026:12:14"
																		},
																		"nativeSrc": "8026:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "8026:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7999:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "7999:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8008:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "8008:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7995:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "7995:3:14"
																		},
																		"nativeSrc": "7995:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "7995:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8020:2:14",
																		"nodeType": "YulLiteral",
																		"src": "8020:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7991:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "7991:3:14"
																},
																"nativeSrc": "7991:32:14",
																"nodeType": "YulFunctionCall",
																"src": "7991:32:14"
															},
															"nativeSrc": "7988:52:14",
															"nodeType": "YulIf",
															"src": "7988:52:14"
														},
														{
															"nativeSrc": "8049:39:14",
															"nodeType": "YulAssignment",
															"src": "8049:39:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8078:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "8078:9:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "8059:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "8059:18:14"
																},
																"nativeSrc": "8059:29:14",
																"nodeType": "YulFunctionCall",
																"src": "8059:29:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "8049:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8049:6:14"
																}
															]
														},
														{
															"nativeSrc": "8097:48:14",
															"nodeType": "YulAssignment",
															"src": "8097:48:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8130:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "8130:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8141:2:14",
																				"nodeType": "YulLiteral",
																				"src": "8141:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8126:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8126:3:14"
																		},
																		"nativeSrc": "8126:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8126:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "8107:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "8107:18:14"
																},
																"nativeSrc": "8107:38:14",
																"nodeType": "YulFunctionCall",
																"src": "8107:38:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "8097:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8097:6:14"
																}
															]
														},
														{
															"nativeSrc": "8154:48:14",
															"nodeType": "YulAssignment",
															"src": "8154:48:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8187:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "8187:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8198:2:14",
																				"nodeType": "YulLiteral",
																				"src": "8198:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8183:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8183:3:14"
																		},
																		"nativeSrc": "8183:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8183:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "8164:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "8164:18:14"
																},
																"nativeSrc": "8164:38:14",
																"nodeType": "YulFunctionCall",
																"src": "8164:38:14"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "8154:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8154:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_address",
												"nativeSrc": "7874:334:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7928:9:14",
														"nodeType": "YulTypedName",
														"src": "7928:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7939:7:14",
														"nodeType": "YulTypedName",
														"src": "7939:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7951:6:14",
														"nodeType": "YulTypedName",
														"src": "7951:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7959:6:14",
														"nodeType": "YulTypedName",
														"src": "7959:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7967:6:14",
														"nodeType": "YulTypedName",
														"src": "7967:6:14",
														"type": ""
													}
												],
												"src": "7874:334:14"
											},
											{
												"body": {
													"nativeSrc": "8300:167:14",
													"nodeType": "YulBlock",
													"src": "8300:167:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "8346:16:14",
																"nodeType": "YulBlock",
																"src": "8346:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8355:1:14",
																					"nodeType": "YulLiteral",
																					"src": "8355:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8358:1:14",
																					"nodeType": "YulLiteral",
																					"src": "8358:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8348:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "8348:6:14"
																			},
																			"nativeSrc": "8348:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "8348:12:14"
																		},
																		"nativeSrc": "8348:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "8348:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8321:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "8321:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8330:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "8330:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8317:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8317:3:14"
																		},
																		"nativeSrc": "8317:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8317:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8342:2:14",
																		"nodeType": "YulLiteral",
																		"src": "8342:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8313:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "8313:3:14"
																},
																"nativeSrc": "8313:32:14",
																"nodeType": "YulFunctionCall",
																"src": "8313:32:14"
															},
															"nativeSrc": "8310:52:14",
															"nodeType": "YulIf",
															"src": "8310:52:14"
														},
														{
															"nativeSrc": "8371:39:14",
															"nodeType": "YulAssignment",
															"src": "8371:39:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8400:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "8400:9:14"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "8381:18:14",
																	"nodeType": "YulIdentifier",
																	"src": "8381:18:14"
																},
																"nativeSrc": "8381:29:14",
																"nodeType": "YulFunctionCall",
																"src": "8381:29:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "8371:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8371:6:14"
																}
															]
														},
														{
															"nativeSrc": "8419:42:14",
															"nodeType": "YulAssignment",
															"src": "8419:42:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8446:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "8446:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8457:2:14",
																				"nodeType": "YulLiteral",
																				"src": "8457:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8442:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8442:3:14"
																		},
																		"nativeSrc": "8442:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8442:18:14"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "8429:12:14",
																	"nodeType": "YulIdentifier",
																	"src": "8429:12:14"
																},
																"nativeSrc": "8429:32:14",
																"nodeType": "YulFunctionCall",
																"src": "8429:32:14"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "8419:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8419:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "8213:254:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8258:9:14",
														"nodeType": "YulTypedName",
														"src": "8258:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8269:7:14",
														"nodeType": "YulTypedName",
														"src": "8269:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8281:6:14",
														"nodeType": "YulTypedName",
														"src": "8281:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8289:6:14",
														"nodeType": "YulTypedName",
														"src": "8289:6:14",
														"type": ""
													}
												],
												"src": "8213:254:14"
											},
											{
												"body": {
													"nativeSrc": "8691:340:14",
													"nodeType": "YulBlock",
													"src": "8691:340:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8708:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "8708:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8719:3:14",
																		"nodeType": "YulLiteral",
																		"src": "8719:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8701:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8701:6:14"
																},
																"nativeSrc": "8701:22:14",
																"nodeType": "YulFunctionCall",
																"src": "8701:22:14"
															},
															"nativeSrc": "8701:22:14",
															"nodeType": "YulExpressionStatement",
															"src": "8701:22:14"
														},
														{
															"nativeSrc": "8732:71:14",
															"nodeType": "YulVariableDeclaration",
															"src": "8732:71:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "8775:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "8775:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8787:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "8787:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8798:3:14",
																				"nodeType": "YulLiteral",
																				"src": "8798:3:14",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8783:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8783:3:14"
																		},
																		"nativeSrc": "8783:19:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8783:19:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string_memory_ptr",
																	"nativeSrc": "8746:28:14",
																	"nodeType": "YulIdentifier",
																	"src": "8746:28:14"
																},
																"nativeSrc": "8746:57:14",
																"nodeType": "YulFunctionCall",
																"src": "8746:57:14"
															},
															"variables": [
																{
																	"name": "tail_1",
																	"nativeSrc": "8736:6:14",
																	"nodeType": "YulTypedName",
																	"src": "8736:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8823:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "8823:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8834:2:14",
																				"nodeType": "YulLiteral",
																				"src": "8834:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8819:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8819:3:14"
																		},
																		"nativeSrc": "8819:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8819:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail_1",
																				"nativeSrc": "8843:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "8843:6:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8851:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "8851:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8839:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8839:3:14"
																		},
																		"nativeSrc": "8839:22:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8839:22:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8812:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8812:6:14"
																},
																"nativeSrc": "8812:50:14",
																"nodeType": "YulFunctionCall",
																"src": "8812:50:14"
															},
															"nativeSrc": "8812:50:14",
															"nodeType": "YulExpressionStatement",
															"src": "8812:50:14"
														},
														{
															"nativeSrc": "8871:52:14",
															"nodeType": "YulAssignment",
															"src": "8871:52:14",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "8908:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "8908:6:14"
																	},
																	{
																		"name": "tail_1",
																		"nativeSrc": "8916:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "8916:6:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string_memory_ptr",
																	"nativeSrc": "8879:28:14",
																	"nodeType": "YulIdentifier",
																	"src": "8879:28:14"
																},
																"nativeSrc": "8879:44:14",
																"nodeType": "YulFunctionCall",
																"src": "8879:44:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8871:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "8871:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8943:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "8943:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8954:2:14",
																				"nodeType": "YulLiteral",
																				"src": "8954:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8939:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8939:3:14"
																		},
																		"nativeSrc": "8939:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8939:18:14"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "8959:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "8959:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8932:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8932:6:14"
																},
																"nativeSrc": "8932:34:14",
																"nodeType": "YulFunctionCall",
																"src": "8932:34:14"
															},
															"nativeSrc": "8932:34:14",
															"nodeType": "YulExpressionStatement",
															"src": "8932:34:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8986:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "8986:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8997:2:14",
																				"nodeType": "YulLiteral",
																				"src": "8997:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8982:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "8982:3:14"
																		},
																		"nativeSrc": "8982:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "8982:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value3",
																						"nativeSrc": "9016:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "9016:6:14"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "9009:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "9009:6:14"
																				},
																				"nativeSrc": "9009:14:14",
																				"nodeType": "YulFunctionCall",
																				"src": "9009:14:14"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "9002:6:14",
																			"nodeType": "YulIdentifier",
																			"src": "9002:6:14"
																		},
																		"nativeSrc": "9002:22:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9002:22:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8975:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "8975:6:14"
																},
																"nativeSrc": "8975:50:14",
																"nodeType": "YulFunctionCall",
																"src": "8975:50:14"
															},
															"nativeSrc": "8975:50:14",
															"nodeType": "YulExpressionStatement",
															"src": "8975:50:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_bool__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_bool__fromStack_reversed",
												"nativeSrc": "8472:559:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8636:9:14",
														"nodeType": "YulTypedName",
														"src": "8636:9:14",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "8647:6:14",
														"nodeType": "YulTypedName",
														"src": "8647:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "8655:6:14",
														"nodeType": "YulTypedName",
														"src": "8655:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "8663:6:14",
														"nodeType": "YulTypedName",
														"src": "8663:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8671:6:14",
														"nodeType": "YulTypedName",
														"src": "8671:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8682:4:14",
														"nodeType": "YulTypedName",
														"src": "8682:4:14",
														"type": ""
													}
												],
												"src": "8472:559:14"
											},
											{
												"body": {
													"nativeSrc": "9333:382:14",
													"nodeType": "YulBlock",
													"src": "9333:382:14",
													"statements": [
														{
															"nativeSrc": "9343:27:14",
															"nodeType": "YulAssignment",
															"src": "9343:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9355:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "9355:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9366:3:14",
																		"nodeType": "YulLiteral",
																		"src": "9366:3:14",
																		"type": "",
																		"value": "256"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9351:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "9351:3:14"
																},
																"nativeSrc": "9351:19:14",
																"nodeType": "YulFunctionCall",
																"src": "9351:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9343:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "9343:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9386:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "9386:9:14"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "9397:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "9397:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9379:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9379:6:14"
																},
																"nativeSrc": "9379:25:14",
																"nodeType": "YulFunctionCall",
																"src": "9379:25:14"
															},
															"nativeSrc": "9379:25:14",
															"nodeType": "YulExpressionStatement",
															"src": "9379:25:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9424:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "9424:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9435:2:14",
																				"nodeType": "YulLiteral",
																				"src": "9435:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9420:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9420:3:14"
																		},
																		"nativeSrc": "9420:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9420:18:14"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "9440:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "9440:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9413:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9413:6:14"
																},
																"nativeSrc": "9413:34:14",
																"nodeType": "YulFunctionCall",
																"src": "9413:34:14"
															},
															"nativeSrc": "9413:34:14",
															"nodeType": "YulExpressionStatement",
															"src": "9413:34:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9467:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "9467:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9478:2:14",
																				"nodeType": "YulLiteral",
																				"src": "9478:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9463:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9463:3:14"
																		},
																		"nativeSrc": "9463:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9463:18:14"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "9483:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "9483:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9456:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9456:6:14"
																},
																"nativeSrc": "9456:34:14",
																"nodeType": "YulFunctionCall",
																"src": "9456:34:14"
															},
															"nativeSrc": "9456:34:14",
															"nodeType": "YulExpressionStatement",
															"src": "9456:34:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9510:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "9510:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9521:2:14",
																				"nodeType": "YulLiteral",
																				"src": "9521:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9506:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9506:3:14"
																		},
																		"nativeSrc": "9506:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9506:18:14"
																	},
																	{
																		"name": "value3",
																		"nativeSrc": "9526:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "9526:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9499:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9499:6:14"
																},
																"nativeSrc": "9499:34:14",
																"nodeType": "YulFunctionCall",
																"src": "9499:34:14"
															},
															"nativeSrc": "9499:34:14",
															"nodeType": "YulExpressionStatement",
															"src": "9499:34:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9553:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "9553:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9564:3:14",
																				"nodeType": "YulLiteral",
																				"src": "9564:3:14",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9549:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9549:3:14"
																		},
																		"nativeSrc": "9549:19:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9549:19:14"
																	},
																	{
																		"name": "value4",
																		"nativeSrc": "9570:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "9570:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9542:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9542:6:14"
																},
																"nativeSrc": "9542:35:14",
																"nodeType": "YulFunctionCall",
																"src": "9542:35:14"
															},
															"nativeSrc": "9542:35:14",
															"nodeType": "YulExpressionStatement",
															"src": "9542:35:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9597:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "9597:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9608:3:14",
																				"nodeType": "YulLiteral",
																				"src": "9608:3:14",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9593:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9593:3:14"
																		},
																		"nativeSrc": "9593:19:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9593:19:14"
																	},
																	{
																		"name": "value5",
																		"nativeSrc": "9614:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "9614:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9586:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9586:6:14"
																},
																"nativeSrc": "9586:35:14",
																"nodeType": "YulFunctionCall",
																"src": "9586:35:14"
															},
															"nativeSrc": "9586:35:14",
															"nodeType": "YulExpressionStatement",
															"src": "9586:35:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9641:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "9641:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9652:3:14",
																				"nodeType": "YulLiteral",
																				"src": "9652:3:14",
																				"type": "",
																				"value": "192"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9637:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9637:3:14"
																		},
																		"nativeSrc": "9637:19:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9637:19:14"
																	},
																	{
																		"name": "value6",
																		"nativeSrc": "9658:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "9658:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9630:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9630:6:14"
																},
																"nativeSrc": "9630:35:14",
																"nodeType": "YulFunctionCall",
																"src": "9630:35:14"
															},
															"nativeSrc": "9630:35:14",
															"nodeType": "YulExpressionStatement",
															"src": "9630:35:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9685:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "9685:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9696:3:14",
																				"nodeType": "YulLiteral",
																				"src": "9696:3:14",
																				"type": "",
																				"value": "224"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9681:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9681:3:14"
																		},
																		"nativeSrc": "9681:19:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9681:19:14"
																	},
																	{
																		"name": "value7",
																		"nativeSrc": "9702:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "9702:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9674:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9674:6:14"
																},
																"nativeSrc": "9674:35:14",
																"nodeType": "YulFunctionCall",
																"src": "9674:35:14"
															},
															"nativeSrc": "9674:35:14",
															"nodeType": "YulExpressionStatement",
															"src": "9674:35:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "9036:679:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9246:9:14",
														"nodeType": "YulTypedName",
														"src": "9246:9:14",
														"type": ""
													},
													{
														"name": "value7",
														"nativeSrc": "9257:6:14",
														"nodeType": "YulTypedName",
														"src": "9257:6:14",
														"type": ""
													},
													{
														"name": "value6",
														"nativeSrc": "9265:6:14",
														"nodeType": "YulTypedName",
														"src": "9265:6:14",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "9273:6:14",
														"nodeType": "YulTypedName",
														"src": "9273:6:14",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "9281:6:14",
														"nodeType": "YulTypedName",
														"src": "9281:6:14",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "9289:6:14",
														"nodeType": "YulTypedName",
														"src": "9289:6:14",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "9297:6:14",
														"nodeType": "YulTypedName",
														"src": "9297:6:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9305:6:14",
														"nodeType": "YulTypedName",
														"src": "9305:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9313:6:14",
														"nodeType": "YulTypedName",
														"src": "9313:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9324:4:14",
														"nodeType": "YulTypedName",
														"src": "9324:4:14",
														"type": ""
													}
												],
												"src": "9036:679:14"
											},
											{
												"body": {
													"nativeSrc": "9752:95:14",
													"nodeType": "YulBlock",
													"src": "9752:95:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9769:1:14",
																		"nodeType": "YulLiteral",
																		"src": "9769:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "9776:3:14",
																				"nodeType": "YulLiteral",
																				"src": "9776:3:14",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9781:10:14",
																				"nodeType": "YulLiteral",
																				"src": "9781:10:14",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "9772:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9772:3:14"
																		},
																		"nativeSrc": "9772:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9772:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9762:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9762:6:14"
																},
																"nativeSrc": "9762:31:14",
																"nodeType": "YulFunctionCall",
																"src": "9762:31:14"
															},
															"nativeSrc": "9762:31:14",
															"nodeType": "YulExpressionStatement",
															"src": "9762:31:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9809:1:14",
																		"nodeType": "YulLiteral",
																		"src": "9809:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9812:4:14",
																		"nodeType": "YulLiteral",
																		"src": "9812:4:14",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9802:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9802:6:14"
																},
																"nativeSrc": "9802:15:14",
																"nodeType": "YulFunctionCall",
																"src": "9802:15:14"
															},
															"nativeSrc": "9802:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "9802:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9833:1:14",
																		"nodeType": "YulLiteral",
																		"src": "9833:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9836:4:14",
																		"nodeType": "YulLiteral",
																		"src": "9836:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "9826:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "9826:6:14"
																},
																"nativeSrc": "9826:15:14",
																"nodeType": "YulFunctionCall",
																"src": "9826:15:14"
															},
															"nativeSrc": "9826:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "9826:15:14"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "9720:127:14",
												"nodeType": "YulFunctionDefinition",
												"src": "9720:127:14"
											},
											{
												"body": {
													"nativeSrc": "9902:162:14",
													"nodeType": "YulBlock",
													"src": "9902:162:14",
													"statements": [
														{
															"nativeSrc": "9912:26:14",
															"nodeType": "YulVariableDeclaration",
															"src": "9912:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "9932:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "9932:5:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "9926:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "9926:5:14"
																},
																"nativeSrc": "9926:12:14",
																"nodeType": "YulFunctionCall",
																"src": "9926:12:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "9916:6:14",
																	"nodeType": "YulTypedName",
																	"src": "9916:6:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "9953:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "9953:3:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "9962:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "9962:5:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9969:4:14",
																				"nodeType": "YulLiteral",
																				"src": "9969:4:14",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9958:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "9958:3:14"
																		},
																		"nativeSrc": "9958:16:14",
																		"nodeType": "YulFunctionCall",
																		"src": "9958:16:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "9976:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "9976:6:14"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "9947:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "9947:5:14"
																},
																"nativeSrc": "9947:36:14",
																"nodeType": "YulFunctionCall",
																"src": "9947:36:14"
															},
															"nativeSrc": "9947:36:14",
															"nodeType": "YulExpressionStatement",
															"src": "9947:36:14"
														},
														{
															"nativeSrc": "9992:26:14",
															"nodeType": "YulVariableDeclaration",
															"src": "9992:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "10006:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "10006:3:14"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "10011:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "10011:6:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10002:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "10002:3:14"
																},
																"nativeSrc": "10002:16:14",
																"nodeType": "YulFunctionCall",
																"src": "10002:16:14"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "9996:2:14",
																	"nodeType": "YulTypedName",
																	"src": "9996:2:14",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "10034:2:14",
																		"nodeType": "YulIdentifier",
																		"src": "10034:2:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10038:1:14",
																		"nodeType": "YulLiteral",
																		"src": "10038:1:14",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10027:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "10027:6:14"
																},
																"nativeSrc": "10027:13:14",
																"nodeType": "YulFunctionCall",
																"src": "10027:13:14"
															},
															"nativeSrc": "10027:13:14",
															"nodeType": "YulExpressionStatement",
															"src": "10027:13:14"
														},
														{
															"nativeSrc": "10049:9:14",
															"nodeType": "YulAssignment",
															"src": "10049:9:14",
															"value": {
																"name": "_1",
																"nativeSrc": "10056:2:14",
																"nodeType": "YulIdentifier",
																"src": "10056:2:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10049:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "10049:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_string",
												"nativeSrc": "9852:212:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "9879:5:14",
														"nodeType": "YulTypedName",
														"src": "9879:5:14",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "9886:3:14",
														"nodeType": "YulTypedName",
														"src": "9886:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "9894:3:14",
														"nodeType": "YulTypedName",
														"src": "9894:3:14",
														"type": ""
													}
												],
												"src": "9852:212:14"
											},
											{
												"body": {
													"nativeSrc": "10208:53:14",
													"nodeType": "YulBlock",
													"src": "10208:53:14",
													"statements": [
														{
															"nativeSrc": "10218:37:14",
															"nodeType": "YulAssignment",
															"src": "10218:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10243:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "10243:6:14"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "10251:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "10251:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "10225:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "10225:17:14"
																},
																"nativeSrc": "10225:30:14",
																"nodeType": "YulFunctionCall",
																"src": "10225:30:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "10218:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "10218:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "10069:192:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10184:3:14",
														"nodeType": "YulTypedName",
														"src": "10184:3:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10189:6:14",
														"nodeType": "YulTypedName",
														"src": "10189:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10200:3:14",
														"nodeType": "YulTypedName",
														"src": "10200:3:14",
														"type": ""
													}
												],
												"src": "10069:192:14"
											},
											{
												"body": {
													"nativeSrc": "10321:325:14",
													"nodeType": "YulBlock",
													"src": "10321:325:14",
													"statements": [
														{
															"nativeSrc": "10331:22:14",
															"nodeType": "YulAssignment",
															"src": "10331:22:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10345:1:14",
																		"nodeType": "YulLiteral",
																		"src": "10345:1:14",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "10348:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "10348:4:14"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "10341:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "10341:3:14"
																},
																"nativeSrc": "10341:12:14",
																"nodeType": "YulFunctionCall",
																"src": "10341:12:14"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "10331:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "10331:6:14"
																}
															]
														},
														{
															"nativeSrc": "10362:38:14",
															"nodeType": "YulVariableDeclaration",
															"src": "10362:38:14",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "10392:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "10392:4:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10398:1:14",
																		"nodeType": "YulLiteral",
																		"src": "10398:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "10388:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "10388:3:14"
																},
																"nativeSrc": "10388:12:14",
																"nodeType": "YulFunctionCall",
																"src": "10388:12:14"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "10366:18:14",
																	"nodeType": "YulTypedName",
																	"src": "10366:18:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10439:31:14",
																"nodeType": "YulBlock",
																"src": "10439:31:14",
																"statements": [
																	{
																		"nativeSrc": "10441:27:14",
																		"nodeType": "YulAssignment",
																		"src": "10441:27:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "10455:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "10455:6:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10463:4:14",
																					"nodeType": "YulLiteral",
																					"src": "10463:4:14",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "10451:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "10451:3:14"
																			},
																			"nativeSrc": "10451:17:14",
																			"nodeType": "YulFunctionCall",
																			"src": "10451:17:14"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "10441:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "10441:6:14"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "10419:18:14",
																		"nodeType": "YulIdentifier",
																		"src": "10419:18:14"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10412:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "10412:6:14"
																},
																"nativeSrc": "10412:26:14",
																"nodeType": "YulFunctionCall",
																"src": "10412:26:14"
															},
															"nativeSrc": "10409:61:14",
															"nodeType": "YulIf",
															"src": "10409:61:14"
														},
														{
															"body": {
																"nativeSrc": "10529:111:14",
																"nodeType": "YulBlock",
																"src": "10529:111:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10550:1:14",
																					"nodeType": "YulLiteral",
																					"src": "10550:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "10557:3:14",
																							"nodeType": "YulLiteral",
																							"src": "10557:3:14",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "10562:10:14",
																							"nodeType": "YulLiteral",
																							"src": "10562:10:14",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "10553:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "10553:3:14"
																					},
																					"nativeSrc": "10553:20:14",
																					"nodeType": "YulFunctionCall",
																					"src": "10553:20:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "10543:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "10543:6:14"
																			},
																			"nativeSrc": "10543:31:14",
																			"nodeType": "YulFunctionCall",
																			"src": "10543:31:14"
																		},
																		"nativeSrc": "10543:31:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "10543:31:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10594:1:14",
																					"nodeType": "YulLiteral",
																					"src": "10594:1:14",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10597:4:14",
																					"nodeType": "YulLiteral",
																					"src": "10597:4:14",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "10587:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "10587:6:14"
																			},
																			"nativeSrc": "10587:15:14",
																			"nodeType": "YulFunctionCall",
																			"src": "10587:15:14"
																		},
																		"nativeSrc": "10587:15:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "10587:15:14"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10622:1:14",
																					"nodeType": "YulLiteral",
																					"src": "10622:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10625:4:14",
																					"nodeType": "YulLiteral",
																					"src": "10625:4:14",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "10615:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "10615:6:14"
																			},
																			"nativeSrc": "10615:15:14",
																			"nodeType": "YulFunctionCall",
																			"src": "10615:15:14"
																		},
																		"nativeSrc": "10615:15:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "10615:15:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "10485:18:14",
																		"nodeType": "YulIdentifier",
																		"src": "10485:18:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "10508:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "10508:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10516:2:14",
																				"nodeType": "YulLiteral",
																				"src": "10516:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "10505:2:14",
																			"nodeType": "YulIdentifier",
																			"src": "10505:2:14"
																		},
																		"nativeSrc": "10505:14:14",
																		"nodeType": "YulFunctionCall",
																		"src": "10505:14:14"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "10482:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "10482:2:14"
																},
																"nativeSrc": "10482:38:14",
																"nodeType": "YulFunctionCall",
																"src": "10482:38:14"
															},
															"nativeSrc": "10479:161:14",
															"nodeType": "YulIf",
															"src": "10479:161:14"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "10266:380:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "10301:4:14",
														"nodeType": "YulTypedName",
														"src": "10301:4:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "10310:6:14",
														"nodeType": "YulTypedName",
														"src": "10310:6:14",
														"type": ""
													}
												],
												"src": "10266:380:14"
											},
											{
												"body": {
													"nativeSrc": "10707:65:14",
													"nodeType": "YulBlock",
													"src": "10707:65:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10724:1:14",
																		"nodeType": "YulLiteral",
																		"src": "10724:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "10727:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "10727:3:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10717:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "10717:6:14"
																},
																"nativeSrc": "10717:14:14",
																"nodeType": "YulFunctionCall",
																"src": "10717:14:14"
															},
															"nativeSrc": "10717:14:14",
															"nodeType": "YulExpressionStatement",
															"src": "10717:14:14"
														},
														{
															"nativeSrc": "10740:26:14",
															"nodeType": "YulAssignment",
															"src": "10740:26:14",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10758:1:14",
																		"nodeType": "YulLiteral",
																		"src": "10758:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10761:4:14",
																		"nodeType": "YulLiteral",
																		"src": "10761:4:14",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "10748:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "10748:9:14"
																},
																"nativeSrc": "10748:18:14",
																"nodeType": "YulFunctionCall",
																"src": "10748:18:14"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "10740:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "10740:4:14"
																}
															]
														}
													]
												},
												"name": "array_dataslot_string_storage",
												"nativeSrc": "10651:121:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "10690:3:14",
														"nodeType": "YulTypedName",
														"src": "10690:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "10698:4:14",
														"nodeType": "YulTypedName",
														"src": "10698:4:14",
														"type": ""
													}
												],
												"src": "10651:121:14"
											},
											{
												"body": {
													"nativeSrc": "10913:707:14",
													"nodeType": "YulBlock",
													"src": "10913:707:14",
													"statements": [
														{
															"nativeSrc": "10923:12:14",
															"nodeType": "YulVariableDeclaration",
															"src": "10923:12:14",
															"value": {
																"kind": "number",
																"nativeSrc": "10934:1:14",
																"nodeType": "YulLiteral",
																"src": "10934:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "ret",
																	"nativeSrc": "10927:3:14",
																	"nodeType": "YulTypedName",
																	"src": "10927:3:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10944:30:14",
															"nodeType": "YulVariableDeclaration",
															"src": "10944:30:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "10967:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "10967:6:14"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nativeSrc": "10961:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "10961:5:14"
																},
																"nativeSrc": "10961:13:14",
																"nodeType": "YulFunctionCall",
																"src": "10961:13:14"
															},
															"variables": [
																{
																	"name": "slotValue",
																	"nativeSrc": "10948:9:14",
																	"nodeType": "YulTypedName",
																	"src": "10948:9:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "10983:50:14",
															"nodeType": "YulVariableDeclaration",
															"src": "10983:50:14",
															"value": {
																"arguments": [
																	{
																		"name": "slotValue",
																		"nativeSrc": "11023:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "11023:9:14"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "10997:25:14",
																	"nodeType": "YulIdentifier",
																	"src": "10997:25:14"
																},
																"nativeSrc": "10997:36:14",
																"nodeType": "YulFunctionCall",
																"src": "10997:36:14"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "10987:6:14",
																	"nodeType": "YulTypedName",
																	"src": "10987:6:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11042:11:14",
															"nodeType": "YulVariableDeclaration",
															"src": "11042:11:14",
															"value": {
																"kind": "number",
																"nativeSrc": "11052:1:14",
																"nodeType": "YulLiteral",
																"src": "11052:1:14",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "11046:2:14",
																	"nodeType": "YulTypedName",
																	"src": "11046:2:14",
																	"type": ""
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "11102:126:14",
																		"nodeType": "YulBlock",
																		"src": "11102:126:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "11123:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "11123:3:14"
																						},
																						{
																							"arguments": [
																								{
																									"name": "slotValue",
																									"nativeSrc": "11132:9:14",
																									"nodeType": "YulIdentifier",
																									"src": "11132:9:14"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "11147:3:14",
																											"nodeType": "YulLiteral",
																											"src": "11147:3:14",
																											"type": "",
																											"value": "255"
																										}
																									],
																									"functionName": {
																										"name": "not",
																										"nativeSrc": "11143:3:14",
																										"nodeType": "YulIdentifier",
																										"src": "11143:3:14"
																									},
																									"nativeSrc": "11143:8:14",
																									"nodeType": "YulFunctionCall",
																									"src": "11143:8:14"
																								}
																							],
																							"functionName": {
																								"name": "and",
																								"nativeSrc": "11128:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "11128:3:14"
																							},
																							"nativeSrc": "11128:24:14",
																							"nodeType": "YulFunctionCall",
																							"src": "11128:24:14"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nativeSrc": "11116:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "11116:6:14"
																					},
																					"nativeSrc": "11116:37:14",
																					"nodeType": "YulFunctionCall",
																					"src": "11116:37:14"
																				},
																				"nativeSrc": "11116:37:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "11116:37:14"
																			},
																			{
																				"nativeSrc": "11166:52:14",
																				"nodeType": "YulAssignment",
																				"src": "11166:52:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "11177:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "11177:3:14"
																						},
																						{
																							"arguments": [
																								{
																									"name": "length",
																									"nativeSrc": "11186:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "11186:6:14"
																								},
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"name": "length",
																													"nativeSrc": "11208:6:14",
																													"nodeType": "YulIdentifier",
																													"src": "11208:6:14"
																												}
																											],
																											"functionName": {
																												"name": "iszero",
																												"nativeSrc": "11201:6:14",
																												"nodeType": "YulIdentifier",
																												"src": "11201:6:14"
																											},
																											"nativeSrc": "11201:14:14",
																											"nodeType": "YulFunctionCall",
																											"src": "11201:14:14"
																										}
																									],
																									"functionName": {
																										"name": "iszero",
																										"nativeSrc": "11194:6:14",
																										"nodeType": "YulIdentifier",
																										"src": "11194:6:14"
																									},
																									"nativeSrc": "11194:22:14",
																									"nodeType": "YulFunctionCall",
																									"src": "11194:22:14"
																								}
																							],
																							"functionName": {
																								"name": "mul",
																								"nativeSrc": "11182:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "11182:3:14"
																							},
																							"nativeSrc": "11182:35:14",
																							"nodeType": "YulFunctionCall",
																							"src": "11182:35:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "11173:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "11173:3:14"
																					},
																					"nativeSrc": "11173:45:14",
																					"nodeType": "YulFunctionCall",
																					"src": "11173:45:14"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nativeSrc": "11166:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "11166:3:14"
																					}
																				]
																			}
																		]
																	},
																	"nativeSrc": "11095:133:14",
																	"nodeType": "YulCase",
																	"src": "11095:133:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11100:1:14",
																		"nodeType": "YulLiteral",
																		"src": "11100:1:14",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "11244:351:14",
																		"nodeType": "YulBlock",
																		"src": "11244:351:14",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "11265:1:14",
																							"nodeType": "YulLiteral",
																							"src": "11265:1:14",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"name": "value0",
																							"nativeSrc": "11268:6:14",
																							"nodeType": "YulIdentifier",
																							"src": "11268:6:14"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nativeSrc": "11258:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "11258:6:14"
																					},
																					"nativeSrc": "11258:17:14",
																					"nodeType": "YulFunctionCall",
																					"src": "11258:17:14"
																				},
																				"nativeSrc": "11258:17:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "11258:17:14"
																			},
																			{
																				"nativeSrc": "11288:14:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "11288:14:14",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "11298:4:14",
																					"nodeType": "YulLiteral",
																					"src": "11298:4:14",
																					"type": "",
																					"value": "0x20"
																				},
																				"variables": [
																					{
																						"name": "_2",
																						"nativeSrc": "11292:2:14",
																						"nodeType": "YulTypedName",
																						"src": "11292:2:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "11315:33:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "11315:33:14",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "11340:1:14",
																							"nodeType": "YulLiteral",
																							"src": "11340:1:14",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "11343:4:14",
																							"nodeType": "YulLiteral",
																							"src": "11343:4:14",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "keccak256",
																						"nativeSrc": "11330:9:14",
																						"nodeType": "YulIdentifier",
																						"src": "11330:9:14"
																					},
																					"nativeSrc": "11330:18:14",
																					"nodeType": "YulFunctionCall",
																					"src": "11330:18:14"
																				},
																				"variables": [
																					{
																						"name": "dataPos",
																						"nativeSrc": "11319:7:14",
																						"nodeType": "YulTypedName",
																						"src": "11319:7:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "11361:10:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "11361:10:14",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "11370:1:14",
																					"nodeType": "YulLiteral",
																					"src": "11370:1:14",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "11365:1:14",
																						"nodeType": "YulTypedName",
																						"src": "11365:1:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "11438:111:14",
																					"nodeType": "YulBlock",
																					"src": "11438:111:14",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "pos",
																												"nativeSrc": "11467:3:14",
																												"nodeType": "YulIdentifier",
																												"src": "11467:3:14"
																											},
																											{
																												"name": "i",
																												"nativeSrc": "11472:1:14",
																												"nodeType": "YulIdentifier",
																												"src": "11472:1:14"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "11463:3:14",
																											"nodeType": "YulIdentifier",
																											"src": "11463:3:14"
																										},
																										"nativeSrc": "11463:11:14",
																										"nodeType": "YulFunctionCall",
																										"src": "11463:11:14"
																									},
																									{
																										"arguments": [
																											{
																												"name": "dataPos",
																												"nativeSrc": "11482:7:14",
																												"nodeType": "YulIdentifier",
																												"src": "11482:7:14"
																											}
																										],
																										"functionName": {
																											"name": "sload",
																											"nativeSrc": "11476:5:14",
																											"nodeType": "YulIdentifier",
																											"src": "11476:5:14"
																										},
																										"nativeSrc": "11476:14:14",
																										"nodeType": "YulFunctionCall",
																										"src": "11476:14:14"
																									}
																								],
																								"functionName": {
																									"name": "mstore",
																									"nativeSrc": "11456:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "11456:6:14"
																								},
																								"nativeSrc": "11456:35:14",
																								"nodeType": "YulFunctionCall",
																								"src": "11456:35:14"
																							},
																							"nativeSrc": "11456:35:14",
																							"nodeType": "YulExpressionStatement",
																							"src": "11456:35:14"
																						},
																						{
																							"nativeSrc": "11508:27:14",
																							"nodeType": "YulAssignment",
																							"src": "11508:27:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "dataPos",
																										"nativeSrc": "11523:7:14",
																										"nodeType": "YulIdentifier",
																										"src": "11523:7:14"
																									},
																									{
																										"name": "_1",
																										"nativeSrc": "11532:2:14",
																										"nodeType": "YulIdentifier",
																										"src": "11532:2:14"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "11519:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "11519:3:14"
																								},
																								"nativeSrc": "11519:16:14",
																								"nodeType": "YulFunctionCall",
																								"src": "11519:16:14"
																							},
																							"variableNames": [
																								{
																									"name": "dataPos",
																									"nativeSrc": "11508:7:14",
																									"nodeType": "YulIdentifier",
																									"src": "11508:7:14"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "11395:1:14",
																							"nodeType": "YulIdentifier",
																							"src": "11395:1:14"
																						},
																						{
																							"name": "length",
																							"nativeSrc": "11398:6:14",
																							"nodeType": "YulIdentifier",
																							"src": "11398:6:14"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "11392:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "11392:2:14"
																					},
																					"nativeSrc": "11392:13:14",
																					"nodeType": "YulFunctionCall",
																					"src": "11392:13:14"
																				},
																				"nativeSrc": "11384:165:14",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "11406:19:14",
																					"nodeType": "YulBlock",
																					"src": "11406:19:14",
																					"statements": [
																						{
																							"nativeSrc": "11408:15:14",
																							"nodeType": "YulAssignment",
																							"src": "11408:15:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "11417:1:14",
																										"nodeType": "YulIdentifier",
																										"src": "11417:1:14"
																									},
																									{
																										"name": "_2",
																										"nativeSrc": "11420:2:14",
																										"nodeType": "YulIdentifier",
																										"src": "11420:2:14"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "11413:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "11413:3:14"
																								},
																								"nativeSrc": "11413:10:14",
																								"nodeType": "YulFunctionCall",
																								"src": "11413:10:14"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "11408:1:14",
																									"nodeType": "YulIdentifier",
																									"src": "11408:1:14"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "11388:3:14",
																					"nodeType": "YulBlock",
																					"src": "11388:3:14",
																					"statements": []
																				},
																				"src": "11384:165:14"
																			},
																			{
																				"nativeSrc": "11562:23:14",
																				"nodeType": "YulAssignment",
																				"src": "11562:23:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "11573:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "11573:3:14"
																						},
																						{
																							"name": "length",
																							"nativeSrc": "11578:6:14",
																							"nodeType": "YulIdentifier",
																							"src": "11578:6:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "11569:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "11569:3:14"
																					},
																					"nativeSrc": "11569:16:14",
																					"nodeType": "YulFunctionCall",
																					"src": "11569:16:14"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nativeSrc": "11562:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "11562:3:14"
																					}
																				]
																			}
																		]
																	},
																	"nativeSrc": "11237:358:14",
																	"nodeType": "YulCase",
																	"src": "11237:358:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11242:1:14",
																		"nodeType": "YulLiteral",
																		"src": "11242:1:14",
																		"type": "",
																		"value": "1"
																	}
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "slotValue",
																		"nativeSrc": "11073:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "11073:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11084:1:14",
																		"nodeType": "YulLiteral",
																		"src": "11084:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "11069:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "11069:3:14"
																},
																"nativeSrc": "11069:17:14",
																"nodeType": "YulFunctionCall",
																"src": "11069:17:14"
															},
															"nativeSrc": "11062:533:14",
															"nodeType": "YulSwitch",
															"src": "11062:533:14"
														},
														{
															"nativeSrc": "11604:10:14",
															"nodeType": "YulAssignment",
															"src": "11604:10:14",
															"value": {
																"name": "ret",
																"nativeSrc": "11611:3:14",
																"nodeType": "YulIdentifier",
																"src": "11611:3:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "11604:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "11604:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_string_storage__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "10777:843:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "10889:3:14",
														"nodeType": "YulTypedName",
														"src": "10889:3:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "10894:6:14",
														"nodeType": "YulTypedName",
														"src": "10894:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "10905:3:14",
														"nodeType": "YulTypedName",
														"src": "10905:3:14",
														"type": ""
													}
												],
												"src": "10777:843:14"
											},
											{
												"body": {
													"nativeSrc": "11657:95:14",
													"nodeType": "YulBlock",
													"src": "11657:95:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11674:1:14",
																		"nodeType": "YulLiteral",
																		"src": "11674:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "11681:3:14",
																				"nodeType": "YulLiteral",
																				"src": "11681:3:14",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11686:10:14",
																				"nodeType": "YulLiteral",
																				"src": "11686:10:14",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "11677:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "11677:3:14"
																		},
																		"nativeSrc": "11677:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "11677:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11667:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "11667:6:14"
																},
																"nativeSrc": "11667:31:14",
																"nodeType": "YulFunctionCall",
																"src": "11667:31:14"
															},
															"nativeSrc": "11667:31:14",
															"nodeType": "YulExpressionStatement",
															"src": "11667:31:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11714:1:14",
																		"nodeType": "YulLiteral",
																		"src": "11714:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11717:4:14",
																		"nodeType": "YulLiteral",
																		"src": "11717:4:14",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11707:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "11707:6:14"
																},
																"nativeSrc": "11707:15:14",
																"nodeType": "YulFunctionCall",
																"src": "11707:15:14"
															},
															"nativeSrc": "11707:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "11707:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "11738:1:14",
																		"nodeType": "YulLiteral",
																		"src": "11738:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11741:4:14",
																		"nodeType": "YulLiteral",
																		"src": "11741:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "11731:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "11731:6:14"
																},
																"nativeSrc": "11731:15:14",
																"nodeType": "YulFunctionCall",
																"src": "11731:15:14"
															},
															"nativeSrc": "11731:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "11731:15:14"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "11625:127:14",
												"nodeType": "YulFunctionDefinition",
												"src": "11625:127:14"
											},
											{
												"body": {
													"nativeSrc": "11805:77:14",
													"nodeType": "YulBlock",
													"src": "11805:77:14",
													"statements": [
														{
															"nativeSrc": "11815:16:14",
															"nodeType": "YulAssignment",
															"src": "11815:16:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11826:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "11826:1:14"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11829:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "11829:1:14"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11822:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "11822:3:14"
																},
																"nativeSrc": "11822:9:14",
																"nodeType": "YulFunctionCall",
																"src": "11822:9:14"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "11815:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "11815:3:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11854:22:14",
																"nodeType": "YulBlock",
																"src": "11854:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "11856:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "11856:16:14"
																			},
																			"nativeSrc": "11856:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "11856:18:14"
																		},
																		"nativeSrc": "11856:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "11856:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11846:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "11846:1:14"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "11849:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "11849:3:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11843:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "11843:2:14"
																},
																"nativeSrc": "11843:10:14",
																"nodeType": "YulFunctionCall",
																"src": "11843:10:14"
															},
															"nativeSrc": "11840:36:14",
															"nodeType": "YulIf",
															"src": "11840:36:14"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "11757:125:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "11788:1:14",
														"nodeType": "YulTypedName",
														"src": "11788:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "11791:1:14",
														"nodeType": "YulTypedName",
														"src": "11791:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "11797:3:14",
														"nodeType": "YulTypedName",
														"src": "11797:3:14",
														"type": ""
													}
												],
												"src": "11757:125:14"
											},
											{
												"body": {
													"nativeSrc": "11968:437:14",
													"nodeType": "YulBlock",
													"src": "11968:437:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "12001:398:14",
																"nodeType": "YulBlock",
																"src": "12001:398:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12022:1:14",
																					"nodeType": "YulLiteral",
																					"src": "12022:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "12025:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "12025:5:14"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "12015:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "12015:6:14"
																			},
																			"nativeSrc": "12015:16:14",
																			"nodeType": "YulFunctionCall",
																			"src": "12015:16:14"
																		},
																		"nativeSrc": "12015:16:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "12015:16:14"
																	},
																	{
																		"nativeSrc": "12044:30:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "12044:30:14",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12066:1:14",
																					"nodeType": "YulLiteral",
																					"src": "12066:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12069:4:14",
																					"nodeType": "YulLiteral",
																					"src": "12069:4:14",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "12056:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "12056:9:14"
																			},
																			"nativeSrc": "12056:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "12056:18:14"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "12048:4:14",
																				"nodeType": "YulTypedName",
																				"src": "12048:4:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "12087:57:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "12087:57:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "12110:4:14",
																					"nodeType": "YulIdentifier",
																					"src": "12110:4:14"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "12120:1:14",
																							"nodeType": "YulLiteral",
																							"src": "12120:1:14",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "12127:10:14",
																									"nodeType": "YulIdentifier",
																									"src": "12127:10:14"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "12139:2:14",
																									"nodeType": "YulLiteral",
																									"src": "12139:2:14",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "12123:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "12123:3:14"
																							},
																							"nativeSrc": "12123:19:14",
																							"nodeType": "YulFunctionCall",
																							"src": "12123:19:14"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "12116:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "12116:3:14"
																					},
																					"nativeSrc": "12116:27:14",
																					"nodeType": "YulFunctionCall",
																					"src": "12116:27:14"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "12106:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "12106:3:14"
																			},
																			"nativeSrc": "12106:38:14",
																			"nodeType": "YulFunctionCall",
																			"src": "12106:38:14"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "12091:11:14",
																				"nodeType": "YulTypedName",
																				"src": "12091:11:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "12181:23:14",
																			"nodeType": "YulBlock",
																			"src": "12181:23:14",
																			"statements": [
																				{
																					"nativeSrc": "12183:19:14",
																					"nodeType": "YulAssignment",
																					"src": "12183:19:14",
																					"value": {
																						"name": "data",
																						"nativeSrc": "12198:4:14",
																						"nodeType": "YulIdentifier",
																						"src": "12198:4:14"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "12183:11:14",
																							"nodeType": "YulIdentifier",
																							"src": "12183:11:14"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "12163:10:14",
																					"nodeType": "YulIdentifier",
																					"src": "12163:10:14"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12175:4:14",
																					"nodeType": "YulLiteral",
																					"src": "12175:4:14",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "12160:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "12160:2:14"
																			},
																			"nativeSrc": "12160:20:14",
																			"nodeType": "YulFunctionCall",
																			"src": "12160:20:14"
																		},
																		"nativeSrc": "12157:47:14",
																		"nodeType": "YulIf",
																		"src": "12157:47:14"
																	},
																	{
																		"nativeSrc": "12217:41:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "12217:41:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "12231:4:14",
																					"nodeType": "YulIdentifier",
																					"src": "12231:4:14"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "12241:1:14",
																							"nodeType": "YulLiteral",
																							"src": "12241:1:14",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "12248:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "12248:3:14"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "12253:2:14",
																									"nodeType": "YulLiteral",
																									"src": "12253:2:14",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "12244:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "12244:3:14"
																							},
																							"nativeSrc": "12244:12:14",
																							"nodeType": "YulFunctionCall",
																							"src": "12244:12:14"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "12237:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "12237:3:14"
																					},
																					"nativeSrc": "12237:20:14",
																					"nodeType": "YulFunctionCall",
																					"src": "12237:20:14"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "12227:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "12227:3:14"
																			},
																			"nativeSrc": "12227:31:14",
																			"nodeType": "YulFunctionCall",
																			"src": "12227:31:14"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "12221:2:14",
																				"nodeType": "YulTypedName",
																				"src": "12221:2:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "12271:24:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "12271:24:14",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "12284:11:14",
																			"nodeType": "YulIdentifier",
																			"src": "12284:11:14"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "12275:5:14",
																				"nodeType": "YulTypedName",
																				"src": "12275:5:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "12369:20:14",
																			"nodeType": "YulBlock",
																			"src": "12369:20:14",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "12378:5:14",
																								"nodeType": "YulIdentifier",
																								"src": "12378:5:14"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "12385:1:14",
																								"nodeType": "YulLiteral",
																								"src": "12385:1:14",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "12371:6:14",
																							"nodeType": "YulIdentifier",
																							"src": "12371:6:14"
																						},
																						"nativeSrc": "12371:16:14",
																						"nodeType": "YulFunctionCall",
																						"src": "12371:16:14"
																					},
																					"nativeSrc": "12371:16:14",
																					"nodeType": "YulExpressionStatement",
																					"src": "12371:16:14"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "12319:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "12319:5:14"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "12326:2:14",
																					"nodeType": "YulIdentifier",
																					"src": "12326:2:14"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "12316:2:14",
																				"nodeType": "YulIdentifier",
																				"src": "12316:2:14"
																			},
																			"nativeSrc": "12316:13:14",
																			"nodeType": "YulFunctionCall",
																			"src": "12316:13:14"
																		},
																		"nativeSrc": "12308:81:14",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "12330:26:14",
																			"nodeType": "YulBlock",
																			"src": "12330:26:14",
																			"statements": [
																				{
																					"nativeSrc": "12332:22:14",
																					"nodeType": "YulAssignment",
																					"src": "12332:22:14",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "12345:5:14",
																								"nodeType": "YulIdentifier",
																								"src": "12345:5:14"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "12352:1:14",
																								"nodeType": "YulLiteral",
																								"src": "12352:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "12341:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "12341:3:14"
																						},
																						"nativeSrc": "12341:13:14",
																						"nodeType": "YulFunctionCall",
																						"src": "12341:13:14"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "12332:5:14",
																							"nodeType": "YulIdentifier",
																							"src": "12332:5:14"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "12312:3:14",
																			"nodeType": "YulBlock",
																			"src": "12312:3:14",
																			"statements": []
																		},
																		"src": "12308:81:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "11984:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "11984:3:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11989:2:14",
																		"nodeType": "YulLiteral",
																		"src": "11989:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11981:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "11981:2:14"
																},
																"nativeSrc": "11981:11:14",
																"nodeType": "YulFunctionCall",
																"src": "11981:11:14"
															},
															"nativeSrc": "11978:421:14",
															"nodeType": "YulIf",
															"src": "11978:421:14"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_string_storage",
												"nativeSrc": "11887:518:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "11940:5:14",
														"nodeType": "YulTypedName",
														"src": "11940:5:14",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "11947:3:14",
														"nodeType": "YulTypedName",
														"src": "11947:3:14",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "11952:10:14",
														"nodeType": "YulTypedName",
														"src": "11952:10:14",
														"type": ""
													}
												],
												"src": "11887:518:14"
											},
											{
												"body": {
													"nativeSrc": "12495:81:14",
													"nodeType": "YulBlock",
													"src": "12495:81:14",
													"statements": [
														{
															"nativeSrc": "12505:65:14",
															"nodeType": "YulAssignment",
															"src": "12505:65:14",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "12520:4:14",
																				"nodeType": "YulIdentifier",
																				"src": "12520:4:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "12538:1:14",
																										"nodeType": "YulLiteral",
																										"src": "12538:1:14",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "12541:3:14",
																										"nodeType": "YulIdentifier",
																										"src": "12541:3:14"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "12534:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "12534:3:14"
																								},
																								"nativeSrc": "12534:11:14",
																								"nodeType": "YulFunctionCall",
																								"src": "12534:11:14"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "12551:1:14",
																										"nodeType": "YulLiteral",
																										"src": "12551:1:14",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "12547:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "12547:3:14"
																								},
																								"nativeSrc": "12547:6:14",
																								"nodeType": "YulFunctionCall",
																								"src": "12547:6:14"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "12530:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "12530:3:14"
																						},
																						"nativeSrc": "12530:24:14",
																						"nodeType": "YulFunctionCall",
																						"src": "12530:24:14"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "12526:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "12526:3:14"
																				},
																				"nativeSrc": "12526:29:14",
																				"nodeType": "YulFunctionCall",
																				"src": "12526:29:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "12516:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "12516:3:14"
																		},
																		"nativeSrc": "12516:40:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12516:40:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "12562:1:14",
																				"nodeType": "YulLiteral",
																				"src": "12562:1:14",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "12565:3:14",
																				"nodeType": "YulIdentifier",
																				"src": "12565:3:14"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "12558:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "12558:3:14"
																		},
																		"nativeSrc": "12558:11:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12558:11:14"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "12513:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "12513:2:14"
																},
																"nativeSrc": "12513:57:14",
																"nodeType": "YulFunctionCall",
																"src": "12513:57:14"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "12505:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "12505:4:14"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "12410:166:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "12472:4:14",
														"nodeType": "YulTypedName",
														"src": "12472:4:14",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "12478:3:14",
														"nodeType": "YulTypedName",
														"src": "12478:3:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "12486:4:14",
														"nodeType": "YulTypedName",
														"src": "12486:4:14",
														"type": ""
													}
												],
												"src": "12410:166:14"
											},
											{
												"body": {
													"nativeSrc": "12677:1249:14",
													"nodeType": "YulBlock",
													"src": "12677:1249:14",
													"statements": [
														{
															"nativeSrc": "12687:24:14",
															"nodeType": "YulVariableDeclaration",
															"src": "12687:24:14",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "12707:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "12707:3:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12701:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "12701:5:14"
																},
																"nativeSrc": "12701:10:14",
																"nodeType": "YulFunctionCall",
																"src": "12701:10:14"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "12691:6:14",
																	"nodeType": "YulTypedName",
																	"src": "12691:6:14",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "12754:22:14",
																"nodeType": "YulBlock",
																"src": "12754:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "12756:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "12756:16:14"
																			},
																			"nativeSrc": "12756:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "12756:18:14"
																		},
																		"nativeSrc": "12756:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "12756:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "12726:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "12726:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12734:18:14",
																		"nodeType": "YulLiteral",
																		"src": "12734:18:14",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12723:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "12723:2:14"
																},
																"nativeSrc": "12723:30:14",
																"nodeType": "YulFunctionCall",
																"src": "12723:30:14"
															},
															"nativeSrc": "12720:56:14",
															"nodeType": "YulIf",
															"src": "12720:56:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "12829:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "12829:4:14"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "12867:4:14",
																						"nodeType": "YulIdentifier",
																						"src": "12867:4:14"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "12861:5:14",
																					"nodeType": "YulIdentifier",
																					"src": "12861:5:14"
																				},
																				"nativeSrc": "12861:11:14",
																				"nodeType": "YulFunctionCall",
																				"src": "12861:11:14"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "12835:25:14",
																			"nodeType": "YulIdentifier",
																			"src": "12835:25:14"
																		},
																		"nativeSrc": "12835:38:14",
																		"nodeType": "YulFunctionCall",
																		"src": "12835:38:14"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "12875:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "12875:6:14"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_string_storage",
																	"nativeSrc": "12785:43:14",
																	"nodeType": "YulIdentifier",
																	"src": "12785:43:14"
																},
																"nativeSrc": "12785:97:14",
																"nodeType": "YulFunctionCall",
																"src": "12785:97:14"
															},
															"nativeSrc": "12785:97:14",
															"nodeType": "YulExpressionStatement",
															"src": "12785:97:14"
														},
														{
															"nativeSrc": "12891:18:14",
															"nodeType": "YulVariableDeclaration",
															"src": "12891:18:14",
															"value": {
																"kind": "number",
																"nativeSrc": "12908:1:14",
																"nodeType": "YulLiteral",
																"src": "12908:1:14",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "12895:9:14",
																	"nodeType": "YulTypedName",
																	"src": "12895:9:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12918:23:14",
															"nodeType": "YulVariableDeclaration",
															"src": "12918:23:14",
															"value": {
																"kind": "number",
																"nativeSrc": "12937:4:14",
																"nodeType": "YulLiteral",
																"src": "12937:4:14",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "12922:11:14",
																	"nodeType": "YulTypedName",
																	"src": "12922:11:14",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "12950:17:14",
															"nodeType": "YulAssignment",
															"src": "12950:17:14",
															"value": {
																"kind": "number",
																"nativeSrc": "12963:4:14",
																"nodeType": "YulLiteral",
																"src": "12963:4:14",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "12950:9:14",
																	"nodeType": "YulIdentifier",
																	"src": "12950:9:14"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "13013:656:14",
																		"nodeType": "YulBlock",
																		"src": "13013:656:14",
																		"statements": [
																			{
																				"nativeSrc": "13027:35:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "13027:35:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "13046:6:14",
																							"nodeType": "YulIdentifier",
																							"src": "13046:6:14"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "13058:2:14",
																									"nodeType": "YulLiteral",
																									"src": "13058:2:14",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "13054:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "13054:3:14"
																							},
																							"nativeSrc": "13054:7:14",
																							"nodeType": "YulFunctionCall",
																							"src": "13054:7:14"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "13042:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "13042:3:14"
																					},
																					"nativeSrc": "13042:20:14",
																					"nodeType": "YulFunctionCall",
																					"src": "13042:20:14"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "13031:7:14",
																						"nodeType": "YulTypedName",
																						"src": "13031:7:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "13075:49:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "13075:49:14",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "13119:4:14",
																							"nodeType": "YulIdentifier",
																							"src": "13119:4:14"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_string_storage",
																						"nativeSrc": "13089:29:14",
																						"nodeType": "YulIdentifier",
																						"src": "13089:29:14"
																					},
																					"nativeSrc": "13089:35:14",
																					"nodeType": "YulFunctionCall",
																					"src": "13089:35:14"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "13079:6:14",
																						"nodeType": "YulTypedName",
																						"src": "13079:6:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "13137:10:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "13137:10:14",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "13146:1:14",
																					"nodeType": "YulLiteral",
																					"src": "13146:1:14",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "13141:1:14",
																						"nodeType": "YulTypedName",
																						"src": "13141:1:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "13224:172:14",
																					"nodeType": "YulBlock",
																					"src": "13224:172:14",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "13249:6:14",
																										"nodeType": "YulIdentifier",
																										"src": "13249:6:14"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "13267:3:14",
																														"nodeType": "YulIdentifier",
																														"src": "13267:3:14"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "13272:9:14",
																														"nodeType": "YulIdentifier",
																														"src": "13272:9:14"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "13263:3:14",
																													"nodeType": "YulIdentifier",
																													"src": "13263:3:14"
																												},
																												"nativeSrc": "13263:19:14",
																												"nodeType": "YulFunctionCall",
																												"src": "13263:19:14"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "13257:5:14",
																											"nodeType": "YulIdentifier",
																											"src": "13257:5:14"
																										},
																										"nativeSrc": "13257:26:14",
																										"nodeType": "YulFunctionCall",
																										"src": "13257:26:14"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "13242:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "13242:6:14"
																								},
																								"nativeSrc": "13242:42:14",
																								"nodeType": "YulFunctionCall",
																								"src": "13242:42:14"
																							},
																							"nativeSrc": "13242:42:14",
																							"nodeType": "YulExpressionStatement",
																							"src": "13242:42:14"
																						},
																						{
																							"nativeSrc": "13301:24:14",
																							"nodeType": "YulAssignment",
																							"src": "13301:24:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "13315:6:14",
																										"nodeType": "YulIdentifier",
																										"src": "13315:6:14"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "13323:1:14",
																										"nodeType": "YulLiteral",
																										"src": "13323:1:14",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "13311:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "13311:3:14"
																								},
																								"nativeSrc": "13311:14:14",
																								"nodeType": "YulFunctionCall",
																								"src": "13311:14:14"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "13301:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "13301:6:14"
																								}
																							]
																						},
																						{
																							"nativeSrc": "13342:40:14",
																							"nodeType": "YulAssignment",
																							"src": "13342:40:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "13359:9:14",
																										"nodeType": "YulIdentifier",
																										"src": "13359:9:14"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "13370:11:14",
																										"nodeType": "YulIdentifier",
																										"src": "13370:11:14"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "13355:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "13355:3:14"
																								},
																								"nativeSrc": "13355:27:14",
																								"nodeType": "YulFunctionCall",
																								"src": "13355:27:14"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "13342:9:14",
																									"nodeType": "YulIdentifier",
																									"src": "13342:9:14"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "13171:1:14",
																							"nodeType": "YulIdentifier",
																							"src": "13171:1:14"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "13174:7:14",
																							"nodeType": "YulIdentifier",
																							"src": "13174:7:14"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "13168:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "13168:2:14"
																					},
																					"nativeSrc": "13168:14:14",
																					"nodeType": "YulFunctionCall",
																					"src": "13168:14:14"
																				},
																				"nativeSrc": "13160:236:14",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "13183:28:14",
																					"nodeType": "YulBlock",
																					"src": "13183:28:14",
																					"statements": [
																						{
																							"nativeSrc": "13185:24:14",
																							"nodeType": "YulAssignment",
																							"src": "13185:24:14",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "13194:1:14",
																										"nodeType": "YulIdentifier",
																										"src": "13194:1:14"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "13197:11:14",
																										"nodeType": "YulIdentifier",
																										"src": "13197:11:14"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "13190:3:14",
																									"nodeType": "YulIdentifier",
																									"src": "13190:3:14"
																								},
																								"nativeSrc": "13190:19:14",
																								"nodeType": "YulFunctionCall",
																								"src": "13190:19:14"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "13185:1:14",
																									"nodeType": "YulIdentifier",
																									"src": "13185:1:14"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "13164:3:14",
																					"nodeType": "YulBlock",
																					"src": "13164:3:14",
																					"statements": []
																				},
																				"src": "13160:236:14"
																			},
																			{
																				"body": {
																					"nativeSrc": "13444:166:14",
																					"nodeType": "YulBlock",
																					"src": "13444:166:14",
																					"statements": [
																						{
																							"nativeSrc": "13462:43:14",
																							"nodeType": "YulVariableDeclaration",
																							"src": "13462:43:14",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "13489:3:14",
																												"nodeType": "YulIdentifier",
																												"src": "13489:3:14"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "13494:9:14",
																												"nodeType": "YulIdentifier",
																												"src": "13494:9:14"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "13485:3:14",
																											"nodeType": "YulIdentifier",
																											"src": "13485:3:14"
																										},
																										"nativeSrc": "13485:19:14",
																										"nodeType": "YulFunctionCall",
																										"src": "13485:19:14"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "13479:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "13479:5:14"
																								},
																								"nativeSrc": "13479:26:14",
																								"nodeType": "YulFunctionCall",
																								"src": "13479:26:14"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "13466:9:14",
																									"nodeType": "YulTypedName",
																									"src": "13466:9:14",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "13529:6:14",
																										"nodeType": "YulIdentifier",
																										"src": "13529:6:14"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "13541:9:14",
																												"nodeType": "YulIdentifier",
																												"src": "13541:9:14"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "13568:1:14",
																																				"nodeType": "YulLiteral",
																																				"src": "13568:1:14",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "13571:6:14",
																																				"nodeType": "YulIdentifier",
																																				"src": "13571:6:14"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "13564:3:14",
																																			"nodeType": "YulIdentifier",
																																			"src": "13564:3:14"
																																		},
																																		"nativeSrc": "13564:14:14",
																																		"nodeType": "YulFunctionCall",
																																		"src": "13564:14:14"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "13580:3:14",
																																		"nodeType": "YulLiteral",
																																		"src": "13580:3:14",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "13560:3:14",
																																	"nodeType": "YulIdentifier",
																																	"src": "13560:3:14"
																																},
																																"nativeSrc": "13560:24:14",
																																"nodeType": "YulFunctionCall",
																																"src": "13560:24:14"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "13590:1:14",
																																		"nodeType": "YulLiteral",
																																		"src": "13590:1:14",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "13586:3:14",
																																	"nodeType": "YulIdentifier",
																																	"src": "13586:3:14"
																																},
																																"nativeSrc": "13586:6:14",
																																"nodeType": "YulFunctionCall",
																																"src": "13586:6:14"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "13556:3:14",
																															"nodeType": "YulIdentifier",
																															"src": "13556:3:14"
																														},
																														"nativeSrc": "13556:37:14",
																														"nodeType": "YulFunctionCall",
																														"src": "13556:37:14"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "13552:3:14",
																													"nodeType": "YulIdentifier",
																													"src": "13552:3:14"
																												},
																												"nativeSrc": "13552:42:14",
																												"nodeType": "YulFunctionCall",
																												"src": "13552:42:14"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "13537:3:14",
																											"nodeType": "YulIdentifier",
																											"src": "13537:3:14"
																										},
																										"nativeSrc": "13537:58:14",
																										"nodeType": "YulFunctionCall",
																										"src": "13537:58:14"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "13522:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "13522:6:14"
																								},
																								"nativeSrc": "13522:74:14",
																								"nodeType": "YulFunctionCall",
																								"src": "13522:74:14"
																							},
																							"nativeSrc": "13522:74:14",
																							"nodeType": "YulExpressionStatement",
																							"src": "13522:74:14"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "13415:7:14",
																							"nodeType": "YulIdentifier",
																							"src": "13415:7:14"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "13424:6:14",
																							"nodeType": "YulIdentifier",
																							"src": "13424:6:14"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "13412:2:14",
																						"nodeType": "YulIdentifier",
																						"src": "13412:2:14"
																					},
																					"nativeSrc": "13412:19:14",
																					"nodeType": "YulFunctionCall",
																					"src": "13412:19:14"
																				},
																				"nativeSrc": "13409:201:14",
																				"nodeType": "YulIf",
																				"src": "13409:201:14"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "13630:4:14",
																							"nodeType": "YulIdentifier",
																							"src": "13630:4:14"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "13644:1:14",
																											"nodeType": "YulLiteral",
																											"src": "13644:1:14",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "13647:6:14",
																											"nodeType": "YulIdentifier",
																											"src": "13647:6:14"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "13640:3:14",
																										"nodeType": "YulIdentifier",
																										"src": "13640:3:14"
																									},
																									"nativeSrc": "13640:14:14",
																									"nodeType": "YulFunctionCall",
																									"src": "13640:14:14"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "13656:1:14",
																									"nodeType": "YulLiteral",
																									"src": "13656:1:14",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "13636:3:14",
																								"nodeType": "YulIdentifier",
																								"src": "13636:3:14"
																							},
																							"nativeSrc": "13636:22:14",
																							"nodeType": "YulFunctionCall",
																							"src": "13636:22:14"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "13623:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "13623:6:14"
																					},
																					"nativeSrc": "13623:36:14",
																					"nodeType": "YulFunctionCall",
																					"src": "13623:36:14"
																				},
																				"nativeSrc": "13623:36:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "13623:36:14"
																			}
																		]
																	},
																	"nativeSrc": "13006:663:14",
																	"nodeType": "YulCase",
																	"src": "13006:663:14",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13011:1:14",
																		"nodeType": "YulLiteral",
																		"src": "13011:1:14",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "13686:234:14",
																		"nodeType": "YulBlock",
																		"src": "13686:234:14",
																		"statements": [
																			{
																				"nativeSrc": "13700:14:14",
																				"nodeType": "YulVariableDeclaration",
																				"src": "13700:14:14",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "13713:1:14",
																					"nodeType": "YulLiteral",
																					"src": "13713:1:14",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "13704:5:14",
																						"nodeType": "YulTypedName",
																						"src": "13704:5:14",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "13749:67:14",
																					"nodeType": "YulBlock",
																					"src": "13749:67:14",
																					"statements": [
																						{
																							"nativeSrc": "13767:35:14",
																							"nodeType": "YulAssignment",
																							"src": "13767:35:14",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "13786:3:14",
																												"nodeType": "YulIdentifier",
																												"src": "13786:3:14"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "13791:9:14",
																												"nodeType": "YulIdentifier",
																												"src": "13791:9:14"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "13782:3:14",
																											"nodeType": "YulIdentifier",
																											"src": "13782:3:14"
																										},
																										"nativeSrc": "13782:19:14",
																										"nodeType": "YulFunctionCall",
																										"src": "13782:19:14"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "13776:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "13776:5:14"
																								},
																								"nativeSrc": "13776:26:14",
																								"nodeType": "YulFunctionCall",
																								"src": "13776:26:14"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "13767:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "13767:5:14"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "13730:6:14",
																					"nodeType": "YulIdentifier",
																					"src": "13730:6:14"
																				},
																				"nativeSrc": "13727:89:14",
																				"nodeType": "YulIf",
																				"src": "13727:89:14"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "13836:4:14",
																							"nodeType": "YulIdentifier",
																							"src": "13836:4:14"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "13895:5:14",
																									"nodeType": "YulIdentifier",
																									"src": "13895:5:14"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "13902:6:14",
																									"nodeType": "YulIdentifier",
																									"src": "13902:6:14"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "13842:52:14",
																								"nodeType": "YulIdentifier",
																								"src": "13842:52:14"
																							},
																							"nativeSrc": "13842:67:14",
																							"nodeType": "YulFunctionCall",
																							"src": "13842:67:14"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "13829:6:14",
																						"nodeType": "YulIdentifier",
																						"src": "13829:6:14"
																					},
																					"nativeSrc": "13829:81:14",
																					"nodeType": "YulFunctionCall",
																					"src": "13829:81:14"
																				},
																				"nativeSrc": "13829:81:14",
																				"nodeType": "YulExpressionStatement",
																				"src": "13829:81:14"
																			}
																		]
																	},
																	"nativeSrc": "13678:242:14",
																	"nodeType": "YulCase",
																	"src": "13678:242:14",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "12986:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "12986:6:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12994:2:14",
																		"nodeType": "YulLiteral",
																		"src": "12994:2:14",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "12983:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "12983:2:14"
																},
																"nativeSrc": "12983:14:14",
																"nodeType": "YulFunctionCall",
																"src": "12983:14:14"
															},
															"nativeSrc": "12976:944:14",
															"nodeType": "YulSwitch",
															"src": "12976:944:14"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage",
												"nativeSrc": "12581:1345:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "12662:4:14",
														"nodeType": "YulTypedName",
														"src": "12662:4:14",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "12668:3:14",
														"nodeType": "YulTypedName",
														"src": "12668:3:14",
														"type": ""
													}
												],
												"src": "12581:1345:14"
											},
											{
												"body": {
													"nativeSrc": "14080:153:14",
													"nodeType": "YulBlock",
													"src": "14080:153:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14097:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "14097:9:14"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "14108:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "14108:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14090:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "14090:6:14"
																},
																"nativeSrc": "14090:25:14",
																"nodeType": "YulFunctionCall",
																"src": "14090:25:14"
															},
															"nativeSrc": "14090:25:14",
															"nodeType": "YulExpressionStatement",
															"src": "14090:25:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14135:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "14135:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14146:2:14",
																				"nodeType": "YulLiteral",
																				"src": "14146:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14131:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "14131:3:14"
																		},
																		"nativeSrc": "14131:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "14131:18:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14151:2:14",
																		"nodeType": "YulLiteral",
																		"src": "14151:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14124:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "14124:6:14"
																},
																"nativeSrc": "14124:30:14",
																"nodeType": "YulFunctionCall",
																"src": "14124:30:14"
															},
															"nativeSrc": "14124:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "14124:30:14"
														},
														{
															"nativeSrc": "14163:64:14",
															"nodeType": "YulAssignment",
															"src": "14163:64:14",
															"value": {
																"arguments": [
																	{
																		"name": "value1",
																		"nativeSrc": "14200:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "14200:6:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14212:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "14212:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14223:2:14",
																				"nodeType": "YulLiteral",
																				"src": "14223:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14208:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "14208:3:14"
																		},
																		"nativeSrc": "14208:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "14208:18:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string_memory_ptr",
																	"nativeSrc": "14171:28:14",
																	"nodeType": "YulIdentifier",
																	"src": "14171:28:14"
																},
																"nativeSrc": "14171:56:14",
																"nodeType": "YulFunctionCall",
																"src": "14171:56:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14163:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "14163:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13931:302:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14041:9:14",
														"nodeType": "YulTypedName",
														"src": "14041:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14052:6:14",
														"nodeType": "YulTypedName",
														"src": "14052:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14060:6:14",
														"nodeType": "YulTypedName",
														"src": "14060:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14071:4:14",
														"nodeType": "YulTypedName",
														"src": "14071:4:14",
														"type": ""
													}
												],
												"src": "13931:302:14"
											},
											{
												"body": {
													"nativeSrc": "14285:88:14",
													"nodeType": "YulBlock",
													"src": "14285:88:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "14316:22:14",
																"nodeType": "YulBlock",
																"src": "14316:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "14318:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "14318:16:14"
																			},
																			"nativeSrc": "14318:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "14318:18:14"
																		},
																		"nativeSrc": "14318:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "14318:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14301:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "14301:5:14"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "14312:1:14",
																				"nodeType": "YulLiteral",
																				"src": "14312:1:14",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "not",
																			"nativeSrc": "14308:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "14308:3:14"
																		},
																		"nativeSrc": "14308:6:14",
																		"nodeType": "YulFunctionCall",
																		"src": "14308:6:14"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "14298:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "14298:2:14"
																},
																"nativeSrc": "14298:17:14",
																"nodeType": "YulFunctionCall",
																"src": "14298:17:14"
															},
															"nativeSrc": "14295:43:14",
															"nodeType": "YulIf",
															"src": "14295:43:14"
														},
														{
															"nativeSrc": "14347:20:14",
															"nodeType": "YulAssignment",
															"src": "14347:20:14",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "14358:5:14",
																		"nodeType": "YulIdentifier",
																		"src": "14358:5:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14365:1:14",
																		"nodeType": "YulLiteral",
																		"src": "14365:1:14",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14354:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "14354:3:14"
																},
																"nativeSrc": "14354:13:14",
																"nodeType": "YulFunctionCall",
																"src": "14354:13:14"
															},
															"variableNames": [
																{
																	"name": "ret",
																	"nativeSrc": "14347:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "14347:3:14"
																}
															]
														}
													]
												},
												"name": "increment_t_uint256",
												"nativeSrc": "14238:135:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "14267:5:14",
														"nodeType": "YulTypedName",
														"src": "14267:5:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "ret",
														"nativeSrc": "14277:3:14",
														"nodeType": "YulTypedName",
														"src": "14277:3:14",
														"type": ""
													}
												],
												"src": "14238:135:14"
											},
											{
												"body": {
													"nativeSrc": "14552:171:14",
													"nodeType": "YulBlock",
													"src": "14552:171:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14569:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "14569:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14580:2:14",
																		"nodeType": "YulLiteral",
																		"src": "14580:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14562:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "14562:6:14"
																},
																"nativeSrc": "14562:21:14",
																"nodeType": "YulFunctionCall",
																"src": "14562:21:14"
															},
															"nativeSrc": "14562:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "14562:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14603:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "14603:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14614:2:14",
																				"nodeType": "YulLiteral",
																				"src": "14614:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14599:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "14599:3:14"
																		},
																		"nativeSrc": "14599:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "14599:18:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14619:2:14",
																		"nodeType": "YulLiteral",
																		"src": "14619:2:14",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14592:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "14592:6:14"
																},
																"nativeSrc": "14592:30:14",
																"nodeType": "YulFunctionCall",
																"src": "14592:30:14"
															},
															"nativeSrc": "14592:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "14592:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14642:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "14642:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14653:2:14",
																				"nodeType": "YulLiteral",
																				"src": "14653:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14638:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "14638:3:14"
																		},
																		"nativeSrc": "14638:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "14638:18:14"
																	},
																	{
																		"hexValue": "506c6179657220616c726561647920657869737473",
																		"kind": "string",
																		"nativeSrc": "14658:23:14",
																		"nodeType": "YulLiteral",
																		"src": "14658:23:14",
																		"type": "",
																		"value": "Player already exists"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14631:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "14631:6:14"
																},
																"nativeSrc": "14631:51:14",
																"nodeType": "YulFunctionCall",
																"src": "14631:51:14"
															},
															"nativeSrc": "14631:51:14",
															"nodeType": "YulExpressionStatement",
															"src": "14631:51:14"
														},
														{
															"nativeSrc": "14691:26:14",
															"nodeType": "YulAssignment",
															"src": "14691:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14703:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "14703:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14714:2:14",
																		"nodeType": "YulLiteral",
																		"src": "14714:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14699:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "14699:3:14"
																},
																"nativeSrc": "14699:18:14",
																"nodeType": "YulFunctionCall",
																"src": "14699:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14691:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "14691:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e62d5747e47bcd18d9ddf74b7bcef9f67e80418a4c933197d321fea58848ef3f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14378:345:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14529:9:14",
														"nodeType": "YulTypedName",
														"src": "14529:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14543:4:14",
														"nodeType": "YulTypedName",
														"src": "14543:4:14",
														"type": ""
													}
												],
												"src": "14378:345:14"
											},
											{
												"body": {
													"nativeSrc": "14902:170:14",
													"nodeType": "YulBlock",
													"src": "14902:170:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14919:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "14919:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14930:2:14",
																		"nodeType": "YulLiteral",
																		"src": "14930:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14912:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "14912:6:14"
																},
																"nativeSrc": "14912:21:14",
																"nodeType": "YulFunctionCall",
																"src": "14912:21:14"
															},
															"nativeSrc": "14912:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "14912:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14953:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "14953:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14964:2:14",
																				"nodeType": "YulLiteral",
																				"src": "14964:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14949:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "14949:3:14"
																		},
																		"nativeSrc": "14949:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "14949:18:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14969:2:14",
																		"nodeType": "YulLiteral",
																		"src": "14969:2:14",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14942:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "14942:6:14"
																},
																"nativeSrc": "14942:30:14",
																"nodeType": "YulFunctionCall",
																"src": "14942:30:14"
															},
															"nativeSrc": "14942:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "14942:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14992:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "14992:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15003:2:14",
																				"nodeType": "YulLiteral",
																				"src": "15003:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14988:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "14988:3:14"
																		},
																		"nativeSrc": "14988:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "14988:18:14"
																	},
																	{
																		"hexValue": "4775696c6420616c726561647920657869737473",
																		"kind": "string",
																		"nativeSrc": "15008:22:14",
																		"nodeType": "YulLiteral",
																		"src": "15008:22:14",
																		"type": "",
																		"value": "Guild already exists"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14981:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "14981:6:14"
																},
																"nativeSrc": "14981:50:14",
																"nodeType": "YulFunctionCall",
																"src": "14981:50:14"
															},
															"nativeSrc": "14981:50:14",
															"nodeType": "YulExpressionStatement",
															"src": "14981:50:14"
														},
														{
															"nativeSrc": "15040:26:14",
															"nodeType": "YulAssignment",
															"src": "15040:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15052:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "15052:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15063:2:14",
																		"nodeType": "YulLiteral",
																		"src": "15063:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15048:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "15048:3:14"
																},
																"nativeSrc": "15048:18:14",
																"nodeType": "YulFunctionCall",
																"src": "15048:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15040:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "15040:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c02f3e50ed6b54b03eba0a4b156b8b2c122f79039273c822fbda9326f1dec609__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14728:344:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14879:9:14",
														"nodeType": "YulTypedName",
														"src": "14879:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14893:4:14",
														"nodeType": "YulTypedName",
														"src": "14893:4:14",
														"type": ""
													}
												],
												"src": "14728:344:14"
											},
											{
												"body": {
													"nativeSrc": "15251:164:14",
													"nodeType": "YulBlock",
													"src": "15251:164:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15268:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "15268:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15279:2:14",
																		"nodeType": "YulLiteral",
																		"src": "15279:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15261:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "15261:6:14"
																},
																"nativeSrc": "15261:21:14",
																"nodeType": "YulFunctionCall",
																"src": "15261:21:14"
															},
															"nativeSrc": "15261:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "15261:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15302:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "15302:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15313:2:14",
																				"nodeType": "YulLiteral",
																				"src": "15313:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15298:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "15298:3:14"
																		},
																		"nativeSrc": "15298:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "15298:18:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15318:2:14",
																		"nodeType": "YulLiteral",
																		"src": "15318:2:14",
																		"type": "",
																		"value": "14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15291:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "15291:6:14"
																},
																"nativeSrc": "15291:30:14",
																"nodeType": "YulFunctionCall",
																"src": "15291:30:14"
															},
															"nativeSrc": "15291:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "15291:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15341:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "15341:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15352:2:14",
																				"nodeType": "YulLiteral",
																				"src": "15352:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15337:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "15337:3:14"
																		},
																		"nativeSrc": "15337:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "15337:18:14"
																	},
																	{
																		"hexValue": "496e76616c696420726563697065",
																		"kind": "string",
																		"nativeSrc": "15357:16:14",
																		"nodeType": "YulLiteral",
																		"src": "15357:16:14",
																		"type": "",
																		"value": "Invalid recipe"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15330:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "15330:6:14"
																},
																"nativeSrc": "15330:44:14",
																"nodeType": "YulFunctionCall",
																"src": "15330:44:14"
															},
															"nativeSrc": "15330:44:14",
															"nodeType": "YulExpressionStatement",
															"src": "15330:44:14"
														},
														{
															"nativeSrc": "15383:26:14",
															"nodeType": "YulAssignment",
															"src": "15383:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15395:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "15395:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15406:2:14",
																		"nodeType": "YulLiteral",
																		"src": "15406:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15391:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "15391:3:14"
																},
																"nativeSrc": "15391:18:14",
																"nodeType": "YulFunctionCall",
																"src": "15391:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15383:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "15383:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_ffd94407a19cf8baf61f33fd1e368fd23471d93aa28c06b7e15811441edc47e5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15077:338:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15228:9:14",
														"nodeType": "YulTypedName",
														"src": "15228:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15242:4:14",
														"nodeType": "YulTypedName",
														"src": "15242:4:14",
														"type": ""
													}
												],
												"src": "15077:338:14"
											},
											{
												"body": {
													"nativeSrc": "15594:229:14",
													"nodeType": "YulBlock",
													"src": "15594:229:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15611:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "15611:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15622:2:14",
																		"nodeType": "YulLiteral",
																		"src": "15622:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15604:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "15604:6:14"
																},
																"nativeSrc": "15604:21:14",
																"nodeType": "YulFunctionCall",
																"src": "15604:21:14"
															},
															"nativeSrc": "15604:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "15604:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15645:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "15645:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15656:2:14",
																				"nodeType": "YulLiteral",
																				"src": "15656:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15641:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "15641:3:14"
																		},
																		"nativeSrc": "15641:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "15641:18:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15661:2:14",
																		"nodeType": "YulLiteral",
																		"src": "15661:2:14",
																		"type": "",
																		"value": "39"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15634:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "15634:6:14"
																},
																"nativeSrc": "15634:30:14",
																"nodeType": "YulFunctionCall",
																"src": "15634:30:14"
															},
															"nativeSrc": "15634:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "15634:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15684:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "15684:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15695:2:14",
																				"nodeType": "YulLiteral",
																				"src": "15695:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15680:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "15680:3:14"
																		},
																		"nativeSrc": "15680:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "15680:18:14"
																	},
																	{
																		"hexValue": "506c6179657220646f6573206e6f74206861766520616c6c2072657175697265",
																		"kind": "string",
																		"nativeSrc": "15700:34:14",
																		"nodeType": "YulLiteral",
																		"src": "15700:34:14",
																		"type": "",
																		"value": "Player does not have all require"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15673:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "15673:6:14"
																},
																"nativeSrc": "15673:62:14",
																"nodeType": "YulFunctionCall",
																"src": "15673:62:14"
															},
															"nativeSrc": "15673:62:14",
															"nodeType": "YulExpressionStatement",
															"src": "15673:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15755:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "15755:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15766:2:14",
																				"nodeType": "YulLiteral",
																				"src": "15766:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15751:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "15751:3:14"
																		},
																		"nativeSrc": "15751:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "15751:18:14"
																	},
																	{
																		"hexValue": "64206974656d73",
																		"kind": "string",
																		"nativeSrc": "15771:9:14",
																		"nodeType": "YulLiteral",
																		"src": "15771:9:14",
																		"type": "",
																		"value": "d items"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15744:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "15744:6:14"
																},
																"nativeSrc": "15744:37:14",
																"nodeType": "YulFunctionCall",
																"src": "15744:37:14"
															},
															"nativeSrc": "15744:37:14",
															"nodeType": "YulExpressionStatement",
															"src": "15744:37:14"
														},
														{
															"nativeSrc": "15790:27:14",
															"nodeType": "YulAssignment",
															"src": "15790:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15802:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "15802:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15813:3:14",
																		"nodeType": "YulLiteral",
																		"src": "15813:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15798:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "15798:3:14"
																},
																"nativeSrc": "15798:19:14",
																"nodeType": "YulFunctionCall",
																"src": "15798:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15790:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "15790:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6549b2fa5584e8c8ec502931a0b58219efc997d0668f171ad9fa4547ef7827c7__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15420:403:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15571:9:14",
														"nodeType": "YulTypedName",
														"src": "15571:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15585:4:14",
														"nodeType": "YulTypedName",
														"src": "15585:4:14",
														"type": ""
													}
												],
												"src": "15420:403:14"
											},
											{
												"body": {
													"nativeSrc": "15877:79:14",
													"nodeType": "YulBlock",
													"src": "15877:79:14",
													"statements": [
														{
															"nativeSrc": "15887:17:14",
															"nodeType": "YulAssignment",
															"src": "15887:17:14",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "15899:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "15899:1:14"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "15902:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "15902:1:14"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "15895:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "15895:3:14"
																},
																"nativeSrc": "15895:9:14",
																"nodeType": "YulFunctionCall",
																"src": "15895:9:14"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "15887:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "15887:4:14"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "15928:22:14",
																"nodeType": "YulBlock",
																"src": "15928:22:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "15930:16:14",
																				"nodeType": "YulIdentifier",
																				"src": "15930:16:14"
																			},
																			"nativeSrc": "15930:18:14",
																			"nodeType": "YulFunctionCall",
																			"src": "15930:18:14"
																		},
																		"nativeSrc": "15930:18:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "15930:18:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "15919:4:14",
																		"nodeType": "YulIdentifier",
																		"src": "15919:4:14"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "15925:1:14",
																		"nodeType": "YulIdentifier",
																		"src": "15925:1:14"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "15916:2:14",
																	"nodeType": "YulIdentifier",
																	"src": "15916:2:14"
																},
																"nativeSrc": "15916:11:14",
																"nodeType": "YulFunctionCall",
																"src": "15916:11:14"
															},
															"nativeSrc": "15913:37:14",
															"nodeType": "YulIf",
															"src": "15913:37:14"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "15828:128:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "15859:1:14",
														"nodeType": "YulTypedName",
														"src": "15859:1:14",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "15862:1:14",
														"nodeType": "YulTypedName",
														"src": "15862:1:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "15868:4:14",
														"nodeType": "YulTypedName",
														"src": "15868:4:14",
														"type": ""
													}
												],
												"src": "15828:128:14"
											},
											{
												"body": {
													"nativeSrc": "15993:95:14",
													"nodeType": "YulBlock",
													"src": "15993:95:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16010:1:14",
																		"nodeType": "YulLiteral",
																		"src": "16010:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "16017:3:14",
																				"nodeType": "YulLiteral",
																				"src": "16017:3:14",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16022:10:14",
																				"nodeType": "YulLiteral",
																				"src": "16022:10:14",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "16013:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "16013:3:14"
																		},
																		"nativeSrc": "16013:20:14",
																		"nodeType": "YulFunctionCall",
																		"src": "16013:20:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16003:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "16003:6:14"
																},
																"nativeSrc": "16003:31:14",
																"nodeType": "YulFunctionCall",
																"src": "16003:31:14"
															},
															"nativeSrc": "16003:31:14",
															"nodeType": "YulExpressionStatement",
															"src": "16003:31:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16050:1:14",
																		"nodeType": "YulLiteral",
																		"src": "16050:1:14",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16053:4:14",
																		"nodeType": "YulLiteral",
																		"src": "16053:4:14",
																		"type": "",
																		"value": "0x31"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16043:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "16043:6:14"
																},
																"nativeSrc": "16043:15:14",
																"nodeType": "YulFunctionCall",
																"src": "16043:15:14"
															},
															"nativeSrc": "16043:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "16043:15:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "16074:1:14",
																		"nodeType": "YulLiteral",
																		"src": "16074:1:14",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16077:4:14",
																		"nodeType": "YulLiteral",
																		"src": "16077:4:14",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "16067:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "16067:6:14"
																},
																"nativeSrc": "16067:15:14",
																"nodeType": "YulFunctionCall",
																"src": "16067:15:14"
															},
															"nativeSrc": "16067:15:14",
															"nodeType": "YulExpressionStatement",
															"src": "16067:15:14"
														}
													]
												},
												"name": "panic_error_0x31",
												"nativeSrc": "15961:127:14",
												"nodeType": "YulFunctionDefinition",
												"src": "15961:127:14"
											},
											{
												"body": {
													"nativeSrc": "16222:119:14",
													"nodeType": "YulBlock",
													"src": "16222:119:14",
													"statements": [
														{
															"nativeSrc": "16232:26:14",
															"nodeType": "YulAssignment",
															"src": "16232:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16244:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "16244:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16255:2:14",
																		"nodeType": "YulLiteral",
																		"src": "16255:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16240:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "16240:3:14"
																},
																"nativeSrc": "16240:18:14",
																"nodeType": "YulFunctionCall",
																"src": "16240:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16232:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "16232:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16274:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "16274:9:14"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "16285:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "16285:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16267:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "16267:6:14"
																},
																"nativeSrc": "16267:25:14",
																"nodeType": "YulFunctionCall",
																"src": "16267:25:14"
															},
															"nativeSrc": "16267:25:14",
															"nodeType": "YulExpressionStatement",
															"src": "16267:25:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16312:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "16312:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16323:2:14",
																				"nodeType": "YulLiteral",
																				"src": "16323:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16308:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "16308:3:14"
																		},
																		"nativeSrc": "16308:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "16308:18:14"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "16328:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "16328:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16301:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "16301:6:14"
																},
																"nativeSrc": "16301:34:14",
																"nodeType": "YulFunctionCall",
																"src": "16301:34:14"
															},
															"nativeSrc": "16301:34:14",
															"nodeType": "YulExpressionStatement",
															"src": "16301:34:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "16093:248:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16183:9:14",
														"nodeType": "YulTypedName",
														"src": "16183:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "16194:6:14",
														"nodeType": "YulTypedName",
														"src": "16194:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16202:6:14",
														"nodeType": "YulTypedName",
														"src": "16202:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16213:4:14",
														"nodeType": "YulTypedName",
														"src": "16213:4:14",
														"type": ""
													}
												],
												"src": "16093:248:14"
											},
											{
												"body": {
													"nativeSrc": "16454:101:14",
													"nodeType": "YulBlock",
													"src": "16454:101:14",
													"statements": [
														{
															"nativeSrc": "16464:26:14",
															"nodeType": "YulAssignment",
															"src": "16464:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16476:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "16476:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16487:2:14",
																		"nodeType": "YulLiteral",
																		"src": "16487:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16472:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "16472:3:14"
																},
																"nativeSrc": "16472:18:14",
																"nodeType": "YulFunctionCall",
																"src": "16472:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16464:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "16464:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16506:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "16506:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "16521:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "16521:6:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16529:18:14",
																				"nodeType": "YulLiteral",
																				"src": "16529:18:14",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "16517:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "16517:3:14"
																		},
																		"nativeSrc": "16517:31:14",
																		"nodeType": "YulFunctionCall",
																		"src": "16517:31:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16499:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "16499:6:14"
																},
																"nativeSrc": "16499:50:14",
																"nodeType": "YulFunctionCall",
																"src": "16499:50:14"
															},
															"nativeSrc": "16499:50:14",
															"nodeType": "YulExpressionStatement",
															"src": "16499:50:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nativeSrc": "16346:209:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16423:9:14",
														"nodeType": "YulTypedName",
														"src": "16423:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "16434:6:14",
														"nodeType": "YulTypedName",
														"src": "16434:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16445:4:14",
														"nodeType": "YulTypedName",
														"src": "16445:4:14",
														"type": ""
													}
												],
												"src": "16346:209:14"
											},
											{
												"body": {
													"nativeSrc": "16734:170:14",
													"nodeType": "YulBlock",
													"src": "16734:170:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16751:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "16751:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16762:2:14",
																		"nodeType": "YulLiteral",
																		"src": "16762:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16744:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "16744:6:14"
																},
																"nativeSrc": "16744:21:14",
																"nodeType": "YulFunctionCall",
																"src": "16744:21:14"
															},
															"nativeSrc": "16744:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "16744:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16785:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "16785:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16796:2:14",
																				"nodeType": "YulLiteral",
																				"src": "16796:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16781:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "16781:3:14"
																		},
																		"nativeSrc": "16781:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "16781:18:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16801:2:14",
																		"nodeType": "YulLiteral",
																		"src": "16801:2:14",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16774:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "16774:6:14"
																},
																"nativeSrc": "16774:30:14",
																"nodeType": "YulFunctionCall",
																"src": "16774:30:14"
															},
															"nativeSrc": "16774:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "16774:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "16824:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "16824:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "16835:2:14",
																				"nodeType": "YulLiteral",
																				"src": "16835:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "16820:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "16820:3:14"
																		},
																		"nativeSrc": "16820:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "16820:18:14"
																	},
																	{
																		"hexValue": "4775696c6420646f6573206e6f74206578697374",
																		"kind": "string",
																		"nativeSrc": "16840:22:14",
																		"nodeType": "YulLiteral",
																		"src": "16840:22:14",
																		"type": "",
																		"value": "Guild does not exist"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "16813:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "16813:6:14"
																},
																"nativeSrc": "16813:50:14",
																"nodeType": "YulFunctionCall",
																"src": "16813:50:14"
															},
															"nativeSrc": "16813:50:14",
															"nodeType": "YulExpressionStatement",
															"src": "16813:50:14"
														},
														{
															"nativeSrc": "16872:26:14",
															"nodeType": "YulAssignment",
															"src": "16872:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "16884:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "16884:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "16895:2:14",
																		"nodeType": "YulLiteral",
																		"src": "16895:2:14",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "16880:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "16880:3:14"
																},
																"nativeSrc": "16880:18:14",
																"nodeType": "YulFunctionCall",
																"src": "16880:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "16872:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "16872:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_df115ebb113eb795e874836f8b2917a4781efe582dc2481c741971644f30822e__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16560:344:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "16711:9:14",
														"nodeType": "YulTypedName",
														"src": "16711:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "16725:4:14",
														"nodeType": "YulTypedName",
														"src": "16725:4:14",
														"type": ""
													}
												],
												"src": "16560:344:14"
											},
											{
												"body": {
													"nativeSrc": "17083:229:14",
													"nodeType": "YulBlock",
													"src": "17083:229:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17100:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "17100:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17111:2:14",
																		"nodeType": "YulLiteral",
																		"src": "17111:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17093:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "17093:6:14"
																},
																"nativeSrc": "17093:21:14",
																"nodeType": "YulFunctionCall",
																"src": "17093:21:14"
															},
															"nativeSrc": "17093:21:14",
															"nodeType": "YulExpressionStatement",
															"src": "17093:21:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17134:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "17134:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17145:2:14",
																				"nodeType": "YulLiteral",
																				"src": "17145:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17130:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "17130:3:14"
																		},
																		"nativeSrc": "17130:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "17130:18:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17150:2:14",
																		"nodeType": "YulLiteral",
																		"src": "17150:2:14",
																		"type": "",
																		"value": "39"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17123:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "17123:6:14"
																},
																"nativeSrc": "17123:30:14",
																"nodeType": "YulFunctionCall",
																"src": "17123:30:14"
															},
															"nativeSrc": "17123:30:14",
															"nodeType": "YulExpressionStatement",
															"src": "17123:30:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17173:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "17173:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17184:2:14",
																				"nodeType": "YulLiteral",
																				"src": "17184:2:14",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17169:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "17169:3:14"
																		},
																		"nativeSrc": "17169:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "17169:18:14"
																	},
																	{
																		"hexValue": "53656e64657220697320616c72656164792061206d656d626572206f66207468",
																		"kind": "string",
																		"nativeSrc": "17189:34:14",
																		"nodeType": "YulLiteral",
																		"src": "17189:34:14",
																		"type": "",
																		"value": "Sender is already a member of th"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17162:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "17162:6:14"
																},
																"nativeSrc": "17162:62:14",
																"nodeType": "YulFunctionCall",
																"src": "17162:62:14"
															},
															"nativeSrc": "17162:62:14",
															"nodeType": "YulExpressionStatement",
															"src": "17162:62:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17244:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "17244:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17255:2:14",
																				"nodeType": "YulLiteral",
																				"src": "17255:2:14",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17240:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "17240:3:14"
																		},
																		"nativeSrc": "17240:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "17240:18:14"
																	},
																	{
																		"hexValue": "65206775696c64",
																		"kind": "string",
																		"nativeSrc": "17260:9:14",
																		"nodeType": "YulLiteral",
																		"src": "17260:9:14",
																		"type": "",
																		"value": "e guild"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17233:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "17233:6:14"
																},
																"nativeSrc": "17233:37:14",
																"nodeType": "YulFunctionCall",
																"src": "17233:37:14"
															},
															"nativeSrc": "17233:37:14",
															"nodeType": "YulExpressionStatement",
															"src": "17233:37:14"
														},
														{
															"nativeSrc": "17279:27:14",
															"nodeType": "YulAssignment",
															"src": "17279:27:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17291:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "17291:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17302:3:14",
																		"nodeType": "YulLiteral",
																		"src": "17302:3:14",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17287:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "17287:3:14"
																},
																"nativeSrc": "17287:19:14",
																"nodeType": "YulFunctionCall",
																"src": "17287:19:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17279:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "17279:4:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_60488ddff5208baf36b3dd08007032a8dda5e33f922203c6a10ac3af154485c2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "16909:403:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17060:9:14",
														"nodeType": "YulTypedName",
														"src": "17060:9:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17074:4:14",
														"nodeType": "YulTypedName",
														"src": "17074:4:14",
														"type": ""
													}
												],
												"src": "16909:403:14"
											},
											{
												"body": {
													"nativeSrc": "17418:102:14",
													"nodeType": "YulBlock",
													"src": "17418:102:14",
													"statements": [
														{
															"nativeSrc": "17428:26:14",
															"nodeType": "YulAssignment",
															"src": "17428:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17440:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "17440:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17451:2:14",
																		"nodeType": "YulLiteral",
																		"src": "17451:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17436:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "17436:3:14"
																},
																"nativeSrc": "17436:18:14",
																"nodeType": "YulFunctionCall",
																"src": "17436:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17428:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "17428:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17470:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "17470:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "17485:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "17485:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "17501:3:14",
																								"nodeType": "YulLiteral",
																								"src": "17501:3:14",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "17506:1:14",
																								"nodeType": "YulLiteral",
																								"src": "17506:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "17497:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "17497:3:14"
																						},
																						"nativeSrc": "17497:11:14",
																						"nodeType": "YulFunctionCall",
																						"src": "17497:11:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "17510:1:14",
																						"nodeType": "YulLiteral",
																						"src": "17510:1:14",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "17493:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "17493:3:14"
																				},
																				"nativeSrc": "17493:19:14",
																				"nodeType": "YulFunctionCall",
																				"src": "17493:19:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "17481:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "17481:3:14"
																		},
																		"nativeSrc": "17481:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "17481:32:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17463:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "17463:6:14"
																},
																"nativeSrc": "17463:51:14",
																"nodeType": "YulFunctionCall",
																"src": "17463:51:14"
															},
															"nativeSrc": "17463:51:14",
															"nodeType": "YulExpressionStatement",
															"src": "17463:51:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "17317:203:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17387:9:14",
														"nodeType": "YulTypedName",
														"src": "17387:9:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17398:6:14",
														"nodeType": "YulTypedName",
														"src": "17398:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17409:4:14",
														"nodeType": "YulTypedName",
														"src": "17409:4:14",
														"type": ""
													}
												],
												"src": "17317:203:14"
											},
											{
												"body": {
													"nativeSrc": "17606:103:14",
													"nodeType": "YulBlock",
													"src": "17606:103:14",
													"statements": [
														{
															"body": {
																"nativeSrc": "17652:16:14",
																"nodeType": "YulBlock",
																"src": "17652:16:14",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "17661:1:14",
																					"nodeType": "YulLiteral",
																					"src": "17661:1:14",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "17664:1:14",
																					"nodeType": "YulLiteral",
																					"src": "17664:1:14",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "17654:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "17654:6:14"
																			},
																			"nativeSrc": "17654:12:14",
																			"nodeType": "YulFunctionCall",
																			"src": "17654:12:14"
																		},
																		"nativeSrc": "17654:12:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "17654:12:14"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "17627:7:14",
																				"nodeType": "YulIdentifier",
																				"src": "17627:7:14"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "17636:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "17636:9:14"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "17623:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "17623:3:14"
																		},
																		"nativeSrc": "17623:23:14",
																		"nodeType": "YulFunctionCall",
																		"src": "17623:23:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17648:2:14",
																		"nodeType": "YulLiteral",
																		"src": "17648:2:14",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "17619:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "17619:3:14"
																},
																"nativeSrc": "17619:32:14",
																"nodeType": "YulFunctionCall",
																"src": "17619:32:14"
															},
															"nativeSrc": "17616:52:14",
															"nodeType": "YulIf",
															"src": "17616:52:14"
														},
														{
															"nativeSrc": "17677:26:14",
															"nodeType": "YulAssignment",
															"src": "17677:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17693:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "17693:9:14"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "17687:5:14",
																	"nodeType": "YulIdentifier",
																	"src": "17687:5:14"
																},
																"nativeSrc": "17687:16:14",
																"nodeType": "YulFunctionCall",
																"src": "17687:16:14"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "17677:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "17677:6:14"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32_fromMemory",
												"nativeSrc": "17525:184:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17572:9:14",
														"nodeType": "YulTypedName",
														"src": "17572:9:14",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "17583:7:14",
														"nodeType": "YulTypedName",
														"src": "17583:7:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "17595:6:14",
														"nodeType": "YulTypedName",
														"src": "17595:6:14",
														"type": ""
													}
												],
												"src": "17525:184:14"
											},
											{
												"body": {
													"nativeSrc": "17843:145:14",
													"nodeType": "YulBlock",
													"src": "17843:145:14",
													"statements": [
														{
															"nativeSrc": "17853:26:14",
															"nodeType": "YulAssignment",
															"src": "17853:26:14",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17865:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "17865:9:14"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "17876:2:14",
																		"nodeType": "YulLiteral",
																		"src": "17876:2:14",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "17861:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "17861:3:14"
																},
																"nativeSrc": "17861:18:14",
																"nodeType": "YulFunctionCall",
																"src": "17861:18:14"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "17853:4:14",
																	"nodeType": "YulIdentifier",
																	"src": "17853:4:14"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "17895:9:14",
																		"nodeType": "YulIdentifier",
																		"src": "17895:9:14"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "17910:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "17910:6:14"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "17926:3:14",
																								"nodeType": "YulLiteral",
																								"src": "17926:3:14",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "17931:1:14",
																								"nodeType": "YulLiteral",
																								"src": "17931:1:14",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "17922:3:14",
																							"nodeType": "YulIdentifier",
																							"src": "17922:3:14"
																						},
																						"nativeSrc": "17922:11:14",
																						"nodeType": "YulFunctionCall",
																						"src": "17922:11:14"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "17935:1:14",
																						"nodeType": "YulLiteral",
																						"src": "17935:1:14",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "17918:3:14",
																					"nodeType": "YulIdentifier",
																					"src": "17918:3:14"
																				},
																				"nativeSrc": "17918:19:14",
																				"nodeType": "YulFunctionCall",
																				"src": "17918:19:14"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "17906:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "17906:3:14"
																		},
																		"nativeSrc": "17906:32:14",
																		"nodeType": "YulFunctionCall",
																		"src": "17906:32:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17888:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "17888:6:14"
																},
																"nativeSrc": "17888:51:14",
																"nodeType": "YulFunctionCall",
																"src": "17888:51:14"
															},
															"nativeSrc": "17888:51:14",
															"nodeType": "YulExpressionStatement",
															"src": "17888:51:14"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "17959:9:14",
																				"nodeType": "YulIdentifier",
																				"src": "17959:9:14"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "17970:2:14",
																				"nodeType": "YulLiteral",
																				"src": "17970:2:14",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "17955:3:14",
																			"nodeType": "YulIdentifier",
																			"src": "17955:3:14"
																		},
																		"nativeSrc": "17955:18:14",
																		"nodeType": "YulFunctionCall",
																		"src": "17955:18:14"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "17975:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "17975:6:14"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "17948:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "17948:6:14"
																},
																"nativeSrc": "17948:34:14",
																"nodeType": "YulFunctionCall",
																"src": "17948:34:14"
															},
															"nativeSrc": "17948:34:14",
															"nodeType": "YulExpressionStatement",
															"src": "17948:34:14"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "17714:274:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "17804:9:14",
														"nodeType": "YulTypedName",
														"src": "17804:9:14",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "17815:6:14",
														"nodeType": "YulTypedName",
														"src": "17815:6:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "17823:6:14",
														"nodeType": "YulTypedName",
														"src": "17823:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "17834:4:14",
														"nodeType": "YulTypedName",
														"src": "17834:4:14",
														"type": ""
													}
												],
												"src": "17714:274:14"
											},
											{
												"body": {
													"nativeSrc": "18130:53:14",
													"nodeType": "YulBlock",
													"src": "18130:53:14",
													"statements": [
														{
															"nativeSrc": "18140:37:14",
															"nodeType": "YulAssignment",
															"src": "18140:37:14",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "18165:6:14",
																		"nodeType": "YulIdentifier",
																		"src": "18165:6:14"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "18173:3:14",
																		"nodeType": "YulIdentifier",
																		"src": "18173:3:14"
																	}
																],
																"functionName": {
																	"name": "abi_encode_string",
																	"nativeSrc": "18147:17:14",
																	"nodeType": "YulIdentifier",
																	"src": "18147:17:14"
																},
																"nativeSrc": "18147:30:14",
																"nodeType": "YulFunctionCall",
																"src": "18147:30:14"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "18140:3:14",
																	"nodeType": "YulIdentifier",
																	"src": "18140:3:14"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "17993:190:14",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "18106:3:14",
														"nodeType": "YulTypedName",
														"src": "18106:3:14",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "18111:6:14",
														"nodeType": "YulTypedName",
														"src": "18111:6:14",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "18122:3:14",
														"nodeType": "YulTypedName",
														"src": "18122:3:14",
														"type": ""
													}
												],
												"src": "17993:190:14"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function abi_decode_available_length_string(src, length, end) -> array\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        array := allocate_memory(add(and(add(length, 31), not(31)), 0x20))\n        mstore(array, length)\n        if gt(add(src, length), end) { revert(0, 0) }\n        calldatacopy(add(array, 0x20), src, length)\n        mstore(add(add(array, length), 0x20), 0)\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        array := abi_decode_available_length_string(add(offset, 0x20), calldataload(offset), end)\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_uint256t_uint256t_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2, value3, value4\n    {\n        if slt(sub(dataEnd, headStart), 160) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n        value3 := calldataload(add(headStart, 96))\n        value4 := calldataload(add(headStart, 128))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        value1 := abi_decode_available_length_string(add(_1, 32), calldataload(_1), dataEnd)\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(0, 0) }\n        value1 := abi_decode_string(add(headStart, offset_1), dataEnd)\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_string_memory_ptr(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        mcopy(add(pos, 0x20), add(value, 0x20), length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_address__to_t_string_memory_ptr_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        tail := abi_encode_string_memory_ptr(value0, add(headStart, 64))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_array$_t_uint256_$dyn_memory_ptrt_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        let _4 := 0x20\n        if gt(_3, _1) { panic_error_0x41() }\n        let _5 := shl(5, _3)\n        let dst := allocate_memory(add(_5, _4))\n        let dst_1 := dst\n        mstore(dst, _3)\n        dst := add(dst, _4)\n        let srcEnd := add(add(_2, _5), _4)\n        if gt(srcEnd, dataEnd) { revert(0, 0) }\n        let src := add(_2, _4)\n        for { } lt(src, srcEnd) { src := add(src, _4) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _4)\n        }\n        value0 := dst_1\n        value1 := calldataload(add(headStart, _4))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_string_memory_ptr(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_string_memory_ptr_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 192)\n        tail := abi_encode_string_memory_ptr(value1, add(headStart, 192))\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n    }\n    function abi_decode_tuple_t_addresst_addresst_address(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := abi_decode_address(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_bool__to_t_string_memory_ptr_t_string_memory_ptr_t_uint256_t_bool__fromStack_reversed(headStart, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, 128)\n        let tail_1 := abi_encode_string_memory_ptr(value0, add(headStart, 128))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_string_memory_ptr(value1, tail_1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), iszero(iszero(value3)))\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value7, value6, value5, value4, value3, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 256)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n        mstore(add(headStart, 96), value3)\n        mstore(add(headStart, 128), value4)\n        mstore(add(headStart, 160), value5)\n        mstore(add(headStart, 192), value6)\n        mstore(add(headStart, 224), value7)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_string(value, pos) -> end\n    {\n        let length := mload(value)\n        mcopy(pos, add(value, 0x20), length)\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n    function abi_encode_tuple_packed_t_string_memory_ptr__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        end := abi_encode_string(value0, pos)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function array_dataslot_string_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function abi_encode_tuple_packed_t_string_storage__to_t_string_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let ret := 0\n        let slotValue := sload(value0)\n        let length := extract_byte_array_length(slotValue)\n        let _1 := 1\n        switch and(slotValue, 1)\n        case 0 {\n            mstore(pos, and(slotValue, not(255)))\n            ret := add(pos, mul(length, iszero(iszero(length))))\n        }\n        case 1 {\n            mstore(0, value0)\n            let _2 := 0x20\n            let dataPos := keccak256(0, 0x20)\n            let i := 0\n            for { } lt(i, length) { i := add(i, _2) }\n            {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, _1)\n            }\n            ret := add(pos, length)\n        }\n        end := ret\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function clean_up_bytearray_end_slots_string_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_string_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_uint256_t_string_memory_ptr__to_t_uint256_t_string_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), 64)\n        tail := abi_encode_string_memory_ptr(value1, add(headStart, 64))\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function abi_encode_tuple_t_stringliteral_e62d5747e47bcd18d9ddf74b7bcef9f67e80418a4c933197d321fea58848ef3f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Player already exists\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c02f3e50ed6b54b03eba0a4b156b8b2c122f79039273c822fbda9326f1dec609__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Guild already exists\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ffd94407a19cf8baf61f33fd1e368fd23471d93aa28c06b7e15811441edc47e5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Invalid recipe\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_6549b2fa5584e8c8ec502931a0b58219efc997d0668f171ad9fa4547ef7827c7__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"Player does not have all require\")\n        mstore(add(headStart, 96), \"d items\")\n        tail := add(headStart, 128)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function panic_error_0x31()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x31)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_df115ebb113eb795e874836f8b2917a4781efe582dc2481c741971644f30822e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Guild does not exist\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_60488ddff5208baf36b3dd08007032a8dda5e33f922203c6a10ac3af154485c2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 39)\n        mstore(add(headStart, 64), \"Sender is already a member of th\")\n        mstore(add(headStart, 96), \"e guild\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        end := abi_encode_string(value0, pos)\n    }\n}",
									"id": 14,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"636": [
									{
										"length": 32,
										"start": 6476
									},
									{
										"length": 32,
										"start": 6517
									},
									{
										"length": 32,
										"start": 6872
									}
								]
							},
							"linkReferences": {},
							"object": "6080604052600436106101c5575f3560e01c80638456cb59116100f2578063bfb231d211610092578063e2eb41ff11610062578063e2eb41ff14610532578063e551ba4b146105cb578063e63ab1e9146105ea578063f72c0d8b1461060a575f80fd5b8063bfb231d214610494578063c0c53b8b146104c5578063d3dcff7c146104e4578063d547741f14610513575f80fd5b8063a75859e1116100cd578063a75859e1146103eb578063a9834b6714610418578063ad3cb1cc14610437578063be22d27d14610474575f80fd5b80638456cb59146103a557806391d14854146103b9578063a217fddf146103d8575f80fd5b80633fa9fcf81161016857806352d1902d1161013857806352d1902d146103305780635c975abb146103445780636f347a78146103675780637309cbbd14610386575f80fd5b80633fa9fcf8146102bc578063443c227c146102d05780634f1ef286146102fe5780634fa4a1bb14610311575f80fd5b80632f2ff15d116101a35780632f2ff15d1461024b57806331fee8be1461026a57806336568abe146102895780633f4ba83a146102a8575f80fd5b806301ffc9a7146101c957806317435e1a146101fd578063248a9ca31461021e575b5f80fd5b3480156101d4575f80fd5b506101e86101e3366004611ef8565b61063d565b60405190151581526020015b60405180910390f35b348015610208575f80fd5b5061021c610217366004611fd7565b610673565b005b348015610229575f80fd5b5061023d610238366004612011565b6107a9565b6040519081526020016101f4565b348015610256575f80fd5b5061021c610265366004612043565b6107c9565b348015610275575f80fd5b5061021c61028436600461206d565b6107eb565b348015610294575f80fd5b5061021c6102a3366004612043565b6108d8565b3480156102b3575f80fd5b5061021c610910565b3480156102c7575f80fd5b5061021c610932565b3480156102db575f80fd5b5061023d6102ea366004612011565b60076020525f908152604090206001015481565b61021c61030c3660046120c5565b610b03565b34801561031c575f80fd5b5061021c61032b366004612123565b610b1e565b34801561033b575f80fd5b5061023d610d24565b34801561034f575f80fd5b505f805160206126d98339815191525460ff166101e8565b348015610372575f80fd5b5061021c610381366004612165565b610d3f565b348015610391575f80fd5b5061021c6103a0366004612011565b610dea565b3480156103b0575f80fd5b5061021c611109565b3480156103c4575f80fd5b506101e86103d3366004612043565b611128565b3480156103e3575f80fd5b5061023d5f81565b3480156103f6575f80fd5b5061040a6104053660046121cd565b61115e565b6040516101f4929190612214565b348015610423575f80fd5b5061021c61043236600461223d565b611208565b348015610442575f80fd5b50610467604051806040016040528060058152602001640352e302e360dc1b81525081565b6040516101f491906122e4565b34801561047f575f80fd5b5061023d5f8051602061265983398151915281565b34801561049f575f80fd5b506104b36104ae366004612011565b6112b6565b6040516101f4969594939291906122f6565b3480156104d0575f80fd5b5061021c6104df366004612333565b611370565b3480156104ef575f80fd5b506105036104fe366004612373565b6114f5565b6040516101f4949392919061239b565b34801561051e575f80fd5b5061021c61052d366004612043565b61164b565b34801561053d575f80fd5b5061059061054c3660046121cd565b6003602052805f5260405f205f91509050805f0154908060010154908060020154908060030154908060040154908060050154908060060154908060070154905088565b604080519889526020890197909752958701949094526060860192909252608085015260a084015260c083015260e0820152610100016101f4565b3480156105d6575f80fd5b5061021c6105e5366004611fd7565b611667565b3480156105f5575f80fd5b5061023d5f8051602061269983398151915281565b348015610615575f80fd5b5061023d7f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e381565b5f6001600160e01b03198216637965db0b60e01b148061066d57506301ffc9a760e01b6001600160e01b03198316145b92915050565b5f5b335f908152600460205260409020548110156107a557335f9081526004602052604081208054839081106106ab576106ab6123d8565b905f5260205f2090600402019050826040516020016106ca9190612403565b60408051601f19818403018152908290528051602091820120916106f091849101612446565b604051602081830303815290604052805190602001201480156107185750600381015460ff16155b1561079c576003808201805460ff191660019081179091556002830154335f908152602093909352604083209091018054919290916107589084906124cc565b909155505060405133907fbe21664565742a9f42cbb6d005f92db59c7bcad35b12ef5b57b79e75676b247a9061078f9086906122e4565b60405180910390a2505050565b50600101610675565b5050565b5f9081525f805160206126b9833981519152602052604090206001015490565b6107d2826107a9565b6107db816117be565b6107e583836117c8565b50505050565b5f80516020612659833981519152610802816117be565b6040805160c0810182525f805480835260208084018b81528486018b9052606085018a90526080850189905260a08501889052918352600290529290208151815591519091906001820190610857908261252a565b5060408201518160020155606082015181600301556080820151816004015560a082015181600501559050507f78d68ba0e8c23b92e7c700d99efed2719520cbd4af845b2c03ae251f9cdf3d525f54876040516108b59291906125ea565b60405180910390a15f805490806108cb83612602565b9190505550505050505050565b6001600160a01b03811633146109015760405163334bd91960e11b815260040160405180910390fd5b61090b8282611869565b505050565b5f80516020612699833981519152610927816117be565b61092f6118e2565b50565b335f908152600360205260409020541561098b5760405162461bcd60e51b8152602060048201526015602482015274506c6179657220616c72656164792065786973747360581b60448201526064015b60405180910390fd5b604051806101400160405280600181526020015f81526020016064815260200160328152602001600a81526020016005815260200160038152602001600281526020015f67ffffffffffffffff8111156109e7576109e7611f1f565b604051908082528060200260200182016040528015610a10578160200160208202803683370190505b5081526020015f604051908082528060200260200182016040528015610a40578160200160208202803683370190505b509052335f90815260036020818152604092839020845181558482015160018201559284015160028401556060840151918301919091556080830151600483015560a0830151600583015560c0830151600683015560e083015160078301556101008301518051610ab79260088501920190611e48565b506101208201518051610ad4916009840191602090910190611e48565b50506040513391507fb4cca19a27ce42915c3cee0cee28fc5d90969ee49f09ec71659546a63b5f7bc0905f90a2565b610b0b611941565b610b14826119e7565b6107a58282611a11565b5f80516020612659833981519152610b35816117be565b5f6001600160a01b0316600684604051610b4f9190612403565b908152604051908190036020019020546001600160a01b031614610bac5760405162461bcd60e51b81526020600482015260146024820152734775696c6420616c72656164792065786973747360601b6044820152606401610982565b604080516060810182528481526001600160a01b0384166020820152815160018082528184018452919283019181602001602082028036833750505090526001600160a01b0383165f90815260056020526040902081518190610c0f908261252a565b506020828101516001830180546001600160a01b0319166001600160a01b0390921691909117905560408301518051610c4e9260028501920190611e91565b5050506001600160a01b0382165f9081526005602052604081206002018054849290610c7c57610c7c6123d8565b905f5260205f20015f6101000a8154816001600160a01b0302191690836001600160a01b0316021790555081600684604051610cb89190612403565b90815260405190819003602001812080546001600160a01b03939093166001600160a01b0319909316929092179091557f072208535a97b2e307167838c66aacd47f8de3a2cb92bc2ddb2b2b52009c9fd590610d179085908590612214565b60405180910390a1505050565b5f610d2d611acd565b505f8051602061267983398151915290565b5f80516020612659833981519152610d56816117be565b335f908152600460208181526040808420815160808101835289815280840189905291820187905260608201859052805460018101825590855291909320835191909202909101908190610daa908261252a565b5060208201516001820190610dbf908261252a565b50604082015160028201556060909101516003909101805460ff191691151591909117905550505050565b5f818152600760209081526040808320815181546060948102820185018452928101838152909391928492849190840182828015610e4557602002820191905f5260205f20905b815481526020019060010190808311610e31575b5050505050815260200160018201548152505090505f815f01515111610e9e5760405162461bcd60e51b815260206004820152600e60248201526d496e76616c69642072656369706560901b6044820152606401610982565b5f5b815151811015610f9f575f805b335f90815260036020526040902060080154811015610f38578351805184908110610eda57610eda6123d8565b602002602001015160035f336001600160a01b03166001600160a01b031681526020019081526020015f206008018281548110610f1957610f196123d8565b905f5260205f20015403610f305760019150610f38565b600101610ead565b5080610f965760405162461bcd60e51b815260206004820152602760248201527f506c6179657220646f6573206e6f74206861766520616c6c207265717569726560448201526664206974656d7360c81b6064820152608401610982565b50600101610ea0565b505f5b8151518110156110dd575f5b335f908152600360205260409020600801548110156110d4578251805183908110610fdb57610fdb6123d8565b602002602001015160035f336001600160a01b03166001600160a01b031681526020019081526020015f20600801828154811061101a5761101a6123d8565b905f5260205f200154036110cc57335f90815260036020526040902060080180546110479060019061261a565b81548110611057576110576123d8565b5f91825260208083209091015433835260039091526040909120600801805483908110611086576110866123d8565b5f9182526020808320909101929092553381526003909152604090206008018054806110b4576110b461262d565b600190038181905f5260205f20015f905590556110d4565b600101610fae565b50600101610fa2565b50335f908152600360209081526040822092810151600890930180546001810182559083529120015550565b5f80516020612699833981519152611120816117be565b61092f611b16565b5f9182525f805160206126b9833981519152602090815260408084206001600160a01b0393909316845291905290205460ff1690565b60056020525f90815260409020805481906111789061240e565b80601f01602080910402602001604051908101604052809291908181526020018280546111a49061240e565b80156111ef5780601f106111c6576101008083540402835291602001916111ef565b820191905f5260205f20905b8154815290600101906020018083116111d257829003601f168201915b505050600190930154919250506001600160a01b031682565b5f8051602061265983398151915261121f816117be565b60408051808201825284815260208082018590526001545f908152600782529290922081518051929391926112579284920190611e48565b5060209182015160019182015554604080519182529181018490527f9becfd2b1fc8127387c5b0002a6cbc8382e6c8fb9f76dfd6cfd92cbe94383d0e910160405180910390a160018054905f6112ac83612602565b9190505550505050565b60026020525f9081526040902080546001820180549192916112d79061240e565b80601f01602080910402602001604051908101604052809291908181526020018280546113039061240e565b801561134e5780601f106113255761010080835404028352916020019161134e565b820191905f5260205f20905b81548152906001019060200180831161133157829003601f168201915b5050505050908060020154908060030154908060040154908060050154905086565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff165f811580156113b55750825b90505f8267ffffffffffffffff1660011480156113d15750303b155b9050811580156113df575080155b156113fd5760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561142757845460ff60401b1916600160401b1785555b61142f611b5e565b611437611b6e565b61143f611b6e565b6114495f896117c8565b506114615f80516020612699833981519152886117c8565b5061148c7f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3876117c8565b506114a45f80516020612659833981519152896117c8565b5083156114eb57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b5050505050505050565b6004602052815f5260405f20818154811061150e575f80fd5b905f5260205f2090600402015f9150915050805f01805461152e9061240e565b80601f016020809104026020016040519081016040528092919081815260200182805461155a9061240e565b80156115a55780601f1061157c576101008083540402835291602001916115a5565b820191905f5260205f20905b81548152906001019060200180831161158857829003601f168201915b5050505050908060010180546115ba9061240e565b80601f01602080910402602001604051908101604052809291908181526020018280546115e69061240e565b80156116315780601f1061160857610100808354040283529160200191611631565b820191905f5260205f20905b81548152906001019060200180831161161457829003601f168201915b50505050600283015460039093015491929160ff16905084565b611654826107a9565b61165d816117be565b6107e58383611869565b5f6006826040516116789190612403565b908152604051908190036020019020546001600160a01b03169050806116d75760405162461bcd60e51b815260206004820152601460248201527311dd5a5b1908191bd95cc81b9bdd08195e1a5cdd60621b6044820152606401610982565b6001600160a01b0381165f908152600560205260408120905b600282015481101561179457336001600160a01b031682600201828154811061171b5761171b6123d8565b5f918252602090912001546001600160a01b03160361178c5760405162461bcd60e51b815260206004820152602760248201527f53656e64657220697320616c72656164792061206d656d626572206f66207468604482015266194819dd5a5b1960ca1b6064820152608401610982565b6001016116f0565b5060020180546001810182555f91825260209091200180546001600160a01b031916331790555050565b61092f8133611b76565b5f5f805160206126b98339815191526117e18484611128565b611860575f848152602082815260408083206001600160a01b03871684529091529020805460ff191660011790556118163390565b6001600160a01b0316836001600160a01b0316857f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4600191505061066d565b5f91505061066d565b5f5f805160206126b98339815191526118828484611128565b15611860575f848152602082815260408083206001600160a01b0387168085529252808320805460ff1916905551339287917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a4600191505061066d565b6118ea611baf565b5f805160206126d9833981519152805460ff191681557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a150565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614806119c757507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166119bb5f80516020612679833981519152546001600160a01b031690565b6001600160a01b031614155b156119e55760405163703e46dd60e11b815260040160405180910390fd5b565b7f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e36107a5816117be565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa925050508015611a6b575060408051601f3d908101601f19168201909252611a6891810190612641565b60015b611a9357604051634c9c8ce360e01b81526001600160a01b0383166004820152602401610982565b5f805160206126798339815191528114611ac357604051632a87526960e21b815260048101829052602401610982565b61090b8383611bde565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146119e55760405163703e46dd60e11b815260040160405180910390fd5b611b1e611c33565b5f805160206126d9833981519152805460ff191660011781557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a25833611923565b611b66611c63565b6119e5611cac565b6119e5611c63565b611b808282611128565b6107a55760405163e2517d3f60e01b81526001600160a01b038216600482015260248101839052604401610982565b5f805160206126d98339815191525460ff166119e557604051638dfc202b60e01b815260040160405180910390fd5b611be782611ccc565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a2805115611c2b5761090b8282611d2f565b6107a5611da1565b5f805160206126d98339815191525460ff16156119e55760405163d93c066560e01b815260040160405180910390fd5b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff166119e557604051631afcd79f60e31b815260040160405180910390fd5b611cb4611c63565b5f805160206126d9833981519152805460ff19169055565b806001600160a01b03163b5f03611d0157604051634c9c8ce360e01b81526001600160a01b0382166004820152602401610982565b5f8051602061267983398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b60605f80846001600160a01b031684604051611d4b9190612403565b5f60405180830381855af49150503d805f8114611d83576040519150601f19603f3d011682016040523d82523d5f602084013e611d88565b606091505b5091509150611d98858383611dc0565b95945050505050565b34156119e55760405163b398979f60e01b815260040160405180910390fd5b606082611dd557611dd082611e1f565b611e18565b8151158015611dec57506001600160a01b0384163b155b15611e1557604051639996b31560e01b81526001600160a01b0385166004820152602401610982565b50805b9392505050565b805115611e2f5780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b828054828255905f5260205f20908101928215611e81579160200282015b82811115611e81578251825591602001919060010190611e66565b50611e8d929150611ee4565b5090565b828054828255905f5260205f20908101928215611e81579160200282015b82811115611e8157825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190611eaf565b5b80821115611e8d575f8155600101611ee5565b5f60208284031215611f08575f80fd5b81356001600160e01b031981168114611e18575f80fd5b634e487b7160e01b5f52604160045260245ffd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611f5c57611f5c611f1f565b604052919050565b5f67ffffffffffffffff831115611f7d57611f7d611f1f565b611f90601f8401601f1916602001611f33565b9050828152838383011115611fa3575f80fd5b828260208301375f602084830101529392505050565b5f82601f830112611fc8575f80fd5b611e1883833560208501611f64565b5f60208284031215611fe7575f80fd5b813567ffffffffffffffff811115611ffd575f80fd5b61200984828501611fb9565b949350505050565b5f60208284031215612021575f80fd5b5035919050565b80356001600160a01b038116811461203e575f80fd5b919050565b5f8060408385031215612054575f80fd5b8235915061206460208401612028565b90509250929050565b5f805f805f60a08688031215612081575f80fd5b853567ffffffffffffffff811115612097575f80fd5b6120a388828901611fb9565b9860208801359850604088013597606081013597506080013595509350505050565b5f80604083850312156120d6575f80fd5b6120df83612028565b9150602083013567ffffffffffffffff8111156120fa575f80fd5b8301601f8101851361210a575f80fd5b61211985823560208401611f64565b9150509250929050565b5f8060408385031215612134575f80fd5b823567ffffffffffffffff81111561214a575f80fd5b61215685828601611fb9565b92505061206460208401612028565b5f805f60608486031215612177575f80fd5b833567ffffffffffffffff8082111561218e575f80fd5b61219a87838801611fb9565b945060208601359150808211156121af575f80fd5b506121bc86828701611fb9565b925050604084013590509250925092565b5f602082840312156121dd575f80fd5b611e1882612028565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b604081525f61222660408301856121e6565b905060018060a01b03831660208301529392505050565b5f806040838503121561224e575f80fd5b823567ffffffffffffffff80821115612265575f80fd5b818501915085601f830112612278575f80fd5b813560208282111561228c5761228c611f1f565b8160051b925061229d818401611f33565b82815292840181019281810190898511156122b6575f80fd5b948201945b848610156122d4578535825294820194908201906122bb565b9997909101359750505050505050565b602081525f611e1860208301846121e6565b86815260c060208201525f61230e60c08301886121e6565b90508560408301528460608301528360808301528260a0830152979650505050505050565b5f805f60608486031215612345575f80fd5b61234e84612028565b925061235c60208501612028565b915061236a60408501612028565b90509250925092565b5f8060408385031215612384575f80fd5b61238d83612028565b946020939093013593505050565b608081525f6123ad60808301876121e6565b82810360208401526123bf81876121e6565b6040840195909552505090151560609091015292915050565b634e487b7160e01b5f52603260045260245ffd5b5f81518060208401855e5f93019283525090919050565b5f611e1882846123ec565b600181811c9082168061242257607f821691505b60208210810361244057634e487b7160e01b5f52602260045260245ffd5b50919050565b5f8083546124538161240e565b6001828116801561246b5760018114612480576124ac565b60ff19841687528215158302870194506124ac565b875f526020805f205f5b858110156124a35781548a82015290840190820161248a565b50505082870194505b50929695505050505050565b634e487b7160e01b5f52601160045260245ffd5b8082018082111561066d5761066d6124b8565b601f82111561090b57805f5260205f20601f840160051c810160208510156125045750805b601f840160051c820191505b81811015612523575f8155600101612510565b5050505050565b815167ffffffffffffffff81111561254457612544611f1f565b61255881612552845461240e565b846124df565b602080601f83116001811461258b575f84156125745750858301515b5f19600386901b1c1916600185901b1785556125e2565b5f85815260208120601f198616915b828110156125b95788860151825594840194600190910190840161259a565b50858210156125d657878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b828152604060208201525f61200960408301846121e6565b5f60018201612613576126136124b8565b5060010190565b8181038181111561066d5761066d6124b8565b634e487b7160e01b5f52603160045260245ffd5b5f60208284031215612651575f80fd5b505191905056fe9b7946abd96dccbe6cfc6cc2c13300ab429d93e16fa72dc459eeccda73817f08360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800cd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300a2646970667358221220ea2b3697326adffd8de11773ad2c8d3456aac56c13e47a40f02f25681bd8a0f164736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1C5 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x8456CB59 GT PUSH2 0xF2 JUMPI DUP1 PUSH4 0xBFB231D2 GT PUSH2 0x92 JUMPI DUP1 PUSH4 0xE2EB41FF GT PUSH2 0x62 JUMPI DUP1 PUSH4 0xE2EB41FF EQ PUSH2 0x532 JUMPI DUP1 PUSH4 0xE551BA4B EQ PUSH2 0x5CB JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x5EA JUMPI DUP1 PUSH4 0xF72C0D8B EQ PUSH2 0x60A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xBFB231D2 EQ PUSH2 0x494 JUMPI DUP1 PUSH4 0xC0C53B8B EQ PUSH2 0x4C5 JUMPI DUP1 PUSH4 0xD3DCFF7C EQ PUSH2 0x4E4 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x513 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA75859E1 GT PUSH2 0xCD JUMPI DUP1 PUSH4 0xA75859E1 EQ PUSH2 0x3EB JUMPI DUP1 PUSH4 0xA9834B67 EQ PUSH2 0x418 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x437 JUMPI DUP1 PUSH4 0xBE22D27D EQ PUSH2 0x474 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x3A5 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x3B9 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x3D8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3FA9FCF8 GT PUSH2 0x168 JUMPI DUP1 PUSH4 0x52D1902D GT PUSH2 0x138 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x330 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x344 JUMPI DUP1 PUSH4 0x6F347A78 EQ PUSH2 0x367 JUMPI DUP1 PUSH4 0x7309CBBD EQ PUSH2 0x386 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3FA9FCF8 EQ PUSH2 0x2BC JUMPI DUP1 PUSH4 0x443C227C EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x2FE JUMPI DUP1 PUSH4 0x4FA4A1BB EQ PUSH2 0x311 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x1A3 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x24B JUMPI DUP1 PUSH4 0x31FEE8BE EQ PUSH2 0x26A JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x289 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x2A8 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1C9 JUMPI DUP1 PUSH4 0x17435E1A EQ PUSH2 0x1FD JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x21E JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1D4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E8 PUSH2 0x1E3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1EF8 JUMP JUMPDEST PUSH2 0x63D JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x208 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21C PUSH2 0x217 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FD7 JUMP JUMPDEST PUSH2 0x673 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x229 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x23D PUSH2 0x238 CALLDATASIZE PUSH1 0x4 PUSH2 0x2011 JUMP JUMPDEST PUSH2 0x7A9 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1F4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x256 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21C PUSH2 0x265 CALLDATASIZE PUSH1 0x4 PUSH2 0x2043 JUMP JUMPDEST PUSH2 0x7C9 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x275 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21C PUSH2 0x284 CALLDATASIZE PUSH1 0x4 PUSH2 0x206D JUMP JUMPDEST PUSH2 0x7EB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x294 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21C PUSH2 0x2A3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2043 JUMP JUMPDEST PUSH2 0x8D8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21C PUSH2 0x910 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21C PUSH2 0x932 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2DB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x23D PUSH2 0x2EA CALLDATASIZE PUSH1 0x4 PUSH2 0x2011 JUMP JUMPDEST PUSH1 0x7 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD DUP2 JUMP JUMPDEST PUSH2 0x21C PUSH2 0x30C CALLDATASIZE PUSH1 0x4 PUSH2 0x20C5 JUMP JUMPDEST PUSH2 0xB03 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21C PUSH2 0x32B CALLDATASIZE PUSH1 0x4 PUSH2 0x2123 JUMP JUMPDEST PUSH2 0xB1E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x23D PUSH2 0xD24 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x34F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x26D9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF AND PUSH2 0x1E8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x372 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21C PUSH2 0x381 CALLDATASIZE PUSH1 0x4 PUSH2 0x2165 JUMP JUMPDEST PUSH2 0xD3F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x391 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21C PUSH2 0x3A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x2011 JUMP JUMPDEST PUSH2 0xDEA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21C PUSH2 0x1109 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3C4 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1E8 PUSH2 0x3D3 CALLDATASIZE PUSH1 0x4 PUSH2 0x2043 JUMP JUMPDEST PUSH2 0x1128 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E3 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x23D PUSH0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x40A PUSH2 0x405 CALLDATASIZE PUSH1 0x4 PUSH2 0x21CD JUMP JUMPDEST PUSH2 0x115E JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP3 SWAP2 SWAP1 PUSH2 0x2214 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x423 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21C PUSH2 0x432 CALLDATASIZE PUSH1 0x4 PUSH2 0x223D JUMP JUMPDEST PUSH2 0x1208 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x442 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x467 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x352E302E3 PUSH1 0xDC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP2 SWAP1 PUSH2 0x22E4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x47F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x23D PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2659 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x49F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4B3 PUSH2 0x4AE CALLDATASIZE PUSH1 0x4 PUSH2 0x2011 JUMP JUMPDEST PUSH2 0x12B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP7 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x22F6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4D0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21C PUSH2 0x4DF CALLDATASIZE PUSH1 0x4 PUSH2 0x2333 JUMP JUMPDEST PUSH2 0x1370 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4EF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x503 PUSH2 0x4FE CALLDATASIZE PUSH1 0x4 PUSH2 0x2373 JUMP JUMPDEST PUSH2 0x14F5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1F4 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x239B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21C PUSH2 0x52D CALLDATASIZE PUSH1 0x4 PUSH2 0x2043 JUMP JUMPDEST PUSH2 0x164B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x590 PUSH2 0x54C CALLDATASIZE PUSH1 0x4 PUSH2 0x21CD JUMP JUMPDEST PUSH1 0x3 PUSH1 0x20 MSTORE DUP1 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 PUSH0 SWAP2 POP SWAP1 POP DUP1 PUSH0 ADD SLOAD SWAP1 DUP1 PUSH1 0x1 ADD SLOAD SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 DUP1 PUSH1 0x6 ADD SLOAD SWAP1 DUP1 PUSH1 0x7 ADD SLOAD SWAP1 POP DUP9 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP9 DUP10 MSTORE PUSH1 0x20 DUP10 ADD SWAP8 SWAP1 SWAP8 MSTORE SWAP6 DUP8 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x60 DUP7 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x80 DUP6 ADD MSTORE PUSH1 0xA0 DUP5 ADD MSTORE PUSH1 0xC0 DUP4 ADD MSTORE PUSH1 0xE0 DUP3 ADD MSTORE PUSH2 0x100 ADD PUSH2 0x1F4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21C PUSH2 0x5E5 CALLDATASIZE PUSH1 0x4 PUSH2 0x1FD7 JUMP JUMPDEST PUSH2 0x1667 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5F5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x23D PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2699 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x615 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x23D PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x66D JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 LT ISZERO PUSH2 0x7A5 JUMPI CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0x6AB JUMPI PUSH2 0x6AB PUSH2 0x23D8 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD SWAP1 POP DUP3 PUSH1 0x40 MLOAD PUSH1 0x20 ADD PUSH2 0x6CA SWAP2 SWAP1 PUSH2 0x2403 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F NOT DUP2 DUP5 SUB ADD DUP2 MSTORE SWAP1 DUP3 SWAP1 MSTORE DUP1 MLOAD PUSH1 0x20 SWAP2 DUP3 ADD KECCAK256 SWAP2 PUSH2 0x6F0 SWAP2 DUP5 SWAP2 ADD PUSH2 0x2446 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 EQ DUP1 ISZERO PUSH2 0x718 JUMPI POP PUSH1 0x3 DUP2 ADD SLOAD PUSH1 0xFF AND ISZERO JUMPDEST ISZERO PUSH2 0x79C JUMPI PUSH1 0x3 DUP1 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP4 ADD SLOAD CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x20 SWAP4 SWAP1 SWAP4 MSTORE PUSH1 0x40 DUP4 KECCAK256 SWAP1 SWAP2 ADD DUP1 SLOAD SWAP2 SWAP3 SWAP1 SWAP2 PUSH2 0x758 SWAP1 DUP5 SWAP1 PUSH2 0x24CC JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD CALLER SWAP1 PUSH32 0xBE21664565742A9F42CBB6D005F92DB59C7BCAD35B12EF5B57B79E75676B247A SWAP1 PUSH2 0x78F SWAP1 DUP7 SWAP1 PUSH2 0x22E4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0x675 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x26B9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x7D2 DUP3 PUSH2 0x7A9 JUMP JUMPDEST PUSH2 0x7DB DUP2 PUSH2 0x17BE JUMP JUMPDEST PUSH2 0x7E5 DUP4 DUP4 PUSH2 0x17C8 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2659 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x802 DUP2 PUSH2 0x17BE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0xC0 DUP2 ADD DUP3 MSTORE PUSH0 DUP1 SLOAD DUP1 DUP4 MSTORE PUSH1 0x20 DUP1 DUP5 ADD DUP12 DUP2 MSTORE DUP5 DUP7 ADD DUP12 SWAP1 MSTORE PUSH1 0x60 DUP6 ADD DUP11 SWAP1 MSTORE PUSH1 0x80 DUP6 ADD DUP10 SWAP1 MSTORE PUSH1 0xA0 DUP6 ADD DUP9 SWAP1 MSTORE SWAP2 DUP4 MSTORE PUSH1 0x2 SWAP1 MSTORE SWAP3 SWAP1 KECCAK256 DUP2 MLOAD DUP2 SSTORE SWAP2 MLOAD SWAP1 SWAP2 SWAP1 PUSH1 0x1 DUP3 ADD SWAP1 PUSH2 0x857 SWAP1 DUP3 PUSH2 0x252A JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SSTORE PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD SSTORE SWAP1 POP POP PUSH32 0x78D68BA0E8C23B92E7C700D99EFED2719520CBD4AF845B2C03AE251F9CDF3D52 PUSH0 SLOAD DUP8 PUSH1 0x40 MLOAD PUSH2 0x8B5 SWAP3 SWAP2 SWAP1 PUSH2 0x25EA JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH0 DUP1 SLOAD SWAP1 DUP1 PUSH2 0x8CB DUP4 PUSH2 0x2602 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x901 JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x90B DUP3 DUP3 PUSH2 0x1869 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2699 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x927 DUP2 PUSH2 0x17BE JUMP JUMPDEST PUSH2 0x92F PUSH2 0x18E2 JUMP JUMPDEST POP JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD ISZERO PUSH2 0x98B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x506C6179657220616C726561647920657869737473 PUSH1 0x58 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH2 0x140 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x64 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x32 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0xA DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x9E7 JUMPI PUSH2 0x9E7 PUSH2 0x1F1F JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA10 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP DUP2 MSTORE PUSH1 0x20 ADD PUSH0 PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0xA40 JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY ADD SWAP1 POP JUMPDEST POP SWAP1 MSTORE CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 SWAP3 DUP4 SWAP1 KECCAK256 DUP5 MLOAD DUP2 SSTORE DUP5 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SSTORE SWAP3 DUP5 ADD MLOAD PUSH1 0x2 DUP5 ADD SSTORE PUSH1 0x60 DUP5 ADD MLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 SSTORE PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0x4 DUP4 ADD SSTORE PUSH1 0xA0 DUP4 ADD MLOAD PUSH1 0x5 DUP4 ADD SSTORE PUSH1 0xC0 DUP4 ADD MLOAD PUSH1 0x6 DUP4 ADD SSTORE PUSH1 0xE0 DUP4 ADD MLOAD PUSH1 0x7 DUP4 ADD SSTORE PUSH2 0x100 DUP4 ADD MLOAD DUP1 MLOAD PUSH2 0xAB7 SWAP3 PUSH1 0x8 DUP6 ADD SWAP3 ADD SWAP1 PUSH2 0x1E48 JUMP JUMPDEST POP PUSH2 0x120 DUP3 ADD MLOAD DUP1 MLOAD PUSH2 0xAD4 SWAP2 PUSH1 0x9 DUP5 ADD SWAP2 PUSH1 0x20 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1E48 JUMP JUMPDEST POP POP PUSH1 0x40 MLOAD CALLER SWAP2 POP PUSH32 0xB4CCA19A27CE42915C3CEE0CEE28FC5D90969EE49F09EC71659546A63B5F7BC0 SWAP1 PUSH0 SWAP1 LOG2 JUMP JUMPDEST PUSH2 0xB0B PUSH2 0x1941 JUMP JUMPDEST PUSH2 0xB14 DUP3 PUSH2 0x19E7 JUMP JUMPDEST PUSH2 0x7A5 DUP3 DUP3 PUSH2 0x1A11 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2659 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xB35 DUP2 PUSH2 0x17BE JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x6 DUP5 PUSH1 0x40 MLOAD PUSH2 0xB4F SWAP2 SWAP1 PUSH2 0x2403 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xBAC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x4775696C6420616C726561647920657869737473 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x982 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD PUSH1 0x60 DUP2 ADD DUP3 MSTORE DUP5 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH1 0x20 DUP3 ADD MSTORE DUP2 MLOAD PUSH1 0x1 DUP1 DUP3 MSTORE DUP2 DUP5 ADD DUP5 MSTORE SWAP2 SWAP3 DUP4 ADD SWAP2 DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY POP POP POP SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP2 MLOAD DUP2 SWAP1 PUSH2 0xC0F SWAP1 DUP3 PUSH2 0x252A JUMP JUMPDEST POP PUSH1 0x20 DUP3 DUP2 ADD MLOAD PUSH1 0x1 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x40 DUP4 ADD MLOAD DUP1 MLOAD PUSH2 0xC4E SWAP3 PUSH1 0x2 DUP6 ADD SWAP3 ADD SWAP1 PUSH2 0x1E91 JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xC7C JUMPI PUSH2 0xC7C PUSH2 0x23D8 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP DUP2 PUSH1 0x6 DUP5 PUSH1 0x40 MLOAD PUSH2 0xCB8 SWAP2 SWAP1 PUSH2 0x2403 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD DUP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 SWAP4 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH32 0x72208535A97B2E307167838C66AACD47F8DE3A2CB92BC2DDB2B2B52009C9FD5 SWAP1 PUSH2 0xD17 SWAP1 DUP6 SWAP1 DUP6 SWAP1 PUSH2 0x2214 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xD2D PUSH2 0x1ACD JUMP JUMPDEST POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2679 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2659 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xD56 DUP2 PUSH2 0x17BE JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x4 PUSH1 0x20 DUP2 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 DUP2 MLOAD PUSH1 0x80 DUP2 ADD DUP4 MSTORE DUP10 DUP2 MSTORE DUP1 DUP5 ADD DUP10 SWAP1 MSTORE SWAP2 DUP3 ADD DUP8 SWAP1 MSTORE PUSH1 0x60 DUP3 ADD DUP6 SWAP1 MSTORE DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP6 MSTORE SWAP2 SWAP1 SWAP4 KECCAK256 DUP4 MLOAD SWAP2 SWAP1 SWAP3 MUL SWAP1 SWAP2 ADD SWAP1 DUP2 SWAP1 PUSH2 0xDAA SWAP1 DUP3 PUSH2 0x252A JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x1 DUP3 ADD SWAP1 PUSH2 0xDBF SWAP1 DUP3 PUSH2 0x252A JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH1 0x2 DUP3 ADD SSTORE PUSH1 0x60 SWAP1 SWAP2 ADD MLOAD PUSH1 0x3 SWAP1 SWAP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 DUP2 MSTORE PUSH1 0x7 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP2 MLOAD DUP2 SLOAD PUSH1 0x60 SWAP5 DUP2 MUL DUP3 ADD DUP6 ADD DUP5 MSTORE SWAP3 DUP2 ADD DUP4 DUP2 MSTORE SWAP1 SWAP4 SWAP2 SWAP3 DUP5 SWAP3 DUP5 SWAP2 SWAP1 DUP5 ADD DUP3 DUP3 DUP1 ISZERO PUSH2 0xE45 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xE31 JUMPI JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE POP POP SWAP1 POP PUSH0 DUP2 PUSH0 ADD MLOAD MLOAD GT PUSH2 0xE9E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x496E76616C696420726563697065 PUSH1 0x90 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x982 JUMP JUMPDEST PUSH0 JUMPDEST DUP2 MLOAD MLOAD DUP2 LT ISZERO PUSH2 0xF9F JUMPI PUSH0 DUP1 JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD DUP2 LT ISZERO PUSH2 0xF38 JUMPI DUP4 MLOAD DUP1 MLOAD DUP5 SWAP1 DUP2 LT PUSH2 0xEDA JUMPI PUSH2 0xEDA PUSH2 0x23D8 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x3 PUSH0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x8 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0xF19 JUMPI PUSH2 0xF19 PUSH2 0x23D8 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SUB PUSH2 0xF30 JUMPI PUSH1 0x1 SWAP2 POP PUSH2 0xF38 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xEAD JUMP JUMPDEST POP DUP1 PUSH2 0xF96 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x506C6179657220646F6573206E6F74206861766520616C6C2072657175697265 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x64206974656D73 PUSH1 0xC8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x982 JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0xEA0 JUMP JUMPDEST POP PUSH0 JUMPDEST DUP2 MLOAD MLOAD DUP2 LT ISZERO PUSH2 0x10DD JUMPI PUSH0 JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD SLOAD DUP2 LT ISZERO PUSH2 0x10D4 JUMPI DUP3 MLOAD DUP1 MLOAD DUP4 SWAP1 DUP2 LT PUSH2 0xFDB JUMPI PUSH2 0xFDB PUSH2 0x23D8 JUMP JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x3 PUSH0 CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH1 0x8 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x101A JUMPI PUSH2 0x101A PUSH2 0x23D8 JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD SLOAD SUB PUSH2 0x10CC JUMPI CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD PUSH2 0x1047 SWAP1 PUSH1 0x1 SWAP1 PUSH2 0x261A JUMP JUMPDEST DUP2 SLOAD DUP2 LT PUSH2 0x1057 JUMPI PUSH2 0x1057 PUSH2 0x23D8 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SLOAD CALLER DUP4 MSTORE PUSH1 0x3 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD DUP4 SWAP1 DUP2 LT PUSH2 0x1086 JUMPI PUSH2 0x1086 PUSH2 0x23D8 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 SWAP1 SWAP2 ADD SWAP3 SWAP1 SWAP3 SSTORE CALLER DUP2 MSTORE PUSH1 0x3 SWAP1 SWAP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x8 ADD DUP1 SLOAD DUP1 PUSH2 0x10B4 JUMPI PUSH2 0x10B4 PUSH2 0x262D JUMP JUMPDEST PUSH1 0x1 SWAP1 SUB DUP2 DUP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 ADD PUSH0 SWAP1 SSTORE SWAP1 SSTORE PUSH2 0x10D4 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0xFAE JUMP JUMPDEST POP PUSH1 0x1 ADD PUSH2 0xFA2 JUMP JUMPDEST POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP3 DUP2 ADD MLOAD PUSH1 0x8 SWAP1 SWAP4 ADD DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE SWAP1 DUP4 MSTORE SWAP2 KECCAK256 ADD SSTORE POP JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2699 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1120 DUP2 PUSH2 0x17BE JUMP JUMPDEST PUSH2 0x92F PUSH2 0x1B16 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x26B9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x5 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD DUP2 SWAP1 PUSH2 0x1178 SWAP1 PUSH2 0x240E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x11A4 SWAP1 PUSH2 0x240E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x11EF JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x11C6 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x11EF JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x11D2 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP PUSH1 0x1 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2659 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x121F DUP2 PUSH2 0x17BE JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE DUP5 DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 SLOAD PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x7 DUP3 MSTORE SWAP3 SWAP1 SWAP3 KECCAK256 DUP2 MLOAD DUP1 MLOAD SWAP3 SWAP4 SWAP2 SWAP3 PUSH2 0x1257 SWAP3 DUP5 SWAP3 ADD SWAP1 PUSH2 0x1E48 JUMP JUMPDEST POP PUSH1 0x20 SWAP2 DUP3 ADD MLOAD PUSH1 0x1 SWAP2 DUP3 ADD SSTORE SLOAD PUSH1 0x40 DUP1 MLOAD SWAP2 DUP3 MSTORE SWAP2 DUP2 ADD DUP5 SWAP1 MSTORE PUSH32 0x9BECFD2B1FC8127387C5B0002A6CBC8382E6C8FB9F76DFD6CFD92CBE94383D0E SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 PUSH1 0x1 DUP1 SLOAD SWAP1 PUSH0 PUSH2 0x12AC DUP4 PUSH2 0x2602 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD DUP1 SLOAD SWAP2 SWAP3 SWAP2 PUSH2 0x12D7 SWAP1 PUSH2 0x240E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1303 SWAP1 PUSH2 0x240E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x134E JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1325 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x134E JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1331 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x2 ADD SLOAD SWAP1 DUP1 PUSH1 0x3 ADD SLOAD SWAP1 DUP1 PUSH1 0x4 ADD SLOAD SWAP1 DUP1 PUSH1 0x5 ADD SLOAD SWAP1 POP DUP7 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x13B5 JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x13D1 JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x13DF JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x13FD JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x1427 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0x142F PUSH2 0x1B5E JUMP JUMPDEST PUSH2 0x1437 PUSH2 0x1B6E JUMP JUMPDEST PUSH2 0x143F PUSH2 0x1B6E JUMP JUMPDEST PUSH2 0x1449 PUSH0 DUP10 PUSH2 0x17C8 JUMP JUMPDEST POP PUSH2 0x1461 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2699 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP9 PUSH2 0x17C8 JUMP JUMPDEST POP PUSH2 0x148C PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 DUP8 PUSH2 0x17C8 JUMP JUMPDEST POP PUSH2 0x14A4 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2659 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP10 PUSH2 0x17C8 JUMP JUMPDEST POP DUP4 ISZERO PUSH2 0x14EB JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x4 PUSH1 0x20 MSTORE DUP2 PUSH0 MSTORE PUSH1 0x40 PUSH0 KECCAK256 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x150E JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH0 SWAP2 POP SWAP2 POP POP DUP1 PUSH0 ADD DUP1 SLOAD PUSH2 0x152E SWAP1 PUSH2 0x240E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x155A SWAP1 PUSH2 0x240E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x15A5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x157C JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x15A5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1588 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 DUP1 PUSH1 0x1 ADD DUP1 SLOAD PUSH2 0x15BA SWAP1 PUSH2 0x240E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x15E6 SWAP1 PUSH2 0x240E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x1631 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1608 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x1631 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x1614 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x2 DUP4 ADD SLOAD PUSH1 0x3 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 SWAP2 PUSH1 0xFF AND SWAP1 POP DUP5 JUMP JUMPDEST PUSH2 0x1654 DUP3 PUSH2 0x7A9 JUMP JUMPDEST PUSH2 0x165D DUP2 PUSH2 0x17BE JUMP JUMPDEST PUSH2 0x7E5 DUP4 DUP4 PUSH2 0x1869 JUMP JUMPDEST PUSH0 PUSH1 0x6 DUP3 PUSH1 0x40 MLOAD PUSH2 0x1678 SWAP2 SWAP1 PUSH2 0x2403 JUMP JUMPDEST SWAP1 DUP2 MSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 SWAP1 SUB PUSH1 0x20 ADD SWAP1 KECCAK256 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP1 PUSH2 0x16D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x11DD5A5B1908191BD95CC81B9BDD08195E1A5CDD PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x982 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x5 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 SWAP1 JUMPDEST PUSH1 0x2 DUP3 ADD SLOAD DUP2 LT ISZERO PUSH2 0x1794 JUMPI CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP3 PUSH1 0x2 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x171B JUMPI PUSH2 0x171B PUSH2 0x23D8 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SUB PUSH2 0x178C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x27 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x53656E64657220697320616C72656164792061206D656D626572206F66207468 PUSH1 0x44 DUP3 ADD MSTORE PUSH7 0x194819DD5A5B19 PUSH1 0xCA SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x982 JUMP JUMPDEST PUSH1 0x1 ADD PUSH2 0x16F0 JUMP JUMPDEST POP PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0x1 DUP2 ADD DUP3 SSTORE PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND CALLER OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH2 0x92F DUP2 CALLER PUSH2 0x1B76 JUMP JUMPDEST PUSH0 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x26B9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x17E1 DUP5 DUP5 PUSH2 0x1128 JUMP JUMPDEST PUSH2 0x1860 JUMPI PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x1816 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x66D JUMP JUMPDEST PUSH0 SWAP2 POP POP PUSH2 0x66D JUMP JUMPDEST PUSH0 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x26B9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1882 DUP5 DUP5 PUSH2 0x1128 JUMP JUMPDEST ISZERO PUSH2 0x1860 JUMPI PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP8 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x66D JUMP JUMPDEST PUSH2 0x18EA PUSH2 0x1BAF JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x26D9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0x19C7 JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x19BB PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2679 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x19E5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 PUSH2 0x7A5 DUP2 PUSH2 0x17BE JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x1A6B JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x1A68 SWAP2 DUP2 ADD SWAP1 PUSH2 0x2641 JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1A93 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x982 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2679 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0x1AC3 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x982 JUMP JUMPDEST PUSH2 0x90B DUP4 DUP4 PUSH2 0x1BDE JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x19E5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B1E PUSH2 0x1C33 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x26D9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR DUP2 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 CALLER PUSH2 0x1923 JUMP JUMPDEST PUSH2 0x1B66 PUSH2 0x1C63 JUMP JUMPDEST PUSH2 0x19E5 PUSH2 0x1CAC JUMP JUMPDEST PUSH2 0x19E5 PUSH2 0x1C63 JUMP JUMPDEST PUSH2 0x1B80 DUP3 DUP3 PUSH2 0x1128 JUMP JUMPDEST PUSH2 0x7A5 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x982 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x26D9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF AND PUSH2 0x19E5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1BE7 DUP3 PUSH2 0x1CCC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x1C2B JUMPI PUSH2 0x90B DUP3 DUP3 PUSH2 0x1D2F JUMP JUMPDEST PUSH2 0x7A5 PUSH2 0x1DA1 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x26D9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x19E5 JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x19E5 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1CB4 PUSH2 0x1C63 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x26D9 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH0 SUB PUSH2 0x1D01 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x982 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x2679 DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x1D4B SWAP2 SWAP1 PUSH2 0x2403 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1D83 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1D88 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1D98 DUP6 DUP4 DUP4 PUSH2 0x1DC0 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x19E5 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x1DD5 JUMPI PUSH2 0x1DD0 DUP3 PUSH2 0x1E1F JUMP JUMPDEST PUSH2 0x1E18 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x1DEC JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x1E15 JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x982 JUMP JUMPDEST POP DUP1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x1E2F JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x1E81 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1E81 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1E66 JUMP JUMPDEST POP PUSH2 0x1E8D SWAP3 SWAP2 POP PUSH2 0x1EE4 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x1E81 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x1E81 JUMPI DUP3 MLOAD DUP3 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND OR DUP3 SSTORE PUSH1 0x20 SWAP1 SWAP3 ADD SWAP2 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x1EAF JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x1E8D JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1EE5 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1F08 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1E18 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1F5C JUMPI PUSH2 0x1F5C PUSH2 0x1F1F JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH8 0xFFFFFFFFFFFFFFFF DUP4 GT ISZERO PUSH2 0x1F7D JUMPI PUSH2 0x1F7D PUSH2 0x1F1F JUMP JUMPDEST PUSH2 0x1F90 PUSH1 0x1F DUP5 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x1F33 JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE DUP4 DUP4 DUP4 ADD GT ISZERO PUSH2 0x1FA3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 DUP3 PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP5 DUP4 ADD ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1FC8 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1E18 DUP4 DUP4 CALLDATALOAD PUSH1 0x20 DUP6 ADD PUSH2 0x1F64 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1FE7 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1FFD JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x2009 DUP5 DUP3 DUP6 ADD PUSH2 0x1FB9 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2021 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x203E JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2054 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x2064 PUSH1 0x20 DUP5 ADD PUSH2 0x2028 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 PUSH1 0xA0 DUP7 DUP9 SUB SLT ISZERO PUSH2 0x2081 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP6 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2097 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x20A3 DUP9 DUP3 DUP10 ADD PUSH2 0x1FB9 JUMP JUMPDEST SWAP9 PUSH1 0x20 DUP9 ADD CALLDATALOAD SWAP9 POP PUSH1 0x40 DUP9 ADD CALLDATALOAD SWAP8 PUSH1 0x60 DUP2 ADD CALLDATALOAD SWAP8 POP PUSH1 0x80 ADD CALLDATALOAD SWAP6 POP SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x20DF DUP4 PUSH2 0x2028 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20FA JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x210A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x2119 DUP6 DUP3 CALLDATALOAD PUSH1 0x20 DUP5 ADD PUSH2 0x1F64 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2134 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x214A JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x2156 DUP6 DUP3 DUP7 ADD PUSH2 0x1FB9 JUMP JUMPDEST SWAP3 POP POP PUSH2 0x2064 PUSH1 0x20 DUP5 ADD PUSH2 0x2028 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2177 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x218E JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x219A DUP8 DUP4 DUP9 ADD PUSH2 0x1FB9 JUMP JUMPDEST SWAP5 POP PUSH1 0x20 DUP7 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x21AF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x21BC DUP7 DUP3 DUP8 ADD PUSH2 0x1FB9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21DD JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1E18 DUP3 PUSH2 0x2028 JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH0 PUSH2 0x2226 PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x21E6 JUMP JUMPDEST SWAP1 POP PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x20 DUP4 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x224E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2265 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2278 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x20 DUP3 DUP3 GT ISZERO PUSH2 0x228C JUMPI PUSH2 0x228C PUSH2 0x1F1F JUMP JUMPDEST DUP2 PUSH1 0x5 SHL SWAP3 POP PUSH2 0x229D DUP2 DUP5 ADD PUSH2 0x1F33 JUMP JUMPDEST DUP3 DUP2 MSTORE SWAP3 DUP5 ADD DUP2 ADD SWAP3 DUP2 DUP2 ADD SWAP1 DUP10 DUP6 GT ISZERO PUSH2 0x22B6 JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP5 DUP3 ADD SWAP5 JUMPDEST DUP5 DUP7 LT ISZERO PUSH2 0x22D4 JUMPI DUP6 CALLDATALOAD DUP3 MSTORE SWAP5 DUP3 ADD SWAP5 SWAP1 DUP3 ADD SWAP1 PUSH2 0x22BB JUMP JUMPDEST SWAP10 SWAP8 SWAP1 SWAP2 ADD CALLDATALOAD SWAP8 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x1E18 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x21E6 JUMP JUMPDEST DUP7 DUP2 MSTORE PUSH1 0xC0 PUSH1 0x20 DUP3 ADD MSTORE PUSH0 PUSH2 0x230E PUSH1 0xC0 DUP4 ADD DUP9 PUSH2 0x21E6 JUMP JUMPDEST SWAP1 POP DUP6 PUSH1 0x40 DUP4 ADD MSTORE DUP5 PUSH1 0x60 DUP4 ADD MSTORE DUP4 PUSH1 0x80 DUP4 ADD MSTORE DUP3 PUSH1 0xA0 DUP4 ADD MSTORE SWAP8 SWAP7 POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x2345 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x234E DUP5 PUSH2 0x2028 JUMP JUMPDEST SWAP3 POP PUSH2 0x235C PUSH1 0x20 DUP6 ADD PUSH2 0x2028 JUMP JUMPDEST SWAP2 POP PUSH2 0x236A PUSH1 0x40 DUP6 ADD PUSH2 0x2028 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2384 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x238D DUP4 PUSH2 0x2028 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x80 DUP2 MSTORE PUSH0 PUSH2 0x23AD PUSH1 0x80 DUP4 ADD DUP8 PUSH2 0x21E6 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x23BF DUP2 DUP8 PUSH2 0x21E6 JUMP JUMPDEST PUSH1 0x40 DUP5 ADD SWAP6 SWAP1 SWAP6 MSTORE POP POP SWAP1 ISZERO ISZERO PUSH1 0x60 SWAP1 SWAP2 ADD MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP2 MLOAD DUP1 PUSH1 0x20 DUP5 ADD DUP6 MCOPY PUSH0 SWAP4 ADD SWAP3 DUP4 MSTORE POP SWAP1 SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x1E18 DUP3 DUP5 PUSH2 0x23EC JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x2422 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x2440 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 DUP4 SLOAD PUSH2 0x2453 DUP2 PUSH2 0x240E JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0x246B JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x2480 JUMPI PUSH2 0x24AC JUMP JUMPDEST PUSH1 0xFF NOT DUP5 AND DUP8 MSTORE DUP3 ISZERO ISZERO DUP4 MUL DUP8 ADD SWAP5 POP PUSH2 0x24AC JUMP JUMPDEST DUP8 PUSH0 MSTORE PUSH1 0x20 DUP1 PUSH0 KECCAK256 PUSH0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x24A3 JUMPI DUP2 SLOAD DUP11 DUP3 ADD MSTORE SWAP1 DUP5 ADD SWAP1 DUP3 ADD PUSH2 0x248A JUMP JUMPDEST POP POP POP DUP3 DUP8 ADD SWAP5 POP JUMPDEST POP SWAP3 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x66D JUMPI PUSH2 0x66D PUSH2 0x24B8 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x90B JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x2504 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x2523 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2510 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2544 JUMPI PUSH2 0x2544 PUSH2 0x1F1F JUMP JUMPDEST PUSH2 0x2558 DUP2 PUSH2 0x2552 DUP5 SLOAD PUSH2 0x240E JUMP JUMPDEST DUP5 PUSH2 0x24DF JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x258B JUMPI PUSH0 DUP5 ISZERO PUSH2 0x2574 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x25E2 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x25B9 JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x259A JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x25D6 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST DUP3 DUP2 MSTORE PUSH1 0x40 PUSH1 0x20 DUP3 ADD MSTORE PUSH0 PUSH2 0x2009 PUSH1 0x40 DUP4 ADD DUP5 PUSH2 0x21E6 JUMP JUMPDEST PUSH0 PUSH1 0x1 DUP3 ADD PUSH2 0x2613 JUMPI PUSH2 0x2613 PUSH2 0x24B8 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x66D JUMPI PUSH2 0x66D PUSH2 0x24B8 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x31 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2651 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP INVALID SWAP12 PUSH26 0x46ABD96DCCBE6CFC6CC2C13300AB429D93E16FA72DC459EECCDA PUSH20 0x817F08360894A13BA1A3210667C828492DB98DCA RETURNDATACOPY KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC65D7A28E3265B37A647492 SWAP16 CALLER PUSH6 0x21B332C1681B SWAP4 EXTCODEHASH PUSH13 0xB9F3376673440D862A02DD7BC7 0xDE 0xC4 0xDC 0xEE 0xDD 0xA7 PUSH22 0xE58DD541E08A116C6C53815C0BD028192F7B626800CD MCOPY 0xD1 TLOAD PUSH15 0x187E77E9AEE88184C21F4F2182AB58 0x27 0xCB EXTCODESIZE PUSH31 0x7FBEDCD63F03300A2646970667358221220EA2B3697326ADFFD8DE11773AD 0x2C DUP14 CALLVALUE JUMP 0xAA 0xC5 PUSH13 0x13E47A40F02F25681BD8A0F164 PUSH20 0x6F6C634300081900330000000000000000000000 ",
							"sourceMap": "420:6116:13:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3443:202:0;;;;;;;;;;-1:-1:-1;3443:202:0;;;;;:::i;:::-;;:::i;:::-;;;470:14:14;;463:22;445:41;;433:2;418:18;3443:202:0;;;;;;;;3557:532:13;;;;;;;;;;-1:-1:-1;3557:532:13;;;;;:::i;:::-;;:::i;:::-;;4759:191:0;;;;;;;;;;-1:-1:-1;4759:191:0;;;;;:::i;:::-;;:::i;:::-;;;2206:25:14;;;2194:2;2179:18;4759:191:0;2060:177:14;5246:136:0;;;;;;;;;;-1:-1:-1;5246:136:0;;;;;:::i;:::-;;:::i;3024:315:13:-;;;;;;;;;;-1:-1:-1;3024:315:13;;;;;:::i;:::-;;:::i;6348:245:0:-;;;;;;;;;;-1:-1:-1;6348:245:0;;;;;:::i;:::-;;:::i;2585:75:13:-;;;;;;;;;;;;;:::i;2770:248::-;;;;;;;;;;;;;:::i;1790:38::-;;;;;;;;;;-1:-1:-1;1790:38:13;;;;;:::i;:::-;;;;;;;;;;;;;;;;4158:214:2;;;;;;:::i;:::-;;:::i;4095:368:13:-;;;;;;;;;;-1:-1:-1;4095:368:13;;;;;:::i;:::-;;:::i;3705:134:2:-;;;;;;;;;;;;;:::i;2692:145:4:-;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;2821:9:4;;;2692:145;;3345:206:13;;;;;;;;;;-1:-1:-1;3345:206:13;;;;;:::i;:::-;;:::i;5235:1299::-;;;;;;;;;;-1:-1:-1;5235:1299:13;;;;;:::i;:::-;;:::i;2508:71::-;;;;;;;;;;;;;:::i;3732:207:0:-;;;;;;;;;;-1:-1:-1;3732:207:0;;;;;:::i;:::-;;:::i;2317:49::-;;;;;;;;;;-1:-1:-1;2317:49:0;2362:4;2317:49;;1695:39:13;;;;;;;;;;-1:-1:-1;1695:39:13;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;4987:242::-;;;;;;;;;;-1:-1:-1;4987:242:13;;;;;:::i;:::-;;:::i;1819:58:2:-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1819:58:2;;;;;;;;;;;;:::i;693:70:13:-;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;693:70:13;;1555:34;;;;;;;;;;-1:-1:-1;1555:34:13;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;:::i;2115:387::-;;;;;;;;;;-1:-1:-1;2115:387:13;;;;;:::i;:::-;;:::i;1642:47::-;;;;;;;;;;-1:-1:-1;1642:47:13;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;5662:138:0:-;;;;;;;;;;-1:-1:-1;5662:138:0;;;;;:::i;:::-;;:::i;1595:41:13:-;;;;;;;;;;-1:-1:-1;1595:41:13;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9379:25:14;;;9435:2;9420:18;;9413:34;;;;9463:18;;;9456:34;;;;9521:2;9506:18;;9499:34;;;;9564:3;9549:19;;9542:35;9608:3;9593:19;;9586:35;9652:3;9637:19;;9630:35;9696:3;9681:19;;9674:35;9366:3;9351:19;1595:41:13;9036:679:14;4469:512:13;;;;;;;;;;-1:-1:-1;4469:512:13;;;;;:::i;:::-;;:::i;553:62::-;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;553:62:13;;621:66;;;;;;;;;;;;661:26;621:66;;3443:202:0;3528:4;-1:-1:-1;;;;;;3551:47:0;;-1:-1:-1;;;3551:47:0;;:87;;-1:-1:-1;;;;;;;;;;1133:40:5;;;3602:36:0;3544:94;3443:202;-1:-1:-1;;3443:202:0:o;3557:532:13:-;3628:6;3623:460;3657:10;3644:24;;;;:12;:24;;;;;:31;3640:35;;3623:460;;;3731:10;3696:19;3718:24;;;:12;:24;;;;;:27;;3743:1;;3718:27;;;;;;:::i;:::-;;;;;;;;;;;3696:49;;3834:10;3817:28;;;;;;;;:::i;:::-;;;;-1:-1:-1;;3817:28:13;;;;;;;;;;3807:39;;3817:28;3807:39;;;;;3773:29;;3790:5;;3773:29;;:::i;:::-;;;;;;;;;;;;;3763:40;;;;;;:83;:103;;;;-1:-1:-1;3851:15:13;;;;;;3850:16;3763:103;3759:314;;;3886:15;;;;:22;;-1:-1:-1;;3886:22:13;3904:4;3886:22;;;;;;3960:14;;;;3934:10;3886:15;3926:19;;;;;;;;;;;:30;;;:48;;3960:14;;3926:30;;:48;;3960:14;;3926:48;:::i;:::-;;;;-1:-1:-1;;3997:38:13;;4012:10;;3997:38;;;;4024:10;;3997:38;:::i;:::-;;;;;;;;4053:5;3623:460;3557:532;:::o;3759:314::-;-1:-1:-1;3677:3:13;;3623:460;;;;3557:532;:::o;4759:191:0:-;4824:7;4919:14;;;-1:-1:-1;;;;;;;;;;;4919:14:0;;;;;:24;;;;4759:191::o;5246:136::-;5320:18;5333:4;5320:12;:18::i;:::-;3191:16;3202:4;3191:10;:16::i;:::-;5350:25:::1;5361:4;5367:7;5350:10;:25::i;:::-;;5246:136:::0;;;:::o;3024:315:13:-;-1:-1:-1;;;;;;;;;;;3191:16:0;3202:4;3191:10;:16::i;:::-;3195:73:13::1;::::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;3200:10:13;;3195:73;;;::::1;::::0;;::::1;::::0;;;;;;;;;;;;;;;;;;;;;;;;;;;3175:17;;;:5:::1;:17:::0;;;;;:93;;;;;;3195:73;;3175:17;:93:::1;::::0;::::1;::::0;::::1;::::0;;::::1;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3283:27;3293:10;;3305:4;3283:27;;;;;;;:::i;:::-;;;;;;;;3320:10;:12:::0;;;:10;:12:::1;::::0;::::1;:::i;:::-;;;;;;3024:315:::0;;;;;;:::o;6348:245:0:-;-1:-1:-1;;;;;6441:34:0;;966:10:3;6441:34:0;6437:102;;6498:30;;-1:-1:-1;;;6498:30:0;;;;;;;;;;;6437:102;6549:37;6561:4;6567:18;6549:11;:37::i;:::-;;6348:245;;:::o;2585:75:13:-;-1:-1:-1;;;;;;;;;;;3191:16:0;3202:4;3191:10;:16::i;:::-;2643:10:13::1;:8;:10::i;:::-;2585:75:::0;:::o;2770:248::-;2827:10;2819:19;;;;:7;:19;;;;;:25;:30;2811:64;;;;-1:-1:-1;;;2811:64:13;;14580:2:14;2811:64:13;;;14562:21:14;14619:2;14599:18;;;14592:30;-1:-1:-1;;;14638:18:14;;;14631:51;14699:18;;2811:64:13;;;;;;;;;2907;;;;;;;;2914:1;2907:64;;;;2917:1;2907:64;;;;2920:3;2907:64;;;;2925:2;2907:64;;;;2929:2;2907:64;;;;2933:1;2907:64;;;;2936:1;2907:64;;;;2939:1;2907:64;;;;2953:1;2942:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2942:13:13;-1:-1:-1;2907:64:13;;;;2968:1;2957:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2957:13:13;-1:-1:-1;2907:64:13;;2893:10;2885:19;;;;:7;:19;;;;;;;;;:86;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2885:86:13;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;2986:25:13;;3000:10;;-1:-1:-1;2986:25:13;;;;;2770:248::o;4158:214:2:-;2653:13;:11;:13::i;:::-;4273:36:::1;4291:17;4273;:36::i;:::-;4319:46;4341:17;4360:4;4319:21;:46::i;4095:368:13:-:0;-1:-1:-1;;;;;;;;;;;3191:16:0;3202:4;3191:10;:16::i;:::-;4238:1:13::1;-1:-1:-1::0;;;;;4203:37:13::1;:17;4221:4;4203:23;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;;-1:-1:-1;;;;;4203:23:13::1;:37;4195:70;;;::::0;-1:-1:-1;;;4195:70:13;;14930:2:14;4195:70:13::1;::::0;::::1;14912:21:14::0;14969:2;14949:18;;;14942:30;-1:-1:-1;;;14988:18:14;;;14981:50;15048:18;;4195:70:13::1;14728:344:14::0;4195:70:13::1;4292:37;::::0;;::::1;::::0;::::1;::::0;;;;;-1:-1:-1;;;;;4292:37:13;::::1;;::::0;::::1;::::0;4312:16;;4326:1:::1;4312:16:::0;;;;;::::1;::::0;;4292:37;;;;;4312:16:::1;;;;;;;;;;-1:-1:-1::0;;;4292:37:13;;-1:-1:-1;;;;;4275:14:13;::::1;;::::0;;;:6:::1;:14;::::0;;;;:54;;:14;;:54:::1;::::0;:14;:54:::1;:::i;:::-;-1:-1:-1::0;4275:54:13::1;::::0;;::::1;::::0;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;;4275:54:13::1;-1:-1:-1::0;;;;;4275:54:13;;::::1;::::0;;;::::1;::::0;;::::1;::::0;::::1;::::0;;;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;;;;;;;;4339:14:13;::::1;;::::0;;;:6:::1;:14;::::0;;;;:22:::1;;:25:::0;;4367:6;;4339:14;:25:::1;;;;:::i;:::-;;;;;;;;;:34;;;;;-1:-1:-1::0;;;;;4339:34:13::1;;;;;-1:-1:-1::0;;;;;4339:34:13::1;;;;;;4409:6;4383:17;4401:4;4383:23;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;:32;;-1:-1:-1;;;;;4383:32:13;;;::::1;-1:-1:-1::0;;;;;;4383:32:13;;::::1;::::0;;;::::1;::::0;;;4430:26:::1;::::0;::::1;::::0;4443:4;;4449:6;;4430:26:::1;:::i;:::-;;;;;;;;4095:368:::0;;;:::o;3705:134:2:-;3774:7;2924:20;:18;:20::i;:::-;-1:-1:-1;;;;;;;;;;;;3705:134:2;:::o;3345:206:13:-;-1:-1:-1;;;;;;;;;;;3191:16:0;3202:4;3191:10;:16::i;:::-;3484:10:13::1;3471:24;::::0;;;:12:::1;:24;::::0;;;;;;;3501:42;;::::1;::::0;::::1;::::0;;;;;;;::::1;::::0;;;;;;;;;;;;;;;3471:73;;3501:42;3471:73;::::1;::::0;;;;;;;;;;;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;::::1;:::i;:::-;-1:-1:-1::0;3471:73:13::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;:::i;:::-;-1:-1:-1::0;3471:73:13::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;-1:-1:-1;;3471:73:13::1;::::0;::::1;;::::0;;;::::1;::::0;;-1:-1:-1;;;;3345:206:13:o;5235:1299::-;5286:20;5309:17;;;:7;:17;;;;;;;;5286:40;;;;;;;;;;;;;;;;;;;;;;5309:17;;5286:40;;5309:17;;5286:40;;;5309:17;5286:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5368:1;5344:6;:14;;;:21;:25;5336:52;;;;-1:-1:-1;;;5336:52:13;;15279:2:14;5336:52:13;;;15261:21:14;15318:2;15298:18;;;15291:30;-1:-1:-1;;;15337:18:14;;;15330:44;15391:18;;5336:52:13;15077:338:14;5336:52:13;5462:6;5457:417;5478:14;;:21;5474:25;;5457:417;;;5520:12;5559:6;5554:237;5583:10;5575:19;;;;:7;:19;;;;;:29;;:36;5571:40;;5554:237;;;5676:14;;:17;;5691:1;;5676:17;;;;;;:::i;:::-;;;;;;;5640:7;:19;5648:10;-1:-1:-1;;;;;5640:19:13;-1:-1:-1;;;;;5640:19:13;;;;;;;;;;;;:29;;5670:1;5640:32;;;;;;;;:::i;:::-;;;;;;;;;:53;5636:141;;5727:4;5717:14;;5753:5;;5636:141;5613:3;;5554:237;;;;5812:7;5804:59;;;;-1:-1:-1;;;5804:59:13;;15622:2:14;5804:59:13;;;15604:21:14;15661:2;15641:18;;;15634:30;15700:34;15680:18;;;15673:62;-1:-1:-1;;;15751:18:14;;;15744:37;15798:19;;5804:59:13;15420:403:14;5804:59:13;-1:-1:-1;5501:3:13;;5457:417;;;;5950:6;5945:459;5966:14;;:21;5962:25;;5945:459;;;6013:6;6008:386;6037:10;6029:19;;;;:7;:19;;;;;:29;;:36;6025:40;;6008:386;;;6130:14;;:17;;6145:1;;6130:17;;;;;;:::i;:::-;;;;;;;6094:7;:19;6102:10;-1:-1:-1;;;;;6094:19:13;-1:-1:-1;;;;;6094:19:13;;;;;;;;;;;;:29;;6124:1;6094:32;;;;;;;;:::i;:::-;;;;;;;;;:53;6090:290;;6214:10;6206:19;;;;:7;:19;;;;;:29;;6236:36;;:40;;6275:1;;6236:40;:::i;:::-;6206:71;;;;;;;;:::i;:::-;;;;;;;;;;;;;6179:10;6171:19;;:7;:19;;;;;;;:29;;:32;;6201:1;;6171:32;;;;;;:::i;:::-;;;;;;;;;;;;:106;;;;6307:10;6299:19;;:7;:19;;;;;;:29;;:35;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;6356:5;;6090:290;6067:3;;6008:386;;;-1:-1:-1;5989:3:13;;5945:459;;;-1:-1:-1;6480:10:13;6472:19;;;;:7;:19;;;;;;;6507;;;;6472:29;;;;:55;;;;;;;;;;;;;;-1:-1:-1;5235:1299:13:o;2508:71::-;-1:-1:-1;;;;;;;;;;;3191:16:0;3202:4;3191:10;:16::i;:::-;2564:8:13::1;:6;:8::i;3732:207:0:-:0;3809:4;3901:14;;;-1:-1:-1;;;;;;;;;;;3901:14:0;;;;;;;;-1:-1:-1;;;;;3901:31:0;;;;;;;;;;;;;;;3732:207::o;1695:39:13:-;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1695:39:13;;;;;;;-1:-1:-1;;;;;;;1695:39:13;;:::o;4987:242::-;-1:-1:-1;;;;;;;;;;;3191:16:0;3202:4;3191:10;:16::i;:::-;5115:29:13::1;::::0;;;;::::1;::::0;;;;;::::1;::::0;;::::1;::::0;;;5099:12:::1;::::0;-1:-1:-1;5091:21:13;;;:7:::1;:21:::0;;;;;;:53;;;;5115:29;;5091:21;;:53:::1;::::0;:21;;:53:::1;::::0;::::1;:::i;:::-;-1:-1:-1::0;5091:53:13::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;5171:12;5159:39:::1;::::0;;16267:25:14;;;16308:18;;;16301:34;;;5159:39:13::1;::::0;16240:18:14;5159:39:13::1;;;;;;;5208:12;:14:::0;;;:12:::1;:14;::::0;::::1;:::i;:::-;;;;;;4987:242:::0;;;:::o;1555:34::-;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;2115:387::-;8870:21:1;4302:15;;-1:-1:-1;;;4302:15:1;;;;4301:16;;4348:14;;4158:30;4726:16;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4790:11;:16;;4805:1;4790:16;:50;;;;-1:-1:-1;4818:4:1;4810:25;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;-1:-1:-1;;;4908:23:1;;;;;;;;;;;4851:91;4951:18;;-1:-1:-1;;4951:18:1;4968:1;4951:18;;;4979:67;;;;5013:22;;-1:-1:-1;;;;5013:22:1;-1:-1:-1;;;5013:22:1;;;4979:67;2220:17:13::1;:15;:17::i;:::-;2247:22;:20;:22::i;:::-;2279:24;:22;:24::i;:::-;2314:44;2362:4:0;2345:12:13::0;2314:10:::1;:44::i;:::-;;2368:31;-1:-1:-1::0;;;;;;;;;;;2392:6:13::1;2368:10;:31::i;:::-;;2409:35;661:26;2435:8;2409:10;:35::i;:::-;;2454:41;-1:-1:-1::0;;;;;;;;;;;2482:12:13::1;2454:10;:41::i;:::-;;5070:14:1::0;5066:101;;;5100:23;;-1:-1:-1;;;;5100:23:1;;;5142:14;;-1:-1:-1;16499:50:14;;5142:14:1;;16487:2:14;16472:18;5142:14:1;;;;;;;5066:101;4092:1081;;;;;2115:387:13;;;:::o;1642:47::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;1642:47:13;;;;;;;;;;;;;;;-1:-1:-1;1642:47:13;:::o;5662:138:0:-;5737:18;5750:4;5737:12;:18::i;:::-;3191:16;3202:4;3191:10;:16::i;:::-;5767:26:::1;5779:4;5785:7;5767:11;:26::i;4469:512:13:-:0;4530:14;4547:17;4565:9;4547:28;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;;;;;4547:28:13;;-1:-1:-1;4547:28:13;4585:53;;;;-1:-1:-1;;;4585:53:13;;16762:2:14;4585:53:13;;;16744:21:14;16801:2;16781:18;;;16774:30;-1:-1:-1;;;16820:18:14;;;16813:50;16880:18;;4585:53:13;16560:344:14;4585:53:13;-1:-1:-1;;;;;4755:14:13;;4733:19;4755:14;;;:6;:14;;;;;;4779:155;4800:13;;;:20;4796:24;;4779:155;;;4869:10;-1:-1:-1;;;;;4849:30:13;:5;:13;;4863:1;4849:16;;;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;4849:16:13;:30;4841:82;;;;-1:-1:-1;;;4841:82:13;;17111:2:14;4841:82:13;;;17093:21:14;17150:2;17130:18;;;17123:30;17189:34;17169:18;;;17162:62;-1:-1:-1;;;17240:18:14;;;17233:37;17287:19;;4841:82:13;16909:403:14;4841:82:13;4822:3;;4779:155;;;-1:-1:-1;4944:13:13;;:30;;;;;;;-1:-1:-1;4944:30:13;;;;;;;;;;-1:-1:-1;;;;;;4944:30:13;4963:10;4944:30;;;-1:-1:-1;;4469:512:13:o;4148:103:0:-;4214:30;4225:4;966:10:3;4214::0;:30::i;7270:387::-;7347:4;-1:-1:-1;;;;;;;;;;;7437:22:0;7445:4;7451:7;7437;:22::i;:::-;7432:219;;7475:8;:14;;;;;;;;;;;-1:-1:-1;;;;;7475:31:0;;;;;;;;;:38;;-1:-1:-1;;7475:38:0;7509:4;7475:38;;;7559:12;966:10:3;;887:96;7559:12:0;-1:-1:-1;;;;;7532:40:0;7550:7;-1:-1:-1;;;;;7532:40:0;7544:4;7532:40;;;;;;;;;;7593:4;7586:11;;;;;7432:219;7635:5;7628:12;;;;;7892:388;7970:4;-1:-1:-1;;;;;;;;;;;8059:22:0;8067:4;8073:7;8059;:22::i;:::-;8055:219;;;8131:5;8097:14;;;;;;;;;;;-1:-1:-1;;;;;8097:31:0;;;;;;;;;;:39;;-1:-1:-1;;8097:39:0;;;8155:40;966:10:3;;8097:14:0;;8155:40;;8131:5;8155:40;8216:4;8209:11;;;;;3674:178:4;2563:16;:14;:16::i;:::-;-1:-1:-1;;;;;;;;;;;3791:17:4;;-1:-1:-1;;3791:17:4::1;::::0;;3823:22:::1;966:10:3::0;3832:12:4::1;3823:22;::::0;-1:-1:-1;;;;;17481:32:14;;;17463:51;;17451:2;17436:18;3823:22:4::1;;;;;;;3722:130;3674:178::o:0;4599:312:2:-;4679:4;-1:-1:-1;;;;;4688:6:2;4671:23;;;:120;;;4785:6;-1:-1:-1;;;;;4749:42:2;:32;-1:-1:-1;;;;;;;;;;;2035:53:8;-1:-1:-1;;;;;2035:53:8;;1957:138;4749:32:2;-1:-1:-1;;;;;4749:42:2;;;4671:120;4654:251;;;4865:29;;-1:-1:-1;;;4865:29:2;;;;;;;;;;;4654:251;4599:312::o;2666:98:13:-;661:26;3191:16:0;3202:4;3191:10;:16::i;6052:538:2:-;6169:17;-1:-1:-1;;;;;6151:50:2;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6151:52:2;;;;;;;;-1:-1:-1;;6151:52:2;;;;;;;;;;;;:::i;:::-;;;6147:437;;6513:60;;-1:-1:-1;;;6513:60:2;;-1:-1:-1;;;;;17481:32:14;;6513:60:2;;;17463:51:14;17436:18;;6513:60:2;17317:203:14;6147:437:2;-1:-1:-1;;;;;;;;;;;6245:40:2;;6241:120;;6312:34;;-1:-1:-1;;;6312:34:2;;;;;2206:25:14;;;2179:18;;6312:34:2;2060:177:14;6241:120:2;6374:54;6404:17;6423:4;6374:29;:54::i;5028:213::-;5102:4;-1:-1:-1;;;;;5111:6:2;5094:23;;5090:145;;5195:29;;-1:-1:-1;;;5195:29:2;;;;;;;;;;;3366:176:4;2316:19;:17;:19::i;:::-;-1:-1:-1;;;;;;;;;;;3484:16:4;;-1:-1:-1;;3484:16:4::1;3496:4;3484:16;::::0;;3515:20:::1;966:10:3::0;3522:12:4::1;887:96:3::0;1836:97:4;6931:20:1;:18;:20::i;:::-;1899:27:4::1;:25;:27::i;3231:65:0:-:0;6931:20:1;:18;:20::i;4381:197:0:-;4469:22;4477:4;4483:7;4469;:22::i;:::-;4464:108;;4514:47;;-1:-1:-1;;;4514:47:0;;-1:-1:-1;;;;;17906:32:14;;4514:47:0;;;17888:51:14;17955:18;;;17948:34;;;17861:18;;4514:47:0;17714:274:14;3105:126:4;-1:-1:-1;;;;;;;;;;;2821:9:4;;;3163:62;;3199:15;;-1:-1:-1;;;3199:15:4;;;;;;;;;;;2779:335:8;2870:37;2889:17;2870:18;:37::i;:::-;2922:27;;-1:-1:-1;;;;;2922:27:8;;;;;;;;2964:11;;:15;2960:148;;2995:53;3024:17;3043:4;2995:28;:53::i;2960:148::-;3079:18;:16;:18::i;2905:128:4:-;-1:-1:-1;;;;;;;;;;;2821:9:4;;;2966:61;;;3001:15;;-1:-1:-1;;;3001:15:4;;;;;;;;;;;7084:141:1;8870:21;8560:40;-1:-1:-1;;;8560:40:1;;;;7146:73;;7191:17;;-1:-1:-1;;;7191:17:1;;;;;;;;;;;1939:156:4;6931:20:1;:18;:20::i;:::-;-1:-1:-1;;;;;;;;;;;2071:17:4;;-1:-1:-1;;2071:17:4::1;::::0;;1939:156::o;2186:281:8:-;2263:17;-1:-1:-1;;;;;2263:29:8;;2296:1;2263:34;2259:119;;2320:47;;-1:-1:-1;;;2320:47:8;;-1:-1:-1;;;;;17481:32:14;;2320:47:8;;;17463:51:14;17436:18;;2320:47:8;17317:203:14;2259:119:8;-1:-1:-1;;;;;;;;;;;2387:73:8;;-1:-1:-1;;;;;;2387:73:8;-1:-1:-1;;;;;2387:73:8;;;;;;;;;;2186:281::o;4106:253:10:-;4189:12;4214;4228:23;4255:6;-1:-1:-1;;;;;4255:19:10;4275:4;4255:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4213:67;;;;4297:55;4324:6;4332:7;4341:10;4297:26;:55::i;:::-;4290:62;4106:253;-1:-1:-1;;;;;4106:253:10:o;6598:122:8:-;6648:9;:13;6644:70;;6684:19;;-1:-1:-1;;;6684:19:8;;;;;;;;;;;4625:582:10;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5045:17;;:22;:49;;;;-1:-1:-1;;;;;;5071:18:10;;;:23;5045:49;5041:119;;;5121:24;;-1:-1:-1;;;5121:24:10;;-1:-1:-1;;;;;17481:32:14;;5121:24:10;;;17463:51:14;17436:18;;5121:24:10;17317:203:14;5041:119:10;-1:-1:-1;5180:10:10;4793:408;4625:582;;;;;:::o;5743:516::-;5874:17;;:21;5870:383;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;-1:-1:-1;;;6225:17:10;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:286:14;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:14;;209:43;;199:71;;266:1;263;256:12;497:127;558:10;553:3;549:20;546:1;539:31;589:4;586:1;579:15;613:4;610:1;603:15;629:275;700:2;694:9;765:2;746:13;;-1:-1:-1;;742:27:14;730:40;;800:18;785:34;;821:22;;;782:62;779:88;;;847:18;;:::i;:::-;883:2;876:22;629:275;;-1:-1:-1;629:275:14:o;909:407::-;974:5;1008:18;1000:6;997:30;994:56;;;1030:18;;:::i;:::-;1068:57;1113:2;1092:15;;-1:-1:-1;;1088:29:14;1119:4;1084:40;1068:57;:::i;:::-;1059:66;;1148:6;1141:5;1134:21;1188:3;1179:6;1174:3;1170:16;1167:25;1164:45;;;1205:1;1202;1195:12;1164:45;1254:6;1249:3;1242:4;1235:5;1231:16;1218:43;1308:1;1301:4;1292:6;1285:5;1281:18;1277:29;1270:40;909:407;;;;;:::o;1321:222::-;1364:5;1417:3;1410:4;1402:6;1398:17;1394:27;1384:55;;1435:1;1432;1425:12;1384:55;1457:80;1533:3;1524:6;1511:20;1504:4;1496:6;1492:17;1457:80;:::i;1548:322::-;1617:6;1670:2;1658:9;1649:7;1645:23;1641:32;1638:52;;;1686:1;1683;1676:12;1638:52;1726:9;1713:23;1759:18;1751:6;1748:30;1745:50;;;1791:1;1788;1781:12;1745:50;1814;1856:7;1847:6;1836:9;1832:22;1814:50;:::i;:::-;1804:60;1548:322;-1:-1:-1;;;;1548:322:14:o;1875:180::-;1934:6;1987:2;1975:9;1966:7;1962:23;1958:32;1955:52;;;2003:1;2000;1993:12;1955:52;-1:-1:-1;2026:23:14;;1875:180;-1:-1:-1;1875:180:14:o;2242:173::-;2310:20;;-1:-1:-1;;;;;2359:31:14;;2349:42;;2339:70;;2405:1;2402;2395:12;2339:70;2242:173;;;:::o;2420:254::-;2488:6;2496;2549:2;2537:9;2528:7;2524:23;2520:32;2517:52;;;2565:1;2562;2555:12;2517:52;2601:9;2588:23;2578:33;;2630:38;2664:2;2653:9;2649:18;2630:38;:::i;:::-;2620:48;;2420:254;;;;;:::o;2679:596::-;2784:6;2792;2800;2808;2816;2869:3;2857:9;2848:7;2844:23;2840:33;2837:53;;;2886:1;2883;2876:12;2837:53;2926:9;2913:23;2959:18;2951:6;2948:30;2945:50;;;2991:1;2988;2981:12;2945:50;3014;3056:7;3047:6;3036:9;3032:22;3014:50;:::i;:::-;3004:60;3111:2;3096:18;;3083:32;;-1:-1:-1;3162:2:14;3147:18;;3134:32;;3213:2;3198:18;;3185:32;;-1:-1:-1;3264:3:14;3249:19;3236:33;;-1:-1:-1;2679:596:14;-1:-1:-1;;;;2679:596:14:o;3647:524::-;3724:6;3732;3785:2;3773:9;3764:7;3760:23;3756:32;3753:52;;;3801:1;3798;3791:12;3753:52;3824:29;3843:9;3824:29;:::i;:::-;3814:39;;3904:2;3893:9;3889:18;3876:32;3931:18;3923:6;3920:30;3917:50;;;3963:1;3960;3953:12;3917:50;3986:22;;4039:4;4031:13;;4027:27;-1:-1:-1;4017:55:14;;4068:1;4065;4058:12;4017:55;4091:74;4157:7;4152:2;4139:16;4134:2;4130;4126:11;4091:74;:::i;:::-;4081:84;;;3647:524;;;;;:::o;4176:396::-;4254:6;4262;4315:2;4303:9;4294:7;4290:23;4286:32;4283:52;;;4331:1;4328;4321:12;4283:52;4371:9;4358:23;4404:18;4396:6;4393:30;4390:50;;;4436:1;4433;4426:12;4390:50;4459;4501:7;4492:6;4481:9;4477:22;4459:50;:::i;:::-;4449:60;;;4528:38;4562:2;4551:9;4547:18;4528:38;:::i;4577:611::-;4674:6;4682;4690;4743:2;4731:9;4722:7;4718:23;4714:32;4711:52;;;4759:1;4756;4749:12;4711:52;4799:9;4786:23;4828:18;4869:2;4861:6;4858:14;4855:34;;;4885:1;4882;4875:12;4855:34;4908:50;4950:7;4941:6;4930:9;4926:22;4908:50;:::i;:::-;4898:60;;5011:2;5000:9;4996:18;4983:32;4967:48;;5040:2;5030:8;5027:16;5024:36;;;5056:1;5053;5046:12;5024:36;;5079:52;5123:7;5112:8;5101:9;5097:24;5079:52;:::i;:::-;5069:62;;;5178:2;5167:9;5163:18;5150:32;5140:42;;4577:611;;;;;:::o;5193:186::-;5252:6;5305:2;5293:9;5284:7;5280:23;5276:32;5273:52;;;5321:1;5318;5311:12;5273:52;5344:29;5363:9;5344:29;:::i;5384:300::-;5437:3;5475:5;5469:12;5502:6;5497:3;5490:19;5558:6;5551:4;5544:5;5540:16;5533:4;5528:3;5524:14;5518:47;5610:1;5603:4;5594:6;5589:3;5585:16;5581:27;5574:38;5673:4;5666:2;5662:7;5657:2;5649:6;5645:15;5641:29;5636:3;5632:39;5628:50;5621:57;;;5384:300;;;;:::o;5689:328::-;5866:2;5855:9;5848:21;5829:4;5886:56;5938:2;5927:9;5923:18;5915:6;5886:56;:::i;:::-;5878:64;;6007:1;6003;5998:3;5994:11;5990:19;5982:6;5978:32;5973:2;5962:9;5958:18;5951:60;5689:328;;;;;:::o;6022:1016::-;6115:6;6123;6176:2;6164:9;6155:7;6151:23;6147:32;6144:52;;;6192:1;6189;6182:12;6144:52;6232:9;6219:23;6261:18;6302:2;6294:6;6291:14;6288:34;;;6318:1;6315;6308:12;6288:34;6356:6;6345:9;6341:22;6331:32;;6401:7;6394:4;6390:2;6386:13;6382:27;6372:55;;6423:1;6420;6413:12;6372:55;6459:2;6446:16;6481:4;6504:2;6500;6497:10;6494:36;;;6510:18;;:::i;:::-;6556:2;6553:1;6549:10;6539:20;;6579:28;6603:2;6599;6595:11;6579:28;:::i;:::-;6641:15;;;6711:11;;;6707:20;;;6672:12;;;;6739:19;;;6736:39;;;6771:1;6768;6761:12;6736:39;6795:11;;;;6815:142;6831:6;6826:3;6823:15;6815:142;;;6897:17;;6885:30;;6848:12;;;;6935;;;;6815:142;;;6976:5;7013:18;;;;7000:32;;-1:-1:-1;;;;;;;6022:1016:14:o;7043:231::-;7192:2;7181:9;7174:21;7155:4;7212:56;7264:2;7253:9;7249:18;7241:6;7212:56;:::i;7279:590::-;7568:6;7557:9;7550:25;7611:3;7606:2;7595:9;7591:18;7584:31;7531:4;7632:57;7684:3;7673:9;7669:19;7661:6;7632:57;:::i;:::-;7624:65;;7725:6;7720:2;7709:9;7705:18;7698:34;7768:6;7763:2;7752:9;7748:18;7741:34;7812:6;7806:3;7795:9;7791:19;7784:35;7856:6;7850:3;7839:9;7835:19;7828:35;7279:590;;;;;;;;;:::o;7874:334::-;7951:6;7959;7967;8020:2;8008:9;7999:7;7995:23;7991:32;7988:52;;;8036:1;8033;8026:12;7988:52;8059:29;8078:9;8059:29;:::i;:::-;8049:39;;8107:38;8141:2;8130:9;8126:18;8107:38;:::i;:::-;8097:48;;8164:38;8198:2;8187:9;8183:18;8164:38;:::i;:::-;8154:48;;7874:334;;;;;:::o;8213:254::-;8281:6;8289;8342:2;8330:9;8321:7;8317:23;8313:32;8310:52;;;8358:1;8355;8348:12;8310:52;8381:29;8400:9;8381:29;:::i;:::-;8371:39;8457:2;8442:18;;;;8429:32;;-1:-1:-1;;;8213:254:14:o;8472:559::-;8719:3;8708:9;8701:22;8682:4;8746:57;8798:3;8787:9;8783:19;8775:6;8746:57;:::i;:::-;8851:9;8843:6;8839:22;8834:2;8823:9;8819:18;8812:50;8879:44;8916:6;8908;8879:44;:::i;:::-;8954:2;8939:18;;8932:34;;;;-1:-1:-1;;9009:14:14;;9002:22;8997:2;8982:18;;;8975:50;8871:52;8472:559;-1:-1:-1;;8472:559:14:o;9720:127::-;9781:10;9776:3;9772:20;9769:1;9762:31;9812:4;9809:1;9802:15;9836:4;9833:1;9826:15;9852:212;9894:3;9932:5;9926:12;9976:6;9969:4;9962:5;9958:16;9953:3;9947:36;10038:1;10002:16;;10027:13;;;-1:-1:-1;10002:16:14;;9852:212;-1:-1:-1;9852:212:14:o;10069:192::-;10200:3;10225:30;10251:3;10243:6;10225:30;:::i;10266:380::-;10345:1;10341:12;;;;10388;;;10409:61;;10463:4;10455:6;10451:17;10441:27;;10409:61;10516:2;10508:6;10505:14;10485:18;10482:38;10479:161;;10562:10;10557:3;10553:20;10550:1;10543:31;10597:4;10594:1;10587:15;10625:4;10622:1;10615:15;10479:161;;10266:380;;;:::o;10777:843::-;10905:3;10934:1;10967:6;10961:13;10997:36;11023:9;10997:36;:::i;:::-;11052:1;11069:17;;;11095:133;;;;11242:1;11237:358;;;;11062:533;;11095:133;-1:-1:-1;;11128:24:14;;11116:37;;11201:14;;11194:22;11182:35;;11173:45;;;-1:-1:-1;11095:133:14;;11237:358;11268:6;11265:1;11258:17;11298:4;11343;11340:1;11330:18;11370:1;11384:165;11398:6;11395:1;11392:13;11384:165;;;11476:14;;11463:11;;;11456:35;11519:16;;;;11413:10;;11384:165;;;11388:3;;;11578:6;11573:3;11569:16;11562:23;;11062:533;-1:-1:-1;11611:3:14;;10777:843;-1:-1:-1;;;;;;10777:843:14:o;11625:127::-;11686:10;11681:3;11677:20;11674:1;11667:31;11717:4;11714:1;11707:15;11741:4;11738:1;11731:15;11757:125;11822:9;;;11843:10;;;11840:36;;;11856:18;;:::i;11887:518::-;11989:2;11984:3;11981:11;11978:421;;;12025:5;12022:1;12015:16;12069:4;12066:1;12056:18;12139:2;12127:10;12123:19;12120:1;12116:27;12110:4;12106:38;12175:4;12163:10;12160:20;12157:47;;;-1:-1:-1;12198:4:14;12157:47;12253:2;12248:3;12244:12;12241:1;12237:20;12231:4;12227:31;12217:41;;12308:81;12326:2;12319:5;12316:13;12308:81;;;12385:1;12371:16;;12352:1;12341:13;12308:81;;;12312:3;;11887:518;;;:::o;12581:1345::-;12707:3;12701:10;12734:18;12726:6;12723:30;12720:56;;;12756:18;;:::i;:::-;12785:97;12875:6;12835:38;12867:4;12861:11;12835:38;:::i;:::-;12829:4;12785:97;:::i;:::-;12937:4;;12994:2;12983:14;;13011:1;13006:663;;;;13713:1;13730:6;13727:89;;;-1:-1:-1;13782:19:14;;;13776:26;13727:89;-1:-1:-1;;12538:1:14;12534:11;;;12530:24;12526:29;12516:40;12562:1;12558:11;;;12513:57;13829:81;;12976:944;;13006:663;10724:1;10717:14;;;10761:4;10748:18;;-1:-1:-1;;13042:20:14;;;13160:236;13174:7;13171:1;13168:14;13160:236;;;13263:19;;;13257:26;13242:42;;13355:27;;;;13323:1;13311:14;;;;13190:19;;13160:236;;;13164:3;13424:6;13415:7;13412:19;13409:201;;;13485:19;;;13479:26;-1:-1:-1;;13568:1:14;13564:14;;;13580:3;13560:24;13556:37;13552:42;13537:58;13522:74;;13409:201;;;13656:1;13647:6;13644:1;13640:14;13636:22;13630:4;13623:36;12976:944;;;;;12581:1345;;:::o;13931:302::-;14108:6;14097:9;14090:25;14151:2;14146;14135:9;14131:18;14124:30;14071:4;14171:56;14223:2;14212:9;14208:18;14200:6;14171:56;:::i;14238:135::-;14277:3;14298:17;;;14295:43;;14318:18;;:::i;:::-;-1:-1:-1;14365:1:14;14354:13;;14238:135::o;15828:128::-;15895:9;;;15916:11;;;15913:37;;;15930:18;;:::i;15961:127::-;16022:10;16017:3;16013:20;16010:1;16003:31;16053:4;16050:1;16043:15;16077:4;16074:1;16067:15;17525:184;17595:6;17648:2;17636:9;17627:7;17623:23;17619:32;17616:52;;;17664:1;17661;17654:12;17616:52;-1:-1:-1;17687:16:14;;17525:184;-1:-1:-1;17525:184:14:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "2006000",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "283",
								"GAME_ADMIN_ROLE()": "infinite",
								"PAUSER_ROLE()": "infinite",
								"UPGRADER_ROLE()": "304",
								"UPGRADE_INTERFACE_VERSION()": "infinite",
								"addItem(string,uint256,uint256,uint256,uint256)": "infinite",
								"addRecipe(uint256[],uint256)": "infinite",
								"completeQuest(string)": "infinite",
								"craftItem(uint256)": "infinite",
								"createGuild(string,address)": "infinite",
								"createPlayer()": "infinite",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"guilds(address)": "infinite",
								"hasRole(bytes32,address)": "infinite",
								"initialize(address,address,address)": "infinite",
								"items(uint256)": "infinite",
								"joinGuild(string)": "infinite",
								"pause()": "infinite",
								"paused()": "infinite",
								"playerQuests(address,uint256)": "infinite",
								"players(address)": "17500",
								"proxiableUUID()": "infinite",
								"recipes(uint256)": "2509",
								"renounceRole(bytes32,address)": "29183",
								"revokeRole(bytes32,address)": "infinite",
								"startQuest(string,string,uint256)": "infinite",
								"supportsInterface(bytes4)": "470",
								"unpause()": "infinite",
								"upgradeToAndCall(address,bytes)": "infinite"
							},
							"internal": {
								"_authorizeUpgrade(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 420,
									"end": 6536,
									"name": "PUSH",
									"source": 13,
									"value": "A0"
								},
								{
									"begin": 420,
									"end": 6536,
									"name": "PUSH",
									"source": 13,
									"value": "40"
								},
								{
									"begin": 420,
									"end": 6536,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 1171,
									"end": 1175,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1512,
									"end": 1513,
									"name": "PUSH",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 1486,
									"end": 1513,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 1486,
									"end": 1513,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 1486,
									"end": 1513,
									"name": "SWAP1",
									"source": 13
								},
								{
									"begin": 1486,
									"end": 1513,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 1519,
									"end": 1548,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 1519,
									"end": 1548,
									"name": "SSTORE",
									"source": 13
								},
								{
									"begin": 420,
									"end": 6536,
									"name": "CALLVALUE",
									"source": 13
								},
								{
									"begin": 420,
									"end": 6536,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 420,
									"end": 6536,
									"name": "ISZERO",
									"source": 13
								},
								{
									"begin": 420,
									"end": 6536,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 420,
									"end": 6536,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": 420,
									"end": 6536,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 420,
									"end": 6536,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 420,
									"end": 6536,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 420,
									"end": 6536,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 420,
									"end": 6536,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 420,
									"end": 6536,
									"name": "POP",
									"source": 13
								},
								{
									"begin": 420,
									"end": 6536,
									"name": "PUSH",
									"source": 13,
									"value": "80"
								},
								{
									"begin": 420,
									"end": 6536,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 420,
									"end": 6536,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 420,
									"end": 6536,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 420,
									"end": 6536,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 420,
									"end": 6536,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 420,
									"end": 6536,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 420,
									"end": 6536,
									"name": "ASSIGNIMMUTABLE",
									"source": 13,
									"value": "636"
								},
								{
									"begin": 420,
									"end": 6536,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 420,
									"end": 6536,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 420,
									"end": 6536,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ea2b3697326adffd8de11773ad2c8d3456aac56c13e47a40f02f25681bd8a0f164736f6c63430008190033",
									".code": [
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "CALLDATALOAD",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "SHR",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH",
											"source": 13,
											"value": "8456CB59"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH",
											"source": 13,
											"value": "BFB231D2"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH",
											"source": 13,
											"value": "E2EB41FF"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH",
											"source": 13,
											"value": "E2EB41FF"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH",
											"source": 13,
											"value": "E551BA4B"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH",
											"source": 13,
											"value": "E63AB1E9"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH",
											"source": 13,
											"value": "F72C0D8B"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "tag",
											"source": 13,
											"value": "34"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH",
											"source": 13,
											"value": "BFB231D2"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH",
											"source": 13,
											"value": "C0C53B8B"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH",
											"source": 13,
											"value": "D3DCFF7C"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH",
											"source": 13,
											"value": "D547741F"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "27"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "tag",
											"source": 13,
											"value": "33"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH",
											"source": 13,
											"value": "A75859E1"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH",
											"source": 13,
											"value": "A75859E1"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH",
											"source": 13,
											"value": "A9834B67"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH",
											"source": 13,
											"value": "AD3CB1CC"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "22"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH",
											"source": 13,
											"value": "BE22D27D"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "23"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "tag",
											"source": 13,
											"value": "35"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH",
											"source": 13,
											"value": "8456CB59"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH",
											"source": 13,
											"value": "91D14854"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "18"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH",
											"source": 13,
											"value": "A217FDDF"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "19"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "tag",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH",
											"source": 13,
											"value": "3FA9FCF8"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH",
											"source": 13,
											"value": "52D1902D"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH",
											"source": 13,
											"value": "52D1902D"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "13"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH",
											"source": 13,
											"value": "5C975ABB"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "14"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH",
											"source": 13,
											"value": "6F347A78"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH",
											"source": 13,
											"value": "7309CBBD"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "tag",
											"source": 13,
											"value": "37"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH",
											"source": 13,
											"value": "3FA9FCF8"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH",
											"source": 13,
											"value": "443C227C"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH",
											"source": 13,
											"value": "4F1EF286"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "11"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH",
											"source": 13,
											"value": "4FA4A1BB"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "tag",
											"source": 13,
											"value": "36"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH",
											"source": 13,
											"value": "2F2FF15D"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH",
											"source": 13,
											"value": "2F2FF15D"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH",
											"source": 13,
											"value": "31FEE8BE"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH",
											"source": 13,
											"value": "36568ABE"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH",
											"source": 13,
											"value": "3F4BA83A"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "tag",
											"source": 13,
											"value": "38"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH",
											"source": 13,
											"value": "1FFC9A7"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH",
											"source": 13,
											"value": "17435E1A"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH",
											"source": 13,
											"value": "248A9CA3"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "tag",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 420,
											"end": 6536,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "tag",
											"source": 0,
											"value": "39"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3443,
											"end": 3645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3443,
											"end": 3645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 470,
											"end": 484,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 470,
											"end": 484,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 463,
											"end": 485,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 445,
											"end": 486,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 445,
											"end": 486,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 433,
											"end": 435,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 418,
											"end": 436,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 3557,
											"end": 4089,
											"name": "tag",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 3557,
											"end": 4089,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3557,
											"end": 4089,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 3557,
											"end": 4089,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3557,
											"end": 4089,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3557,
											"end": 4089,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 3557,
											"end": 4089,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3557,
											"end": 4089,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3557,
											"end": 4089,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3557,
											"end": 4089,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3557,
											"end": 4089,
											"name": "tag",
											"source": 13,
											"value": "46"
										},
										{
											"begin": 3557,
											"end": 4089,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3557,
											"end": 4089,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 3557,
											"end": 4089,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 3557,
											"end": 4089,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 3557,
											"end": 4089,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3557,
											"end": 4089,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 3557,
											"end": 4089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3557,
											"end": 4089,
											"name": "tag",
											"source": 13,
											"value": "48"
										},
										{
											"begin": 3557,
											"end": 4089,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3557,
											"end": 4089,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "50"
										},
										{
											"begin": 3557,
											"end": 4089,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3557,
											"end": 4089,
											"name": "tag",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 3557,
											"end": 4089,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3557,
											"end": 4089,
											"name": "STOP",
											"source": 13
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "tag",
											"source": 0,
											"value": "51"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "54"
										},
										{
											"begin": 4759,
											"end": 4950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "tag",
											"source": 0,
											"value": "53"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 4759,
											"end": 4950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "tag",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 2206,
											"end": 2231,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2206,
											"end": 2231,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2206,
											"end": 2231,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2194,
											"end": 2196,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2179,
											"end": 2197,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 2060,
											"end": 2237,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "tag",
											"source": 0,
											"value": "58"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 5246,
											"end": 5382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 5246,
											"end": 5382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3024,
											"end": 3339,
											"name": "tag",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 3024,
											"end": 3339,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3024,
											"end": 3339,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 3024,
											"end": 3339,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3024,
											"end": 3339,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3024,
											"end": 3339,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 3024,
											"end": 3339,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3024,
											"end": 3339,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3339,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3024,
											"end": 3339,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3024,
											"end": 3339,
											"name": "tag",
											"source": 13,
											"value": "63"
										},
										{
											"begin": 3024,
											"end": 3339,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3024,
											"end": 3339,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 3024,
											"end": 3339,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 3024,
											"end": 3339,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 3024,
											"end": 3339,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3024,
											"end": 3339,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "66"
										},
										{
											"begin": 3024,
											"end": 3339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3024,
											"end": 3339,
											"name": "tag",
											"source": 13,
											"value": "65"
										},
										{
											"begin": 3024,
											"end": 3339,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3024,
											"end": 3339,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 3024,
											"end": 3339,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 6348,
											"end": 6593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 6348,
											"end": 6593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2585,
											"end": 2660,
											"name": "tag",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 2585,
											"end": 2660,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2585,
											"end": 2660,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 2585,
											"end": 2660,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2585,
											"end": 2660,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2585,
											"end": 2660,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 2585,
											"end": 2660,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2585,
											"end": 2660,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2585,
											"end": 2660,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2585,
											"end": 2660,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2585,
											"end": 2660,
											"name": "tag",
											"source": 13,
											"value": "72"
										},
										{
											"begin": 2585,
											"end": 2660,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2585,
											"end": 2660,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2585,
											"end": 2660,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 2585,
											"end": 2660,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 2585,
											"end": 2660,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2770,
											"end": 3018,
											"name": "tag",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 2770,
											"end": 3018,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2770,
											"end": 3018,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 2770,
											"end": 3018,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2770,
											"end": 3018,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2770,
											"end": 3018,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 2770,
											"end": 3018,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2770,
											"end": 3018,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2770,
											"end": 3018,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2770,
											"end": 3018,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2770,
											"end": 3018,
											"name": "tag",
											"source": 13,
											"value": "75"
										},
										{
											"begin": 2770,
											"end": 3018,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2770,
											"end": 3018,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2770,
											"end": 3018,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 2770,
											"end": 3018,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 2770,
											"end": 3018,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1790,
											"end": 1828,
											"name": "tag",
											"source": 13,
											"value": "10"
										},
										{
											"begin": 1790,
											"end": 1828,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1790,
											"end": 1828,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 1790,
											"end": 1828,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1790,
											"end": 1828,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1790,
											"end": 1828,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 1790,
											"end": 1828,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1790,
											"end": 1828,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1790,
											"end": 1828,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1790,
											"end": 1828,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1790,
											"end": 1828,
											"name": "tag",
											"source": 13,
											"value": "78"
										},
										{
											"begin": 1790,
											"end": 1828,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1790,
											"end": 1828,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "52"
										},
										{
											"begin": 1790,
											"end": 1828,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 1790,
											"end": 1828,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 1790,
											"end": 1828,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1790,
											"end": 1828,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 1790,
											"end": 1828,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1790,
											"end": 1828,
											"name": "tag",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 1790,
											"end": 1828,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1790,
											"end": 1828,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 1790,
											"end": 1828,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1790,
											"end": 1828,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1790,
											"end": 1828,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1790,
											"end": 1828,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1790,
											"end": 1828,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1790,
											"end": 1828,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1790,
											"end": 1828,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1790,
											"end": 1828,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1790,
											"end": 1828,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 1790,
											"end": 1828,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1790,
											"end": 1828,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1790,
											"end": 1828,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1790,
											"end": 1828,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1790,
											"end": 1828,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "47"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "87"
										},
										{
											"begin": 4158,
											"end": 4372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "tag",
											"source": 2,
											"value": "86"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 4158,
											"end": 4372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4095,
											"end": 4463,
											"name": "tag",
											"source": 13,
											"value": "12"
										},
										{
											"begin": 4095,
											"end": 4463,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4095,
											"end": 4463,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 4095,
											"end": 4463,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4095,
											"end": 4463,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4095,
											"end": 4463,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "89"
										},
										{
											"begin": 4095,
											"end": 4463,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4095,
											"end": 4463,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4095,
											"end": 4463,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4095,
											"end": 4463,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4095,
											"end": 4463,
											"name": "tag",
											"source": 13,
											"value": "89"
										},
										{
											"begin": 4095,
											"end": 4463,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4095,
											"end": 4463,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 4095,
											"end": 4463,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "91"
										},
										{
											"begin": 4095,
											"end": 4463,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 4095,
											"end": 4463,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4095,
											"end": 4463,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "92"
										},
										{
											"begin": 4095,
											"end": 4463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4095,
											"end": 4463,
											"name": "tag",
											"source": 13,
											"value": "91"
										},
										{
											"begin": 4095,
											"end": 4463,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4095,
											"end": 4463,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "93"
										},
										{
											"begin": 4095,
											"end": 4463,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "tag",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "tag",
											"source": 2,
											"value": "94"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "52"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3705,
											"end": 3839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "tag",
											"source": 4,
											"value": "14"
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "CALLVALUE",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "tag",
											"source": 4,
											"value": "98"
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "C0C65A3718F3702D917C44106B91645B509D2E2D0979B70495C3BABCE192339F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3345,
											"end": 3551,
											"name": "tag",
											"source": 13,
											"value": "15"
										},
										{
											"begin": 3345,
											"end": 3551,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3345,
											"end": 3551,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 3345,
											"end": 3551,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3345,
											"end": 3551,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3345,
											"end": 3551,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "102"
										},
										{
											"begin": 3345,
											"end": 3551,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3345,
											"end": 3551,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3345,
											"end": 3551,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3345,
											"end": 3551,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 3345,
											"end": 3551,
											"name": "tag",
											"source": 13,
											"value": "102"
										},
										{
											"begin": 3345,
											"end": 3551,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3345,
											"end": 3551,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 3345,
											"end": 3551,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "104"
										},
										{
											"begin": 3345,
											"end": 3551,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 3345,
											"end": 3551,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3345,
											"end": 3551,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "105"
										},
										{
											"begin": 3345,
											"end": 3551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3345,
											"end": 3551,
											"name": "tag",
											"source": 13,
											"value": "104"
										},
										{
											"begin": 3345,
											"end": 3551,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3345,
											"end": 3551,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "106"
										},
										{
											"begin": 3345,
											"end": 3551,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 6534,
											"name": "tag",
											"source": 13,
											"value": "16"
										},
										{
											"begin": 5235,
											"end": 6534,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 6534,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 6534,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 6534,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 6534,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "107"
										},
										{
											"begin": 5235,
											"end": 6534,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 6534,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5235,
											"end": 6534,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 6534,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 6534,
											"name": "tag",
											"source": 13,
											"value": "107"
										},
										{
											"begin": 5235,
											"end": 6534,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5235,
											"end": 6534,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 5235,
											"end": 6534,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "109"
										},
										{
											"begin": 5235,
											"end": 6534,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 6534,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5235,
											"end": 6534,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 5235,
											"end": 6534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 6534,
											"name": "tag",
											"source": 13,
											"value": "109"
										},
										{
											"begin": 5235,
											"end": 6534,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 6534,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "110"
										},
										{
											"begin": 5235,
											"end": 6534,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2508,
											"end": 2579,
											"name": "tag",
											"source": 13,
											"value": "17"
										},
										{
											"begin": 2508,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2508,
											"end": 2579,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 2508,
											"end": 2579,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2508,
											"end": 2579,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2508,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "111"
										},
										{
											"begin": 2508,
											"end": 2579,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2508,
											"end": 2579,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2508,
											"end": 2579,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2508,
											"end": 2579,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2508,
											"end": 2579,
											"name": "tag",
											"source": 13,
											"value": "111"
										},
										{
											"begin": 2508,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2508,
											"end": 2579,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2508,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 2508,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "113"
										},
										{
											"begin": 2508,
											"end": 2579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "tag",
											"source": 0,
											"value": "114"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 3732,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "tag",
											"source": 0,
											"value": "116"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 3732,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "52"
										},
										{
											"begin": 2362,
											"end": 2366,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "tag",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "123"
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "tag",
											"source": 13,
											"value": "123"
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "124"
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "125"
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "126"
										},
										{
											"begin": 1695,
											"end": 1734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "tag",
											"source": 13,
											"value": "125"
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 1695,
											"end": 1734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "tag",
											"source": 13,
											"value": "124"
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 1695,
											"end": 1734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4987,
											"end": 5229,
											"name": "tag",
											"source": 13,
											"value": "21"
										},
										{
											"begin": 4987,
											"end": 5229,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4987,
											"end": 5229,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 4987,
											"end": 5229,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4987,
											"end": 5229,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4987,
											"end": 5229,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "130"
										},
										{
											"begin": 4987,
											"end": 5229,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4987,
											"end": 5229,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4987,
											"end": 5229,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4987,
											"end": 5229,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4987,
											"end": 5229,
											"name": "tag",
											"source": 13,
											"value": "130"
										},
										{
											"begin": 4987,
											"end": 5229,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4987,
											"end": 5229,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 4987,
											"end": 5229,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "132"
										},
										{
											"begin": 4987,
											"end": 5229,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 4987,
											"end": 5229,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4987,
											"end": 5229,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "133"
										},
										{
											"begin": 4987,
											"end": 5229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4987,
											"end": 5229,
											"name": "tag",
											"source": 13,
											"value": "132"
										},
										{
											"begin": 4987,
											"end": 5229,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4987,
											"end": 5229,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "134"
										},
										{
											"begin": 4987,
											"end": 5229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "352E302E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "44"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 1819,
											"end": 1877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 693,
											"end": 763,
											"name": "tag",
											"source": 13,
											"value": "23"
										},
										{
											"begin": 693,
											"end": 763,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 693,
											"end": 763,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 693,
											"end": 763,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 693,
											"end": 763,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 693,
											"end": 763,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 693,
											"end": 763,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 693,
											"end": 763,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 693,
											"end": 763,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 693,
											"end": 763,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 693,
											"end": 763,
											"name": "tag",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 693,
											"end": 763,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 693,
											"end": 763,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 693,
											"end": 763,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "52"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "3059375685003C5C33343043CB51F6C6B03E849D5B2F19339E935F8B505D9FE3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 693,
											"end": 763,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 693,
											"end": 763,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "tag",
											"source": 13,
											"value": "24"
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "144"
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "tag",
											"source": 13,
											"value": "144"
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "145"
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "54"
										},
										{
											"begin": 1555,
											"end": 1589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "tag",
											"source": 13,
											"value": "146"
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 1555,
											"end": 1589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "tag",
											"source": 13,
											"value": "145"
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "SWAP7",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "149"
										},
										{
											"begin": 1555,
											"end": 1589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2115,
											"end": 2502,
											"name": "tag",
											"source": 13,
											"value": "25"
										},
										{
											"begin": 2115,
											"end": 2502,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2115,
											"end": 2502,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 2115,
											"end": 2502,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2115,
											"end": 2502,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2115,
											"end": 2502,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "150"
										},
										{
											"begin": 2115,
											"end": 2502,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2115,
											"end": 2502,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2115,
											"end": 2502,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2115,
											"end": 2502,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2115,
											"end": 2502,
											"name": "tag",
											"source": 13,
											"value": "150"
										},
										{
											"begin": 2115,
											"end": 2502,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2115,
											"end": 2502,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 2115,
											"end": 2502,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "152"
										},
										{
											"begin": 2115,
											"end": 2502,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 2115,
											"end": 2502,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2115,
											"end": 2502,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "153"
										},
										{
											"begin": 2115,
											"end": 2502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2115,
											"end": 2502,
											"name": "tag",
											"source": 13,
											"value": "152"
										},
										{
											"begin": 2115,
											"end": 2502,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2115,
											"end": 2502,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "154"
										},
										{
											"begin": 2115,
											"end": 2502,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "tag",
											"source": 13,
											"value": "26"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "155"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "tag",
											"source": 13,
											"value": "155"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "156"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "158"
										},
										{
											"begin": 1642,
											"end": 1689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "tag",
											"source": 13,
											"value": "157"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "159"
										},
										{
											"begin": 1642,
											"end": 1689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "tag",
											"source": 13,
											"value": "156"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "161"
										},
										{
											"begin": 1642,
											"end": 1689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "tag",
											"source": 0,
											"value": "162"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "47"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 5662,
											"end": 5800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "tag",
											"source": 0,
											"value": "164"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 5662,
											"end": 5800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "tag",
											"source": 13,
											"value": "28"
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "166"
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "tag",
											"source": 13,
											"value": "166"
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "167"
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "168"
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "126"
										},
										{
											"begin": 1595,
											"end": 1636,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "tag",
											"source": 13,
											"value": "168"
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "tag",
											"source": 13,
											"value": "167"
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 9379,
											"end": 9404,
											"name": "SWAP9",
											"source": 14
										},
										{
											"begin": 9379,
											"end": 9404,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 9379,
											"end": 9404,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9435,
											"end": 9437,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9420,
											"end": 9438,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 9420,
											"end": 9438,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9413,
											"end": 9447,
											"name": "SWAP8",
											"source": 14
										},
										{
											"begin": 9413,
											"end": 9447,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9413,
											"end": 9447,
											"name": "SWAP8",
											"source": 14
										},
										{
											"begin": 9413,
											"end": 9447,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9463,
											"end": 9481,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 9463,
											"end": 9481,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 9463,
											"end": 9481,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9456,
											"end": 9490,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 9456,
											"end": 9490,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9456,
											"end": 9490,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 9456,
											"end": 9490,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9521,
											"end": 9523,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 9506,
											"end": 9524,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 9506,
											"end": 9524,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9499,
											"end": 9533,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9499,
											"end": 9533,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9499,
											"end": 9533,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 9499,
											"end": 9533,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9564,
											"end": 9567,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 9549,
											"end": 9568,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 9549,
											"end": 9568,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9542,
											"end": 9577,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9608,
											"end": 9611,
											"name": "PUSH",
											"source": 14,
											"value": "A0"
										},
										{
											"begin": 9593,
											"end": 9612,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9593,
											"end": 9612,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9586,
											"end": 9621,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9652,
											"end": 9655,
											"name": "PUSH",
											"source": 14,
											"value": "C0"
										},
										{
											"begin": 9637,
											"end": 9656,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 9637,
											"end": 9656,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9630,
											"end": 9665,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9696,
											"end": 9699,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 9681,
											"end": 9700,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 9681,
											"end": 9700,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9674,
											"end": 9709,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9366,
											"end": 9369,
											"name": "PUSH",
											"source": 14,
											"value": "100"
										},
										{
											"begin": 9351,
											"end": 9370,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1595,
											"end": 1636,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "44"
										},
										{
											"begin": 9036,
											"end": 9715,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4469,
											"end": 4981,
											"name": "tag",
											"source": 13,
											"value": "29"
										},
										{
											"begin": 4469,
											"end": 4981,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4469,
											"end": 4981,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 4469,
											"end": 4981,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4469,
											"end": 4981,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4469,
											"end": 4981,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "172"
										},
										{
											"begin": 4469,
											"end": 4981,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4469,
											"end": 4981,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4469,
											"end": 4981,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4469,
											"end": 4981,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 4469,
											"end": 4981,
											"name": "tag",
											"source": 13,
											"value": "172"
										},
										{
											"begin": 4469,
											"end": 4981,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4469,
											"end": 4981,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "47"
										},
										{
											"begin": 4469,
											"end": 4981,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "174"
										},
										{
											"begin": 4469,
											"end": 4981,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 4469,
											"end": 4981,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4469,
											"end": 4981,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "49"
										},
										{
											"begin": 4469,
											"end": 4981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4469,
											"end": 4981,
											"name": "tag",
											"source": 13,
											"value": "174"
										},
										{
											"begin": 4469,
											"end": 4981,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4469,
											"end": 4981,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "175"
										},
										{
											"begin": 4469,
											"end": 4981,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 553,
											"end": 615,
											"name": "tag",
											"source": 13,
											"value": "30"
										},
										{
											"begin": 553,
											"end": 615,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 553,
											"end": 615,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 553,
											"end": 615,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 553,
											"end": 615,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 553,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "176"
										},
										{
											"begin": 553,
											"end": 615,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 553,
											"end": 615,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 553,
											"end": 615,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 553,
											"end": 615,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 553,
											"end": 615,
											"name": "tag",
											"source": 13,
											"value": "176"
										},
										{
											"begin": 553,
											"end": 615,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 553,
											"end": 615,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 553,
											"end": 615,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "52"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9B87106A812D214D41AD9B68A21119E2948EAAF1040375C939EC808B8862455C"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 553,
											"end": 615,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 553,
											"end": 615,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 621,
											"end": 687,
											"name": "tag",
											"source": 13,
											"value": "31"
										},
										{
											"begin": 621,
											"end": 687,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 621,
											"end": 687,
											"name": "CALLVALUE",
											"source": 13
										},
										{
											"begin": 621,
											"end": 687,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 621,
											"end": 687,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 621,
											"end": 687,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 621,
											"end": 687,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 621,
											"end": 687,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 621,
											"end": 687,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 621,
											"end": 687,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 621,
											"end": 687,
											"name": "tag",
											"source": 13,
											"value": "180"
										},
										{
											"begin": 621,
											"end": 687,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 621,
											"end": 687,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 621,
											"end": 687,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "52"
										},
										{
											"begin": 661,
											"end": 687,
											"name": "PUSH",
											"source": 13,
											"value": "189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3"
										},
										{
											"begin": 621,
											"end": 687,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 621,
											"end": 687,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "tag",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3528,
											"end": 3532,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3551,
											"end": 3598,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3598,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7965DB0B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3551,
											"end": 3598,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3598,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 3551,
											"end": 3638,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1133,
											"end": 1173,
											"name": "DUP4",
											"source": 5
										},
										{
											"begin": 1133,
											"end": 1173,
											"name": "AND",
											"source": 5
										},
										{
											"begin": 1133,
											"end": 1173,
											"name": "EQ",
											"source": 5
										},
										{
											"begin": 3602,
											"end": 3638,
											"name": "tag",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 3602,
											"end": 3638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3544,
											"end": 3638,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3443,
											"end": 3645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3557,
											"end": 4089,
											"name": "tag",
											"source": 13,
											"value": "50"
										},
										{
											"begin": 3557,
											"end": 4089,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3628,
											"end": 3634,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3623,
											"end": 4083,
											"name": "tag",
											"source": 13,
											"value": "189"
										},
										{
											"begin": 3623,
											"end": 4083,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3657,
											"end": 3667,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3668,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3644,
											"end": 3668,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3668,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3668,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3656,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3644,
											"end": 3668,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3644,
											"end": 3668,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3668,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3644,
											"end": 3668,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3668,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3644,
											"end": 3675,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3640,
											"end": 3675,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3640,
											"end": 3675,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 3623,
											"end": 4083,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3623,
											"end": 4083,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "190"
										},
										{
											"begin": 3623,
											"end": 4083,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3731,
											"end": 3741,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 3696,
											"end": 3715,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3718,
											"end": 3742,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3718,
											"end": 3742,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3718,
											"end": 3742,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3718,
											"end": 3730,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3718,
											"end": 3742,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3718,
											"end": 3742,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3718,
											"end": 3742,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3718,
											"end": 3742,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3718,
											"end": 3742,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3718,
											"end": 3745,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3718,
											"end": 3745,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3743,
											"end": 3744,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3743,
											"end": 3744,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3718,
											"end": 3745,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3718,
											"end": 3745,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 3718,
											"end": 3745,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 3718,
											"end": 3745,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3718,
											"end": 3745,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 3718,
											"end": 3745,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 3718,
											"end": 3745,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3718,
											"end": 3745,
											"name": "tag",
											"source": 13,
											"value": "193"
										},
										{
											"begin": 3718,
											"end": 3745,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3718,
											"end": 3745,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3718,
											"end": 3745,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3718,
											"end": 3745,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3718,
											"end": 3745,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3718,
											"end": 3745,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3718,
											"end": 3745,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3718,
											"end": 3745,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3718,
											"end": 3745,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3718,
											"end": 3745,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 3718,
											"end": 3745,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3696,
											"end": 3745,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3696,
											"end": 3745,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3834,
											"end": 3844,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3817,
											"end": 3845,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3817,
											"end": 3845,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3817,
											"end": 3845,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3817,
											"end": 3845,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3817,
											"end": 3845,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "196"
										},
										{
											"begin": 3817,
											"end": 3845,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3817,
											"end": 3845,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3817,
											"end": 3845,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "197"
										},
										{
											"begin": 3817,
											"end": 3845,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3817,
											"end": 3845,
											"name": "tag",
											"source": 13,
											"value": "196"
										},
										{
											"begin": 3817,
											"end": 3845,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3817,
											"end": 3845,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3817,
											"end": 3845,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3817,
											"end": 3845,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3817,
											"end": 3845,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3817,
											"end": 3845,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3817,
											"end": 3845,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3817,
											"end": 3845,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3817,
											"end": 3845,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3817,
											"end": 3845,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3817,
											"end": 3845,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3817,
											"end": 3845,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3817,
											"end": 3845,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3817,
											"end": 3845,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3807,
											"end": 3846,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3807,
											"end": 3846,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3817,
											"end": 3845,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3807,
											"end": 3846,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3807,
											"end": 3846,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3807,
											"end": 3846,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3807,
											"end": 3846,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3807,
											"end": 3846,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3773,
											"end": 3802,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 3773,
											"end": 3802,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3790,
											"end": 3795,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3790,
											"end": 3795,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3773,
											"end": 3802,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3773,
											"end": 3802,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "199"
										},
										{
											"begin": 3773,
											"end": 3802,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3773,
											"end": 3802,
											"name": "tag",
											"source": 13,
											"value": "198"
										},
										{
											"begin": 3773,
											"end": 3802,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3773,
											"end": 3802,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3773,
											"end": 3802,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3773,
											"end": 3802,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3773,
											"end": 3802,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3773,
											"end": 3802,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3773,
											"end": 3802,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3773,
											"end": 3802,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3773,
											"end": 3802,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3773,
											"end": 3802,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3773,
											"end": 3802,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3773,
											"end": 3802,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3773,
											"end": 3802,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3763,
											"end": 3803,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3763,
											"end": 3803,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3763,
											"end": 3803,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3763,
											"end": 3803,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3763,
											"end": 3803,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3763,
											"end": 3803,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3763,
											"end": 3846,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 3763,
											"end": 3866,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3763,
											"end": 3866,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3763,
											"end": 3866,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "200"
										},
										{
											"begin": 3763,
											"end": 3866,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3851,
											"end": 3866,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 3851,
											"end": 3866,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3851,
											"end": 3866,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3851,
											"end": 3866,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3851,
											"end": 3866,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 3851,
											"end": 3866,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3850,
											"end": 3866,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3763,
											"end": 3866,
											"name": "tag",
											"source": 13,
											"value": "200"
										},
										{
											"begin": 3763,
											"end": 3866,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3759,
											"end": 4073,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3759,
											"end": 4073,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 3759,
											"end": 4073,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 3886,
											"end": 3901,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 3886,
											"end": 3901,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3886,
											"end": 3901,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3886,
											"end": 3901,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3886,
											"end": 3908,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3886,
											"end": 3908,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3886,
											"end": 3908,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3904,
											"end": 3908,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 3886,
											"end": 3908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3886,
											"end": 3908,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3886,
											"end": 3908,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 3886,
											"end": 3908,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3886,
											"end": 3908,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3886,
											"end": 3908,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 3960,
											"end": 3974,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 3960,
											"end": 3974,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3960,
											"end": 3974,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3960,
											"end": 3974,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3934,
											"end": 3944,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 3886,
											"end": 3901,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3926,
											"end": 3945,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3926,
											"end": 3945,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3926,
											"end": 3945,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3926,
											"end": 3945,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3926,
											"end": 3945,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 3926,
											"end": 3945,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3926,
											"end": 3945,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 3926,
											"end": 3945,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3926,
											"end": 3945,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3926,
											"end": 3945,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3926,
											"end": 3945,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3926,
											"end": 3956,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3926,
											"end": 3956,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3926,
											"end": 3956,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3926,
											"end": 3974,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3926,
											"end": 3974,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3960,
											"end": 3974,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3960,
											"end": 3974,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3926,
											"end": 3956,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3926,
											"end": 3956,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3926,
											"end": 3974,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "202"
										},
										{
											"begin": 3926,
											"end": 3974,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3960,
											"end": 3974,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3960,
											"end": 3974,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3926,
											"end": 3974,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "203"
										},
										{
											"begin": 3926,
											"end": 3974,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3926,
											"end": 3974,
											"name": "tag",
											"source": 13,
											"value": "202"
										},
										{
											"begin": 3926,
											"end": 3974,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3926,
											"end": 3974,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3926,
											"end": 3974,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3926,
											"end": 3974,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3997,
											"end": 4035,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3997,
											"end": 4035,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4012,
											"end": 4022,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 4012,
											"end": 4022,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3997,
											"end": 4035,
											"name": "PUSH",
											"source": 13,
											"value": "BE21664565742A9F42CBB6D005F92DB59C7BCAD35B12EF5B57B79E75676B247A"
										},
										{
											"begin": 3997,
											"end": 4035,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3997,
											"end": 4035,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "204"
										},
										{
											"begin": 3997,
											"end": 4035,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4024,
											"end": 4034,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 4024,
											"end": 4034,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3997,
											"end": 4035,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "139"
										},
										{
											"begin": 3997,
											"end": 4035,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3997,
											"end": 4035,
											"name": "tag",
											"source": 13,
											"value": "204"
										},
										{
											"begin": 3997,
											"end": 4035,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3997,
											"end": 4035,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3997,
											"end": 4035,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3997,
											"end": 4035,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3997,
											"end": 4035,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3997,
											"end": 4035,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3997,
											"end": 4035,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3997,
											"end": 4035,
											"name": "LOG2",
											"source": 13
										},
										{
											"begin": 4053,
											"end": 4058,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3623,
											"end": 4083,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3557,
											"end": 4089,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3557,
											"end": 4089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3759,
											"end": 4073,
											"name": "tag",
											"source": 13,
											"value": "201"
										},
										{
											"begin": 3759,
											"end": 4073,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3677,
											"end": 3680,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 3677,
											"end": 3680,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3623,
											"end": 4083,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "189"
										},
										{
											"begin": 3623,
											"end": 4083,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3623,
											"end": 4083,
											"name": "tag",
											"source": 13,
											"value": "190"
										},
										{
											"begin": 3623,
											"end": 4083,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3623,
											"end": 4083,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3557,
											"end": 4089,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3557,
											"end": 4089,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "tag",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4824,
											"end": 4831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "B3DA67D1B252AEAB7C8063542D95E75F82A5307A82535949BC38F7CF7BA8897F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4943,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4919,
											"end": 4943,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4943,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4943,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "tag",
											"source": 0,
											"value": "62"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 5333,
											"end": 5337,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 5320,
											"end": 5338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5338,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 5320,
											"end": 5338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "210"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5350,
											"end": 5375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 5361,
											"end": 5365,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5367,
											"end": 5374,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5350,
											"end": 5360,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 5350,
											"end": 5375,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5350,
											"end": 5375,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 5350,
											"end": 5375,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5350,
											"end": 5375,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3024,
											"end": 3339,
											"name": "tag",
											"source": 13,
											"value": "67"
										},
										{
											"begin": 3024,
											"end": 3339,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "3059375685003C5C33343043CB51F6C6B03E849D5B2F19339E935F8B505D9FE3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3195,
											"end": 3268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3195,
											"end": 3268,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3195,
											"end": 3268,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3195,
											"end": 3268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "C0"
										},
										{
											"begin": 3195,
											"end": 3268,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3195,
											"end": 3268,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3195,
											"end": 3268,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3195,
											"end": 3268,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3200,
											"end": 3210,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3200,
											"end": 3210,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3195,
											"end": 3268,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3195,
											"end": 3268,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3195,
											"end": 3268,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3195,
											"end": 3268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3195,
											"end": 3268,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3195,
											"end": 3268,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3195,
											"end": 3268,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3195,
											"end": 3268,
											"name": "DUP12",
											"source": 13
										},
										{
											"begin": 3195,
											"end": 3268,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3195,
											"end": 3268,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3195,
											"end": 3268,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3195,
											"end": 3268,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 3195,
											"end": 3268,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3195,
											"end": 3268,
											"name": "DUP12",
											"source": 13
										},
										{
											"begin": 3195,
											"end": 3268,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3195,
											"end": 3268,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3195,
											"end": 3268,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 3195,
											"end": 3268,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3195,
											"end": 3268,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3195,
											"end": 3268,
											"name": "DUP11",
											"source": 13
										},
										{
											"begin": 3195,
											"end": 3268,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3195,
											"end": 3268,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3195,
											"end": 3268,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 3195,
											"end": 3268,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3195,
											"end": 3268,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3195,
											"end": 3268,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 3195,
											"end": 3268,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3195,
											"end": 3268,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3195,
											"end": 3268,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 3195,
											"end": 3268,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3195,
											"end": 3268,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3195,
											"end": 3268,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 3195,
											"end": 3268,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3195,
											"end": 3268,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3175,
											"end": 3192,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3175,
											"end": 3192,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3175,
											"end": 3192,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3175,
											"end": 3180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 3175,
											"end": 3192,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3175,
											"end": 3192,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3175,
											"end": 3192,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3175,
											"end": 3192,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3175,
											"end": 3192,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3175,
											"end": 3268,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3175,
											"end": 3268,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3175,
											"end": 3268,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3175,
											"end": 3268,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 3175,
											"end": 3268,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3175,
											"end": 3268,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3195,
											"end": 3268,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3195,
											"end": 3268,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3175,
											"end": 3192,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3175,
											"end": 3268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 3175,
											"end": 3268,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3175,
											"end": 3268,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3175,
											"end": 3268,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3175,
											"end": 3268,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "218"
										},
										{
											"begin": 3175,
											"end": 3268,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3175,
											"end": 3268,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3175,
											"end": 3268,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "219"
										},
										{
											"begin": 3175,
											"end": 3268,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3175,
											"end": 3268,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "218"
										},
										{
											"begin": 3175,
											"end": 3268,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3175,
											"end": 3268,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3175,
											"end": 3268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3175,
											"end": 3268,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3175,
											"end": 3268,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3175,
											"end": 3268,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3175,
											"end": 3268,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3175,
											"end": 3268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 3175,
											"end": 3268,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3175,
											"end": 3268,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 3175,
											"end": 3268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 3175,
											"end": 3268,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3175,
											"end": 3268,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3175,
											"end": 3268,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3175,
											"end": 3268,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3175,
											"end": 3268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 3175,
											"end": 3268,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3175,
											"end": 3268,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 3175,
											"end": 3268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 3175,
											"end": 3268,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3175,
											"end": 3268,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3175,
											"end": 3268,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3175,
											"end": 3268,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3175,
											"end": 3268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3175,
											"end": 3268,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3175,
											"end": 3268,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 3175,
											"end": 3268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 3175,
											"end": 3268,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3175,
											"end": 3268,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3175,
											"end": 3268,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3175,
											"end": 3268,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3175,
											"end": 3268,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 3175,
											"end": 3268,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3175,
											"end": 3268,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 3175,
											"end": 3268,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3175,
											"end": 3268,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3175,
											"end": 3268,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3283,
											"end": 3310,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "78D68BA0E8C23B92E7C700D99EFED2719520CBD4AF845B2C03AE251F9CDF3D52"
										},
										{
											"begin": 3293,
											"end": 3303,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3293,
											"end": 3303,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3305,
											"end": 3309,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 3283,
											"end": 3310,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3283,
											"end": 3310,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3283,
											"end": 3310,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "220"
										},
										{
											"begin": 3283,
											"end": 3310,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3283,
											"end": 3310,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3283,
											"end": 3310,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3283,
											"end": 3310,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "221"
										},
										{
											"begin": 3283,
											"end": 3310,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3283,
											"end": 3310,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "220"
										},
										{
											"begin": 3283,
											"end": 3310,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3283,
											"end": 3310,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3283,
											"end": 3310,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3283,
											"end": 3310,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3283,
											"end": 3310,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3283,
											"end": 3310,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 3283,
											"end": 3310,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3283,
											"end": 3310,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 13
										},
										{
											"begin": 3320,
											"end": 3330,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3320,
											"end": 3332,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3320,
											"end": 3332,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3320,
											"end": 3332,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3320,
											"end": 3330,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3320,
											"end": 3332,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "222"
										},
										{
											"begin": 3320,
											"end": 3332,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3320,
											"end": 3332,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "223"
										},
										{
											"begin": 3320,
											"end": 3332,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3320,
											"end": 3332,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "222"
										},
										{
											"begin": 3320,
											"end": 3332,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 3320,
											"end": 3332,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3320,
											"end": 3332,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3320,
											"end": 3332,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3320,
											"end": 3332,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 3320,
											"end": 3332,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3024,
											"end": 3339,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3024,
											"end": 3339,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3024,
											"end": 3339,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3024,
											"end": 3339,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3024,
											"end": 3339,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3024,
											"end": 3339,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 3024,
											"end": 3339,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6441,
											"end": 6475,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6441,
											"end": 6475,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 6441,
											"end": 6475,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6437,
											"end": 6539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 6437,
											"end": 6539,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "334BD919"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6437,
											"end": 6539,
											"name": "tag",
											"source": 0,
											"value": "227"
										},
										{
											"begin": 6437,
											"end": 6539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6549,
											"end": 6586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 6561,
											"end": 6565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6585,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6549,
											"end": 6560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 6549,
											"end": 6586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6549,
											"end": 6586,
											"name": "tag",
											"source": 0,
											"value": "228"
										},
										{
											"begin": 6549,
											"end": 6586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6549,
											"end": 6586,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2585,
											"end": 2660,
											"name": "tag",
											"source": 13,
											"value": "74"
										},
										{
											"begin": 2585,
											"end": 2660,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9B87106A812D214D41AD9B68A21119E2948EAAF1040375C939EC808B8862455C"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "231"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2643,
											"end": 2653,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 2643,
											"end": 2651,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "234"
										},
										{
											"begin": 2643,
											"end": 2653,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2643,
											"end": 2653,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 2643,
											"end": 2653,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2585,
											"end": 2660,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2585,
											"end": 2660,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2770,
											"end": 3018,
											"name": "tag",
											"source": 13,
											"value": "77"
										},
										{
											"begin": 2770,
											"end": 3018,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2827,
											"end": 2837,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 2819,
											"end": 2838,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2819,
											"end": 2838,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2819,
											"end": 2838,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2819,
											"end": 2838,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2819,
											"end": 2826,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 2819,
											"end": 2838,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2819,
											"end": 2838,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2819,
											"end": 2838,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2819,
											"end": 2838,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2819,
											"end": 2838,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 2819,
											"end": 2844,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 2819,
											"end": 2849,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2811,
											"end": 2875,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 2811,
											"end": 2875,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2811,
											"end": 2875,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2811,
											"end": 2875,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2811,
											"end": 2875,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2811,
											"end": 2875,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14580,
											"end": 14582,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2811,
											"end": 2875,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2811,
											"end": 2875,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2811,
											"end": 2875,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14562,
											"end": 14583,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14619,
											"end": 14621,
											"name": "PUSH",
											"source": 14,
											"value": "15"
										},
										{
											"begin": 14599,
											"end": 14617,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 14599,
											"end": 14617,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14599,
											"end": 14617,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14592,
											"end": 14622,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "506C6179657220616C726561647920657869737473"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "58"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14638,
											"end": 14656,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 14638,
											"end": 14656,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14638,
											"end": 14656,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14631,
											"end": 14682,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14699,
											"end": 14717,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 14699,
											"end": 14717,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2811,
											"end": 2875,
											"name": "tag",
											"source": 13,
											"value": "237"
										},
										{
											"begin": 2811,
											"end": 2875,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2811,
											"end": 2875,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2811,
											"end": 2875,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2811,
											"end": 2875,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2811,
											"end": 2875,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2811,
											"end": 2875,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 2811,
											"end": 2875,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2811,
											"end": 2875,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 2811,
											"end": 2875,
											"name": "tag",
											"source": 13,
											"value": "236"
										},
										{
											"begin": 2811,
											"end": 2875,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2907,
											"end": 2971,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2907,
											"end": 2971,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2907,
											"end": 2971,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2907,
											"end": 2971,
											"name": "PUSH",
											"source": 13,
											"value": "140"
										},
										{
											"begin": 2907,
											"end": 2971,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2907,
											"end": 2971,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2907,
											"end": 2971,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2907,
											"end": 2971,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2914,
											"end": 2915,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 2907,
											"end": 2971,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2907,
											"end": 2971,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2907,
											"end": 2971,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2907,
											"end": 2971,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2917,
											"end": 2918,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2907,
											"end": 2971,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2907,
											"end": 2971,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2907,
											"end": 2971,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2907,
											"end": 2971,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2920,
											"end": 2923,
											"name": "PUSH",
											"source": 13,
											"value": "64"
										},
										{
											"begin": 2907,
											"end": 2971,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2907,
											"end": 2971,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2907,
											"end": 2971,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2907,
											"end": 2971,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2925,
											"end": 2927,
											"name": "PUSH",
											"source": 13,
											"value": "32"
										},
										{
											"begin": 2907,
											"end": 2971,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2907,
											"end": 2971,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2907,
											"end": 2971,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2907,
											"end": 2971,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2929,
											"end": 2931,
											"name": "PUSH",
											"source": 13,
											"value": "A"
										},
										{
											"begin": 2907,
											"end": 2971,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2907,
											"end": 2971,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2907,
											"end": 2971,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2907,
											"end": 2971,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2933,
											"end": 2934,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 2907,
											"end": 2971,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2907,
											"end": 2971,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2907,
											"end": 2971,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2907,
											"end": 2971,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2936,
											"end": 2937,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 2907,
											"end": 2971,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2907,
											"end": 2971,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2907,
											"end": 2971,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2907,
											"end": 2971,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2939,
											"end": 2940,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 2907,
											"end": 2971,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2907,
											"end": 2971,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2907,
											"end": 2971,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2907,
											"end": 2971,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2953,
											"end": 2954,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2942,
											"end": 2955,
											"name": "PUSH",
											"source": 13,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2942,
											"end": 2955,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2942,
											"end": 2955,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 2942,
											"end": 2955,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2942,
											"end": 2955,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "240"
										},
										{
											"begin": 2942,
											"end": 2955,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2942,
											"end": 2955,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "240"
										},
										{
											"begin": 2942,
											"end": 2955,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "241"
										},
										{
											"begin": 2942,
											"end": 2955,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2942,
											"end": 2955,
											"name": "tag",
											"source": 13,
											"value": "240"
										},
										{
											"begin": 2942,
											"end": 2955,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2942,
											"end": 2955,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2942,
											"end": 2955,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2942,
											"end": 2955,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2942,
											"end": 2955,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2942,
											"end": 2955,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2942,
											"end": 2955,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2942,
											"end": 2955,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2942,
											"end": 2955,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2942,
											"end": 2955,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 2942,
											"end": 2955,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2942,
											"end": 2955,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2942,
											"end": 2955,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2942,
											"end": 2955,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2942,
											"end": 2955,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2942,
											"end": 2955,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2942,
											"end": 2955,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2942,
											"end": 2955,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2942,
											"end": 2955,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "242"
										},
										{
											"begin": 2942,
											"end": 2955,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2942,
											"end": 2955,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2942,
											"end": 2955,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2942,
											"end": 2955,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2942,
											"end": 2955,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2942,
											"end": 2955,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2942,
											"end": 2955,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 2942,
											"end": 2955,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2942,
											"end": 2955,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 2942,
											"end": 2955,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2942,
											"end": 2955,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 2942,
											"end": 2955,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2942,
											"end": 2955,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2942,
											"end": 2955,
											"name": "tag",
											"source": 13,
											"value": "242"
										},
										{
											"begin": 2942,
											"end": 2955,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2907,
											"end": 2971,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2907,
											"end": 2971,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2907,
											"end": 2971,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2907,
											"end": 2971,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2968,
											"end": 2969,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2957,
											"end": 2970,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2957,
											"end": 2970,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2957,
											"end": 2970,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2957,
											"end": 2970,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2957,
											"end": 2970,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2957,
											"end": 2970,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2957,
											"end": 2970,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2957,
											"end": 2970,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2957,
											"end": 2970,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 2957,
											"end": 2970,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2957,
											"end": 2970,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2957,
											"end": 2970,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2957,
											"end": 2970,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2957,
											"end": 2970,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2957,
											"end": 2970,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2957,
											"end": 2970,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2957,
											"end": 2970,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 2957,
											"end": 2970,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 2957,
											"end": 2970,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 2957,
											"end": 2970,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2957,
											"end": 2970,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2957,
											"end": 2970,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2957,
											"end": 2970,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2957,
											"end": 2970,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2957,
											"end": 2970,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 2957,
											"end": 2970,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2957,
											"end": 2970,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 2957,
											"end": 2970,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2957,
											"end": 2970,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": 2957,
											"end": 2970,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2957,
											"end": 2970,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2957,
											"end": 2970,
											"name": "tag",
											"source": 13,
											"value": "245"
										},
										{
											"begin": 2957,
											"end": 2970,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2907,
											"end": 2971,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2907,
											"end": 2971,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2893,
											"end": 2903,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2904,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2885,
											"end": 2904,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2904,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2904,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2892,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 2885,
											"end": 2904,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2885,
											"end": 2904,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2904,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2904,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2904,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2885,
											"end": 2904,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2904,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2904,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2904,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "PUSH",
											"source": 13,
											"value": "A0"
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "PUSH",
											"source": 13,
											"value": "C0"
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "PUSH",
											"source": 13,
											"value": "E0"
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "246"
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "247"
										},
										{
											"begin": 2885,
											"end": 2971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "tag",
											"source": 13,
											"value": "246"
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "PUSH",
											"source": 13,
											"value": "120"
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "248"
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "PUSH",
											"source": 13,
											"value": "9"
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "247"
										},
										{
											"begin": 2885,
											"end": 2971,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "tag",
											"source": 13,
											"value": "248"
										},
										{
											"begin": 2885,
											"end": 2971,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2986,
											"end": 3011,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 2986,
											"end": 3011,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3000,
											"end": 3010,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 3000,
											"end": 3010,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2986,
											"end": 3011,
											"name": "PUSH",
											"source": 13,
											"value": "B4CCA19A27CE42915C3CEE0CEE28FC5D90969EE49F09EC71659546A63B5F7BC0"
										},
										{
											"begin": 2986,
											"end": 3011,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2986,
											"end": 3011,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 2986,
											"end": 3011,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 2986,
											"end": 3011,
											"name": "LOG2",
											"source": 13
										},
										{
											"begin": 2770,
											"end": 3018,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "tag",
											"source": 2,
											"value": "88"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2653,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 2653,
											"end": 2664,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 2653,
											"end": 2666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2653,
											"end": 2666,
											"name": "tag",
											"source": 2,
											"value": "250"
										},
										{
											"begin": 2653,
											"end": 2666,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4309,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 4291,
											"end": 4308,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4290,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 4273,
											"end": 4309,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4309,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "253"
										},
										{
											"begin": 4273,
											"end": 4309,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4319,
											"end": 4365,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "190"
										},
										{
											"begin": 4341,
											"end": 4358,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4360,
											"end": 4364,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4319,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 4319,
											"end": 4365,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4095,
											"end": 4463,
											"name": "tag",
											"source": 13,
											"value": "93"
										},
										{
											"begin": 4095,
											"end": 4463,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "3059375685003C5C33343043CB51F6C6B03E849D5B2F19339E935F8B505D9FE3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "258"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4238,
											"end": 4239,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4203,
											"end": 4240,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4203,
											"end": 4220,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 4221,
											"end": 4225,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4203,
											"end": 4226,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4203,
											"end": 4226,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4203,
											"end": 4226,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 4203,
											"end": 4226,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4203,
											"end": 4226,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4203,
											"end": 4226,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "197"
										},
										{
											"begin": 4203,
											"end": 4226,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4203,
											"end": 4226,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "260"
										},
										{
											"begin": 4203,
											"end": 4226,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4203,
											"end": 4226,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4203,
											"end": 4226,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4203,
											"end": 4226,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4203,
											"end": 4226,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4203,
											"end": 4226,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4203,
											"end": 4226,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4203,
											"end": 4226,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4203,
											"end": 4226,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4203,
											"end": 4226,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4203,
											"end": 4226,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4203,
											"end": 4226,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4203,
											"end": 4226,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4203,
											"end": 4226,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4203,
											"end": 4226,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4203,
											"end": 4226,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4203,
											"end": 4240,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 4195,
											"end": 4265,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "261"
										},
										{
											"begin": 4195,
											"end": 4265,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4195,
											"end": 4265,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4195,
											"end": 4265,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4195,
											"end": 4265,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4195,
											"end": 4265,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 14930,
											"end": 14932,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4195,
											"end": 4265,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4195,
											"end": 4265,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4195,
											"end": 4265,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 14912,
											"end": 14933,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14969,
											"end": 14971,
											"name": "PUSH",
											"source": 14,
											"value": "14"
										},
										{
											"begin": 14949,
											"end": 14967,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 14949,
											"end": 14967,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14949,
											"end": 14967,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14942,
											"end": 14972,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4775696C6420616C726561647920657869737473"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14988,
											"end": 15006,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 14988,
											"end": 15006,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14988,
											"end": 15006,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14981,
											"end": 15031,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15048,
											"end": 15066,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 15048,
											"end": 15066,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4195,
											"end": 4265,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "237"
										},
										{
											"begin": 14728,
											"end": 15072,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4195,
											"end": 4265,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "261"
										},
										{
											"begin": 4195,
											"end": 4265,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4292,
											"end": 4329,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4292,
											"end": 4329,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4292,
											"end": 4329,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4292,
											"end": 4329,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 4292,
											"end": 4329,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4292,
											"end": 4329,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4292,
											"end": 4329,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4292,
											"end": 4329,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4292,
											"end": 4329,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4292,
											"end": 4329,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4292,
											"end": 4329,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4292,
											"end": 4329,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4292,
											"end": 4329,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4292,
											"end": 4329,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4292,
											"end": 4329,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4292,
											"end": 4329,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4292,
											"end": 4329,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4312,
											"end": 4328,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4312,
											"end": 4328,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4326,
											"end": 4327,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 4312,
											"end": 4328,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4312,
											"end": 4328,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4312,
											"end": 4328,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4312,
											"end": 4328,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4312,
											"end": 4328,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4312,
											"end": 4328,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4312,
											"end": 4328,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4312,
											"end": 4328,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4292,
											"end": 4329,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4292,
											"end": 4329,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4292,
											"end": 4329,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4292,
											"end": 4329,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4292,
											"end": 4329,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4312,
											"end": 4328,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4312,
											"end": 4328,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4312,
											"end": 4328,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4312,
											"end": 4328,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4312,
											"end": 4328,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4312,
											"end": 4328,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 4312,
											"end": 4328,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4312,
											"end": 4328,
											"modifierDepth": 1,
											"name": "CALLDATASIZE",
											"source": 13
										},
										{
											"begin": 4312,
											"end": 4328,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4312,
											"end": 4328,
											"modifierDepth": 1,
											"name": "CALLDATACOPY",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4292,
											"end": 4329,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4292,
											"end": 4329,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4275,
											"end": 4289,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4275,
											"end": 4289,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4275,
											"end": 4289,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4275,
											"end": 4289,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4275,
											"end": 4289,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4275,
											"end": 4289,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4275,
											"end": 4281,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 4275,
											"end": 4289,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4275,
											"end": 4289,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4275,
											"end": 4289,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4275,
											"end": 4289,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4275,
											"end": 4289,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4275,
											"end": 4329,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4275,
											"end": 4329,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4275,
											"end": 4289,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4275,
											"end": 4289,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4275,
											"end": 4329,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "267"
										},
										{
											"begin": 4275,
											"end": 4329,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4275,
											"end": 4289,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4275,
											"end": 4329,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "219"
										},
										{
											"begin": 4275,
											"end": 4329,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4275,
											"end": 4329,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "267"
										},
										{
											"begin": 4275,
											"end": 4329,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4275,
											"end": 4329,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4275,
											"end": 4329,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4275,
											"end": 4329,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4275,
											"end": 4329,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4275,
											"end": 4329,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4275,
											"end": 4329,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 4275,
											"end": 4329,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4275,
											"end": 4329,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4275,
											"end": 4329,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4275,
											"end": 4329,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4275,
											"end": 4329,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4275,
											"end": 4329,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4275,
											"end": 4329,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4275,
											"end": 4329,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4275,
											"end": 4329,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4275,
											"end": 4329,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4275,
											"end": 4329,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4275,
											"end": 4329,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 4275,
											"end": 4329,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4275,
											"end": 4329,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 4275,
											"end": 4329,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4275,
											"end": 4329,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4275,
											"end": 4329,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4275,
											"end": 4329,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4275,
											"end": 4329,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4275,
											"end": 4329,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4275,
											"end": 4329,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "268"
										},
										{
											"begin": 4275,
											"end": 4329,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4275,
											"end": 4329,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 4275,
											"end": 4329,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4275,
											"end": 4329,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4275,
											"end": 4329,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4275,
											"end": 4329,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4275,
											"end": 4329,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4275,
											"end": 4329,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "269"
										},
										{
											"begin": 4275,
											"end": 4329,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4275,
											"end": 4329,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "268"
										},
										{
											"begin": 4275,
											"end": 4329,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4339,
											"end": 4353,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4339,
											"end": 4353,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4339,
											"end": 4353,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4339,
											"end": 4353,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4339,
											"end": 4353,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4339,
											"end": 4353,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4339,
											"end": 4345,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 4339,
											"end": 4353,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4339,
											"end": 4353,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4339,
											"end": 4353,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4339,
											"end": 4353,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4339,
											"end": 4353,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4339,
											"end": 4361,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 4339,
											"end": 4361,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4339,
											"end": 4364,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4339,
											"end": 4364,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4367,
											"end": 4373,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4367,
											"end": 4373,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4339,
											"end": 4353,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4339,
											"end": 4364,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "271"
										},
										{
											"begin": 4339,
											"end": 4364,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4339,
											"end": 4364,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "271"
										},
										{
											"begin": 4339,
											"end": 4364,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 4339,
											"end": 4364,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4339,
											"end": 4364,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "271"
										},
										{
											"begin": 4339,
											"end": 4364,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4339,
											"end": 4364,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4339,
											"end": 4364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4339,
											"end": 4364,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4339,
											"end": 4364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4339,
											"end": 4364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4339,
											"end": 4364,
											"modifierDepth": 1,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4339,
											"end": 4364,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4339,
											"end": 4364,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4339,
											"end": 4373,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 4339,
											"end": 4373,
											"modifierDepth": 1,
											"name": "EXP",
											"source": 13
										},
										{
											"begin": 4339,
											"end": 4373,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4339,
											"end": 4373,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4339,
											"end": 4373,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4339,
											"end": 4373,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 4339,
											"end": 4373,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 4339,
											"end": 4373,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4339,
											"end": 4373,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4339,
											"end": 4373,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4339,
											"end": 4373,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4339,
											"end": 4373,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 4339,
											"end": 4373,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 4339,
											"end": 4373,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4339,
											"end": 4373,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 4339,
											"end": 4373,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4409,
											"end": 4415,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4383,
											"end": 4400,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 4401,
											"end": 4405,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4383,
											"end": 4406,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4383,
											"end": 4406,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4383,
											"end": 4406,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 4383,
											"end": 4406,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4383,
											"end": 4406,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4383,
											"end": 4406,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "197"
										},
										{
											"begin": 4383,
											"end": 4406,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4383,
											"end": 4406,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "273"
										},
										{
											"begin": 4383,
											"end": 4406,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4383,
											"end": 4406,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4383,
											"end": 4406,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4383,
											"end": 4406,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4383,
											"end": 4406,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4383,
											"end": 4406,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4383,
											"end": 4406,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4383,
											"end": 4406,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4383,
											"end": 4406,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4383,
											"end": 4406,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4383,
											"end": 4406,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4383,
											"end": 4406,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4383,
											"end": 4406,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4383,
											"end": 4406,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4383,
											"end": 4415,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4383,
											"end": 4415,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4383,
											"end": 4415,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 4383,
											"end": 4415,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4383,
											"end": 4415,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 4383,
											"end": 4415,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4383,
											"end": 4415,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4383,
											"end": 4415,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 4383,
											"end": 4415,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4383,
											"end": 4415,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4383,
											"end": 4415,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4383,
											"end": 4415,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 4383,
											"end": 4415,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 4383,
											"end": 4415,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4383,
											"end": 4415,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4383,
											"end": 4415,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 4430,
											"end": 4456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "72208535A97B2E307167838C66AACD47F8DE3A2CB92BC2DDB2B2B52009C9FD5"
										},
										{
											"begin": 4430,
											"end": 4456,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4430,
											"end": 4456,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "274"
										},
										{
											"begin": 4430,
											"end": 4456,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4443,
											"end": 4447,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4443,
											"end": 4447,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4449,
											"end": 4455,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4449,
											"end": 4455,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4430,
											"end": 4456,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "129"
										},
										{
											"begin": 4430,
											"end": 4456,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4430,
											"end": 4456,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "274"
										},
										{
											"begin": 4430,
											"end": 4456,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4430,
											"end": 4456,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4430,
											"end": 4456,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4430,
											"end": 4456,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4430,
											"end": 4456,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4430,
											"end": 4456,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4430,
											"end": 4456,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4430,
											"end": 4456,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 13
										},
										{
											"begin": 4095,
											"end": 4463,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4095,
											"end": 4463,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4095,
											"end": 4463,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4095,
											"end": 4463,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "tag",
											"source": 2,
											"value": "96"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3774,
											"end": 3781,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2924,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 2924,
											"end": 2942,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 2924,
											"end": 2944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2924,
											"end": 2944,
											"name": "tag",
											"source": 2,
											"value": "276"
										},
										{
											"begin": 2924,
											"end": 2944,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3345,
											"end": 3551,
											"name": "tag",
											"source": 13,
											"value": "106"
										},
										{
											"begin": 3345,
											"end": 3551,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "3059375685003C5C33343043CB51F6C6B03E849D5B2F19339E935F8B505D9FE3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "283"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3484,
											"end": 3494,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3495,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 3471,
											"end": 3495,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3495,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3495,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3483,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 3471,
											"end": 3495,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3471,
											"end": 3495,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3495,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3495,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3495,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3471,
											"end": 3495,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3495,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3495,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3501,
											"end": 3543,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3501,
											"end": 3543,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3501,
											"end": 3543,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 3501,
											"end": 3543,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3501,
											"end": 3543,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3501,
											"end": 3543,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3501,
											"end": 3543,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3501,
											"end": 3543,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 3501,
											"end": 3543,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3501,
											"end": 3543,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3501,
											"end": 3543,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3501,
											"end": 3543,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 3501,
											"end": 3543,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3501,
											"end": 3543,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 3501,
											"end": 3543,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3501,
											"end": 3543,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3501,
											"end": 3543,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3501,
											"end": 3543,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3501,
											"end": 3543,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3501,
											"end": 3543,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 3501,
											"end": 3543,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3501,
											"end": 3543,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3501,
											"end": 3543,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 3501,
											"end": 3543,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3501,
											"end": 3543,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3501,
											"end": 3543,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3501,
											"end": 3543,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3501,
											"end": 3543,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3544,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3544,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 3501,
											"end": 3543,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 3471,
											"end": 3544,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3544,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3544,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3544,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3544,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3544,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3544,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3544,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3544,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3544,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3544,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3544,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3544,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3544,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3544,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3544,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3544,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3544,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3544,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3544,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3544,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3544,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3544,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3544,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 3471,
											"end": 3544,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3544,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3544,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "219"
										},
										{
											"begin": 3471,
											"end": 3544,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3544,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "286"
										},
										{
											"begin": 3471,
											"end": 3544,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3471,
											"end": 3544,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 3471,
											"end": 3544,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3544,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3544,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3544,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 3471,
											"end": 3544,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3544,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3544,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3544,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "287"
										},
										{
											"begin": 3471,
											"end": 3544,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3544,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3544,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "219"
										},
										{
											"begin": 3471,
											"end": 3544,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3544,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "287"
										},
										{
											"begin": 3471,
											"end": 3544,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3471,
											"end": 3544,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 3471,
											"end": 3544,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3544,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3544,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3544,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 3471,
											"end": 3544,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3544,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3544,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3544,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 3471,
											"end": 3544,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3544,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3544,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3544,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3544,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 3471,
											"end": 3544,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3544,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3544,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3544,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3544,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3471,
											"end": 3544,
											"modifierDepth": 1,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3544,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3544,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3544,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3544,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3544,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3544,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3544,
											"modifierDepth": 1,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3544,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 3471,
											"end": 3544,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3345,
											"end": 3551,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5235,
											"end": 6534,
											"name": "tag",
											"source": 13,
											"value": "110"
										},
										{
											"begin": 5235,
											"end": 6534,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5306,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5309,
											"end": 5326,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5309,
											"end": 5326,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5309,
											"end": 5326,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5309,
											"end": 5316,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 5309,
											"end": 5326,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5309,
											"end": 5326,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5309,
											"end": 5326,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5309,
											"end": 5326,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5309,
											"end": 5326,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5309,
											"end": 5326,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5309,
											"end": 5326,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5309,
											"end": 5326,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 5309,
											"end": 5326,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5309,
											"end": 5326,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5309,
											"end": 5326,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5309,
											"end": 5326,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5309,
											"end": 5326,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "289"
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "tag",
											"source": 13,
											"value": "290"
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "290"
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "tag",
											"source": 13,
											"value": "289"
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5286,
											"end": 5326,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5368,
											"end": 5369,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5344,
											"end": 5350,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5344,
											"end": 5358,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5344,
											"end": 5358,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5344,
											"end": 5358,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5344,
											"end": 5365,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5344,
											"end": 5369,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 5336,
											"end": 5388,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 5336,
											"end": 5388,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5336,
											"end": 5388,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5336,
											"end": 5388,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5336,
											"end": 5388,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5336,
											"end": 5388,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15279,
											"end": 15281,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5336,
											"end": 5388,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5336,
											"end": 5388,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5336,
											"end": 5388,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15261,
											"end": 15282,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15318,
											"end": 15320,
											"name": "PUSH",
											"source": 14,
											"value": "E"
										},
										{
											"begin": 15298,
											"end": 15316,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 15298,
											"end": 15316,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15298,
											"end": 15316,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15291,
											"end": 15321,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C696420726563697065"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "90"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15337,
											"end": 15355,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 15337,
											"end": 15355,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15337,
											"end": 15355,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15330,
											"end": 15374,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15391,
											"end": 15409,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 15391,
											"end": 15409,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5336,
											"end": 5388,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "237"
										},
										{
											"begin": 15077,
											"end": 15415,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5336,
											"end": 5388,
											"name": "tag",
											"source": 13,
											"value": "291"
										},
										{
											"begin": 5336,
											"end": 5388,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5462,
											"end": 5468,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5457,
											"end": 5874,
											"name": "tag",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 5457,
											"end": 5874,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5478,
											"end": 5492,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5478,
											"end": 5492,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5478,
											"end": 5499,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5474,
											"end": 5499,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5474,
											"end": 5499,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 5457,
											"end": 5874,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5457,
											"end": 5874,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "295"
										},
										{
											"begin": 5457,
											"end": 5874,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5520,
											"end": 5532,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5559,
											"end": 5565,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5554,
											"end": 5791,
											"name": "tag",
											"source": 13,
											"value": "297"
										},
										{
											"begin": 5554,
											"end": 5791,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5583,
											"end": 5593,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 5575,
											"end": 5594,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5575,
											"end": 5594,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5575,
											"end": 5594,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5575,
											"end": 5594,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5575,
											"end": 5582,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 5575,
											"end": 5594,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5575,
											"end": 5594,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5575,
											"end": 5594,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5575,
											"end": 5594,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5575,
											"end": 5594,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 5575,
											"end": 5604,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 5575,
											"end": 5604,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5575,
											"end": 5611,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 5571,
											"end": 5611,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5571,
											"end": 5611,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 5554,
											"end": 5791,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5554,
											"end": 5791,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "298"
										},
										{
											"begin": 5554,
											"end": 5791,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5676,
											"end": 5690,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5676,
											"end": 5690,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5691,
											"end": 5692,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5691,
											"end": 5692,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "301"
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "301"
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 5676,
											"end": 5693,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "tag",
											"source": 13,
											"value": "301"
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5676,
											"end": 5693,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5640,
											"end": 5647,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 5640,
											"end": 5659,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5648,
											"end": 5658,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5640,
											"end": 5659,
											"name": "AND",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5640,
											"end": 5659,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5640,
											"end": 5659,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5640,
											"end": 5659,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5640,
											"end": 5659,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5640,
											"end": 5659,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5640,
											"end": 5659,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5640,
											"end": 5659,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5640,
											"end": 5659,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5640,
											"end": 5659,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5640,
											"end": 5659,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5640,
											"end": 5659,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5640,
											"end": 5659,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 5640,
											"end": 5669,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 5640,
											"end": 5669,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5670,
											"end": 5671,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5640,
											"end": 5672,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5640,
											"end": 5672,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 5640,
											"end": 5672,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5640,
											"end": 5672,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 5640,
											"end": 5672,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 5640,
											"end": 5672,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5640,
											"end": 5672,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 5640,
											"end": 5672,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 5640,
											"end": 5672,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5640,
											"end": 5672,
											"name": "tag",
											"source": 13,
											"value": "303"
										},
										{
											"begin": 5640,
											"end": 5672,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5640,
											"end": 5672,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5640,
											"end": 5672,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5640,
											"end": 5672,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5640,
											"end": 5672,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5640,
											"end": 5672,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5640,
											"end": 5672,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 5640,
											"end": 5672,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5640,
											"end": 5672,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 5640,
											"end": 5693,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5636,
											"end": 5777,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "305"
										},
										{
											"begin": 5636,
											"end": 5777,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5727,
											"end": 5731,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 5717,
											"end": 5731,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5717,
											"end": 5731,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5753,
											"end": 5758,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "298"
										},
										{
											"begin": 5753,
											"end": 5758,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5636,
											"end": 5777,
											"name": "tag",
											"source": 13,
											"value": "305"
										},
										{
											"begin": 5636,
											"end": 5777,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5613,
											"end": 5616,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 5613,
											"end": 5616,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5554,
											"end": 5791,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "297"
										},
										{
											"begin": 5554,
											"end": 5791,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5554,
											"end": 5791,
											"name": "tag",
											"source": 13,
											"value": "298"
										},
										{
											"begin": 5554,
											"end": 5791,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5554,
											"end": 5791,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5812,
											"end": 5819,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5804,
											"end": 5863,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "306"
										},
										{
											"begin": 5804,
											"end": 5863,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5804,
											"end": 5863,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5804,
											"end": 5863,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5804,
											"end": 5863,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5804,
											"end": 5863,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 15622,
											"end": 15624,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5804,
											"end": 5863,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5804,
											"end": 5863,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5804,
											"end": 5863,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 15604,
											"end": 15625,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15661,
											"end": 15663,
											"name": "PUSH",
											"source": 14,
											"value": "27"
										},
										{
											"begin": 15641,
											"end": 15659,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 15641,
											"end": 15659,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15641,
											"end": 15659,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15634,
											"end": 15664,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15700,
											"end": 15734,
											"name": "PUSH",
											"source": 14,
											"value": "506C6179657220646F6573206E6F74206861766520616C6C2072657175697265"
										},
										{
											"begin": 15680,
											"end": 15698,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 15680,
											"end": 15698,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15680,
											"end": 15698,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15673,
											"end": 15735,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "64206974656D73"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "C8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15751,
											"end": 15769,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 15751,
											"end": 15769,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 15751,
											"end": 15769,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 15744,
											"end": 15781,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 15798,
											"end": 15817,
											"name": "PUSH",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 15798,
											"end": 15817,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5804,
											"end": 5863,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "237"
										},
										{
											"begin": 15420,
											"end": 15823,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5804,
											"end": 5863,
											"name": "tag",
											"source": 13,
											"value": "306"
										},
										{
											"begin": 5804,
											"end": 5863,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5501,
											"end": 5504,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 5501,
											"end": 5504,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5457,
											"end": 5874,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "294"
										},
										{
											"begin": 5457,
											"end": 5874,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5457,
											"end": 5874,
											"name": "tag",
											"source": 13,
											"value": "295"
										},
										{
											"begin": 5457,
											"end": 5874,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5457,
											"end": 5874,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5950,
											"end": 5956,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5945,
											"end": 6404,
											"name": "tag",
											"source": 13,
											"value": "309"
										},
										{
											"begin": 5945,
											"end": 6404,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5966,
											"end": 5980,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5966,
											"end": 5980,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5966,
											"end": 5987,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5962,
											"end": 5987,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5962,
											"end": 5987,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 5945,
											"end": 6404,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5945,
											"end": 6404,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "310"
										},
										{
											"begin": 5945,
											"end": 6404,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6013,
											"end": 6019,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6008,
											"end": 6394,
											"name": "tag",
											"source": 13,
											"value": "312"
										},
										{
											"begin": 6008,
											"end": 6394,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6037,
											"end": 6047,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 6029,
											"end": 6048,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6029,
											"end": 6048,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6029,
											"end": 6048,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6029,
											"end": 6048,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6029,
											"end": 6036,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 6029,
											"end": 6048,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6029,
											"end": 6048,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6029,
											"end": 6048,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6029,
											"end": 6048,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6029,
											"end": 6048,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 6029,
											"end": 6058,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 6029,
											"end": 6058,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6029,
											"end": 6065,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 6025,
											"end": 6065,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6025,
											"end": 6065,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 6008,
											"end": 6394,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 6008,
											"end": 6394,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "313"
										},
										{
											"begin": 6008,
											"end": 6394,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6130,
											"end": 6144,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6130,
											"end": 6144,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6130,
											"end": 6147,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6130,
											"end": 6147,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6145,
											"end": 6146,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6145,
											"end": 6146,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6130,
											"end": 6147,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6130,
											"end": 6147,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 6130,
											"end": 6147,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "316"
										},
										{
											"begin": 6130,
											"end": 6147,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6130,
											"end": 6147,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "316"
										},
										{
											"begin": 6130,
											"end": 6147,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 6130,
											"end": 6147,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6130,
											"end": 6147,
											"name": "tag",
											"source": 13,
											"value": "316"
										},
										{
											"begin": 6130,
											"end": 6147,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6130,
											"end": 6147,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6130,
											"end": 6147,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 6130,
											"end": 6147,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6130,
											"end": 6147,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6130,
											"end": 6147,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6130,
											"end": 6147,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6094,
											"end": 6101,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6102,
											"end": 6112,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "AND",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6094,
											"end": 6113,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 6094,
											"end": 6123,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 6094,
											"end": 6123,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6124,
											"end": 6125,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6094,
											"end": 6126,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6094,
											"end": 6126,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 6094,
											"end": 6126,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6094,
											"end": 6126,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 6094,
											"end": 6126,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "318"
										},
										{
											"begin": 6094,
											"end": 6126,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6094,
											"end": 6126,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "318"
										},
										{
											"begin": 6094,
											"end": 6126,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 6094,
											"end": 6126,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6094,
											"end": 6126,
											"name": "tag",
											"source": 13,
											"value": "318"
										},
										{
											"begin": 6094,
											"end": 6126,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6094,
											"end": 6126,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6094,
											"end": 6126,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6094,
											"end": 6126,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6094,
											"end": 6126,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6094,
											"end": 6126,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6094,
											"end": 6126,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 6094,
											"end": 6126,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6094,
											"end": 6126,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 6094,
											"end": 6147,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6090,
											"end": 6380,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "320"
										},
										{
											"begin": 6090,
											"end": 6380,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6214,
											"end": 6224,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 6206,
											"end": 6225,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6206,
											"end": 6225,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6206,
											"end": 6225,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6206,
											"end": 6225,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6206,
											"end": 6213,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 6206,
											"end": 6225,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6206,
											"end": 6225,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6206,
											"end": 6225,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6206,
											"end": 6225,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6206,
											"end": 6225,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 6206,
											"end": 6235,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 6206,
											"end": 6235,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6236,
											"end": 6272,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6236,
											"end": 6272,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 6236,
											"end": 6276,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "321"
										},
										{
											"begin": 6236,
											"end": 6276,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6275,
											"end": 6276,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 6275,
											"end": 6276,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6236,
											"end": 6276,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "322"
										},
										{
											"begin": 6236,
											"end": 6276,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6236,
											"end": 6276,
											"name": "tag",
											"source": 13,
											"value": "321"
										},
										{
											"begin": 6236,
											"end": 6276,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6206,
											"end": 6277,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6206,
											"end": 6277,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 6206,
											"end": 6277,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6206,
											"end": 6277,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 6206,
											"end": 6277,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "324"
										},
										{
											"begin": 6206,
											"end": 6277,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6206,
											"end": 6277,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "324"
										},
										{
											"begin": 6206,
											"end": 6277,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 6206,
											"end": 6277,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6206,
											"end": 6277,
											"name": "tag",
											"source": 13,
											"value": "324"
										},
										{
											"begin": 6206,
											"end": 6277,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6206,
											"end": 6277,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6206,
											"end": 6277,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6206,
											"end": 6277,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6206,
											"end": 6277,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6206,
											"end": 6277,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6206,
											"end": 6277,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6206,
											"end": 6277,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6206,
											"end": 6277,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 6206,
											"end": 6277,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6206,
											"end": 6277,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6206,
											"end": 6277,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6206,
											"end": 6277,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 6179,
											"end": 6189,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 6171,
											"end": 6190,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6171,
											"end": 6190,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6171,
											"end": 6178,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 6171,
											"end": 6190,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6171,
											"end": 6190,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6171,
											"end": 6190,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6171,
											"end": 6190,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6171,
											"end": 6190,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6171,
											"end": 6190,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6171,
											"end": 6190,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 6171,
											"end": 6200,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 6171,
											"end": 6200,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6171,
											"end": 6203,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6171,
											"end": 6203,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 6201,
											"end": 6202,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6201,
											"end": 6202,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6171,
											"end": 6203,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6171,
											"end": 6203,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 6171,
											"end": 6203,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 6171,
											"end": 6203,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6171,
											"end": 6203,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 6171,
											"end": 6203,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 6171,
											"end": 6203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6171,
											"end": 6203,
											"name": "tag",
											"source": 13,
											"value": "327"
										},
										{
											"begin": 6171,
											"end": 6203,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6171,
											"end": 6203,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6171,
											"end": 6203,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6171,
											"end": 6203,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6171,
											"end": 6203,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6171,
											"end": 6203,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6171,
											"end": 6203,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6171,
											"end": 6203,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6171,
											"end": 6203,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 6171,
											"end": 6203,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6171,
											"end": 6203,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6171,
											"end": 6203,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6171,
											"end": 6277,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6171,
											"end": 6277,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6171,
											"end": 6277,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6171,
											"end": 6277,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 6307,
											"end": 6317,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 6299,
											"end": 6318,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6299,
											"end": 6318,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6299,
											"end": 6306,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 6299,
											"end": 6318,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6299,
											"end": 6318,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6299,
											"end": 6318,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6299,
											"end": 6318,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6299,
											"end": 6318,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6299,
											"end": 6318,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 6299,
											"end": 6328,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 6299,
											"end": 6328,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6299,
											"end": 6334,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6299,
											"end": 6334,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 6299,
											"end": 6334,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6299,
											"end": 6334,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "330"
										},
										{
											"begin": 6299,
											"end": 6334,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6299,
											"end": 6334,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "330"
										},
										{
											"begin": 6299,
											"end": 6334,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "331"
										},
										{
											"begin": 6299,
											"end": 6334,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6299,
											"end": 6334,
											"name": "tag",
											"source": 13,
											"value": "330"
										},
										{
											"begin": 6299,
											"end": 6334,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6299,
											"end": 6334,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 6299,
											"end": 6334,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6299,
											"end": 6334,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6299,
											"end": 6334,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6299,
											"end": 6334,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6299,
											"end": 6334,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6299,
											"end": 6334,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6299,
											"end": 6334,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6299,
											"end": 6334,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6299,
											"end": 6334,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6299,
											"end": 6334,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 6299,
											"end": 6334,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6299,
											"end": 6334,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6299,
											"end": 6334,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6299,
											"end": 6334,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 6299,
											"end": 6334,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6299,
											"end": 6334,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 6356,
											"end": 6361,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "313"
										},
										{
											"begin": 6356,
											"end": 6361,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6090,
											"end": 6380,
											"name": "tag",
											"source": 13,
											"value": "320"
										},
										{
											"begin": 6090,
											"end": 6380,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6067,
											"end": 6070,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 6067,
											"end": 6070,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6008,
											"end": 6394,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "312"
										},
										{
											"begin": 6008,
											"end": 6394,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6008,
											"end": 6394,
											"name": "tag",
											"source": 13,
											"value": "313"
										},
										{
											"begin": 6008,
											"end": 6394,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5989,
											"end": 5992,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 5989,
											"end": 5992,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5945,
											"end": 6404,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "309"
										},
										{
											"begin": 5945,
											"end": 6404,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5945,
											"end": 6404,
											"name": "tag",
											"source": 13,
											"value": "310"
										},
										{
											"begin": 5945,
											"end": 6404,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6480,
											"end": 6490,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 6472,
											"end": 6491,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 6472,
											"end": 6491,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6472,
											"end": 6491,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6472,
											"end": 6491,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6472,
											"end": 6479,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 6472,
											"end": 6491,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6472,
											"end": 6491,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6472,
											"end": 6491,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6472,
											"end": 6491,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6472,
											"end": 6491,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6472,
											"end": 6491,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6472,
											"end": 6491,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 6507,
											"end": 6526,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 6507,
											"end": 6526,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6507,
											"end": 6526,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6507,
											"end": 6526,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6472,
											"end": 6501,
											"name": "PUSH",
											"source": 13,
											"value": "8"
										},
										{
											"begin": 6472,
											"end": 6501,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6472,
											"end": 6501,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 6472,
											"end": 6501,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6472,
											"end": 6527,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6472,
											"end": 6527,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 6472,
											"end": 6527,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 6472,
											"end": 6527,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6472,
											"end": 6527,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6472,
											"end": 6527,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6472,
											"end": 6527,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 6472,
											"end": 6527,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6472,
											"end": 6527,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 6472,
											"end": 6527,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6472,
											"end": 6527,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6472,
											"end": 6527,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 6472,
											"end": 6527,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6472,
											"end": 6527,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5235,
											"end": 6534,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2508,
											"end": 2579,
											"name": "tag",
											"source": 13,
											"value": "113"
										},
										{
											"begin": 2508,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9B87106A812D214D41AD9B68A21119E2948EAAF1040375C939EC808B8862455C"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "335"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2564,
											"end": 2572,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "233"
										},
										{
											"begin": 2564,
											"end": 2570,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "338"
										},
										{
											"begin": 2564,
											"end": 2572,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3809,
											"end": 3813,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "B3DA67D1B252AEAB7C8063542D95E75F82A5307A82535949BC38F7CF7BA8897F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "tag",
											"source": 13,
											"value": "127"
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "341"
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 1695,
											"end": 1734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "tag",
											"source": 13,
											"value": "341"
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 1695,
											"end": 1734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "tag",
											"source": 13,
											"value": "343"
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "344"
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "345"
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "344"
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "tag",
											"source": 13,
											"value": "345"
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "tag",
											"source": 13,
											"value": "346"
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "346"
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "tag",
											"source": 13,
											"value": "344"
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1695,
											"end": 1734,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4987,
											"end": 5229,
											"name": "tag",
											"source": 13,
											"value": "134"
										},
										{
											"begin": 4987,
											"end": 5229,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "3059375685003C5C33343043CB51F6C6B03E849D5B2F19339E935F8B505D9FE3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5115,
											"end": 5144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5115,
											"end": 5144,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5115,
											"end": 5144,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5115,
											"end": 5144,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5115,
											"end": 5144,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5115,
											"end": 5144,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5115,
											"end": 5144,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5115,
											"end": 5144,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5115,
											"end": 5144,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5115,
											"end": 5144,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5115,
											"end": 5144,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5115,
											"end": 5144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5115,
											"end": 5144,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5115,
											"end": 5144,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5115,
											"end": 5144,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5115,
											"end": 5144,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 5115,
											"end": 5144,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5115,
											"end": 5144,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5099,
											"end": 5111,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 5099,
											"end": 5111,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5091,
											"end": 5112,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5091,
											"end": 5112,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5091,
											"end": 5112,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5091,
											"end": 5098,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "7"
										},
										{
											"begin": 5091,
											"end": 5112,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5091,
											"end": 5112,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 5091,
											"end": 5112,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5091,
											"end": 5112,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5091,
											"end": 5112,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5091,
											"end": 5112,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 5091,
											"end": 5144,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5091,
											"end": 5144,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5091,
											"end": 5144,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5091,
											"end": 5144,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5115,
											"end": 5144,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5115,
											"end": 5144,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 5091,
											"end": 5112,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5091,
											"end": 5112,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5091,
											"end": 5144,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "350"
										},
										{
											"begin": 5091,
											"end": 5144,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5091,
											"end": 5112,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5091,
											"end": 5112,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 5091,
											"end": 5144,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5091,
											"end": 5144,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5091,
											"end": 5144,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "247"
										},
										{
											"begin": 5091,
											"end": 5144,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5091,
											"end": 5144,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "350"
										},
										{
											"begin": 5091,
											"end": 5144,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5091,
											"end": 5144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 5091,
											"end": 5144,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5091,
											"end": 5144,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5091,
											"end": 5144,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5091,
											"end": 5144,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5091,
											"end": 5144,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 5091,
											"end": 5144,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5091,
											"end": 5144,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5091,
											"end": 5144,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 5091,
											"end": 5144,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 5171,
											"end": 5183,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 5159,
											"end": 5198,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5159,
											"end": 5198,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5159,
											"end": 5198,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 16267,
											"end": 16292,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16267,
											"end": 16292,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16267,
											"end": 16292,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 16308,
											"end": 16326,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 16308,
											"end": 16326,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16308,
											"end": 16326,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16301,
											"end": 16335,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 16301,
											"end": 16335,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 16301,
											"end": 16335,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5159,
											"end": 5198,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "9BECFD2B1FC8127387C5B0002A6CBC8382E6C8FB9F76DFD6CFD92CBE94383D0E"
										},
										{
											"begin": 5159,
											"end": 5198,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 16240,
											"end": 16258,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5159,
											"end": 5198,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5159,
											"end": 5198,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5159,
											"end": 5198,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5159,
											"end": 5198,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5159,
											"end": 5198,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 5159,
											"end": 5198,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5159,
											"end": 5198,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 13
										},
										{
											"begin": 5208,
											"end": 5220,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 5208,
											"end": 5222,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5208,
											"end": 5222,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 5208,
											"end": 5222,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5208,
											"end": 5220,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 5208,
											"end": 5222,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 5208,
											"end": 5222,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 5208,
											"end": 5222,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "223"
										},
										{
											"begin": 5208,
											"end": 5222,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5208,
											"end": 5222,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "353"
										},
										{
											"begin": 5208,
											"end": 5222,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5208,
											"end": 5222,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 5208,
											"end": 5222,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 5208,
											"end": 5222,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5208,
											"end": 5222,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": 5208,
											"end": 5222,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4987,
											"end": 5229,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4987,
											"end": 5229,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4987,
											"end": 5229,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4987,
											"end": 5229,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "tag",
											"source": 13,
											"value": "147"
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 1555,
											"end": 1589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "tag",
											"source": 13,
											"value": "354"
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "355"
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 1555,
											"end": 1589,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "tag",
											"source": 13,
											"value": "355"
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "356"
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "357"
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "356"
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "tag",
											"source": 13,
											"value": "357"
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "tag",
											"source": 13,
											"value": "358"
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "358"
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "tag",
											"source": 13,
											"value": "356"
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"name": "DUP7",
											"source": 13
										},
										{
											"begin": 1555,
											"end": 1589,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2115,
											"end": 2502,
											"name": "tag",
											"source": 13,
											"value": "154"
										},
										{
											"begin": 2115,
											"end": 2502,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "PUSH",
											"source": 1,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4760,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "tag",
											"source": 1,
											"value": "362"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4787,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4790,
											"end": 4801,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4805,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4818,
											"end": 4822,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4840,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "tag",
											"source": 1,
											"value": "363"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4856,
											"end": 4868,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4868,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4872,
											"end": 4885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "tag",
											"source": 1,
											"value": "364"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F92EE8A9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "tag",
											"source": 1,
											"value": "365"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4968,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "tag",
											"source": 1,
											"value": "366"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2237,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 2220,
											"end": 2235,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "369"
										},
										{
											"begin": 2220,
											"end": 2237,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2220,
											"end": 2237,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "368"
										},
										{
											"begin": 2220,
											"end": 2237,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2247,
											"end": 2269,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "370"
										},
										{
											"begin": 2247,
											"end": 2267,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "371"
										},
										{
											"begin": 2247,
											"end": 2269,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2247,
											"end": 2269,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "370"
										},
										{
											"begin": 2247,
											"end": 2269,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2279,
											"end": 2303,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 2279,
											"end": 2301,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "371"
										},
										{
											"begin": 2279,
											"end": 2303,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2279,
											"end": 2303,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "372"
										},
										{
											"begin": 2279,
											"end": 2303,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2314,
											"end": 2358,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "374"
										},
										{
											"begin": 2362,
											"end": 2366,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2345,
											"end": 2357,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 2314,
											"end": 2324,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "214"
										},
										{
											"begin": 2314,
											"end": 2358,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2314,
											"end": 2358,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "374"
										},
										{
											"begin": 2314,
											"end": 2358,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2314,
											"end": 2358,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2368,
											"end": 2399,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "375"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9B87106A812D214D41AD9B68A21119E2948EAAF1040375C939EC808B8862455C"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2392,
											"end": 2398,
											"modifierDepth": 1,
											"name": "DUP9",
											"source": 13
										},
										{
											"begin": 2368,
											"end": 2378,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "214"
										},
										{
											"begin": 2368,
											"end": 2399,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2368,
											"end": 2399,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "375"
										},
										{
											"begin": 2368,
											"end": 2399,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2368,
											"end": 2399,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2409,
											"end": 2444,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "376"
										},
										{
											"begin": 661,
											"end": 687,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 13,
											"value": "189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3"
										},
										{
											"begin": 2435,
											"end": 2443,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 13
										},
										{
											"begin": 2409,
											"end": 2419,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "214"
										},
										{
											"begin": 2409,
											"end": 2444,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2409,
											"end": 2444,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "376"
										},
										{
											"begin": 2409,
											"end": 2444,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2409,
											"end": 2444,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2454,
											"end": 2495,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "377"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "3059375685003C5C33343043CB51F6C6B03E849D5B2F19339E935F8B505D9FE3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2482,
											"end": 2494,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 13
										},
										{
											"begin": 2454,
											"end": 2464,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "214"
										},
										{
											"begin": 2454,
											"end": 2495,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 2454,
											"end": 2495,
											"modifierDepth": 1,
											"name": "tag",
											"source": 13,
											"value": "377"
										},
										{
											"begin": 2454,
											"end": 2495,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 2454,
											"end": 2495,
											"modifierDepth": 1,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 5070,
											"end": 5084,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 16499,
											"end": 16549,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 16499,
											"end": 16549,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 16487,
											"end": 16489,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 16472,
											"end": 16490,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "tag",
											"source": 1,
											"value": "378"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2115,
											"end": 2502,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2115,
											"end": 2502,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2115,
											"end": 2502,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 2115,
											"end": 2502,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "tag",
											"source": 13,
											"value": "159"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "381"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "tag",
											"source": 13,
											"value": "381"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 1642,
											"end": 1689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "tag",
											"source": 13,
											"value": "383"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "384"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 1642,
											"end": 1689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "tag",
											"source": 13,
											"value": "384"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "385"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "386"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "385"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "tag",
											"source": 13,
											"value": "386"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "tag",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "387"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "tag",
											"source": 13,
											"value": "385"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "388"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 1642,
											"end": 1689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "tag",
											"source": 13,
											"value": "388"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "389"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "342"
										},
										{
											"begin": 1642,
											"end": 1689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "tag",
											"source": 13,
											"value": "389"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "390"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "391"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "PUSH",
											"source": 13,
											"value": "100"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "DIV",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "MUL",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "390"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "tag",
											"source": 13,
											"value": "391"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "tag",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "GT",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "392"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "tag",
											"source": 13,
											"value": "390"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "PUSH",
											"source": 13,
											"value": "3"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "SWAP4",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "SWAP3",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "PUSH",
											"source": 13,
											"value": "FF"
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1642,
											"end": 1689,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 1642,
											"end": 1689,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "tag",
											"source": 0,
											"value": "165"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5737,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 5750,
											"end": 5754,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5737,
											"end": 5749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 5737,
											"end": 5755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5737,
											"end": 5755,
											"name": "tag",
											"source": 0,
											"value": "393"
										},
										{
											"begin": 5737,
											"end": 5755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "395"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5767,
											"end": 5793,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 5779,
											"end": 5783,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5785,
											"end": 5792,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5767,
											"end": 5778,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 5767,
											"end": 5793,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4981,
											"name": "tag",
											"source": 13,
											"value": "175"
										},
										{
											"begin": 4469,
											"end": 4981,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4530,
											"end": 4544,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4547,
											"end": 4564,
											"name": "PUSH",
											"source": 13,
											"value": "6"
										},
										{
											"begin": 4565,
											"end": 4574,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4547,
											"end": 4575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4547,
											"end": 4575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4547,
											"end": 4575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 4547,
											"end": 4575,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4547,
											"end": 4575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4547,
											"end": 4575,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "197"
										},
										{
											"begin": 4547,
											"end": 4575,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4547,
											"end": 4575,
											"name": "tag",
											"source": 13,
											"value": "399"
										},
										{
											"begin": 4547,
											"end": 4575,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4547,
											"end": 4575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4547,
											"end": 4575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4547,
											"end": 4575,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4547,
											"end": 4575,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4547,
											"end": 4575,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4547,
											"end": 4575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4547,
											"end": 4575,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4547,
											"end": 4575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4547,
											"end": 4575,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4547,
											"end": 4575,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4547,
											"end": 4575,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4547,
											"end": 4575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4547,
											"end": 4575,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4547,
											"end": 4575,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4547,
											"end": 4575,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4547,
											"end": 4575,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4547,
											"end": 4575,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4585,
											"end": 4638,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 4585,
											"end": 4638,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4585,
											"end": 4638,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4585,
											"end": 4638,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4585,
											"end": 4638,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4585,
											"end": 4638,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 16762,
											"end": 16764,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4585,
											"end": 4638,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4585,
											"end": 4638,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4585,
											"end": 4638,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 16744,
											"end": 16765,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 16801,
											"end": 16803,
											"name": "PUSH",
											"source": 14,
											"value": "14"
										},
										{
											"begin": 16781,
											"end": 16799,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 16781,
											"end": 16799,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16781,
											"end": 16799,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16774,
											"end": 16804,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "11DD5A5B1908191BD95CC81B9BDD08195E1A5CDD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 16820,
											"end": 16838,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 16820,
											"end": 16838,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 16820,
											"end": 16838,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 16813,
											"end": 16863,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 16880,
											"end": 16898,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 16880,
											"end": 16898,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4585,
											"end": 4638,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "237"
										},
										{
											"begin": 16560,
											"end": 16904,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4585,
											"end": 4638,
											"name": "tag",
											"source": 13,
											"value": "400"
										},
										{
											"begin": 4585,
											"end": 4638,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4755,
											"end": 4769,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4755,
											"end": 4769,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4733,
											"end": 4752,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4755,
											"end": 4769,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4755,
											"end": 4769,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4755,
											"end": 4769,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4755,
											"end": 4761,
											"name": "PUSH",
											"source": 13,
											"value": "5"
										},
										{
											"begin": 4755,
											"end": 4769,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4755,
											"end": 4769,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4755,
											"end": 4769,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4755,
											"end": 4769,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4755,
											"end": 4769,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4755,
											"end": 4769,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4779,
											"end": 4934,
											"name": "tag",
											"source": 13,
											"value": "403"
										},
										{
											"begin": 4779,
											"end": 4934,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4800,
											"end": 4813,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 4800,
											"end": 4813,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4800,
											"end": 4813,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4800,
											"end": 4820,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4796,
											"end": 4820,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4796,
											"end": 4820,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 4779,
											"end": 4934,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 4779,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 4779,
											"end": 4934,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4869,
											"end": 4879,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4849,
											"end": 4879,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4849,
											"end": 4854,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4849,
											"end": 4862,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 4849,
											"end": 4862,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4863,
											"end": 4864,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4849,
											"end": 4865,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4849,
											"end": 4865,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4849,
											"end": 4865,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4849,
											"end": 4865,
											"name": "LT",
											"source": 13
										},
										{
											"begin": 4849,
											"end": 4865,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 4849,
											"end": 4865,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4849,
											"end": 4865,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 4849,
											"end": 4865,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "194"
										},
										{
											"begin": 4849,
											"end": 4865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4849,
											"end": 4865,
											"name": "tag",
											"source": 13,
											"value": "407"
										},
										{
											"begin": 4849,
											"end": 4865,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4849,
											"end": 4865,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4849,
											"end": 4865,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4849,
											"end": 4865,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4849,
											"end": 4865,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4849,
											"end": 4865,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4849,
											"end": 4865,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4849,
											"end": 4865,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4849,
											"end": 4865,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4849,
											"end": 4865,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4849,
											"end": 4865,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4849,
											"end": 4865,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4849,
											"end": 4879,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4841,
											"end": 4923,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "409"
										},
										{
											"begin": 4841,
											"end": 4923,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4841,
											"end": 4923,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4841,
											"end": 4923,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4841,
											"end": 4923,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4841,
											"end": 4923,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 17111,
											"end": 17113,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4841,
											"end": 4923,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 4841,
											"end": 4923,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4841,
											"end": 4923,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 17093,
											"end": 17114,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 17150,
											"end": 17152,
											"name": "PUSH",
											"source": 14,
											"value": "27"
										},
										{
											"begin": 17130,
											"end": 17148,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 17130,
											"end": 17148,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17130,
											"end": 17148,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17123,
											"end": 17153,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 17189,
											"end": 17223,
											"name": "PUSH",
											"source": 14,
											"value": "53656E64657220697320616C72656164792061206D656D626572206F66207468"
										},
										{
											"begin": 17169,
											"end": 17187,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 17169,
											"end": 17187,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17169,
											"end": 17187,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17162,
											"end": 17224,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "194819DD5A5B19"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "CA"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 17240,
											"end": 17258,
											"name": "PUSH",
											"source": 14,
											"value": "64"
										},
										{
											"begin": 17240,
											"end": 17258,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17240,
											"end": 17258,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17233,
											"end": 17270,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 17287,
											"end": 17306,
											"name": "PUSH",
											"source": 14,
											"value": "84"
										},
										{
											"begin": 17287,
											"end": 17306,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4841,
											"end": 4923,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "237"
										},
										{
											"begin": 16909,
											"end": 17312,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4841,
											"end": 4923,
											"name": "tag",
											"source": 13,
											"value": "409"
										},
										{
											"begin": 4841,
											"end": 4923,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4822,
											"end": 4825,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 4822,
											"end": 4825,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4779,
											"end": 4934,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "403"
										},
										{
											"begin": 4779,
											"end": 4934,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4779,
											"end": 4934,
											"name": "tag",
											"source": 13,
											"value": "404"
										},
										{
											"begin": 4779,
											"end": 4934,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4944,
											"end": 4957,
											"name": "PUSH",
											"source": 13,
											"value": "2"
										},
										{
											"begin": 4944,
											"end": 4957,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4944,
											"end": 4974,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4944,
											"end": 4974,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": 4944,
											"end": 4974,
											"name": "PUSH",
											"source": 13,
											"value": "1"
										},
										{
											"begin": 4944,
											"end": 4974,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4944,
											"end": 4974,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4944,
											"end": 4974,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4944,
											"end": 4974,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 4944,
											"end": 4974,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4944,
											"end": 4974,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4944,
											"end": 4974,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4944,
											"end": 4974,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4944,
											"end": 4974,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4944,
											"end": 4974,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4944,
											"end": 4974,
											"name": "KECCAK256",
											"source": 13
										},
										{
											"begin": 4944,
											"end": 4974,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4944,
											"end": 4974,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4944,
											"end": 4974,
											"name": "SLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4944,
											"end": 4974,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4963,
											"end": 4973,
											"name": "CALLER",
											"source": 13
										},
										{
											"begin": 4944,
											"end": 4974,
											"name": "OR",
											"source": 13
										},
										{
											"begin": 4944,
											"end": 4974,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4944,
											"end": 4974,
											"name": "SSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4469,
											"end": 4981,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4148,
											"end": 4251,
											"name": "tag",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 4148,
											"end": 4251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "233"
										},
										{
											"begin": 4225,
											"end": 4229,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 4214,
											"end": 4224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 4214,
											"end": 4244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7270,
											"end": 7657,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 7270,
											"end": 7657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7351,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "B3DA67D1B252AEAB7C8063542D95E75F82A5307A82535949BC38F7CF7BA8897F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 7437,
											"end": 7459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "421"
										},
										{
											"begin": 7445,
											"end": 7449,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7451,
											"end": 7458,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7437,
											"end": 7444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 7437,
											"end": 7459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7437,
											"end": 7459,
											"name": "tag",
											"source": 0,
											"value": "421"
										},
										{
											"begin": 7437,
											"end": 7459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7432,
											"end": 7651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "422"
										},
										{
											"begin": 7432,
											"end": 7651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7483,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7509,
											"end": 7513,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7559,
											"end": 7571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "423"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 966,
											"end": 976,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 887,
											"end": 983,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7559,
											"end": 7571,
											"name": "tag",
											"source": 0,
											"value": "423"
										},
										{
											"begin": 7559,
											"end": 7571,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7557,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7544,
											"end": 7548,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7597,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7586,
											"end": 7597,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7586,
											"end": 7597,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7586,
											"end": 7597,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7586,
											"end": 7597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 7586,
											"end": 7597,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7432,
											"end": 7651,
											"name": "tag",
											"source": 0,
											"value": "422"
										},
										{
											"begin": 7432,
											"end": 7651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7635,
											"end": 7640,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7628,
											"end": 7640,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7628,
											"end": 7640,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7628,
											"end": 7640,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7628,
											"end": 7640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 7628,
											"end": 7640,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7892,
											"end": 8280,
											"name": "tag",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 7892,
											"end": 8280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7970,
											"end": 7974,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "B3DA67D1B252AEAB7C8063542D95E75F82A5307A82535949BC38F7CF7BA8897F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 8059,
											"end": 8081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "428"
										},
										{
											"begin": 8067,
											"end": 8071,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8073,
											"end": 8080,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 8059,
											"end": 8081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8081,
											"name": "tag",
											"source": 0,
											"value": "428"
										},
										{
											"begin": 8059,
											"end": 8081,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8055,
											"end": 8274,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8055,
											"end": 8274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "422"
										},
										{
											"begin": 8055,
											"end": 8274,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8131,
											"end": 8136,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8136,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8136,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8097,
											"end": 8136,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8136,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8136,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8155,
											"end": 8195,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 966,
											"end": 976,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8155,
											"end": 8195,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 8155,
											"end": 8195,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8131,
											"end": 8136,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8155,
											"end": 8195,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 8216,
											"end": 8220,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8209,
											"end": 8220,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8209,
											"end": 8220,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8209,
											"end": 8220,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8209,
											"end": 8220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "186"
										},
										{
											"begin": 8209,
											"end": 8220,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3674,
											"end": 3852,
											"name": "tag",
											"source": 4,
											"value": "234"
										},
										{
											"begin": 3674,
											"end": 3852,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2563,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "433"
										},
										{
											"begin": 2563,
											"end": 2577,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "434"
										},
										{
											"begin": 2563,
											"end": 2579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2563,
											"end": 2579,
											"name": "tag",
											"source": 4,
											"value": "433"
										},
										{
											"begin": 2563,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "C0C65A3718F3702D917C44106B91645B509D2E2D0979B70495C3BABCE192339F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3791,
											"end": 3808,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3791,
											"end": 3808,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3791,
											"end": 3808,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3791,
											"end": 3808,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 3832,
											"end": 3844,
											"modifierDepth": 1,
											"name": "tag",
											"source": 4,
											"value": "437"
										},
										{
											"begin": 3832,
											"end": 3844,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3823,
											"end": 3845,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17481,
											"end": 17513,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 17481,
											"end": 17513,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17481,
											"end": 17513,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 17463,
											"end": 17514,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 17463,
											"end": 17514,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 17451,
											"end": 17453,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 17436,
											"end": 17454,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 4
										},
										{
											"begin": 3722,
											"end": 3852,
											"modifierDepth": 1,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 3674,
											"end": 3852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 4599,
											"end": 4911,
											"name": "tag",
											"source": 2,
											"value": "251"
										},
										{
											"begin": 4599,
											"end": 4911,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4679,
											"end": 4683,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4688,
											"end": 4694,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "636"
										},
										{
											"begin": 4671,
											"end": 4694,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4694,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4694,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "441"
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4785,
											"end": 4791,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "636"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4749,
											"end": 4791,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4749,
											"end": 4781,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "442"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 1957,
											"end": 2095,
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4749,
											"end": 4781,
											"name": "tag",
											"source": 2,
											"value": "442"
										},
										{
											"begin": 4749,
											"end": 4781,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4749,
											"end": 4791,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4749,
											"end": 4791,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4749,
											"end": 4791,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "tag",
											"source": 2,
											"value": "441"
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4905,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "444"
										},
										{
											"begin": 4654,
											"end": 4905,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "703E46DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4905,
											"name": "tag",
											"source": 2,
											"value": "444"
										},
										{
											"begin": 4654,
											"end": 4905,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4599,
											"end": 4911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2666,
											"end": 2764,
											"name": "tag",
											"source": 13,
											"value": "254"
										},
										{
											"begin": 2666,
											"end": 2764,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 661,
											"end": 687,
											"name": "PUSH",
											"source": 13,
											"value": "189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "211"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6052,
											"end": 6590,
											"name": "tag",
											"source": 2,
											"value": "256"
										},
										{
											"begin": 6052,
											"end": 6590,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6169,
											"end": 6186,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6151,
											"end": 6201,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6201,
											"name": "PUSH",
											"source": 2,
											"value": "52D1902D"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "449"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "450"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "451"
										},
										{
											"begin": 6151,
											"end": 6203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "tag",
											"source": 2,
											"value": "450"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "tag",
											"source": 2,
											"value": "449"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6147,
											"end": 6584,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "452"
										},
										{
											"begin": 6147,
											"end": 6584,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4C9C8CE3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17481,
											"end": 17513,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 17481,
											"end": 17513,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 17463,
											"end": 17514,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 17436,
											"end": 17454,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 17436,
											"end": 17454,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 17317,
											"end": 17520,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6147,
											"end": 6584,
											"name": "tag",
											"source": 2,
											"value": "452"
										},
										{
											"begin": 6147,
											"end": 6584,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 6245,
											"end": 6285,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6245,
											"end": 6285,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6241,
											"end": 6361,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "458"
										},
										{
											"begin": 6241,
											"end": 6361,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2A875269"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2206,
											"end": 2231,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2206,
											"end": 2231,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2206,
											"end": 2231,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 2179,
											"end": 2197,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 2179,
											"end": 2197,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "237"
										},
										{
											"begin": 2060,
											"end": 2237,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6241,
											"end": 6361,
											"name": "tag",
											"source": 2,
											"value": "458"
										},
										{
											"begin": 6241,
											"end": 6361,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6374,
											"end": 6428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "228"
										},
										{
											"begin": 6404,
											"end": 6421,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6423,
											"end": 6427,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6374,
											"end": 6403,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "461"
										},
										{
											"begin": 6374,
											"end": 6428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5028,
											"end": 5241,
											"name": "tag",
											"source": 2,
											"value": "277"
										},
										{
											"begin": 5028,
											"end": 5241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5102,
											"end": 5106,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5111,
											"end": 5117,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "636"
										},
										{
											"begin": 5094,
											"end": 5117,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5094,
											"end": 5117,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5090,
											"end": 5235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "444"
										},
										{
											"begin": 5090,
											"end": 5235,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "703E46DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3366,
											"end": 3542,
											"name": "tag",
											"source": 4,
											"value": "338"
										},
										{
											"begin": 3366,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "466"
										},
										{
											"begin": 2316,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "467"
										},
										{
											"begin": 2316,
											"end": 2335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "tag",
											"source": 4,
											"value": "466"
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "C0C65A3718F3702D917C44106B91645B509D2E2D0979B70495C3BABCE192339F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3484,
											"end": 3500,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3484,
											"end": 3500,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3496,
											"end": 3500,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "1"
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "OR",
											"source": 4
										},
										{
											"begin": 3484,
											"end": 3500,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3484,
											"end": 3500,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 4,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 3
										},
										{
											"begin": 3522,
											"end": 3534,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "437"
										},
										{
											"begin": 887,
											"end": 983,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1836,
											"end": 1933,
											"name": "tag",
											"source": 4,
											"value": "369"
										},
										{
											"begin": 1836,
											"end": 1933,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "474"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "474"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1899,
											"end": 1926,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "444"
										},
										{
											"begin": 1899,
											"end": 1924,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "478"
										},
										{
											"begin": 1899,
											"end": 1926,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3231,
											"end": 3296,
											"name": "tag",
											"source": 0,
											"value": "371"
										},
										{
											"begin": 3231,
											"end": 3296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4381,
											"end": 4578,
											"name": "tag",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 4381,
											"end": 4578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "486"
										},
										{
											"begin": 4477,
											"end": 4481,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4483,
											"end": 4490,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 4469,
											"end": 4491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4491,
											"name": "tag",
											"source": 0,
											"value": "486"
										},
										{
											"begin": 4469,
											"end": 4491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4464,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "190"
										},
										{
											"begin": 4464,
											"end": 4572,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2517D3F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17906,
											"end": 17938,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17906,
											"end": 17938,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 17888,
											"end": 17939,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 17955,
											"end": 17973,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 17955,
											"end": 17973,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 17955,
											"end": 17973,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 17948,
											"end": 17982,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 17948,
											"end": 17982,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 17948,
											"end": 17982,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 17861,
											"end": 17879,
											"name": "PUSH",
											"source": 14,
											"value": "44"
										},
										{
											"begin": 17861,
											"end": 17879,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "237"
										},
										{
											"begin": 17714,
											"end": 17988,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3105,
											"end": 3231,
											"name": "tag",
											"source": 4,
											"value": "434"
										},
										{
											"begin": 3105,
											"end": 3231,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "C0C65A3718F3702D917C44106B91645B509D2E2D0979B70495C3BABCE192339F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 3163,
											"end": 3225,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "444"
										},
										{
											"begin": 3163,
											"end": 3225,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8DFC202B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2779,
											"end": 3114,
											"name": "tag",
											"source": 8,
											"value": "461"
										},
										{
											"begin": 2779,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2870,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "497"
										},
										{
											"begin": 2889,
											"end": 2906,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2870,
											"end": 2888,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "498"
										},
										{
											"begin": 2870,
											"end": 2907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2870,
											"end": 2907,
											"name": "tag",
											"source": 8,
											"value": "497"
										},
										{
											"begin": 2870,
											"end": 2907,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "PUSH",
											"source": 8,
											"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "LOG2",
											"source": 8
										},
										{
											"begin": 2964,
											"end": 2975,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2964,
											"end": 2975,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 2964,
											"end": 2979,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "499"
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2995,
											"end": 3048,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "228"
										},
										{
											"begin": 3024,
											"end": 3041,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 3043,
											"end": 3047,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2995,
											"end": 3023,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "501"
										},
										{
											"begin": 2995,
											"end": 3048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "tag",
											"source": 8,
											"value": "499"
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 3079,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "190"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "504"
										},
										{
											"begin": 3079,
											"end": 3097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 2905,
											"end": 3033,
											"name": "tag",
											"source": 4,
											"value": "467"
										},
										{
											"begin": 2905,
											"end": 3033,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "C0C65A3718F3702D917C44106B91645B509D2E2D0979B70495C3BABCE192339F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "PUSH",
											"source": 4,
											"value": "FF"
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2966,
											"end": 3027,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2966,
											"end": 3027,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "444"
										},
										{
											"begin": 2966,
											"end": 3027,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D93C0665"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "PUSH",
											"source": 4,
											"value": "4"
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "tag",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "PUSH",
											"source": 1,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "444"
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1AFCD79F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1939,
											"end": 2095,
											"name": "tag",
											"source": 4,
											"value": "478"
										},
										{
											"begin": 1939,
											"end": 2095,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "513"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "475"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "513"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "C0C65A3718F3702D917C44106B91645B509D2E2D0979B70495C3BABCE192339F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2071,
											"end": 2088,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2071,
											"end": 2088,
											"name": "SLOAD",
											"source": 4
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 2071,
											"end": 2088,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2071,
											"end": 2088,
											"name": "SSTORE",
											"source": 4
										},
										{
											"begin": 1939,
											"end": 2095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2186,
											"end": 2467,
											"name": "tag",
											"source": 8,
											"value": "498"
										},
										{
											"begin": 2186,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 2263,
											"end": 2280,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2263,
											"end": 2292,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2263,
											"end": 2292,
											"name": "EXTCODESIZE",
											"source": 8
										},
										{
											"begin": 2296,
											"end": 2297,
											"name": "PUSH",
											"source": 8,
											"value": "0"
										},
										{
											"begin": 2263,
											"end": 2297,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "518"
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4C9C8CE3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17481,
											"end": 17513,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17481,
											"end": 17513,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "DUP3",
											"source": 8
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 17463,
											"end": 17514,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 17436,
											"end": 17454,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 17436,
											"end": 17454,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "237"
										},
										{
											"begin": 17317,
											"end": 17520,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "tag",
											"source": 8,
											"value": "518"
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "AND",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP3",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "OR",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SSTORE",
											"source": 8
										},
										{
											"begin": 2186,
											"end": 2467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 8
										},
										{
											"begin": 4106,
											"end": 4359,
											"name": "tag",
											"source": 10,
											"value": "501"
										},
										{
											"begin": 4106,
											"end": 4359,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4189,
											"end": 4201,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4214,
											"end": 4226,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4228,
											"end": 4251,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4255,
											"end": 4274,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4275,
											"end": 4279,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "522"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "197"
										},
										{
											"begin": 4255,
											"end": 4280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "tag",
											"source": 10,
											"value": "522"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "GAS",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DELEGATECALL",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "EQ",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "526"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 10,
											"value": "1F"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "NOT",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 10,
											"value": "3F"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATASIZE",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 10,
											"value": "0"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATACOPY",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "525"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "tag",
											"source": 10,
											"value": "526"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "tag",
											"source": 10,
											"value": "525"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4213,
											"end": 4280,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4213,
											"end": 4280,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4213,
											"end": 4280,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 4213,
											"end": 4280,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4297,
											"end": 4352,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "527"
										},
										{
											"begin": 4324,
											"end": 4330,
											"name": "DUP6",
											"source": 10
										},
										{
											"begin": 4332,
											"end": 4339,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4341,
											"end": 4351,
											"name": "DUP4",
											"source": 10
										},
										{
											"begin": 4297,
											"end": 4323,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "528"
										},
										{
											"begin": 4297,
											"end": 4352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4297,
											"end": 4352,
											"name": "tag",
											"source": 10,
											"value": "527"
										},
										{
											"begin": 4297,
											"end": 4352,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4290,
											"end": 4352,
											"name": "SWAP6",
											"source": 10
										},
										{
											"begin": 4106,
											"end": 4359,
											"name": "SWAP5",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4106,
											"end": 4359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 6598,
											"end": 6720,
											"name": "tag",
											"source": 8,
											"value": "504"
										},
										{
											"begin": 6598,
											"end": 6720,
											"name": "JUMPDEST",
											"source": 8
										},
										{
											"begin": 6648,
											"end": 6657,
											"name": "CALLVALUE",
											"source": 8
										},
										{
											"begin": 6648,
											"end": 6661,
											"name": "ISZERO",
											"source": 8
										},
										{
											"begin": 6644,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 8,
											"value": "444"
										},
										{
											"begin": 6644,
											"end": 6714,
											"name": "JUMPI",
											"source": 8
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B398979F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "DUP2",
											"source": 8
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "MSTORE",
											"source": 8
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "PUSH",
											"source": 8,
											"value": "4"
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "ADD",
											"source": 8
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "PUSH",
											"source": 8,
											"value": "40"
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "MLOAD",
											"source": 8
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "DUP1",
											"source": 8
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "SWAP2",
											"source": 8
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "SUB",
											"source": 8
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "SWAP1",
											"source": 8
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "REVERT",
											"source": 8
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 10,
											"value": "528"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4769,
											"end": 4781,
											"name": "PUSH",
											"source": 10,
											"value": "60"
										},
										{
											"begin": 4798,
											"end": 4805,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "534"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "535"
										},
										{
											"begin": 4829,
											"end": 4839,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 4821,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "536"
										},
										{
											"begin": 4821,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "tag",
											"source": 10,
											"value": "535"
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "537"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 10,
											"value": "534"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5045,
											"end": 5067,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "538"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "DUP5",
											"source": 10
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "AND",
											"source": 10
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "EXTCODESIZE",
											"source": 10
										},
										{
											"begin": 5071,
											"end": 5094,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "tag",
											"source": 10,
											"value": "538"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "539"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9996B315"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 17481,
											"end": 17513,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 17481,
											"end": 17513,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 17463,
											"end": 17514,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 17436,
											"end": 17454,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 17436,
											"end": 17454,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "237"
										},
										{
											"begin": 17317,
											"end": 17520,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "tag",
											"source": 10,
											"value": "539"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5180,
											"end": 5190,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 10,
											"value": "537"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP4",
											"source": 10
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP3",
											"source": 10
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 10
										},
										{
											"begin": 4625,
											"end": 5207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 10
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "tag",
											"source": 10,
											"value": "536"
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 5874,
											"end": 5895,
											"name": "ISZERO",
											"source": 10
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 10,
											"value": "542"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPI",
											"source": 10
										},
										{
											"begin": 6102,
											"end": 6112,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6096,
											"end": 6113,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6158,
											"end": 6173,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6145,
											"end": 6155,
											"name": "DUP3",
											"source": 10
										},
										{
											"begin": 6141,
											"end": 6143,
											"name": "PUSH",
											"source": 10,
											"value": "20"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6130,
											"end": 6174,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "tag",
											"source": 10,
											"value": "542"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 10
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A12F521"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP2",
											"source": 10
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MSTORE",
											"source": 10
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 10,
											"value": "4"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "ADD",
											"source": 10
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 10,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 10
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP1",
											"source": 10
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP2",
											"source": 10
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SUB",
											"source": 10
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP1",
											"source": 10
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "REVERT",
											"source": 10
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "247"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "546"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "545"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "546"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "545"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "546"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "547"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "548"
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "547"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "269"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "KECCAK256",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "546"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MUL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "550"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "546"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "AND",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "OR",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "550"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "548"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "tag",
											"source": -1,
											"value": "553"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPDEST",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP3",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ISZERO",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "547"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMPI",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SSTORE",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "ADD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH [tag]",
											"source": -1,
											"value": "553"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "JUMP",
											"source": -1
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 14,
											"value": "42"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 72,
											"end": 78,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 127,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 113,
											"end": 122,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 104,
											"end": 111,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 100,
											"end": 123,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 96,
											"end": 128,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 93,
											"end": 145,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 93,
											"end": 145,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "567"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 141,
											"end": 142,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 138,
											"end": 139,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 131,
											"end": 143,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 93,
											"end": 145,
											"name": "tag",
											"source": 14,
											"value": "567"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 167,
											"end": 190,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 167,
											"end": 190,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 219,
											"end": 251,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 219,
											"end": 251,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 209,
											"end": 252,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 209,
											"end": 252,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 199,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "537"
										},
										{
											"begin": 199,
											"end": 270,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 497,
											"end": 624,
											"name": "tag",
											"source": 14,
											"value": "241"
										},
										{
											"begin": 497,
											"end": 624,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 558,
											"end": 568,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B71"
										},
										{
											"begin": 553,
											"end": 556,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 549,
											"end": 569,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 546,
											"end": 547,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 539,
											"end": 570,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 589,
											"end": 593,
											"name": "PUSH",
											"source": 14,
											"value": "41"
										},
										{
											"begin": 586,
											"end": 587,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 579,
											"end": 594,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 613,
											"end": 617,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 610,
											"end": 611,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 603,
											"end": 618,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 629,
											"end": 904,
											"name": "tag",
											"source": 14,
											"value": "555"
										},
										{
											"begin": 629,
											"end": 904,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 700,
											"end": 702,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 694,
											"end": 703,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 765,
											"end": 767,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 746,
											"end": 759,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 746,
											"end": 759,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 742,
											"end": 769,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 730,
											"end": 770,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 730,
											"end": 770,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 800,
											"end": 818,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 785,
											"end": 819,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 785,
											"end": 819,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 821,
											"end": 843,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 821,
											"end": 843,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 821,
											"end": 843,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 782,
											"end": 844,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 779,
											"end": 867,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 779,
											"end": 867,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "573"
										},
										{
											"begin": 779,
											"end": 867,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 847,
											"end": 865,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "573"
										},
										{
											"begin": 847,
											"end": 865,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "241"
										},
										{
											"begin": 847,
											"end": 865,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 847,
											"end": 865,
											"name": "tag",
											"source": 14,
											"value": "573"
										},
										{
											"begin": 847,
											"end": 865,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 883,
											"end": 885,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 876,
											"end": 898,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 629,
											"end": 904,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 629,
											"end": 904,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 629,
											"end": 904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 909,
											"end": 1316,
											"name": "tag",
											"source": 14,
											"value": "556"
										},
										{
											"begin": 909,
											"end": 1316,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 974,
											"end": 979,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1008,
											"end": 1026,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1000,
											"end": 1006,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 997,
											"end": 1027,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 994,
											"end": 1050,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 994,
											"end": 1050,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "576"
										},
										{
											"begin": 994,
											"end": 1050,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1030,
											"end": 1048,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "576"
										},
										{
											"begin": 1030,
											"end": 1048,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "241"
										},
										{
											"begin": 1030,
											"end": 1048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1030,
											"end": 1048,
											"name": "tag",
											"source": 14,
											"value": "576"
										},
										{
											"begin": 1030,
											"end": 1048,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1068,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "577"
										},
										{
											"begin": 1113,
											"end": 1115,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 1092,
											"end": 1107,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1092,
											"end": 1107,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1088,
											"end": 1117,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 1119,
											"end": 1123,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1084,
											"end": 1124,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1068,
											"end": 1125,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "555"
										},
										{
											"begin": 1068,
											"end": 1125,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1068,
											"end": 1125,
											"name": "tag",
											"source": 14,
											"value": "577"
										},
										{
											"begin": 1068,
											"end": 1125,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1059,
											"end": 1125,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 1059,
											"end": 1125,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 1148,
											"end": 1154,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1141,
											"end": 1146,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1134,
											"end": 1155,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1188,
											"end": 1191,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1179,
											"end": 1185,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1174,
											"end": 1177,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1170,
											"end": 1186,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1167,
											"end": 1192,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 1164,
											"end": 1209,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1164,
											"end": 1209,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "578"
										},
										{
											"begin": 1164,
											"end": 1209,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1205,
											"end": 1206,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1202,
											"end": 1203,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1195,
											"end": 1207,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1164,
											"end": 1209,
											"name": "tag",
											"source": 14,
											"value": "578"
										},
										{
											"begin": 1164,
											"end": 1209,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1254,
											"end": 1260,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1249,
											"end": 1252,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1242,
											"end": 1246,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1235,
											"end": 1240,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1231,
											"end": 1247,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1218,
											"end": 1261,
											"name": "CALLDATACOPY",
											"source": 14
										},
										{
											"begin": 1308,
											"end": 1309,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1301,
											"end": 1305,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1292,
											"end": 1298,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1285,
											"end": 1290,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1281,
											"end": 1299,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1277,
											"end": 1306,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1270,
											"end": 1310,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 909,
											"end": 1316,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 909,
											"end": 1316,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 909,
											"end": 1316,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 909,
											"end": 1316,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 909,
											"end": 1316,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 909,
											"end": 1316,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1321,
											"end": 1543,
											"name": "tag",
											"source": 14,
											"value": "557"
										},
										{
											"begin": 1321,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1364,
											"end": 1369,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1417,
											"end": 1420,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1410,
											"end": 1414,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 1402,
											"end": 1408,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1398,
											"end": 1415,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1394,
											"end": 1421,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 1384,
											"end": 1439,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "580"
										},
										{
											"begin": 1384,
											"end": 1439,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1435,
											"end": 1436,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1425,
											"end": 1437,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1384,
											"end": 1439,
											"name": "tag",
											"source": 14,
											"value": "580"
										},
										{
											"begin": 1384,
											"end": 1439,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1457,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "537"
										},
										{
											"begin": 1533,
											"end": 1536,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1524,
											"end": 1530,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 1511,
											"end": 1531,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 1504,
											"end": 1508,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1496,
											"end": 1502,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1492,
											"end": 1509,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1457,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "556"
										},
										{
											"begin": 1457,
											"end": 1537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1548,
											"end": 1870,
											"name": "tag",
											"source": 14,
											"value": "49"
										},
										{
											"begin": 1548,
											"end": 1870,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1617,
											"end": 1623,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1670,
											"end": 1672,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1658,
											"end": 1667,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1649,
											"end": 1656,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1645,
											"end": 1668,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1641,
											"end": 1673,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 1638,
											"end": 1690,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1638,
											"end": 1690,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "583"
										},
										{
											"begin": 1638,
											"end": 1690,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1686,
											"end": 1687,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1683,
											"end": 1684,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1676,
											"end": 1688,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1638,
											"end": 1690,
											"name": "tag",
											"source": 14,
											"value": "583"
										},
										{
											"begin": 1638,
											"end": 1690,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1726,
											"end": 1735,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1713,
											"end": 1736,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 1759,
											"end": 1777,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1751,
											"end": 1757,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 1748,
											"end": 1778,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 1745,
											"end": 1795,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1745,
											"end": 1795,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "584"
										},
										{
											"begin": 1745,
											"end": 1795,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 1791,
											"end": 1792,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1788,
											"end": 1789,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1781,
											"end": 1793,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1745,
											"end": 1795,
											"name": "tag",
											"source": 14,
											"value": "584"
										},
										{
											"begin": 1745,
											"end": 1795,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1814,
											"end": 1864,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "585"
										},
										{
											"begin": 1856,
											"end": 1863,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1847,
											"end": 1853,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1836,
											"end": 1845,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 1832,
											"end": 1854,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 1814,
											"end": 1864,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "557"
										},
										{
											"begin": 1814,
											"end": 1864,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1814,
											"end": 1864,
											"name": "tag",
											"source": 14,
											"value": "585"
										},
										{
											"begin": 1814,
											"end": 1864,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1804,
											"end": 1864,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 1548,
											"end": 1870,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1548,
											"end": 1870,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 1875,
											"end": 2055,
											"name": "tag",
											"source": 14,
											"value": "54"
										},
										{
											"begin": 1875,
											"end": 2055,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 1934,
											"end": 1940,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1987,
											"end": 1989,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 1975,
											"end": 1984,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 1966,
											"end": 1973,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 1962,
											"end": 1985,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 1958,
											"end": 1990,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 1955,
											"end": 2007,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 1955,
											"end": 2007,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "587"
										},
										{
											"begin": 1955,
											"end": 2007,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2003,
											"end": 2004,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2000,
											"end": 2001,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1993,
											"end": 2005,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 1955,
											"end": 2007,
											"name": "tag",
											"source": 14,
											"value": "587"
										},
										{
											"begin": 1955,
											"end": 2007,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2026,
											"end": 2049,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 2026,
											"end": 2049,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 1875,
											"end": 2055,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1875,
											"end": 2055,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2242,
											"end": 2415,
											"name": "tag",
											"source": 14,
											"value": "558"
										},
										{
											"begin": 2242,
											"end": 2415,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2310,
											"end": 2330,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2310,
											"end": 2330,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2359,
											"end": 2390,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2359,
											"end": 2390,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 2349,
											"end": 2391,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2349,
											"end": 2391,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 2339,
											"end": 2409,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "590"
										},
										{
											"begin": 2339,
											"end": 2409,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2405,
											"end": 2406,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2402,
											"end": 2403,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2395,
											"end": 2407,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2339,
											"end": 2409,
											"name": "tag",
											"source": 14,
											"value": "590"
										},
										{
											"begin": 2339,
											"end": 2409,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2242,
											"end": 2415,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2242,
											"end": 2415,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2242,
											"end": 2415,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2242,
											"end": 2415,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2420,
											"end": 2674,
											"name": "tag",
											"source": 14,
											"value": "61"
										},
										{
											"begin": 2420,
											"end": 2674,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2488,
											"end": 2494,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2496,
											"end": 2502,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2549,
											"end": 2551,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 2537,
											"end": 2546,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 2528,
											"end": 2535,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2524,
											"end": 2547,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2520,
											"end": 2552,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 2517,
											"end": 2569,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2517,
											"end": 2569,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "592"
										},
										{
											"begin": 2517,
											"end": 2569,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2565,
											"end": 2566,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2562,
											"end": 2563,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2555,
											"end": 2567,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2517,
											"end": 2569,
											"name": "tag",
											"source": 14,
											"value": "592"
										},
										{
											"begin": 2517,
											"end": 2569,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2601,
											"end": 2610,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 2588,
											"end": 2611,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 2578,
											"end": 2611,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 2578,
											"end": 2611,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2630,
											"end": 2668,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "593"
										},
										{
											"begin": 2664,
											"end": 2666,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 2653,
											"end": 2662,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 2649,
											"end": 2667,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 2630,
											"end": 2668,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "558"
										},
										{
											"begin": 2630,
											"end": 2668,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2630,
											"end": 2668,
											"name": "tag",
											"source": 14,
											"value": "593"
										},
										{
											"begin": 2630,
											"end": 2668,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2620,
											"end": 2668,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2620,
											"end": 2668,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2420,
											"end": 2674,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2420,
											"end": 2674,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2420,
											"end": 2674,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 2420,
											"end": 2674,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 2420,
											"end": 2674,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 2420,
											"end": 2674,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 2679,
											"end": 3275,
											"name": "tag",
											"source": 14,
											"value": "66"
										},
										{
											"begin": 2679,
											"end": 3275,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2784,
											"end": 2790,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2792,
											"end": 2798,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2800,
											"end": 2806,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2808,
											"end": 2814,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2816,
											"end": 2822,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2869,
											"end": 2872,
											"name": "PUSH",
											"source": 14,
											"value": "A0"
										},
										{
											"begin": 2857,
											"end": 2866,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 2848,
											"end": 2855,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 2844,
											"end": 2867,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 2840,
											"end": 2873,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 2837,
											"end": 2890,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2837,
											"end": 2890,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "595"
										},
										{
											"begin": 2837,
											"end": 2890,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2886,
											"end": 2887,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2883,
											"end": 2884,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2876,
											"end": 2888,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2837,
											"end": 2890,
											"name": "tag",
											"source": 14,
											"value": "595"
										},
										{
											"begin": 2837,
											"end": 2890,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 2926,
											"end": 2935,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 2913,
											"end": 2936,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 2959,
											"end": 2977,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2951,
											"end": 2957,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 2948,
											"end": 2978,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 2945,
											"end": 2995,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 2945,
											"end": 2995,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "596"
										},
										{
											"begin": 2945,
											"end": 2995,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 2991,
											"end": 2992,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 2988,
											"end": 2989,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 2981,
											"end": 2993,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 2945,
											"end": 2995,
											"name": "tag",
											"source": 14,
											"value": "596"
										},
										{
											"begin": 2945,
											"end": 2995,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3014,
											"end": 3064,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "597"
										},
										{
											"begin": 3056,
											"end": 3063,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 3047,
											"end": 3053,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 3036,
											"end": 3045,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 3032,
											"end": 3054,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3014,
											"end": 3064,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "557"
										},
										{
											"begin": 3014,
											"end": 3064,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3014,
											"end": 3064,
											"name": "tag",
											"source": 14,
											"value": "597"
										},
										{
											"begin": 3014,
											"end": 3064,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3004,
											"end": 3064,
											"name": "SWAP9",
											"source": 14
										},
										{
											"begin": 3111,
											"end": 3113,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3096,
											"end": 3114,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 3096,
											"end": 3114,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3083,
											"end": 3115,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 3083,
											"end": 3115,
											"name": "SWAP9",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3162,
											"end": 3164,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3147,
											"end": 3165,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 3147,
											"end": 3165,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3134,
											"end": 3166,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 3134,
											"end": 3166,
											"name": "SWAP8",
											"source": 14
										},
										{
											"begin": 3213,
											"end": 3215,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 3198,
											"end": 3216,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3198,
											"end": 3216,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3185,
											"end": 3217,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 3185,
											"end": 3217,
											"name": "SWAP8",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3264,
											"end": 3267,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 3249,
											"end": 3268,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3236,
											"end": 3269,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 3236,
											"end": 3269,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2679,
											"end": 3275,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2679,
											"end": 3275,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3647,
											"end": 4171,
											"name": "tag",
											"source": 14,
											"value": "87"
										},
										{
											"begin": 3647,
											"end": 4171,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3724,
											"end": 3730,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3732,
											"end": 3738,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3785,
											"end": 3787,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 3773,
											"end": 3782,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3764,
											"end": 3771,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 3760,
											"end": 3783,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 3756,
											"end": 3788,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 3753,
											"end": 3805,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3753,
											"end": 3805,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "602"
										},
										{
											"begin": 3753,
											"end": 3805,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3801,
											"end": 3802,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3798,
											"end": 3799,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3791,
											"end": 3803,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3753,
											"end": 3805,
											"name": "tag",
											"source": 14,
											"value": "602"
										},
										{
											"begin": 3753,
											"end": 3805,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3824,
											"end": 3853,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "603"
										},
										{
											"begin": 3843,
											"end": 3852,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3824,
											"end": 3853,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "558"
										},
										{
											"begin": 3824,
											"end": 3853,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 3824,
											"end": 3853,
											"name": "tag",
											"source": 14,
											"value": "603"
										},
										{
											"begin": 3824,
											"end": 3853,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3814,
											"end": 3853,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 3814,
											"end": 3853,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3904,
											"end": 3906,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 3893,
											"end": 3902,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3889,
											"end": 3907,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 3876,
											"end": 3908,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 3931,
											"end": 3949,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3923,
											"end": 3929,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 3920,
											"end": 3950,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 3917,
											"end": 3967,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 3917,
											"end": 3967,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "604"
										},
										{
											"begin": 3917,
											"end": 3967,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 3963,
											"end": 3964,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 3960,
											"end": 3961,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 3953,
											"end": 3965,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 3917,
											"end": 3967,
											"name": "tag",
											"source": 14,
											"value": "604"
										},
										{
											"begin": 3917,
											"end": 3967,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 3986,
											"end": 4008,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 3986,
											"end": 4008,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4039,
											"end": 4043,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 4031,
											"end": 4044,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4031,
											"end": 4044,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4027,
											"end": 4054,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 4017,
											"end": 4072,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "605"
										},
										{
											"begin": 4017,
											"end": 4072,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4068,
											"end": 4069,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4065,
											"end": 4066,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4058,
											"end": 4070,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4017,
											"end": 4072,
											"name": "tag",
											"source": 14,
											"value": "605"
										},
										{
											"begin": 4017,
											"end": 4072,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4091,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "606"
										},
										{
											"begin": 4157,
											"end": 4164,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4152,
											"end": 4154,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4139,
											"end": 4155,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 4134,
											"end": 4136,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4130,
											"end": 4132,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4126,
											"end": 4137,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4091,
											"end": 4165,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "556"
										},
										{
											"begin": 4091,
											"end": 4165,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4091,
											"end": 4165,
											"name": "tag",
											"source": 14,
											"value": "606"
										},
										{
											"begin": 4091,
											"end": 4165,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4081,
											"end": 4165,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4081,
											"end": 4165,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4081,
											"end": 4165,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3647,
											"end": 4171,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3647,
											"end": 4171,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3647,
											"end": 4171,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 3647,
											"end": 4171,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 3647,
											"end": 4171,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 3647,
											"end": 4171,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4176,
											"end": 4572,
											"name": "tag",
											"source": 14,
											"value": "92"
										},
										{
											"begin": 4176,
											"end": 4572,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4254,
											"end": 4260,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4262,
											"end": 4268,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4315,
											"end": 4317,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4303,
											"end": 4312,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4294,
											"end": 4301,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4290,
											"end": 4313,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4286,
											"end": 4318,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 4283,
											"end": 4335,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4283,
											"end": 4335,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "608"
										},
										{
											"begin": 4283,
											"end": 4335,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4331,
											"end": 4332,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4328,
											"end": 4329,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4321,
											"end": 4333,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4283,
											"end": 4335,
											"name": "tag",
											"source": 14,
											"value": "608"
										},
										{
											"begin": 4283,
											"end": 4335,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4371,
											"end": 4380,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4358,
											"end": 4381,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 4404,
											"end": 4422,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4396,
											"end": 4402,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4393,
											"end": 4423,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 4390,
											"end": 4440,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4390,
											"end": 4440,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "609"
										},
										{
											"begin": 4390,
											"end": 4440,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4436,
											"end": 4437,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4433,
											"end": 4434,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4426,
											"end": 4438,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4390,
											"end": 4440,
											"name": "tag",
											"source": 14,
											"value": "609"
										},
										{
											"begin": 4390,
											"end": 4440,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4459,
											"end": 4509,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "610"
										},
										{
											"begin": 4501,
											"end": 4508,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4492,
											"end": 4498,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4481,
											"end": 4490,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4477,
											"end": 4499,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4459,
											"end": 4509,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "557"
										},
										{
											"begin": 4459,
											"end": 4509,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4459,
											"end": 4509,
											"name": "tag",
											"source": 14,
											"value": "610"
										},
										{
											"begin": 4459,
											"end": 4509,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4449,
											"end": 4509,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4449,
											"end": 4509,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4449,
											"end": 4509,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "593"
										},
										{
											"begin": 4562,
											"end": 4564,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4551,
											"end": 4560,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4547,
											"end": 4565,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4528,
											"end": 4566,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "558"
										},
										{
											"begin": 4528,
											"end": 4566,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4577,
											"end": 5188,
											"name": "tag",
											"source": 14,
											"value": "105"
										},
										{
											"begin": 4577,
											"end": 5188,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4674,
											"end": 4680,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4682,
											"end": 4688,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4690,
											"end": 4696,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4743,
											"end": 4745,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 4731,
											"end": 4740,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4722,
											"end": 4729,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4718,
											"end": 4741,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4714,
											"end": 4746,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 4711,
											"end": 4763,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4711,
											"end": 4763,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "613"
										},
										{
											"begin": 4711,
											"end": 4763,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4759,
											"end": 4760,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4756,
											"end": 4757,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4749,
											"end": 4761,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4711,
											"end": 4763,
											"name": "tag",
											"source": 14,
											"value": "613"
										},
										{
											"begin": 4711,
											"end": 4763,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4799,
											"end": 4808,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4786,
											"end": 4809,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 4828,
											"end": 4846,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4869,
											"end": 4871,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4861,
											"end": 4867,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4858,
											"end": 4872,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 4855,
											"end": 4889,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 4855,
											"end": 4889,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "614"
										},
										{
											"begin": 4855,
											"end": 4889,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4885,
											"end": 4886,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4882,
											"end": 4883,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4875,
											"end": 4887,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 4855,
											"end": 4889,
											"name": "tag",
											"source": 14,
											"value": "614"
										},
										{
											"begin": 4855,
											"end": 4889,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4908,
											"end": 4958,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "615"
										},
										{
											"begin": 4950,
											"end": 4957,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 4941,
											"end": 4947,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4930,
											"end": 4939,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 4926,
											"end": 4948,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4908,
											"end": 4958,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "557"
										},
										{
											"begin": 4908,
											"end": 4958,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4908,
											"end": 4958,
											"name": "tag",
											"source": 14,
											"value": "615"
										},
										{
											"begin": 4908,
											"end": 4958,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4898,
											"end": 4958,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 4898,
											"end": 4958,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5011,
											"end": 5013,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5000,
											"end": 5009,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 4996,
											"end": 5014,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4983,
											"end": 5015,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 4967,
											"end": 5015,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4967,
											"end": 5015,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5040,
											"end": 5042,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5030,
											"end": 5038,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5027,
											"end": 5043,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 5024,
											"end": 5060,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5024,
											"end": 5060,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "616"
										},
										{
											"begin": 5024,
											"end": 5060,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5056,
											"end": 5057,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5053,
											"end": 5054,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5046,
											"end": 5058,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 5024,
											"end": 5060,
											"name": "tag",
											"source": 14,
											"value": "616"
										},
										{
											"begin": 5024,
											"end": 5060,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5024,
											"end": 5060,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5079,
											"end": 5131,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "617"
										},
										{
											"begin": 5123,
											"end": 5130,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 5112,
											"end": 5120,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5101,
											"end": 5110,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 5097,
											"end": 5121,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5079,
											"end": 5131,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "557"
										},
										{
											"begin": 5079,
											"end": 5131,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5079,
											"end": 5131,
											"name": "tag",
											"source": 14,
											"value": "617"
										},
										{
											"begin": 5079,
											"end": 5131,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5069,
											"end": 5131,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5069,
											"end": 5131,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5069,
											"end": 5131,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5178,
											"end": 5180,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5167,
											"end": 5176,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5163,
											"end": 5181,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5150,
											"end": 5182,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 5140,
											"end": 5182,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5140,
											"end": 5182,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4577,
											"end": 5188,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4577,
											"end": 5188,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4577,
											"end": 5188,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4577,
											"end": 5188,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4577,
											"end": 5188,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4577,
											"end": 5188,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5193,
											"end": 5379,
											"name": "tag",
											"source": 14,
											"value": "126"
										},
										{
											"begin": 5193,
											"end": 5379,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5252,
											"end": 5258,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5305,
											"end": 5307,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5293,
											"end": 5302,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5284,
											"end": 5291,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5280,
											"end": 5303,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 5276,
											"end": 5308,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 5273,
											"end": 5325,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5273,
											"end": 5325,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "619"
										},
										{
											"begin": 5273,
											"end": 5325,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5321,
											"end": 5322,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5318,
											"end": 5319,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5311,
											"end": 5323,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 5273,
											"end": 5325,
											"name": "tag",
											"source": 14,
											"value": "619"
										},
										{
											"begin": 5273,
											"end": 5325,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5344,
											"end": 5373,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "537"
										},
										{
											"begin": 5363,
											"end": 5372,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5344,
											"end": 5373,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "558"
										},
										{
											"begin": 5344,
											"end": 5373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5384,
											"end": 5684,
											"name": "tag",
											"source": 14,
											"value": "559"
										},
										{
											"begin": 5384,
											"end": 5684,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5437,
											"end": 5440,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5475,
											"end": 5480,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5469,
											"end": 5481,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5502,
											"end": 5508,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5497,
											"end": 5500,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5490,
											"end": 5509,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5558,
											"end": 5564,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5551,
											"end": 5555,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5544,
											"end": 5549,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5540,
											"end": 5556,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5533,
											"end": 5537,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5528,
											"end": 5531,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 5524,
											"end": 5538,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5518,
											"end": 5565,
											"name": "MCOPY",
											"source": 14
										},
										{
											"begin": 5610,
											"end": 5611,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5603,
											"end": 5607,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5594,
											"end": 5600,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5589,
											"end": 5592,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 5585,
											"end": 5601,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5581,
											"end": 5608,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5574,
											"end": 5612,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5673,
											"end": 5677,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5666,
											"end": 5668,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 5662,
											"end": 5669,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 5657,
											"end": 5659,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 5649,
											"end": 5655,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5645,
											"end": 5660,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5641,
											"end": 5670,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 5636,
											"end": 5639,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 5632,
											"end": 5671,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5628,
											"end": 5678,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5621,
											"end": 5678,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5621,
											"end": 5678,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5621,
											"end": 5678,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5384,
											"end": 5684,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5384,
											"end": 5684,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 5384,
											"end": 5684,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5384,
											"end": 5684,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5384,
											"end": 5684,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5689,
											"end": 6017,
											"name": "tag",
											"source": 14,
											"value": "129"
										},
										{
											"begin": 5689,
											"end": 6017,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5866,
											"end": 5868,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5855,
											"end": 5864,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5848,
											"end": 5869,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5829,
											"end": 5833,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 5886,
											"end": 5942,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "623"
										},
										{
											"begin": 5938,
											"end": 5940,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5927,
											"end": 5936,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5923,
											"end": 5941,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5915,
											"end": 5921,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 5886,
											"end": 5942,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "559"
										},
										{
											"begin": 5886,
											"end": 5942,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5886,
											"end": 5942,
											"name": "tag",
											"source": 14,
											"value": "623"
										},
										{
											"begin": 5886,
											"end": 5942,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5878,
											"end": 5942,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 5878,
											"end": 5942,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6007,
											"end": 6008,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 6003,
											"end": 6004,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5998,
											"end": 6001,
											"name": "PUSH",
											"source": 14,
											"value": "A0"
										},
										{
											"begin": 5994,
											"end": 6005,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 5990,
											"end": 6009,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 5982,
											"end": 5988,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5978,
											"end": 6010,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 5973,
											"end": 5975,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 5962,
											"end": 5971,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 5958,
											"end": 5976,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 5951,
											"end": 6011,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 5689,
											"end": 6017,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 5689,
											"end": 6017,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 5689,
											"end": 6017,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5689,
											"end": 6017,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5689,
											"end": 6017,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 5689,
											"end": 6017,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6022,
											"end": 7038,
											"name": "tag",
											"source": 14,
											"value": "133"
										},
										{
											"begin": 6022,
											"end": 7038,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6115,
											"end": 6121,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6123,
											"end": 6129,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6176,
											"end": 6178,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 6164,
											"end": 6173,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6155,
											"end": 6162,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 6151,
											"end": 6174,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 6147,
											"end": 6179,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 6144,
											"end": 6196,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 6144,
											"end": 6196,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "625"
										},
										{
											"begin": 6144,
											"end": 6196,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6192,
											"end": 6193,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6189,
											"end": 6190,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6182,
											"end": 6194,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 6144,
											"end": 6196,
											"name": "tag",
											"source": 14,
											"value": "625"
										},
										{
											"begin": 6144,
											"end": 6196,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6232,
											"end": 6241,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6219,
											"end": 6242,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 6261,
											"end": 6279,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 6302,
											"end": 6304,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6294,
											"end": 6300,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6291,
											"end": 6305,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 6288,
											"end": 6322,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 6288,
											"end": 6322,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "626"
										},
										{
											"begin": 6288,
											"end": 6322,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6318,
											"end": 6319,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6315,
											"end": 6316,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6308,
											"end": 6320,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 6288,
											"end": 6322,
											"name": "tag",
											"source": 14,
											"value": "626"
										},
										{
											"begin": 6288,
											"end": 6322,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6356,
											"end": 6362,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6345,
											"end": 6354,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 6341,
											"end": 6363,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6331,
											"end": 6363,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6331,
											"end": 6363,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6401,
											"end": 6408,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 6394,
											"end": 6398,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 6390,
											"end": 6392,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 6386,
											"end": 6399,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6382,
											"end": 6409,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 6372,
											"end": 6427,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "627"
										},
										{
											"begin": 6372,
											"end": 6427,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6423,
											"end": 6424,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6420,
											"end": 6421,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6413,
											"end": 6425,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 6372,
											"end": 6427,
											"name": "tag",
											"source": 14,
											"value": "627"
										},
										{
											"begin": 6372,
											"end": 6427,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6459,
											"end": 6461,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6446,
											"end": 6462,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 6481,
											"end": 6485,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6504,
											"end": 6506,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6500,
											"end": 6502,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6497,
											"end": 6507,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 6494,
											"end": 6530,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 6494,
											"end": 6530,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "629"
										},
										{
											"begin": 6494,
											"end": 6530,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6510,
											"end": 6528,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "629"
										},
										{
											"begin": 6510,
											"end": 6528,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "241"
										},
										{
											"begin": 6510,
											"end": 6528,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6510,
											"end": 6528,
											"name": "tag",
											"source": 14,
											"value": "629"
										},
										{
											"begin": 6510,
											"end": 6528,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6556,
											"end": 6558,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6553,
											"end": 6554,
											"name": "PUSH",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 6549,
											"end": 6559,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 6539,
											"end": 6559,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6539,
											"end": 6559,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 6579,
											"end": 6607,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "630"
										},
										{
											"begin": 6603,
											"end": 6605,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6599,
											"end": 6601,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6595,
											"end": 6606,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6579,
											"end": 6607,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "555"
										},
										{
											"begin": 6579,
											"end": 6607,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6579,
											"end": 6607,
											"name": "tag",
											"source": 14,
											"value": "630"
										},
										{
											"begin": 6579,
											"end": 6607,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6641,
											"end": 6656,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6641,
											"end": 6656,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6641,
											"end": 6656,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6711,
											"end": 6722,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6711,
											"end": 6722,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6711,
											"end": 6722,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6707,
											"end": 6727,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6707,
											"end": 6727,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6707,
											"end": 6727,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 6672,
											"end": 6684,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6672,
											"end": 6684,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6672,
											"end": 6684,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6672,
											"end": 6684,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6739,
											"end": 6758,
											"name": "DUP10",
											"source": 14
										},
										{
											"begin": 6739,
											"end": 6758,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 6739,
											"end": 6758,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 6736,
											"end": 6775,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 6736,
											"end": 6775,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "631"
										},
										{
											"begin": 6736,
											"end": 6775,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6771,
											"end": 6772,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 6768,
											"end": 6769,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6761,
											"end": 6773,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 6736,
											"end": 6775,
											"name": "tag",
											"source": 14,
											"value": "631"
										},
										{
											"begin": 6736,
											"end": 6775,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6795,
											"end": 6806,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 6795,
											"end": 6806,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6795,
											"end": 6806,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6795,
											"end": 6806,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 6815,
											"end": 6957,
											"name": "tag",
											"source": 14,
											"value": "632"
										},
										{
											"begin": 6815,
											"end": 6957,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6831,
											"end": 6837,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 6826,
											"end": 6829,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 6823,
											"end": 6838,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 6815,
											"end": 6957,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 6815,
											"end": 6957,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "634"
										},
										{
											"begin": 6815,
											"end": 6957,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6897,
											"end": 6914,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 6897,
											"end": 6914,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 6885,
											"end": 6915,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6885,
											"end": 6915,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6848,
											"end": 6860,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 6848,
											"end": 6860,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6848,
											"end": 6860,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6848,
											"end": 6860,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 6935,
											"end": 6947,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6935,
											"end": 6947,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6935,
											"end": 6947,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6935,
											"end": 6947,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6815,
											"end": 6957,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "632"
										},
										{
											"begin": 6815,
											"end": 6957,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6815,
											"end": 6957,
											"name": "tag",
											"source": 14,
											"value": "634"
										},
										{
											"begin": 6815,
											"end": 6957,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6976,
											"end": 6981,
											"name": "SWAP10",
											"source": 14
										},
										{
											"begin": 7013,
											"end": 7031,
											"name": "SWAP8",
											"source": 14
										},
										{
											"begin": 7013,
											"end": 7031,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7013,
											"end": 7031,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 7013,
											"end": 7031,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7000,
											"end": 7032,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 7000,
											"end": 7032,
											"name": "SWAP8",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6022,
											"end": 7038,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7043,
											"end": 7274,
											"name": "tag",
											"source": 14,
											"value": "139"
										},
										{
											"begin": 7043,
											"end": 7274,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7192,
											"end": 7194,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7181,
											"end": 7190,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7174,
											"end": 7195,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7155,
											"end": 7159,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7212,
											"end": 7268,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "537"
										},
										{
											"begin": 7264,
											"end": 7266,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7253,
											"end": 7262,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7249,
											"end": 7267,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7241,
											"end": 7247,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7212,
											"end": 7268,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "559"
										},
										{
											"begin": 7212,
											"end": 7268,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7279,
											"end": 7869,
											"name": "tag",
											"source": 14,
											"value": "149"
										},
										{
											"begin": 7279,
											"end": 7869,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7568,
											"end": 7574,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 7557,
											"end": 7566,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 7550,
											"end": 7575,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7611,
											"end": 7614,
											"name": "PUSH",
											"source": 14,
											"value": "C0"
										},
										{
											"begin": 7606,
											"end": 7608,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 7595,
											"end": 7604,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7591,
											"end": 7609,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7584,
											"end": 7615,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7531,
											"end": 7535,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7632,
											"end": 7689,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "638"
										},
										{
											"begin": 7684,
											"end": 7687,
											"name": "PUSH",
											"source": 14,
											"value": "C0"
										},
										{
											"begin": 7673,
											"end": 7682,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7669,
											"end": 7688,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7661,
											"end": 7667,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 7632,
											"end": 7689,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "559"
										},
										{
											"begin": 7632,
											"end": 7689,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7632,
											"end": 7689,
											"name": "tag",
											"source": 14,
											"value": "638"
										},
										{
											"begin": 7632,
											"end": 7689,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7624,
											"end": 7689,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 7624,
											"end": 7689,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7725,
											"end": 7731,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 7720,
											"end": 7722,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 7709,
											"end": 7718,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7705,
											"end": 7723,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7698,
											"end": 7732,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7768,
											"end": 7774,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7763,
											"end": 7765,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 7752,
											"end": 7761,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7748,
											"end": 7766,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7741,
											"end": 7775,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7812,
											"end": 7818,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7806,
											"end": 7809,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 7795,
											"end": 7804,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7791,
											"end": 7810,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7784,
											"end": 7819,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7856,
											"end": 7862,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 7850,
											"end": 7853,
											"name": "PUSH",
											"source": 14,
											"value": "A0"
										},
										{
											"begin": 7839,
											"end": 7848,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 7835,
											"end": 7854,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 7828,
											"end": 7863,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 7279,
											"end": 7869,
											"name": "SWAP8",
											"source": 14
										},
										{
											"begin": 7279,
											"end": 7869,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 7279,
											"end": 7869,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7279,
											"end": 7869,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7279,
											"end": 7869,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7279,
											"end": 7869,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7279,
											"end": 7869,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7279,
											"end": 7869,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7279,
											"end": 7869,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7279,
											"end": 7869,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 7874,
											"end": 8208,
											"name": "tag",
											"source": 14,
											"value": "153"
										},
										{
											"begin": 7874,
											"end": 8208,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 7951,
											"end": 7957,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 7959,
											"end": 7965,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 7967,
											"end": 7973,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8020,
											"end": 8022,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 8008,
											"end": 8017,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 7999,
											"end": 8006,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 7995,
											"end": 8018,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 7991,
											"end": 8023,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 7988,
											"end": 8040,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 7988,
											"end": 8040,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "640"
										},
										{
											"begin": 7988,
											"end": 8040,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8036,
											"end": 8037,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8033,
											"end": 8034,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 8026,
											"end": 8038,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 7988,
											"end": 8040,
											"name": "tag",
											"source": 14,
											"value": "640"
										},
										{
											"begin": 7988,
											"end": 8040,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8059,
											"end": 8088,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "641"
										},
										{
											"begin": 8078,
											"end": 8087,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8059,
											"end": 8088,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "558"
										},
										{
											"begin": 8059,
											"end": 8088,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8059,
											"end": 8088,
											"name": "tag",
											"source": 14,
											"value": "641"
										},
										{
											"begin": 8059,
											"end": 8088,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8049,
											"end": 8088,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 8049,
											"end": 8088,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8107,
											"end": 8145,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "642"
										},
										{
											"begin": 8141,
											"end": 8143,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8130,
											"end": 8139,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 8126,
											"end": 8144,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8107,
											"end": 8145,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "558"
										},
										{
											"begin": 8107,
											"end": 8145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8107,
											"end": 8145,
											"name": "tag",
											"source": 14,
											"value": "642"
										},
										{
											"begin": 8107,
											"end": 8145,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8097,
											"end": 8145,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8097,
											"end": 8145,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 8164,
											"end": 8202,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "643"
										},
										{
											"begin": 8198,
											"end": 8200,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 8187,
											"end": 8196,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 8183,
											"end": 8201,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8164,
											"end": 8202,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "558"
										},
										{
											"begin": 8164,
											"end": 8202,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8164,
											"end": 8202,
											"name": "tag",
											"source": 14,
											"value": "643"
										},
										{
											"begin": 8164,
											"end": 8202,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8154,
											"end": 8202,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8154,
											"end": 8202,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7874,
											"end": 8208,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7874,
											"end": 8208,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7874,
											"end": 8208,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7874,
											"end": 8208,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 7874,
											"end": 8208,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 7874,
											"end": 8208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8213,
											"end": 8467,
											"name": "tag",
											"source": 14,
											"value": "158"
										},
										{
											"begin": 8213,
											"end": 8467,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8281,
											"end": 8287,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8289,
											"end": 8295,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 8342,
											"end": 8344,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 8330,
											"end": 8339,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8321,
											"end": 8328,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 8317,
											"end": 8340,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 8313,
											"end": 8345,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 8310,
											"end": 8362,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 8310,
											"end": 8362,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "645"
										},
										{
											"begin": 8310,
											"end": 8362,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 8358,
											"end": 8359,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8355,
											"end": 8356,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 8348,
											"end": 8360,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 8310,
											"end": 8362,
											"name": "tag",
											"source": 14,
											"value": "645"
										},
										{
											"begin": 8310,
											"end": 8362,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8381,
											"end": 8410,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "646"
										},
										{
											"begin": 8400,
											"end": 8409,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8381,
											"end": 8410,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "558"
										},
										{
											"begin": 8381,
											"end": 8410,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8381,
											"end": 8410,
											"name": "tag",
											"source": 14,
											"value": "646"
										},
										{
											"begin": 8381,
											"end": 8410,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8371,
											"end": 8410,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 8457,
											"end": 8459,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8442,
											"end": 8460,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 8442,
											"end": 8460,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8442,
											"end": 8460,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 8442,
											"end": 8460,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8429,
											"end": 8461,
											"name": "CALLDATALOAD",
											"source": 14
										},
										{
											"begin": 8429,
											"end": 8461,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8213,
											"end": 8467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8472,
											"end": 9031,
											"name": "tag",
											"source": 14,
											"value": "161"
										},
										{
											"begin": 8472,
											"end": 9031,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8719,
											"end": 8722,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 8708,
											"end": 8717,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8701,
											"end": 8723,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8682,
											"end": 8686,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 8746,
											"end": 8803,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "648"
										},
										{
											"begin": 8798,
											"end": 8801,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 8787,
											"end": 8796,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 8783,
											"end": 8802,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8775,
											"end": 8781,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 8746,
											"end": 8803,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "559"
										},
										{
											"begin": 8746,
											"end": 8803,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8746,
											"end": 8803,
											"name": "tag",
											"source": 14,
											"value": "648"
										},
										{
											"begin": 8746,
											"end": 8803,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8851,
											"end": 8860,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 8843,
											"end": 8849,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8839,
											"end": 8861,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 8834,
											"end": 8836,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 8823,
											"end": 8832,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8819,
											"end": 8837,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8812,
											"end": 8862,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8879,
											"end": 8923,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "649"
										},
										{
											"begin": 8916,
											"end": 8922,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 8908,
											"end": 8914,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 8879,
											"end": 8923,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "559"
										},
										{
											"begin": 8879,
											"end": 8923,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 8879,
											"end": 8923,
											"name": "tag",
											"source": 14,
											"value": "649"
										},
										{
											"begin": 8879,
											"end": 8923,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 8954,
											"end": 8956,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 8939,
											"end": 8957,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 8939,
											"end": 8957,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8932,
											"end": 8966,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 8932,
											"end": 8966,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8932,
											"end": 8966,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 8932,
											"end": 8966,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9009,
											"end": 9023,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 9009,
											"end": 9023,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 9002,
											"end": 9024,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 8997,
											"end": 8999,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 8982,
											"end": 9000,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 8982,
											"end": 9000,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 8982,
											"end": 9000,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 8975,
											"end": 9025,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 8871,
											"end": 8923,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 8472,
											"end": 9031,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8472,
											"end": 9031,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 9720,
											"end": 9847,
											"name": "tag",
											"source": 14,
											"value": "194"
										},
										{
											"begin": 9720,
											"end": 9847,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9781,
											"end": 9791,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B71"
										},
										{
											"begin": 9776,
											"end": 9779,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 9772,
											"end": 9792,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 9769,
											"end": 9770,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9762,
											"end": 9793,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9812,
											"end": 9816,
											"name": "PUSH",
											"source": 14,
											"value": "32"
										},
										{
											"begin": 9809,
											"end": 9810,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 9802,
											"end": 9817,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 9836,
											"end": 9840,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 9833,
											"end": 9834,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9826,
											"end": 9841,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 9852,
											"end": 10064,
											"name": "tag",
											"source": 14,
											"value": "560"
										},
										{
											"begin": 9852,
											"end": 10064,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 9894,
											"end": 9897,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 9932,
											"end": 9937,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 9926,
											"end": 9938,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 9976,
											"end": 9982,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 9969,
											"end": 9973,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 9962,
											"end": 9967,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 9958,
											"end": 9974,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 9953,
											"end": 9956,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 9947,
											"end": 9983,
											"name": "MCOPY",
											"source": 14
										},
										{
											"begin": 10038,
											"end": 10039,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10002,
											"end": 10018,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 10002,
											"end": 10018,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 10027,
											"end": 10040,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 10027,
											"end": 10040,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10027,
											"end": 10040,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10002,
											"end": 10018,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10002,
											"end": 10018,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 9852,
											"end": 10064,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9852,
											"end": 10064,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10069,
											"end": 10261,
											"name": "tag",
											"source": 14,
											"value": "197"
										},
										{
											"begin": 10069,
											"end": 10261,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10200,
											"end": 10203,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10225,
											"end": 10255,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "537"
										},
										{
											"begin": 10251,
											"end": 10254,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10243,
											"end": 10249,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 10225,
											"end": 10255,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "560"
										},
										{
											"begin": 10225,
											"end": 10255,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10266,
											"end": 10646,
											"name": "tag",
											"source": 14,
											"value": "342"
										},
										{
											"begin": 10266,
											"end": 10646,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10345,
											"end": 10346,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 10341,
											"end": 10353,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10341,
											"end": 10353,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10341,
											"end": 10353,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 10341,
											"end": 10353,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10388,
											"end": 10400,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10388,
											"end": 10400,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 10388,
											"end": 10400,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 10409,
											"end": 10470,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "656"
										},
										{
											"begin": 10409,
											"end": 10470,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10463,
											"end": 10467,
											"name": "PUSH",
											"source": 14,
											"value": "7F"
										},
										{
											"begin": 10455,
											"end": 10461,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10451,
											"end": 10468,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 10441,
											"end": 10468,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10441,
											"end": 10468,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10409,
											"end": 10470,
											"name": "tag",
											"source": 14,
											"value": "656"
										},
										{
											"begin": 10409,
											"end": 10470,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10516,
											"end": 10518,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10508,
											"end": 10514,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 10505,
											"end": 10519,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 10485,
											"end": 10503,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10482,
											"end": 10520,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 10479,
											"end": 10640,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "657"
										},
										{
											"begin": 10479,
											"end": 10640,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 10562,
											"end": 10572,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B71"
										},
										{
											"begin": 10557,
											"end": 10560,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 10553,
											"end": 10573,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 10550,
											"end": 10551,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10543,
											"end": 10574,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10597,
											"end": 10601,
											"name": "PUSH",
											"source": 14,
											"value": "22"
										},
										{
											"begin": 10594,
											"end": 10595,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 10587,
											"end": 10602,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10625,
											"end": 10629,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 10622,
											"end": 10623,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10615,
											"end": 10630,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 10479,
											"end": 10640,
											"name": "tag",
											"source": 14,
											"value": "657"
										},
										{
											"begin": 10479,
											"end": 10640,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10479,
											"end": 10640,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10266,
											"end": 10646,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 10266,
											"end": 10646,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 10266,
											"end": 10646,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 10266,
											"end": 10646,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10777,
											"end": 11620,
											"name": "tag",
											"source": 14,
											"value": "199"
										},
										{
											"begin": 10777,
											"end": 11620,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10905,
											"end": 10908,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10934,
											"end": 10935,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 10967,
											"end": 10973,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 10961,
											"end": 10974,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 10997,
											"end": 11033,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "660"
										},
										{
											"begin": 11023,
											"end": 11032,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10997,
											"end": 11033,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "342"
										},
										{
											"begin": 10997,
											"end": 11033,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 10997,
											"end": 11033,
											"name": "tag",
											"source": 14,
											"value": "660"
										},
										{
											"begin": 10997,
											"end": 11033,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11052,
											"end": 11053,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 11069,
											"end": 11086,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11069,
											"end": 11086,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11069,
											"end": 11086,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 11095,
											"end": 11228,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11095,
											"end": 11228,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11095,
											"end": 11228,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "662"
										},
										{
											"begin": 11095,
											"end": 11228,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11242,
											"end": 11243,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 11237,
											"end": 11595,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11237,
											"end": 11595,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 11237,
											"end": 11595,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "663"
										},
										{
											"begin": 11237,
											"end": 11595,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11062,
											"end": 11595,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "661"
										},
										{
											"begin": 11062,
											"end": 11595,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11095,
											"end": 11228,
											"name": "tag",
											"source": 14,
											"value": "662"
										},
										{
											"begin": 11095,
											"end": 11228,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11128,
											"end": 11152,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 11128,
											"end": 11152,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 11116,
											"end": 11153,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 11116,
											"end": 11153,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11201,
											"end": 11215,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11201,
											"end": 11215,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11194,
											"end": 11216,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11182,
											"end": 11217,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 11182,
											"end": 11217,
											"name": "MUL",
											"source": 14
										},
										{
											"begin": 11173,
											"end": 11218,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 11173,
											"end": 11218,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11173,
											"end": 11218,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11095,
											"end": 11228,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "661"
										},
										{
											"begin": 11095,
											"end": 11228,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11237,
											"end": 11595,
											"name": "tag",
											"source": 14,
											"value": "663"
										},
										{
											"begin": 11237,
											"end": 11595,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11268,
											"end": 11274,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 11265,
											"end": 11266,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11258,
											"end": 11275,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11298,
											"end": 11302,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 11343,
											"end": 11347,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11340,
											"end": 11341,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11330,
											"end": 11348,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 11370,
											"end": 11371,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11384,
											"end": 11549,
											"name": "tag",
											"source": 14,
											"value": "664"
										},
										{
											"begin": 11384,
											"end": 11549,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11398,
											"end": 11404,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 11395,
											"end": 11396,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11392,
											"end": 11405,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 11384,
											"end": 11549,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11384,
											"end": 11549,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "666"
										},
										{
											"begin": 11384,
											"end": 11549,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11476,
											"end": 11490,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 11476,
											"end": 11490,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 11463,
											"end": 11474,
											"name": "DUP11",
											"source": 14
										},
										{
											"begin": 11463,
											"end": 11474,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11463,
											"end": 11474,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11456,
											"end": 11491,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11519,
											"end": 11535,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11519,
											"end": 11535,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 11519,
											"end": 11535,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11519,
											"end": 11535,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 11413,
											"end": 11423,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11413,
											"end": 11423,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11384,
											"end": 11549,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "664"
										},
										{
											"begin": 11384,
											"end": 11549,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11384,
											"end": 11549,
											"name": "tag",
											"source": 14,
											"value": "666"
										},
										{
											"begin": 11384,
											"end": 11549,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11388,
											"end": 11391,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11388,
											"end": 11391,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11388,
											"end": 11391,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11578,
											"end": 11584,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11573,
											"end": 11576,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 11569,
											"end": 11585,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11562,
											"end": 11585,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 11562,
											"end": 11585,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11062,
											"end": 11595,
											"name": "tag",
											"source": 14,
											"value": "661"
										},
										{
											"begin": 11062,
											"end": 11595,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11611,
											"end": 11614,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 11611,
											"end": 11614,
											"name": "SWAP7",
											"source": 14
										},
										{
											"begin": 10777,
											"end": 11620,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10777,
											"end": 11620,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11625,
											"end": 11752,
											"name": "tag",
											"source": 14,
											"value": "562"
										},
										{
											"begin": 11625,
											"end": 11752,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11686,
											"end": 11696,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B71"
										},
										{
											"begin": 11681,
											"end": 11684,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 11677,
											"end": 11697,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 11674,
											"end": 11675,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11667,
											"end": 11698,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11717,
											"end": 11721,
											"name": "PUSH",
											"source": 14,
											"value": "11"
										},
										{
											"begin": 11714,
											"end": 11715,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 11707,
											"end": 11722,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 11741,
											"end": 11745,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 11738,
											"end": 11739,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 11731,
											"end": 11746,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 11757,
											"end": 11882,
											"name": "tag",
											"source": 14,
											"value": "203"
										},
										{
											"begin": 11757,
											"end": 11882,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11822,
											"end": 11831,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11822,
											"end": 11831,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11822,
											"end": 11831,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 11843,
											"end": 11853,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 11843,
											"end": 11853,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11843,
											"end": 11853,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 11840,
											"end": 11876,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11840,
											"end": 11876,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "186"
										},
										{
											"begin": 11840,
											"end": 11876,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 11856,
											"end": 11874,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "186"
										},
										{
											"begin": 11856,
											"end": 11874,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "562"
										},
										{
											"begin": 11856,
											"end": 11874,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 11887,
											"end": 12405,
											"name": "tag",
											"source": 14,
											"value": "563"
										},
										{
											"begin": 11887,
											"end": 12405,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 11989,
											"end": 11991,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 11984,
											"end": 11987,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 11981,
											"end": 11992,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 11978,
											"end": 12399,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 11978,
											"end": 12399,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "228"
										},
										{
											"begin": 11978,
											"end": 12399,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12025,
											"end": 12030,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 12022,
											"end": 12023,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12015,
											"end": 12031,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 12069,
											"end": 12073,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12066,
											"end": 12067,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12056,
											"end": 12074,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": 12139,
											"end": 12141,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 12127,
											"end": 12137,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 12123,
											"end": 12142,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12120,
											"end": 12121,
											"name": "PUSH",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 12116,
											"end": 12143,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 12110,
											"end": 12114,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12106,
											"end": 12144,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12175,
											"end": 12179,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12163,
											"end": 12173,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 12160,
											"end": 12180,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 12157,
											"end": 12204,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 12157,
											"end": 12204,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "673"
										},
										{
											"begin": 12157,
											"end": 12204,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12198,
											"end": 12202,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 12157,
											"end": 12204,
											"name": "tag",
											"source": 14,
											"value": "673"
										},
										{
											"begin": 12157,
											"end": 12204,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12253,
											"end": 12255,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 12248,
											"end": 12251,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 12244,
											"end": 12256,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12241,
											"end": 12242,
											"name": "PUSH",
											"source": 14,
											"value": "5"
										},
										{
											"begin": 12237,
											"end": 12257,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 12231,
											"end": 12235,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 12227,
											"end": 12258,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12217,
											"end": 12258,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 12217,
											"end": 12258,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12308,
											"end": 12389,
											"name": "tag",
											"source": 14,
											"value": "674"
										},
										{
											"begin": 12308,
											"end": 12389,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12326,
											"end": 12328,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12319,
											"end": 12324,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12316,
											"end": 12329,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 12308,
											"end": 12389,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 12308,
											"end": 12389,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "676"
										},
										{
											"begin": 12308,
											"end": 12389,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12385,
											"end": 12386,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 12371,
											"end": 12387,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12371,
											"end": 12387,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 12352,
											"end": 12353,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 12341,
											"end": 12354,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 12308,
											"end": 12389,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "674"
										},
										{
											"begin": 12308,
											"end": 12389,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12308,
											"end": 12389,
											"name": "tag",
											"source": 14,
											"value": "676"
										},
										{
											"begin": 12308,
											"end": 12389,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12312,
											"end": 12315,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12312,
											"end": 12315,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11887,
											"end": 12405,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11887,
											"end": 12405,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11887,
											"end": 12405,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 11887,
											"end": 12405,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12581,
											"end": 13926,
											"name": "tag",
											"source": 14,
											"value": "219"
										},
										{
											"begin": 12581,
											"end": 13926,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12707,
											"end": 12710,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12701,
											"end": 12711,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 12734,
											"end": 12752,
											"name": "PUSH",
											"source": 14,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 12726,
											"end": 12732,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12723,
											"end": 12753,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 12720,
											"end": 12776,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 12720,
											"end": 12776,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "680"
										},
										{
											"begin": 12720,
											"end": 12776,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 12756,
											"end": 12774,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "680"
										},
										{
											"begin": 12756,
											"end": 12774,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "241"
										},
										{
											"begin": 12756,
											"end": 12774,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12756,
											"end": 12774,
											"name": "tag",
											"source": 14,
											"value": "680"
										},
										{
											"begin": 12756,
											"end": 12774,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12785,
											"end": 12882,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "681"
										},
										{
											"begin": 12875,
											"end": 12881,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 12835,
											"end": 12873,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "682"
										},
										{
											"begin": 12867,
											"end": 12871,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 12861,
											"end": 12872,
											"name": "SLOAD",
											"source": 14
										},
										{
											"begin": 12835,
											"end": 12873,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "342"
										},
										{
											"begin": 12835,
											"end": 12873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12835,
											"end": 12873,
											"name": "tag",
											"source": 14,
											"value": "682"
										},
										{
											"begin": 12835,
											"end": 12873,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12829,
											"end": 12833,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 12785,
											"end": 12882,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "563"
										},
										{
											"begin": 12785,
											"end": 12882,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 12785,
											"end": 12882,
											"name": "tag",
											"source": 14,
											"value": "681"
										},
										{
											"begin": 12785,
											"end": 12882,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12937,
											"end": 12941,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 12937,
											"end": 12941,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 12994,
											"end": 12996,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 12983,
											"end": 12997,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 12983,
											"end": 12997,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 13011,
											"end": 13012,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 13006,
											"end": 13669,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13006,
											"end": 13669,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 13006,
											"end": 13669,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "684"
										},
										{
											"begin": 13006,
											"end": 13669,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13713,
											"end": 13714,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 13730,
											"end": 13736,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 13727,
											"end": 13816,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 13727,
											"end": 13816,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "685"
										},
										{
											"begin": 13727,
											"end": 13816,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13782,
											"end": 13801,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 13782,
											"end": 13801,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 13782,
											"end": 13801,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13776,
											"end": 13802,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 13727,
											"end": 13816,
											"name": "tag",
											"source": 14,
											"value": "685"
										},
										{
											"begin": 13727,
											"end": 13816,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12538,
											"end": 12539,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 12534,
											"end": 12545,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 12534,
											"end": 12545,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12534,
											"end": 12545,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 12530,
											"end": 12554,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 12526,
											"end": 12555,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 12516,
											"end": 12556,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 12562,
											"end": 12563,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 12558,
											"end": 12569,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 12558,
											"end": 12569,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 12558,
											"end": 12569,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 12513,
											"end": 12570,
											"name": "OR",
											"source": 14
										},
										{
											"begin": 13829,
											"end": 13910,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 13829,
											"end": 13910,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 12976,
											"end": 13920,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "683"
										},
										{
											"begin": 12976,
											"end": 13920,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13006,
											"end": 13669,
											"name": "tag",
											"source": 14,
											"value": "684"
										},
										{
											"begin": 13006,
											"end": 13669,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 10724,
											"end": 10725,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 10717,
											"end": 10731,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 10717,
											"end": 10731,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10717,
											"end": 10731,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 10761,
											"end": 10765,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 10748,
											"end": 10766,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 10748,
											"end": 10766,
											"name": "KECCAK256",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13042,
											"end": 13062,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 13042,
											"end": 13062,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 13042,
											"end": 13062,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13160,
											"end": 13396,
											"name": "tag",
											"source": 14,
											"value": "688"
										},
										{
											"begin": 13160,
											"end": 13396,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13174,
											"end": 13181,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13171,
											"end": 13172,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13168,
											"end": 13182,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 13160,
											"end": 13396,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 13160,
											"end": 13396,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "690"
										},
										{
											"begin": 13160,
											"end": 13396,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13263,
											"end": 13282,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 13263,
											"end": 13282,
											"name": "DUP7",
											"source": 14
										},
										{
											"begin": 13263,
											"end": 13282,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13257,
											"end": 13283,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 13242,
											"end": 13284,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13242,
											"end": 13284,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 13355,
											"end": 13382,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 13355,
											"end": 13382,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 13355,
											"end": 13382,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13355,
											"end": 13382,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": 13323,
											"end": 13324,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 13311,
											"end": 13325,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13311,
											"end": 13325,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 13311,
											"end": 13325,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13311,
											"end": 13325,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13190,
											"end": 13209,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 13190,
											"end": 13209,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13160,
											"end": 13396,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "688"
										},
										{
											"begin": 13160,
											"end": 13396,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13160,
											"end": 13396,
											"name": "tag",
											"source": 14,
											"value": "690"
										},
										{
											"begin": 13160,
											"end": 13396,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13164,
											"end": 13167,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13424,
											"end": 13430,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 13415,
											"end": 13422,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 13412,
											"end": 13431,
											"name": "LT",
											"source": 14
										},
										{
											"begin": 13409,
											"end": 13610,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 13409,
											"end": 13610,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "691"
										},
										{
											"begin": 13409,
											"end": 13610,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 13485,
											"end": 13504,
											"name": "DUP8",
											"source": 14
										},
										{
											"begin": 13485,
											"end": 13504,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 13485,
											"end": 13504,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13479,
											"end": 13505,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13568,
											"end": 13569,
											"name": "PUSH",
											"source": 14,
											"value": "3"
										},
										{
											"begin": 13564,
											"end": 13578,
											"name": "DUP9",
											"source": 14
										},
										{
											"begin": 13564,
											"end": 13578,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 13564,
											"end": 13578,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 13580,
											"end": 13583,
											"name": "PUSH",
											"source": 14,
											"value": "F8"
										},
										{
											"begin": 13560,
											"end": 13584,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 13556,
											"end": 13593,
											"name": "SHR",
											"source": 14
										},
										{
											"begin": 13552,
											"end": 13594,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 13537,
											"end": 13595,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 13522,
											"end": 13596,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 13522,
											"end": 13596,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 13409,
											"end": 13610,
											"name": "tag",
											"source": 14,
											"value": "691"
										},
										{
											"begin": 13409,
											"end": 13610,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 13409,
											"end": 13610,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13409,
											"end": 13610,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 13656,
											"end": 13657,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 13647,
											"end": 13653,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 13644,
											"end": 13645,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 13640,
											"end": 13654,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 13636,
											"end": 13658,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 13630,
											"end": 13634,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 13623,
											"end": 13659,
											"name": "SSTORE",
											"source": 14
										},
										{
											"begin": 12976,
											"end": 13920,
											"name": "tag",
											"source": 14,
											"value": "683"
										},
										{
											"begin": 12976,
											"end": 13920,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 12976,
											"end": 13920,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12976,
											"end": 13920,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12976,
											"end": 13920,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12976,
											"end": 13920,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12581,
											"end": 13926,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12581,
											"end": 13926,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 12581,
											"end": 13926,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 13931,
											"end": 14233,
											"name": "tag",
											"source": 14,
											"value": "221"
										},
										{
											"begin": 13931,
											"end": 14233,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14108,
											"end": 14114,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14097,
											"end": 14106,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 14090,
											"end": 14115,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14151,
											"end": 14153,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 14146,
											"end": 14148,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 14135,
											"end": 14144,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14131,
											"end": 14149,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14124,
											"end": 14154,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 14071,
											"end": 14075,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14171,
											"end": 14227,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "585"
										},
										{
											"begin": 14223,
											"end": 14225,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 14212,
											"end": 14221,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 14208,
											"end": 14226,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14200,
											"end": 14206,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 14171,
											"end": 14227,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "559"
										},
										{
											"begin": 14171,
											"end": 14227,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14238,
											"end": 14373,
											"name": "tag",
											"source": 14,
											"value": "223"
										},
										{
											"begin": 14238,
											"end": 14373,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 14277,
											"end": 14280,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 14298,
											"end": 14315,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 14298,
											"end": 14315,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 14298,
											"end": 14315,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14295,
											"end": 14338,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "696"
										},
										{
											"begin": 14295,
											"end": 14338,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 14318,
											"end": 14336,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "696"
										},
										{
											"begin": 14318,
											"end": 14336,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "562"
										},
										{
											"begin": 14318,
											"end": 14336,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 14318,
											"end": 14336,
											"name": "tag",
											"source": 14,
											"value": "696"
										},
										{
											"begin": 14318,
											"end": 14336,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14365,
											"end": 14366,
											"name": "PUSH",
											"source": 14,
											"value": "1"
										},
										{
											"begin": 14354,
											"end": 14367,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14354,
											"end": 14367,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 14238,
											"end": 14373,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15828,
											"end": 15956,
											"name": "tag",
											"source": 14,
											"value": "322"
										},
										{
											"begin": 15828,
											"end": 15956,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 15895,
											"end": 15904,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15895,
											"end": 15904,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15895,
											"end": 15904,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 15916,
											"end": 15927,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15916,
											"end": 15927,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 15916,
											"end": 15927,
											"name": "GT",
											"source": 14
										},
										{
											"begin": 15913,
											"end": 15950,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 15913,
											"end": 15950,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "186"
										},
										{
											"begin": 15913,
											"end": 15950,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 15930,
											"end": 15948,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "186"
										},
										{
											"begin": 15930,
											"end": 15948,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "562"
										},
										{
											"begin": 15930,
											"end": 15948,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 15961,
											"end": 16088,
											"name": "tag",
											"source": 14,
											"value": "331"
										},
										{
											"begin": 15961,
											"end": 16088,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 16022,
											"end": 16032,
											"name": "PUSH",
											"source": 14,
											"value": "4E487B71"
										},
										{
											"begin": 16017,
											"end": 16020,
											"name": "PUSH",
											"source": 14,
											"value": "E0"
										},
										{
											"begin": 16013,
											"end": 16033,
											"name": "SHL",
											"source": 14
										},
										{
											"begin": 16010,
											"end": 16011,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16003,
											"end": 16034,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 16053,
											"end": 16057,
											"name": "PUSH",
											"source": 14,
											"value": "31"
										},
										{
											"begin": 16050,
											"end": 16051,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 16043,
											"end": 16058,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 16077,
											"end": 16081,
											"name": "PUSH",
											"source": 14,
											"value": "24"
										},
										{
											"begin": 16074,
											"end": 16075,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 16067,
											"end": 16082,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 17525,
											"end": 17709,
											"name": "tag",
											"source": 14,
											"value": "451"
										},
										{
											"begin": 17525,
											"end": 17709,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 17595,
											"end": 17601,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17648,
											"end": 17650,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 17636,
											"end": 17645,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 17627,
											"end": 17634,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 17623,
											"end": 17646,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 17619,
											"end": 17651,
											"name": "SLT",
											"source": 14
										},
										{
											"begin": 17616,
											"end": 17668,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 17616,
											"end": 17668,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "711"
										},
										{
											"begin": 17616,
											"end": 17668,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 17664,
											"end": 17665,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 17661,
											"end": 17662,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 17654,
											"end": 17666,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 17616,
											"end": 17668,
											"name": "tag",
											"source": 14,
											"value": "711"
										},
										{
											"begin": 17616,
											"end": 17668,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17687,
											"end": 17703,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 17687,
											"end": 17703,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 17525,
											"end": 17709,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 17525,
											"end": 17709,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										}
									],
									".data": {
										"3059375685003C5C33343043CB51F6C6B03E849D5B2F19339E935F8B505D9FE3": "9b7946abd96dccbe6cfc6cc2c13300ab429d93e16fa72dc459eeccda73817f08",
										"75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D": "360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc",
										"9B87106A812D214D41AD9B68A21119E2948EAAF1040375C939EC808B8862455C": "65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
										"B3DA67D1B252AEAB7C8063542D95E75F82A5307A82535949BC38F7CF7BA8897F": "02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800",
										"C0C65A3718F3702D917C44106B91645B509D2E2D0979B70495C3BABCE192339F": "cd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300"
									}
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"GAME_ADMIN_ROLE()": "be22d27d",
							"PAUSER_ROLE()": "e63ab1e9",
							"UPGRADER_ROLE()": "f72c0d8b",
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"addItem(string,uint256,uint256,uint256,uint256)": "31fee8be",
							"addRecipe(uint256[],uint256)": "a9834b67",
							"completeQuest(string)": "17435e1a",
							"craftItem(uint256)": "7309cbbd",
							"createGuild(string,address)": "4fa4a1bb",
							"createPlayer()": "3fa9fcf8",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"guilds(address)": "a75859e1",
							"hasRole(bytes32,address)": "91d14854",
							"initialize(address,address,address)": "c0c53b8b",
							"items(uint256)": "bfb231d2",
							"joinGuild(string)": "e551ba4b",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"playerQuests(address,uint256)": "d3dcff7c",
							"players(address)": "e2eb41ff",
							"proxiableUUID()": "52d1902d",
							"recipes(uint256)": "443c227c",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"startQuest(string,string,uint256)": "6f347a78",
							"supportsInterface(bytes4)": "01ffc9a7",
							"unpause()": "3f4ba83a",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"leader\",\"type\":\"address\"}],\"name\":\"GuildCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"itemId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"itemName\",\"type\":\"string\"}],\"name\":\"ItemAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"}],\"name\":\"PlayerCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"player\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"questTitle\",\"type\":\"string\"}],\"name\":\"QuestCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"recipeId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"resultItemId\",\"type\":\"uint256\"}],\"name\":\"RecipeAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"GAME_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"attackBonus\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"defenseBonus\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"manaBonus\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"healthBonus\",\"type\":\"uint256\"}],\"name\":\"addItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"itemIds\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"resultItemId\",\"type\":\"uint256\"}],\"name\":\"addRecipe\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"questTitle\",\"type\":\"string\"}],\"name\":\"completeQuest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"recipeId\",\"type\":\"uint256\"}],\"name\":\"craftItem\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"leader\",\"type\":\"address\"}],\"name\":\"createGuild\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"createPlayer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"guilds\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"leader\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"defaultAdmin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pauser\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"upgrader\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"items\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"attackBonus\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"defenseBonus\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"manaBonus\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"healthBonus\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"guildName\",\"type\":\"string\"}],\"name\":\"joinGuild\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"playerQuests\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"rewardXP\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"completed\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"players\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"level\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"experience\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"health\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"mana\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"attackDamage\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"defense\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"agility\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"luck\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"recipes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"resultItemId\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"title\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"rewardXP\",\"type\":\"uint256\"}],\"name\":\"startQuest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":\"CryptoQuestTheShardsOfGenesisMMPORPG\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x6662ec4e5cefca03eeadd073e9469df8d2944bb2ee8ec8f7622c2c46aab5f225\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d8544c6f8daa4d1bc215c6a72fe0acdb748664a105b0e5efc19295667521d45\",\"dweb:/ipfs/QmdGWqdnXT8S3RgCR6aV8XHZrsybieMQLLnug1NtpSjEXN\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930\",\"dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0x92915b7f7f642c6be3f65bfd1522feb5d5b6ef25f755f4dbb51df32c868f2f97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85ad36d5cc7e190e1ee6c94b24659bc3a31396c4c36b6ffa6a509e10661f8007\",\"dweb:/ipfs/QmPFyc4zMh2zo6YWZt25gjm3YdR2hg6wGETaWw256fMmJJ\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xdaba3f7c42c55b2896353f32bd27d4d5f8bae741b3b05d4c53f67abc4dc47ce8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fa2e61141c602510bcd2cd936ed9561922ac8772a9b9c9a9db091a74e354a45\",\"dweb:/ipfs/QmcHQDDoEBwJmwUbzoVkytvJsBx3KVHYFFnDkvRGWh9Wmh\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol\":{\"keccak256\":\"0x0dff3fe44ecbaca33f0575d5f619149b56e8290227e97807cf1c4676b4f39efe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://44a3d26240f104e6b70153f28c45af4bc330928b5866cd85654805804ae27125\",\"dweb:/ipfs/QmY6jtgvfRh3zZ8piiWKL8py885pt9Bsp2UT3zhKA8HHxf\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 1932,
								"contract": "src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol:CryptoQuestTheShardsOfGenesisMMPORPG",
								"label": "nextItemId",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							},
							{
								"astId": 1935,
								"contract": "src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol:CryptoQuestTheShardsOfGenesisMMPORPG",
								"label": "nextRecipeId",
								"offset": 0,
								"slot": "1",
								"type": "t_uint256"
							},
							{
								"astId": 1940,
								"contract": "src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol:CryptoQuestTheShardsOfGenesisMMPORPG",
								"label": "items",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_uint256,t_struct(Item)1906_storage)"
							},
							{
								"astId": 1945,
								"contract": "src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol:CryptoQuestTheShardsOfGenesisMMPORPG",
								"label": "players",
								"offset": 0,
								"slot": "3",
								"type": "t_mapping(t_address,t_struct(Player)1893_storage)"
							},
							{
								"astId": 1951,
								"contract": "src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol:CryptoQuestTheShardsOfGenesisMMPORPG",
								"label": "playerQuests",
								"offset": 0,
								"slot": "4",
								"type": "t_mapping(t_address,t_array(t_struct(Quest)1915_storage)dyn_storage)"
							},
							{
								"astId": 1956,
								"contract": "src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol:CryptoQuestTheShardsOfGenesisMMPORPG",
								"label": "guilds",
								"offset": 0,
								"slot": "5",
								"type": "t_mapping(t_address,t_struct(Guild)1923_storage)"
							},
							{
								"astId": 1960,
								"contract": "src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol:CryptoQuestTheShardsOfGenesisMMPORPG",
								"label": "guildNameToLeader",
								"offset": 0,
								"slot": "6",
								"type": "t_mapping(t_string_memory_ptr,t_address)"
							},
							{
								"astId": 1965,
								"contract": "src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol:CryptoQuestTheShardsOfGenesisMMPORPG",
								"label": "recipes",
								"offset": 0,
								"slot": "7",
								"type": "t_mapping(t_uint256,t_struct(Recipe)1929_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_address)dyn_storage": {
								"base": "t_address",
								"encoding": "dynamic_array",
								"label": "address[]",
								"numberOfBytes": "32"
							},
							"t_array(t_struct(Quest)1915_storage)dyn_storage": {
								"base": "t_struct(Quest)1915_storage",
								"encoding": "dynamic_array",
								"label": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Quest[]",
								"numberOfBytes": "32"
							},
							"t_array(t_uint256)dyn_storage": {
								"base": "t_uint256",
								"encoding": "dynamic_array",
								"label": "uint256[]",
								"numberOfBytes": "32"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_mapping(t_address,t_array(t_struct(Quest)1915_storage)dyn_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct CryptoQuestTheShardsOfGenesisMMPORPG.Quest[])",
								"numberOfBytes": "32",
								"value": "t_array(t_struct(Quest)1915_storage)dyn_storage"
							},
							"t_mapping(t_address,t_struct(Guild)1923_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct CryptoQuestTheShardsOfGenesisMMPORPG.Guild)",
								"numberOfBytes": "32",
								"value": "t_struct(Guild)1923_storage"
							},
							"t_mapping(t_address,t_struct(Player)1893_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct CryptoQuestTheShardsOfGenesisMMPORPG.Player)",
								"numberOfBytes": "32",
								"value": "t_struct(Player)1893_storage"
							},
							"t_mapping(t_string_memory_ptr,t_address)": {
								"encoding": "mapping",
								"key": "t_string_memory_ptr",
								"label": "mapping(string => address)",
								"numberOfBytes": "32",
								"value": "t_address"
							},
							"t_mapping(t_uint256,t_struct(Item)1906_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct CryptoQuestTheShardsOfGenesisMMPORPG.Item)",
								"numberOfBytes": "32",
								"value": "t_struct(Item)1906_storage"
							},
							"t_mapping(t_uint256,t_struct(Recipe)1929_storage)": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => struct CryptoQuestTheShardsOfGenesisMMPORPG.Recipe)",
								"numberOfBytes": "32",
								"value": "t_struct(Recipe)1929_storage"
							},
							"t_string_memory_ptr": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_string_storage": {
								"encoding": "bytes",
								"label": "string",
								"numberOfBytes": "32"
							},
							"t_struct(Guild)1923_storage": {
								"encoding": "inplace",
								"label": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Guild",
								"members": [
									{
										"astId": 1917,
										"contract": "src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol:CryptoQuestTheShardsOfGenesisMMPORPG",
										"label": "name",
										"offset": 0,
										"slot": "0",
										"type": "t_string_storage"
									},
									{
										"astId": 1919,
										"contract": "src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol:CryptoQuestTheShardsOfGenesisMMPORPG",
										"label": "leader",
										"offset": 0,
										"slot": "1",
										"type": "t_address"
									},
									{
										"astId": 1922,
										"contract": "src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol:CryptoQuestTheShardsOfGenesisMMPORPG",
										"label": "members",
										"offset": 0,
										"slot": "2",
										"type": "t_array(t_address)dyn_storage"
									}
								],
								"numberOfBytes": "96"
							},
							"t_struct(Item)1906_storage": {
								"encoding": "inplace",
								"label": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Item",
								"members": [
									{
										"astId": 1895,
										"contract": "src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol:CryptoQuestTheShardsOfGenesisMMPORPG",
										"label": "id",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1897,
										"contract": "src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol:CryptoQuestTheShardsOfGenesisMMPORPG",
										"label": "name",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									},
									{
										"astId": 1899,
										"contract": "src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol:CryptoQuestTheShardsOfGenesisMMPORPG",
										"label": "attackBonus",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1901,
										"contract": "src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol:CryptoQuestTheShardsOfGenesisMMPORPG",
										"label": "defenseBonus",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1903,
										"contract": "src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol:CryptoQuestTheShardsOfGenesisMMPORPG",
										"label": "manaBonus",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 1905,
										"contract": "src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol:CryptoQuestTheShardsOfGenesisMMPORPG",
										"label": "healthBonus",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "192"
							},
							"t_struct(Player)1893_storage": {
								"encoding": "inplace",
								"label": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Player",
								"members": [
									{
										"astId": 1872,
										"contract": "src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol:CryptoQuestTheShardsOfGenesisMMPORPG",
										"label": "level",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 1874,
										"contract": "src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol:CryptoQuestTheShardsOfGenesisMMPORPG",
										"label": "experience",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 1876,
										"contract": "src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol:CryptoQuestTheShardsOfGenesisMMPORPG",
										"label": "health",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1878,
										"contract": "src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol:CryptoQuestTheShardsOfGenesisMMPORPG",
										"label": "mana",
										"offset": 0,
										"slot": "3",
										"type": "t_uint256"
									},
									{
										"astId": 1880,
										"contract": "src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol:CryptoQuestTheShardsOfGenesisMMPORPG",
										"label": "attackDamage",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									},
									{
										"astId": 1882,
										"contract": "src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol:CryptoQuestTheShardsOfGenesisMMPORPG",
										"label": "defense",
										"offset": 0,
										"slot": "5",
										"type": "t_uint256"
									},
									{
										"astId": 1884,
										"contract": "src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol:CryptoQuestTheShardsOfGenesisMMPORPG",
										"label": "agility",
										"offset": 0,
										"slot": "6",
										"type": "t_uint256"
									},
									{
										"astId": 1886,
										"contract": "src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol:CryptoQuestTheShardsOfGenesisMMPORPG",
										"label": "luck",
										"offset": 0,
										"slot": "7",
										"type": "t_uint256"
									},
									{
										"astId": 1889,
										"contract": "src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol:CryptoQuestTheShardsOfGenesisMMPORPG",
										"label": "inventory",
										"offset": 0,
										"slot": "8",
										"type": "t_array(t_uint256)dyn_storage"
									},
									{
										"astId": 1892,
										"contract": "src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol:CryptoQuestTheShardsOfGenesisMMPORPG",
										"label": "skills",
										"offset": 0,
										"slot": "9",
										"type": "t_array(t_uint256)dyn_storage"
									}
								],
								"numberOfBytes": "320"
							},
							"t_struct(Quest)1915_storage": {
								"encoding": "inplace",
								"label": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Quest",
								"members": [
									{
										"astId": 1908,
										"contract": "src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol:CryptoQuestTheShardsOfGenesisMMPORPG",
										"label": "title",
										"offset": 0,
										"slot": "0",
										"type": "t_string_storage"
									},
									{
										"astId": 1910,
										"contract": "src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol:CryptoQuestTheShardsOfGenesisMMPORPG",
										"label": "description",
										"offset": 0,
										"slot": "1",
										"type": "t_string_storage"
									},
									{
										"astId": 1912,
										"contract": "src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol:CryptoQuestTheShardsOfGenesisMMPORPG",
										"label": "rewardXP",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 1914,
										"contract": "src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol:CryptoQuestTheShardsOfGenesisMMPORPG",
										"label": "completed",
										"offset": 0,
										"slot": "3",
										"type": "t_bool"
									}
								],
								"numberOfBytes": "128"
							},
							"t_struct(Recipe)1929_storage": {
								"encoding": "inplace",
								"label": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Recipe",
								"members": [
									{
										"astId": 1926,
										"contract": "src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol:CryptoQuestTheShardsOfGenesisMMPORPG",
										"label": "itemIds",
										"offset": 0,
										"slot": "0",
										"type": "t_array(t_uint256)dyn_storage"
									},
									{
										"astId": 1928,
										"contract": "src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol:CryptoQuestTheShardsOfGenesisMMPORPG",
										"label": "resultItemId",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
					"exportedSymbols": {
						"AccessControlUpgradeable": [
							362
						],
						"ContextUpgradeable": [
							844
						],
						"ERC165Upgradeable": [
							1060
						],
						"IAccessControl": [
							1143
						],
						"Initializable": [
							616
						]
					},
					"id": 363,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "@openzeppelin/contracts/access/IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 363,
							"sourceUnit": 1144,
							"src": "134:81:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1143,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 363,
							"sourceUnit": 845,
							"src": "216:67:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 844,
										"src": "224:18:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
							"file": "../utils/introspection/ERC165Upgradeable.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 363,
							"sourceUnit": 1061,
							"src": "284:79:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "ERC165Upgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1060,
										"src": "292:17:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 9,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 363,
							"sourceUnit": 617,
							"src": "364:63:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 8,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 616,
										"src": "372:13:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 11,
										"name": "Initializable",
										"nameLocations": [
											"2136:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 616,
										"src": "2136:13:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "2136:13:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"2151:18:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 844,
										"src": "2151:18:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "2151:18:0"
								},
								{
									"baseName": {
										"id": 15,
										"name": "IAccessControl",
										"nameLocations": [
											"2171:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1143,
										"src": "2171:14:0"
									},
									"id": 16,
									"nodeType": "InheritanceSpecifier",
									"src": "2171:14:0"
								},
								{
									"baseName": {
										"id": 17,
										"name": "ERC165Upgradeable",
										"nameLocations": [
											"2187:17:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1060,
										"src": "2187:17:0"
									},
									"id": 18,
									"nodeType": "InheritanceSpecifier",
									"src": "2187:17:0"
								}
							],
							"canonicalName": "AccessControlUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 10,
								"nodeType": "StructuredDocumentation",
								"src": "429:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 362,
							"linearizedBaseContracts": [
								362,
								1060,
								1841,
								1143,
								844,
								616
							],
							"name": "AccessControlUpgradeable",
							"nameLocation": "2108:24:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControlUpgradeable.RoleData",
									"id": 25,
									"members": [
										{
											"constant": false,
											"id": 22,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2270:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 25,
											"src": "2237:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 21,
												"keyName": "account",
												"keyNameLocation": "2253:7:0",
												"keyType": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2237:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 20,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2264:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 24,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2295:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 25,
											"src": "2287:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 23,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2287:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2218:8:0",
									"nodeType": "StructDefinition",
									"scope": 362,
									"src": "2211:100:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 28,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2341:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 362,
									"src": "2317:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 26,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2317:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 27,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2362:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"canonicalName": "AccessControlUpgradeable.AccessControlStorage",
									"documentation": {
										"id": 29,
										"nodeType": "StructuredDocumentation",
										"src": "2374:71:0",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.AccessControl"
									},
									"id": 35,
									"members": [
										{
											"constant": false,
											"id": 34,
											"mutability": "mutable",
											"name": "_roles",
											"nameLocation": "2522:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 35,
											"src": "2488:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$",
												"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
											},
											"typeName": {
												"id": 33,
												"keyName": "role",
												"keyNameLocation": "2504:4:0",
												"keyType": {
													"id": 30,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2496:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "Mapping",
												"src": "2488:33:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$",
													"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 32,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 31,
														"name": "RoleData",
														"nameLocations": [
															"2512:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 25,
														"src": "2512:8:0"
													},
													"referencedDeclaration": 25,
													"src": "2512:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RoleData_$25_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.RoleData"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AccessControlStorage",
									"nameLocation": "2457:20:0",
									"nodeType": "StructDefinition",
									"scope": 362,
									"src": "2450:85:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 38,
									"mutability": "constant",
									"name": "AccessControlStorageLocation",
									"nameLocation": "2683:28:0",
									"nodeType": "VariableDeclaration",
									"scope": 362,
									"src": "2658:122:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 36,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2658:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307830326464376263376465633464636565646461373735653538646435343165303861313136633663353338313563306264303238313932663762363236383030",
										"id": 37,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2714:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1295953201772911215391058989745868821651057887752387839782086074958115661824_by_1",
											"typeString": "int_const 1295...(68 digits omitted)...1824"
										},
										"value": "0x02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "2877:87:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2896:62:0",
													"nodeType": "YulBlock",
													"src": "2896:62:0",
													"statements": [
														{
															"nativeSrc": "2910:38:0",
															"nodeType": "YulAssignment",
															"src": "2910:38:0",
															"value": {
																"name": "AccessControlStorageLocation",
																"nativeSrc": "2920:28:0",
																"nodeType": "YulIdentifier",
																"src": "2920:28:0"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "2910:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "2910:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 42,
														"isOffset": false,
														"isSlot": true,
														"src": "2910:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 38,
														"isOffset": false,
														"isSlot": false,
														"src": "2920:28:0",
														"valueSize": 1
													}
												],
												"id": 44,
												"nodeType": "InlineAssembly",
												"src": "2887:71:0"
											}
										]
									},
									"id": 46,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getAccessControlStorage",
									"nameLocation": "2796:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2820:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "2874:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "2845:30:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
													"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
												},
												"typeName": {
													"id": 41,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 40,
														"name": "AccessControlStorage",
														"nameLocations": [
															"2845:20:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 35,
														"src": "2845:20:0"
													},
													"referencedDeclaration": 35,
													"src": "2845:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2844:32:0"
									},
									"scope": 362,
									"src": "2787:177:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 56,
										"nodeType": "Block",
										"src": "3181:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 52,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 49,
															"src": "3202:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 51,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															129,
															150
														],
														"referencedDeclaration": 129,
														"src": "3191:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3191:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 54,
												"nodeType": "ExpressionStatement",
												"src": "3191:16:0"
											},
											{
												"id": 55,
												"nodeType": "PlaceholderStatement",
												"src": "3217:1:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "2970:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 57,
									"name": "onlyRole",
									"nameLocation": "3158:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3175:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "3167:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 48,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3167:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3166:14:0"
									},
									"src": "3149:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "3289:7:0",
										"statements": []
									},
									"id": 63,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 60,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 59,
												"name": "onlyInitializing",
												"nameLocations": [
													"3272:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "3272:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3272:16:0"
										}
									],
									"name": "__AccessControl_init",
									"nameLocation": "3240:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3260:2:0"
									},
									"returnParameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3289:0:0"
									},
									"scope": 362,
									"src": "3231:65:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 68,
										"nodeType": "Block",
										"src": "3370:7:0",
										"statements": []
									},
									"id": 69,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyInitializing",
												"nameLocations": [
													"3353:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "3353:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3353:16:0"
										}
									],
									"name": "__AccessControl_init_unchained",
									"nameLocation": "3311:30:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3341:2:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3370:0:0"
									},
									"scope": 362,
									"src": "3302:75:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1059
									],
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "3534:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 83,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 78,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 72,
															"src": "3551:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 80,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1143,
																		"src": "3571:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$1143_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$1143_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 79,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "3566:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3566:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$1143",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "3587:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "3566:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "3551:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 86,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 72,
																"src": "3626:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 84,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "3602:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControlUpgradeable_$362_$",
																	"typeString": "type(contract super AccessControlUpgradeable)"
																}
															},
															"id": 85,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3608:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1059,
															"src": "3602:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 87,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3602:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3551:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 77,
												"id": 89,
												"nodeType": "Return",
												"src": "3544:94:0"
											}
										]
									},
									"documentation": {
										"id": 70,
										"nodeType": "StructuredDocumentation",
										"src": "3382:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "3452:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 74,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3510:8:0"
									},
									"parameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "3477:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "3470:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 71,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "3470:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3469:20:0"
									},
									"returnParameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "3528:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 75,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3528:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3527:6:0"
									},
									"scope": 362,
									"src": "3443:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1110
									],
									"body": {
										"id": 115,
										"nodeType": "Block",
										"src": "3815:124:0",
										"statements": [
											{
												"assignments": [
													103
												],
												"declarations": [
													{
														"constant": false,
														"id": 103,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3854:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 115,
														"src": "3825:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
															"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
														},
														"typeName": {
															"id": 102,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 101,
																"name": "AccessControlStorage",
																"nameLocations": [
																	"3825:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 35,
																"src": "3825:20:0"
															},
															"referencedDeclaration": 35,
															"src": "3825:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 106,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 104,
														"name": "_getAccessControlStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "3858:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$",
															"typeString": "function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"
														}
													},
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3858:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3825:59:0"
											},
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"expression": {
																	"id": 107,
																	"name": "$",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 103,
																	"src": "3901:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																		"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
																	}
																},
																"id": 108,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3903:6:0",
																"memberName": "_roles",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 34,
																"src": "3901:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																}
															},
															"id": 110,
															"indexExpression": {
																"id": 109,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 94,
																"src": "3910:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3901:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$25_storage",
																"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
															}
														},
														"id": 111,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3916:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 22,
														"src": "3901:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 113,
													"indexExpression": {
														"id": 112,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 96,
														"src": "3924:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3901:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 100,
												"id": 114,
												"nodeType": "Return",
												"src": "3894:38:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "3651:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "3741:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3757:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "3749:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 93,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3749:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3771:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "3763:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 95,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3763:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3748:31:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "3809:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 98,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3809:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3808:6:0"
									},
									"scope": 362,
									"src": "3732:207:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 128,
										"nodeType": "Block",
										"src": "4204:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 123,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "4225:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 124,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 826,
																"src": "4231:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4231:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 122,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															129,
															150
														],
														"referencedDeclaration": 150,
														"src": "4214:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4214:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 127,
												"nodeType": "ExpressionStatement",
												"src": "4214:30:0"
											}
										]
									},
									"documentation": {
										"id": 117,
										"nodeType": "StructuredDocumentation",
										"src": "3945:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "4157:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4176:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "4168:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 118,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4168:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4167:14:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4204:0:0"
									},
									"scope": 362,
									"src": "4148:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 149,
										"nodeType": "Block",
										"src": "4454:124:0",
										"statements": [
											{
												"condition": {
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4468:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 138,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 132,
																"src": "4477:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 139,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 134,
																"src": "4483:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 137,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 116,
															"src": "4469:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 140,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4469:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 148,
												"nodeType": "IfStatement",
												"src": "4464:108:0",
												"trueBody": {
													"id": 147,
													"nodeType": "Block",
													"src": "4493:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 143,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 134,
																		"src": "4547:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 144,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 132,
																		"src": "4556:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 142,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1070,
																	"src": "4514:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$__$",
																		"typeString": "function (address,bytes32) pure"
																	}
																},
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4514:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 146,
															"nodeType": "RevertStatement",
															"src": "4507:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 130,
										"nodeType": "StructuredDocumentation",
										"src": "4257:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "4390:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4409:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4401:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 131,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4401:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4423:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4415:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4400:31:0"
									},
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4454:0:0"
									},
									"scope": 362,
									"src": "4381:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1118
									],
									"body": {
										"id": 170,
										"nodeType": "Block",
										"src": "4833:117:0",
										"statements": [
											{
												"assignments": [
													160
												],
												"declarations": [
													{
														"constant": false,
														"id": 160,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4872:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 170,
														"src": "4843:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
															"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
														},
														"typeName": {
															"id": 159,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 158,
																"name": "AccessControlStorage",
																"nameLocations": [
																	"4843:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 35,
																"src": "4843:20:0"
															},
															"referencedDeclaration": 35,
															"src": "4843:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 163,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 161,
														"name": "_getAccessControlStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "4876:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$",
															"typeString": "function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"
														}
													},
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4876:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4843:59:0"
											},
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"expression": {
																"id": 164,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 160,
																"src": "4919:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																	"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
																}
															},
															"id": 165,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4921:6:0",
															"memberName": "_roles",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 34,
															"src": "4919:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
															}
														},
														"id": 167,
														"indexExpression": {
															"id": 166,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "4928:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4919:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$25_storage",
															"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
														}
													},
													"id": 168,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4934:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 24,
													"src": "4919:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 157,
												"id": 169,
												"nodeType": "Return",
												"src": "4912:31:0"
											}
										]
									},
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "4584:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 171,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "4768:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4789:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "4781:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 152,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4781:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4780:14:0"
									},
									"returnParameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "4824:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 155,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4823:9:0"
									},
									"scope": 362,
									"src": "4759:191:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1126
									],
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "5340:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 185,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 174,
															"src": "5361:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 186,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 176,
															"src": "5367:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 184,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "5350:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5350:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "5350:25:0"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "4956:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 180,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 174,
															"src": "5333:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 179,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5320:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5320:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 182,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 178,
												"name": "onlyRole",
												"nameLocations": [
													"5311:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "5311:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5311:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "5255:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5273:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5265:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 173,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5265:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5287:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5279:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5279:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5264:31:0"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5340:0:0"
									},
									"scope": 362,
									"src": "5246:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1134
									],
									"body": {
										"id": 208,
										"nodeType": "Block",
										"src": "5757:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 204,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "5779:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 205,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "5785:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 203,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 361,
														"src": "5767:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5767:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 207,
												"nodeType": "ExpressionStatement",
												"src": "5767:26:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "5388:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 209,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 199,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "5750:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 198,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5737:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5737:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 201,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 197,
												"name": "onlyRole",
												"nameLocations": [
													"5728:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "5728:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5728:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "5671:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5690:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "5682:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 192,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5704:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "5696:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5681:31:0"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5757:0:0"
									},
									"scope": 362,
									"src": "5662:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1142
									],
									"body": {
										"id": 231,
										"nodeType": "Block",
										"src": "6427:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 217,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 214,
														"src": "6441:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 218,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 826,
															"src": "6463:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 219,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6463:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6441:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 225,
												"nodeType": "IfStatement",
												"src": "6437:102:0",
												"trueBody": {
													"id": 224,
													"nodeType": "Block",
													"src": "6477:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 221,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1073,
																	"src": "6498:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 222,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6498:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 223,
															"nodeType": "RevertStatement",
															"src": "6491:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 227,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 212,
															"src": "6561:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 228,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "6567:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 226,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 361,
														"src": "6549:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6549:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 230,
												"nodeType": "ExpressionStatement",
												"src": "6549:37:0"
											}
										]
									},
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "5806:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "6357:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6378:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "6370:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 211,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6370:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "6392:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "6384:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6384:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6369:42:0"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6427:0:0"
									},
									"scope": 362,
									"src": "6348:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 267,
										"nodeType": "Block",
										"src": "6791:245:0",
										"statements": [
											{
												"assignments": [
													242
												],
												"declarations": [
													{
														"constant": false,
														"id": 242,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6830:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 267,
														"src": "6801:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
															"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
														},
														"typeName": {
															"id": 241,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 240,
																"name": "AccessControlStorage",
																"nameLocations": [
																	"6801:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 35,
																"src": "6801:20:0"
															},
															"referencedDeclaration": 35,
															"src": "6801:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 245,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 243,
														"name": "_getAccessControlStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "6834:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$",
															"typeString": "function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"
														}
													},
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6834:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6801:59:0"
											},
											{
												"assignments": [
													247
												],
												"declarations": [
													{
														"constant": false,
														"id": 247,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "6878:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 267,
														"src": "6870:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 246,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "6870:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [
														{
															"id": 249,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "6911:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 248,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "6898:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6898:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6870:46:0"
											},
											{
												"expression": {
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"expression": {
																	"id": 252,
																	"name": "$",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "6926:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																		"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
																	}
																},
																"id": 255,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6928:6:0",
																"memberName": "_roles",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 34,
																"src": "6926:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																}
															},
															"id": 256,
															"indexExpression": {
																"id": 254,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 235,
																"src": "6935:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6926:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$25_storage",
																"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
															}
														},
														"id": 257,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6941:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 24,
														"src": "6926:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 258,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 237,
														"src": "6953:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "6926:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 260,
												"nodeType": "ExpressionStatement",
												"src": "6926:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 262,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "6994:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 263,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "7000:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 264,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "7019:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 261,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1082,
														"src": "6977:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6977:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 266,
												"nodeType": "EmitStatement",
												"src": "6972:57:0"
											}
										]
									},
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "6599:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "6727:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6749:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "6741:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 234,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6741:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "6763:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "6755:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 236,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6755:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6740:33:0"
									},
									"returnParameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6791:0:0"
									},
									"scope": 362,
									"src": "6718:318:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 314,
										"nodeType": "Block",
										"src": "7353:304:0",
										"statements": [
											{
												"assignments": [
													280
												],
												"declarations": [
													{
														"constant": false,
														"id": 280,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7392:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 314,
														"src": "7363:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
															"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
														},
														"typeName": {
															"id": 279,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 278,
																"name": "AccessControlStorage",
																"nameLocations": [
																	"7363:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 35,
																"src": "7363:20:0"
															},
															"referencedDeclaration": 35,
															"src": "7363:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 283,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 281,
														"name": "_getAccessControlStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "7396:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$",
															"typeString": "function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"
														}
													},
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7396:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7363:59:0"
											},
											{
												"condition": {
													"id": 288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7436:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 285,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 271,
																"src": "7445:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 286,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 273,
																"src": "7451:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 284,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 116,
															"src": "7437:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 287,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7437:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 312,
													"nodeType": "Block",
													"src": "7614:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 310,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7635:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 277,
															"id": 311,
															"nodeType": "Return",
															"src": "7628:12:0"
														}
													]
												},
												"id": 313,
												"nodeType": "IfStatement",
												"src": "7432:219:0",
												"trueBody": {
													"id": 309,
													"nodeType": "Block",
													"src": "7461:147:0",
													"statements": [
														{
															"expression": {
																"id": 298,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"expression": {
																					"id": 289,
																					"name": "$",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 280,
																					"src": "7475:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																						"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
																					}
																				},
																				"id": 292,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7477:6:0",
																				"memberName": "_roles",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 34,
																				"src": "7475:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																				}
																			},
																			"id": 293,
																			"indexExpression": {
																				"id": 291,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 271,
																				"src": "7484:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7475:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$25_storage",
																				"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
																			}
																		},
																		"id": 294,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7490:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 22,
																		"src": "7475:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 296,
																	"indexExpression": {
																		"id": 295,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 273,
																		"src": "7498:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7475:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 297,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7509:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "7475:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 299,
															"nodeType": "ExpressionStatement",
															"src": "7475:38:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 301,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 271,
																		"src": "7544:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 302,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 273,
																		"src": "7550:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 303,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 826,
																			"src": "7559:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 304,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7559:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 300,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1091,
																	"src": "7532:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 305,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7532:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 306,
															"nodeType": "EmitStatement",
															"src": "7527:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 307,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7593:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 277,
															"id": 308,
															"nodeType": "Return",
															"src": "7586:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "7042:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "7279:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7298:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "7290:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 270,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7290:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7312:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "7304:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7304:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7289:31:0"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "7347:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 275,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7347:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7346:6:0"
									},
									"scope": 362,
									"src": "7270:387:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 360,
										"nodeType": "Block",
										"src": "7976:304:0",
										"statements": [
											{
												"assignments": [
													327
												],
												"declarations": [
													{
														"constant": false,
														"id": 327,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "8015:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 360,
														"src": "7986:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
															"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
														},
														"typeName": {
															"id": 326,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 325,
																"name": "AccessControlStorage",
																"nameLocations": [
																	"7986:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 35,
																"src": "7986:20:0"
															},
															"referencedDeclaration": 35,
															"src": "7986:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 330,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 328,
														"name": "_getAccessControlStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "8019:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$",
															"typeString": "function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8019:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7986:59:0"
											},
											{
												"condition": {
													"arguments": [
														{
															"id": 332,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 318,
															"src": "8067:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 333,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 320,
															"src": "8073:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 331,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 116,
														"src": "8059:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8059:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 358,
													"nodeType": "Block",
													"src": "8237:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 356,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8258:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 324,
															"id": 357,
															"nodeType": "Return",
															"src": "8251:12:0"
														}
													]
												},
												"id": 359,
												"nodeType": "IfStatement",
												"src": "8055:219:0",
												"trueBody": {
													"id": 355,
													"nodeType": "Block",
													"src": "8083:148:0",
													"statements": [
														{
															"expression": {
																"id": 344,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"expression": {
																					"id": 335,
																					"name": "$",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 327,
																					"src": "8097:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																						"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
																					}
																				},
																				"id": 338,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "8099:6:0",
																				"memberName": "_roles",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 34,
																				"src": "8097:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																				}
																			},
																			"id": 339,
																			"indexExpression": {
																				"id": 337,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 318,
																				"src": "8106:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8097:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$25_storage",
																				"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
																			}
																		},
																		"id": 340,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8112:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 22,
																		"src": "8097:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 342,
																	"indexExpression": {
																		"id": 341,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 320,
																		"src": "8120:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8097:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8131:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "8097:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 345,
															"nodeType": "ExpressionStatement",
															"src": "8097:39:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 347,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 318,
																		"src": "8167:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 348,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 320,
																		"src": "8173:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 349,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 826,
																			"src": "8182:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 350,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8182:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 346,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1100,
																	"src": "8155:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8155:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 352,
															"nodeType": "EmitStatement",
															"src": "8150:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 353,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8216:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 324,
															"id": 354,
															"nodeType": "Return",
															"src": "8209:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 316,
										"nodeType": "StructuredDocumentation",
										"src": "7663:224:0",
										"text": " @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "7901:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7921:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "7913:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 317,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7913:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7935:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "7927:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7927:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7912:31:0"
									},
									"returnParameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "7970:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 322,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7970:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7969:6:0"
									},
									"scope": 362,
									"src": "7892:388:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 363,
							"src": "2090:6192:0",
							"usedErrors": [
								379,
								382,
								1070,
								1073
							],
							"usedEvents": [
								387,
								1082,
								1091,
								1100
							]
						}
					],
					"src": "108:8175:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							616
						]
					},
					"id": 617,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 364,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 365,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:1",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 616,
							"linearizedBaseContracts": [
								616
							],
							"name": "Initializable",
							"nameLocation": "2367:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 366,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:1",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 373,
									"members": [
										{
											"constant": false,
											"id": 369,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 373,
											"src": "2813:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 368,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 372,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:1",
											"nodeType": "VariableDeclaration",
											"scope": 373,
											"src": "2950:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 371,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:1",
									"nodeType": "StructDefinition",
									"scope": 616,
									"src": "2685:290:1",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 376,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 616,
									"src": "3098:115:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 374,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 375,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 377,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:1",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 379,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:1"
									},
									"src": "3285:30:1"
								},
								{
									"documentation": {
										"id": 380,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:1",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 382,
									"name": "NotInitializing",
									"nameLocation": "3389:15:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:1"
									},
									"src": "3383:24:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 383,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:1",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 387,
									"name": "Initialized",
									"nameLocation": "3514:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "3526:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 384,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:1"
									},
									"src": "3508:34:1"
								},
								{
									"body": {
										"id": 469,
										"nodeType": "Block",
										"src": "4092:1081:1",
										"statements": [
											{
												"assignments": [
													392
												],
												"declarations": [
													{
														"constant": false,
														"id": 392,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 469,
														"src": "4158:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 391,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 390,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 373,
																"src": "4158:20:1"
															},
															"referencedDeclaration": 373,
															"src": "4158:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 395,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 393,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "4191:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:1"
											},
											{
												"assignments": [
													397
												],
												"declarations": [
													{
														"constant": false,
														"id": 397,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 469,
														"src": "4279:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 396,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 401,
												"initialValue": {
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:1",
													"subExpression": {
														"expression": {
															"id": 398,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "4302:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 399,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 372,
														"src": "4302:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:1"
											},
											{
												"assignments": [
													403
												],
												"declarations": [
													{
														"constant": false,
														"id": 403,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 469,
														"src": "4327:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 402,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 406,
												"initialValue": {
													"expression": {
														"id": 404,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 392,
														"src": "4348:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 405,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 369,
													"src": "4348:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:1"
											},
											{
												"assignments": [
													408
												],
												"declarations": [
													{
														"constant": false,
														"id": 408,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4711:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 469,
														"src": "4706:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 407,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4706:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 414,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 411,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 409,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "4726:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 410,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4741:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4726:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 412,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "4746:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4726:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4706:54:1"
											},
											{
												"assignments": [
													416
												],
												"declarations": [
													{
														"constant": false,
														"id": 416,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4775:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 469,
														"src": "4770:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 415,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4770:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 429,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 419,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 417,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "4790:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4805:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4790:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 427,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 422,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4818:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$616",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$616",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 421,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4810:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 420,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4810:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4810:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 424,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4824:4:1",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4810:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4829:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4810:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 426,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4839:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4810:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4790:50:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4770:70:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 431,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4855:13:1",
														"subExpression": {
															"id": 430,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "4856:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 433,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4872:13:1",
														"subExpression": {
															"id": 432,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 416,
															"src": "4873:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4855:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 439,
												"nodeType": "IfStatement",
												"src": "4851:91:1",
												"trueBody": {
													"id": 438,
													"nodeType": "Block",
													"src": "4887:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 435,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 379,
																	"src": "4908:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4908:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 437,
															"nodeType": "RevertStatement",
															"src": "4901:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 440,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "4951:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 442,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4953:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 369,
														"src": "4951:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 443,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4968:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4951:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 445,
												"nodeType": "ExpressionStatement",
												"src": "4951:18:1"
											},
											{
												"condition": {
													"id": 446,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 397,
													"src": "4983:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 454,
												"nodeType": "IfStatement",
												"src": "4979:67:1",
												"trueBody": {
													"id": 453,
													"nodeType": "Block",
													"src": "4999:47:1",
													"statements": [
														{
															"expression": {
																"id": 451,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 447,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "5013:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 449,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5015:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 372,
																	"src": "5013:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 450,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5031:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5013:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 452,
															"nodeType": "ExpressionStatement",
															"src": "5013:22:1"
														}
													]
												}
											},
											{
												"id": 455,
												"nodeType": "PlaceholderStatement",
												"src": "5055:1:1"
											},
											{
												"condition": {
													"id": 456,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 397,
													"src": "5070:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 468,
												"nodeType": "IfStatement",
												"src": "5066:101:1",
												"trueBody": {
													"id": 467,
													"nodeType": "Block",
													"src": "5086:81:1",
													"statements": [
														{
															"expression": {
																"id": 461,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 457,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "5100:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 459,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5102:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 372,
																	"src": "5100:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 460,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5118:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5100:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 462,
															"nodeType": "ExpressionStatement",
															"src": "5100:23:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 464,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5154:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 463,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 387,
																	"src": "5142:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 465,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5142:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 466,
															"nodeType": "EmitStatement",
															"src": "5137:19:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:1",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 470,
									"name": "initializer",
									"nameLocation": "4078:11:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:1"
									},
									"src": "4069:1104:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 516,
										"nodeType": "Block",
										"src": "6291:392:1",
										"statements": [
											{
												"assignments": [
													477
												],
												"declarations": [
													{
														"constant": false,
														"id": 477,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6386:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 516,
														"src": "6357:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 476,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 475,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6357:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 373,
																"src": "6357:20:1"
															},
															"referencedDeclaration": 373,
															"src": "6357:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 480,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 478,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "6390:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6357:59:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 481,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "6431:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 482,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6433:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 372,
														"src": "6431:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 486,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 483,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 477,
																"src": "6450:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 484,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6452:12:1",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 369,
															"src": "6450:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 485,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 473,
															"src": "6468:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6450:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6431:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 492,
												"nodeType": "IfStatement",
												"src": "6427:105:1",
												"trueBody": {
													"id": 491,
													"nodeType": "Block",
													"src": "6477:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 488,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 379,
																	"src": "6498:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 489,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6498:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 490,
															"nodeType": "RevertStatement",
															"src": "6491:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 493,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "6541:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 495,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6543:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 369,
														"src": "6541:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 496,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 473,
														"src": "6558:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6541:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 498,
												"nodeType": "ExpressionStatement",
												"src": "6541:24:1"
											},
											{
												"expression": {
													"id": 503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 499,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "6575:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 501,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6577:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 372,
														"src": "6575:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 502,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6593:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6575:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 504,
												"nodeType": "ExpressionStatement",
												"src": "6575:22:1"
											},
											{
												"id": 505,
												"nodeType": "PlaceholderStatement",
												"src": "6607:1:1"
											},
											{
												"expression": {
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 506,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "6618:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 508,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6620:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 372,
														"src": "6618:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 509,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6636:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6618:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 511,
												"nodeType": "ExpressionStatement",
												"src": "6618:23:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 513,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 473,
															"src": "6668:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 512,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "6656:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6656:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 515,
												"nodeType": "EmitStatement",
												"src": "6651:25:1"
											}
										]
									},
									"documentation": {
										"id": 471,
										"nodeType": "StructuredDocumentation",
										"src": "5179:1068:1",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 517,
									"name": "reinitializer",
									"nameLocation": "6261:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6282:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "6275:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 472,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6275:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6274:16:1"
									},
									"src": "6252:431:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 524,
										"nodeType": "Block",
										"src": "6921:48:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 520,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 538,
														"src": "6931:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6931:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "6931:20:1"
											},
											{
												"id": 523,
												"nodeType": "PlaceholderStatement",
												"src": "6961:1:1"
											}
										]
									},
									"documentation": {
										"id": 518,
										"nodeType": "StructuredDocumentation",
										"src": "6689:199:1",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 525,
									"name": "onlyInitializing",
									"nameLocation": "6902:16:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6918:2:1"
									},
									"src": "6893:76:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 537,
										"nodeType": "Block",
										"src": "7136:89:1",
										"statements": [
											{
												"condition": {
													"id": 531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7150:18:1",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 529,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 606,
															"src": "7151:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 530,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7151:17:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 536,
												"nodeType": "IfStatement",
												"src": "7146:73:1",
												"trueBody": {
													"id": 535,
													"nodeType": "Block",
													"src": "7170:49:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 532,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 382,
																	"src": "7191:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 533,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7191:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 534,
															"nodeType": "RevertStatement",
															"src": "7184:24:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 526,
										"nodeType": "StructuredDocumentation",
										"src": "6975:104:1",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7093:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7111:2:1"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7136:0:1"
									},
									"scope": 616,
									"src": "7084:141:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 583,
										"nodeType": "Block",
										"src": "7760:373:1",
										"statements": [
											{
												"assignments": [
													544
												],
												"declarations": [
													{
														"constant": false,
														"id": 544,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7855:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 583,
														"src": "7826:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 543,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 542,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7826:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 373,
																"src": "7826:20:1"
															},
															"referencedDeclaration": 373,
															"src": "7826:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 547,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 545,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "7859:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7859:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7826:59:1"
											},
											{
												"condition": {
													"expression": {
														"id": 548,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 544,
														"src": "7900:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 549,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7902:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 372,
													"src": "7900:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 554,
												"nodeType": "IfStatement",
												"src": "7896:76:1",
												"trueBody": {
													"id": 553,
													"nodeType": "Block",
													"src": "7917:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 550,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 379,
																	"src": "7938:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 551,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7938:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 552,
															"nodeType": "RevertStatement",
															"src": "7931:30:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 555,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "7985:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 556,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7987:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 369,
														"src": "7985:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8008:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 558,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8008:6:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 557,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8003:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 560,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8003:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 561,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8016:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8003:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7985:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 582,
												"nodeType": "IfStatement",
												"src": "7981:146:1",
												"trueBody": {
													"id": 581,
													"nodeType": "Block",
													"src": "8021:106:1",
													"statements": [
														{
															"expression": {
																"id": 571,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 563,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 544,
																		"src": "8035:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 565,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8037:12:1",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 369,
																	"src": "8035:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 568,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8057:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 567,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8057:6:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 566,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8052:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 569,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8052:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8065:3:1",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8052:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8035:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 572,
															"nodeType": "ExpressionStatement",
															"src": "8035:33:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 576,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8104:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 575,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8104:6:1",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 574,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8099:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8099:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 578,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8112:3:1",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8099:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 573,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 387,
																	"src": "8087:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 579,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8087:29:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 580,
															"nodeType": "EmitStatement",
															"src": "8082:34:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 539,
										"nodeType": "StructuredDocumentation",
										"src": "7231:475:1",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 584,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7720:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7740:2:1"
									},
									"returnParameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7760:0:1"
									},
									"scope": 616,
									"src": "7711:422:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 594,
										"nodeType": "Block",
										"src": "8308:63:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 590,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 615,
															"src": "8325:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 591,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8325:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 592,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8352:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 369,
													"src": "8325:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 589,
												"id": 593,
												"nodeType": "Return",
												"src": "8318:46:1"
											}
										]
									},
									"documentation": {
										"id": 585,
										"nodeType": "StructuredDocumentation",
										"src": "8139:99:1",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 595,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8252:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8274:2:1"
									},
									"returnParameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "8300:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 587,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8300:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8299:8:1"
									},
									"scope": 616,
									"src": "8243:128:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "8543:64:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 601,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 615,
															"src": "8560:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 602,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8560:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8587:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 372,
													"src": "8560:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 600,
												"id": 604,
												"nodeType": "Return",
												"src": "8553:47:1"
											}
										]
									},
									"documentation": {
										"id": 596,
										"nodeType": "StructuredDocumentation",
										"src": "8377:105:1",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8496:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8511:2:1"
									},
									"returnParameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "8537:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 598,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8537:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8536:6:1"
									},
									"scope": 616,
									"src": "8487:120:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 614,
										"nodeType": "Block",
										"src": "8827:80:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "8846:55:1",
													"nodeType": "YulBlock",
													"src": "8846:55:1",
													"statements": [
														{
															"nativeSrc": "8860:31:1",
															"nodeType": "YulAssignment",
															"src": "8860:31:1",
															"value": {
																"name": "INITIALIZABLE_STORAGE",
																"nativeSrc": "8870:21:1",
																"nodeType": "YulIdentifier",
																"src": "8870:21:1"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "8860:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8860:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 611,
														"isOffset": false,
														"isSlot": true,
														"src": "8860:6:1",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 376,
														"isOffset": false,
														"isSlot": false,
														"src": "8870:21:1",
														"valueSize": 1
													}
												],
												"id": 613,
												"nodeType": "InlineAssembly",
												"src": "8837:64:1"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "8613:67:1",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 615,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "8746:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8770:2:1"
									},
									"returnParameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "8824:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "8795:30:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 610,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 609,
														"name": "InitializableStorage",
														"nameLocations": [
															"8795:20:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 373,
														"src": "8795:20:1"
													},
													"referencedDeclaration": 373,
													"src": "8795:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8794:32:1"
									},
									"scope": 616,
									"src": "8737:170:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 617,
							"src": "2349:6560:1",
							"usedErrors": [
								379,
								382
							],
							"usedEvents": [
								387
							]
						}
					],
					"src": "113:8797:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
					"exportedSymbols": {
						"ERC1967Utils": [
							1456
						],
						"IERC1822Proxiable": [
							1153
						],
						"Initializable": [
							616
						],
						"UUPSUpgradeable": [
							798
						]
					},
					"id": 799,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 618,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"file": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"id": 620,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 799,
							"sourceUnit": 1154,
							"src": "141:88:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 619,
										"name": "IERC1822Proxiable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1153,
										"src": "149:17:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"file": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"id": 622,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 799,
							"sourceUnit": 1457,
							"src": "230:84:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 621,
										"name": "ERC1967Utils",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1456,
										"src": "238:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "./Initializable.sol",
							"id": 624,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 799,
							"sourceUnit": 617,
							"src": "315:50:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 623,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 616,
										"src": "323:13:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 626,
										"name": "Initializable",
										"nameLocations": [
											"1023:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 616,
										"src": "1023:13:2"
									},
									"id": 627,
									"nodeType": "InheritanceSpecifier",
									"src": "1023:13:2"
								},
								{
									"baseName": {
										"id": 628,
										"name": "IERC1822Proxiable",
										"nameLocations": [
											"1038:17:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1153,
										"src": "1038:17:2"
									},
									"id": 629,
									"nodeType": "InheritanceSpecifier",
									"src": "1038:17:2"
								}
							],
							"canonicalName": "UUPSUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 625,
								"nodeType": "StructuredDocumentation",
								"src": "367:618:2",
								"text": " @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism."
							},
							"fullyImplemented": false,
							"id": 798,
							"linearizedBaseContracts": [
								798,
								1153,
								616
							],
							"name": "UUPSUpgradeable",
							"nameLocation": "1004:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 630,
										"nodeType": "StructuredDocumentation",
										"src": "1062:61:2",
										"text": "@custom:oz-upgrades-unsafe-allow state-variable-immutable"
									},
									"id": 636,
									"mutability": "immutable",
									"name": "__self",
									"nameLocation": "1154:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 798,
									"src": "1128:48:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 631,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1128:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 634,
												"name": "this",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967268,
												"src": "1171:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$798",
													"typeString": "contract UUPSUpgradeable"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$798",
													"typeString": "contract UUPSUpgradeable"
												}
											],
											"id": 633,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "1163:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 632,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1163:7:2",
												"typeDescriptions": {}
											}
										},
										"id": 635,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1163:13:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 637,
										"nodeType": "StructuredDocumentation",
										"src": "1183:631:2",
										"text": " @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."
									},
									"functionSelector": "ad3cb1cc",
									"id": 640,
									"mutability": "constant",
									"name": "UPGRADE_INTERFACE_VERSION",
									"nameLocation": "1842:25:2",
									"nodeType": "VariableDeclaration",
									"scope": 798,
									"src": "1819:58:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 638,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1819:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "352e302e30",
										"id": 639,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1870:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c",
											"typeString": "literal_string \"5.0.0\""
										},
										"value": "5.0.0"
									},
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "1884:65:2",
										"text": " @dev The call is from an unauthorized context."
									},
									"errorSelector": "e07c8dba",
									"id": 643,
									"name": "UUPSUnauthorizedCallContext",
									"nameLocation": "1960:27:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1987:2:2"
									},
									"src": "1954:36:2"
								},
								{
									"documentation": {
										"id": 644,
										"nodeType": "StructuredDocumentation",
										"src": "1996:68:2",
										"text": " @dev The storage `slot` is unsupported as a UUID."
									},
									"errorSelector": "aa1d49a4",
									"id": 648,
									"name": "UUPSUnsupportedProxiableUUID",
									"nameLocation": "2075:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2112:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "2104:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 645,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2104:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2103:14:2"
									},
									"src": "2069:49:2"
								},
								{
									"body": {
										"id": 655,
										"nodeType": "Block",
										"src": "2643:41:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 651,
														"name": "_checkProxy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 730,
														"src": "2653:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2653:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 653,
												"nodeType": "ExpressionStatement",
												"src": "2653:13:2"
											},
											{
												"id": 654,
												"nodeType": "PlaceholderStatement",
												"src": "2676:1:2"
											}
										]
									},
									"documentation": {
										"id": 649,
										"nodeType": "StructuredDocumentation",
										"src": "2124:493:2",
										"text": " @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."
									},
									"id": 656,
									"name": "onlyProxy",
									"nameLocation": "2631:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2640:2:2"
									},
									"src": "2622:62:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 663,
										"nodeType": "Block",
										"src": "2914:48:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 659,
														"name": "_checkNotDelegated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 746,
														"src": "2924:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2924:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 661,
												"nodeType": "ExpressionStatement",
												"src": "2924:20:2"
											},
											{
												"id": 662,
												"nodeType": "PlaceholderStatement",
												"src": "2954:1:2"
											}
										]
									},
									"documentation": {
										"id": 657,
										"nodeType": "StructuredDocumentation",
										"src": "2690:195:2",
										"text": " @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."
									},
									"id": 664,
									"name": "notDelegated",
									"nameLocation": "2899:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2911:2:2"
									},
									"src": "2890:72:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 669,
										"nodeType": "Block",
										"src": "3028:7:2",
										"statements": []
									},
									"id": 670,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 667,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 666,
												"name": "onlyInitializing",
												"nameLocations": [
													"3011:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "3011:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3011:16:2"
										}
									],
									"name": "__UUPSUpgradeable_init",
									"nameLocation": "2977:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2999:2:2"
									},
									"returnParameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3028:0:2"
									},
									"scope": 798,
									"src": "2968:67:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 675,
										"nodeType": "Block",
										"src": "3111:7:2",
										"statements": []
									},
									"id": 676,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 673,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 672,
												"name": "onlyInitializing",
												"nameLocations": [
													"3094:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "3094:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3094:16:2"
										}
									],
									"name": "__UUPSUpgradeable_init_unchained",
									"nameLocation": "3050:32:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3082:2:2"
									},
									"returnParameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3111:0:2"
									},
									"scope": 798,
									"src": "3041:77:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1152
									],
									"body": {
										"id": 687,
										"nodeType": "Block",
										"src": "3783:56:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 684,
														"name": "ERC1967Utils",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1456,
														"src": "3800:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1456_$",
															"typeString": "type(library ERC1967Utils)"
														}
													},
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "3813:19:2",
													"memberName": "IMPLEMENTATION_SLOT",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1183,
													"src": "3800:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 683,
												"id": 686,
												"nodeType": "Return",
												"src": "3793:39:2"
											}
										]
									},
									"documentation": {
										"id": 677,
										"nodeType": "StructuredDocumentation",
										"src": "3123:577:2",
										"text": " @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
									},
									"functionSelector": "52d1902d",
									"id": 688,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 680,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 679,
												"name": "notDelegated",
												"nameLocations": [
													"3752:12:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 664,
												"src": "3752:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3752:12:2"
										}
									],
									"name": "proxiableUUID",
									"nameLocation": "3714:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3727:2:2"
									},
									"returnParameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "3774:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 681,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3773:9:2"
									},
									"scope": 798,
									"src": "3705:134:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 707,
										"nodeType": "Block",
										"src": "4263:109:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 699,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "4291:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 698,
														"name": "_authorizeUpgrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 752,
														"src": "4273:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4273:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 701,
												"nodeType": "ExpressionStatement",
												"src": "4273:36:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 703,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "4341:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 704,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 693,
															"src": "4360:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 702,
														"name": "_upgradeToAndCallUUPS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 797,
														"src": "4319:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,bytes memory)"
														}
													},
													"id": 705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4319:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 706,
												"nodeType": "ExpressionStatement",
												"src": "4319:46:2"
											}
										]
									},
									"documentation": {
										"id": 689,
										"nodeType": "StructuredDocumentation",
										"src": "3845:308:2",
										"text": " @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"
									},
									"functionSelector": "4f1ef286",
									"id": 708,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 696,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 695,
												"name": "onlyProxy",
												"nameLocations": [
													"4253:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 656,
												"src": "4253:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "4253:9:2"
										}
									],
									"name": "upgradeToAndCall",
									"nameLocation": "4167:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "4192:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "4184:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 690,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4184:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4224:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "4211:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 692,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4211:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4183:46:2"
									},
									"returnParameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4263:0:2"
									},
									"scope": 798,
									"src": "4158:214:2",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 729,
										"nodeType": "Block",
										"src": "4644:267:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 717,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 714,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4679:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$798",
																		"typeString": "contract UUPSUpgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$798",
																		"typeString": "contract UUPSUpgradeable"
																	}
																],
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4671:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 712,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4671:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 715,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4671:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 716,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "4688:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4671:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 722,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 718,
																	"name": "ERC1967Utils",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1456,
																	"src": "4749:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1456_$",
																		"typeString": "type(library ERC1967Utils)"
																	}
																},
																"id": 719,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4762:17:2",
																"memberName": "getImplementation",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1214,
																"src": "4749:30:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4749:32:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 721,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "4785:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4749:42:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4671:120:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 728,
												"nodeType": "IfStatement",
												"src": "4654:251:2",
												"trueBody": {
													"id": 727,
													"nodeType": "Block",
													"src": "4844:61:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 724,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 643,
																	"src": "4865:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 725,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4865:29:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 726,
															"nodeType": "RevertStatement",
															"src": "4858:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 709,
										"nodeType": "StructuredDocumentation",
										"src": "4378:216:2",
										"text": " @dev Reverts if the execution is not performed via delegatecall or the execution\n context is not of a proxy with an ERC1967-compliant implementation pointing to self.\n See {_onlyProxy}."
									},
									"id": 730,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkProxy",
									"nameLocation": "4608:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4619:2:2"
									},
									"returnParameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4644:0:2"
									},
									"scope": 798,
									"src": "4599:312:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 745,
										"nodeType": "Block",
										"src": "5080:161:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 736,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "5102:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$798",
																	"typeString": "contract UUPSUpgradeable"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$798",
																	"typeString": "contract UUPSUpgradeable"
																}
															],
															"id": 735,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5094:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 734,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5094:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 737,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5094:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 738,
														"name": "__self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 636,
														"src": "5111:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5094:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 744,
												"nodeType": "IfStatement",
												"src": "5090:145:2",
												"trueBody": {
													"id": 743,
													"nodeType": "Block",
													"src": "5119:116:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 740,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 643,
																	"src": "5195:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 741,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5195:29:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 742,
															"nodeType": "RevertStatement",
															"src": "5188:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 731,
										"nodeType": "StructuredDocumentation",
										"src": "4917:106:2",
										"text": " @dev Reverts if the execution is performed via delegatecall.\n See {notDelegated}."
									},
									"id": 746,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNotDelegated",
									"nameLocation": "5037:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5055:2:2"
									},
									"returnParameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5080:0:2"
									},
									"scope": 798,
									"src": "5028:213:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 747,
										"nodeType": "StructuredDocumentation",
										"src": "5247:372:2",
										"text": " @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal onlyOwner {}\n ```"
									},
									"id": 752,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_authorizeUpgrade",
									"nameLocation": "5633:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "5659:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "5651:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 748,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:27:2"
									},
									"returnParameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5694:0:2"
									},
									"scope": 798,
									"src": "5624:71:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 796,
										"nodeType": "Block",
										"src": "6137:453:2",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 785,
															"nodeType": "Block",
															"src": "6227:212:2",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		"id": 771,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 768,
																			"name": "slot",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 766,
																			"src": "6245:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"expression": {
																				"id": 769,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1456,
																				"src": "6253:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1456_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 770,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "6266:19:2",
																			"memberName": "IMPLEMENTATION_SLOT",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1183,
																			"src": "6253:32:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"src": "6245:40:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 777,
																	"nodeType": "IfStatement",
																	"src": "6241:120:2",
																	"trueBody": {
																		"id": 776,
																		"nodeType": "Block",
																		"src": "6287:74:2",
																		"statements": [
																			{
																				"errorCall": {
																					"arguments": [
																						{
																							"id": 773,
																							"name": "slot",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 766,
																							"src": "6341:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 772,
																						"name": "UUPSUnsupportedProxiableUUID",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 648,
																						"src": "6312:28:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$__$",
																							"typeString": "function (bytes32) pure"
																						}
																					},
																					"id": 774,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6312:34:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 775,
																				"nodeType": "RevertStatement",
																				"src": "6305:41:2"
																			}
																		]
																	}
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 781,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "6404:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 782,
																				"name": "data",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 757,
																				"src": "6423:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"expression": {
																				"id": 778,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1456,
																				"src": "6374:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1456_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 780,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6387:16:2",
																			"memberName": "upgradeToAndCall",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1275,
																			"src": "6374:29:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
																				"typeString": "function (address,bytes memory)"
																			}
																		},
																		"id": 783,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6374:54:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 784,
																	"nodeType": "ExpressionStatement",
																	"src": "6374:54:2"
																}
															]
														},
														"errorName": "",
														"id": 786,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 767,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 766,
																	"mutability": "mutable",
																	"name": "slot",
																	"nameLocation": "6221:4:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 786,
																	"src": "6213:12:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 765,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "6213:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "6212:14:2"
														},
														"src": "6204:235:2"
													},
													{
														"block": {
															"id": 793,
															"nodeType": "Block",
															"src": "6446:138:2",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 790,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "6555:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"id": 787,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1456,
																				"src": "6513:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1456_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 789,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6526:28:2",
																			"memberName": "ERC1967InvalidImplementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1188,
																			"src": "6513:41:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																				"typeString": "function (address) pure"
																			}
																		},
																		"id": 791,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6513:60:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 792,
																	"nodeType": "RevertStatement",
																	"src": "6506:67:2"
																}
															]
														},
														"errorName": "",
														"id": 794,
														"nodeType": "TryCatchClause",
														"src": "6440:144:2"
													}
												],
												"externalCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 761,
																	"name": "newImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 755,
																	"src": "6169:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 760,
																"name": "IERC1822Proxiable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1153,
																"src": "6151:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC1822Proxiable_$1153_$",
																	"typeString": "type(contract IERC1822Proxiable)"
																}
															},
															"id": 762,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6151:36:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1822Proxiable_$1153",
																"typeString": "contract IERC1822Proxiable"
															}
														},
														"id": 763,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6188:13:2",
														"memberName": "proxiableUUID",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1152,
														"src": "6151:50:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
															"typeString": "function () view external returns (bytes32)"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6151:52:2",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 795,
												"nodeType": "TryStatement",
												"src": "6147:437:2"
											}
										]
									},
									"documentation": {
										"id": 753,
										"nodeType": "StructuredDocumentation",
										"src": "5701:346:2",
										"text": " @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n is expected to be the implementation slot in ERC1967.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 797,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCallUUPS",
									"nameLocation": "6061:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "6091:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "6083:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6083:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6123:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "6110:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 756,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6110:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6082:46:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6137:0:2"
									},
									"scope": 798,
									"src": "6052:538:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 799,
							"src": "986:5606:2",
							"usedErrors": [
								379,
								382,
								643,
								648,
								1188,
								1201,
								1479,
								1482
							],
							"usedEvents": [
								387,
								1167
							]
						}
					],
					"src": "115:6478:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							844
						],
						"Initializable": [
							616
						]
					},
					"id": 845,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 800,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 802,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 845,
							"sourceUnit": 617,
							"src": "126:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 801,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 616,
										"src": "134:13:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 804,
										"name": "Initializable",
										"nameLocations": [
											"728:13:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 616,
										"src": "728:13:3"
									},
									"id": 805,
									"nodeType": "InheritanceSpecifier",
									"src": "728:13:3"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 803,
								"nodeType": "StructuredDocumentation",
								"src": "191:496:3",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 844,
							"linearizedBaseContracts": [
								844,
								616
							],
							"name": "ContextUpgradeable",
							"nameLocation": "706:18:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 810,
										"nodeType": "Block",
										"src": "800:7:3",
										"statements": []
									},
									"id": 811,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 808,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 807,
												"name": "onlyInitializing",
												"nameLocations": [
													"783:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "783:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "783:16:3"
										}
									],
									"name": "__Context_init",
									"nameLocation": "757:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 806,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:2:3"
									},
									"returnParameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "800:0:3"
									},
									"scope": 844,
									"src": "748:59:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 816,
										"nodeType": "Block",
										"src": "875:7:3",
										"statements": []
									},
									"id": 817,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 814,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 813,
												"name": "onlyInitializing",
												"nameLocations": [
													"858:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "858:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "858:16:3"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "822:24:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:2:3"
									},
									"returnParameters": {
										"id": 815,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "875:0:3"
									},
									"scope": 844,
									"src": "813:69:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 825,
										"nodeType": "Block",
										"src": "949:34:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 822,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "966:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 823,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "970:6:3",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "966:10:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 821,
												"id": 824,
												"nodeType": "Return",
												"src": "959:17:3"
											}
										]
									},
									"id": 826,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "896:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "906:2:3"
									},
									"returnParameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 820,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 826,
												"src": "940:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 819,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:9:3"
									},
									"scope": 844,
									"src": "887:96:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 834,
										"nodeType": "Block",
										"src": "1056:32:3",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 831,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1073:3:3",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 832,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1077:4:3",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1073:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 830,
												"id": 833,
												"nodeType": "Return",
												"src": "1066:15:3"
											}
										]
									},
									"id": 835,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "998:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 827,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1006:2:3"
									},
									"returnParameters": {
										"id": 830,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 829,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 835,
												"src": "1040:14:3",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 828,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1040:5:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:16:3"
									},
									"scope": 844,
									"src": "989:99:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 842,
										"nodeType": "Block",
										"src": "1166:25:3",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 840,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1183:1:3",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 839,
												"id": 841,
												"nodeType": "Return",
												"src": "1176:8:3"
											}
										]
									},
									"id": 843,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "1103:20:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 836,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1123:2:3"
									},
									"returnParameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "1157:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 837,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:9:3"
									},
									"scope": 844,
									"src": "1094:97:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 845,
							"src": "688:505:3",
							"usedErrors": [
								379,
								382
							],
							"usedEvents": [
								387
							]
						}
					],
					"src": "101:1093:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							844
						],
						"Initializable": [
							616
						],
						"PausableUpgradeable": [
							1020
						]
					},
					"id": 1021,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 846,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 848,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1021,
							"sourceUnit": 845,
							"src": "128:67:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 847,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 844,
										"src": "136:18:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 850,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1021,
							"sourceUnit": 617,
							"src": "196:63:4",
							"symbolAliases": [
								{
									"foreign": {
										"id": 849,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 616,
										"src": "204:13:4",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 852,
										"name": "Initializable",
										"nameLocations": [
											"742:13:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 616,
										"src": "742:13:4"
									},
									"id": 853,
									"nodeType": "InheritanceSpecifier",
									"src": "742:13:4"
								},
								{
									"baseName": {
										"id": 854,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"757:18:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 844,
										"src": "757:18:4"
									},
									"id": 855,
									"nodeType": "InheritanceSpecifier",
									"src": "757:18:4"
								}
							],
							"canonicalName": "PausableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 851,
								"nodeType": "StructuredDocumentation",
								"src": "261:439:4",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 1020,
							"linearizedBaseContracts": [
								1020,
								844,
								616
							],
							"name": "PausableUpgradeable",
							"nameLocation": "719:19:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "PausableUpgradeable.PausableStorage",
									"documentation": {
										"id": 856,
										"nodeType": "StructuredDocumentation",
										"src": "782:66:4",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.Pausable"
									},
									"id": 859,
									"members": [
										{
											"constant": false,
											"id": 858,
											"mutability": "mutable",
											"name": "_paused",
											"nameLocation": "891:7:4",
											"nodeType": "VariableDeclaration",
											"scope": 859,
											"src": "886:12:4",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 857,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "886:4:4",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PausableStorage",
									"nameLocation": "860:15:4",
									"nodeType": "StructDefinition",
									"scope": 1020,
									"src": "853:52:4",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 862,
									"mutability": "constant",
									"name": "PausableStorageLocation",
									"nameLocation": "1048:23:4",
									"nodeType": "VariableDeclaration",
									"scope": 1020,
									"src": "1023:117:4",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 860,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1023:7:4",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307863643565643135633665313837653737653961656538383138346332316634663231383261623538323763623362376530376662656463643633663033333030",
										"id": 861,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1074:66:4",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_92891662540554778686986514950364265630913525426840345632122912437671245656832_by_1",
											"typeString": "int_const 9289...(69 digits omitted)...6832"
										},
										"value": "0xcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 869,
										"nodeType": "Block",
										"src": "1227:82:4",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1246:57:4",
													"nodeType": "YulBlock",
													"src": "1246:57:4",
													"statements": [
														{
															"nativeSrc": "1260:33:4",
															"nodeType": "YulAssignment",
															"src": "1260:33:4",
															"value": {
																"name": "PausableStorageLocation",
																"nativeSrc": "1270:23:4",
																"nodeType": "YulIdentifier",
																"src": "1270:23:4"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "1260:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1260:6:4"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 866,
														"isOffset": false,
														"isSlot": true,
														"src": "1260:6:4",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 862,
														"isOffset": false,
														"isSlot": false,
														"src": "1270:23:4",
														"valueSize": 1
													}
												],
												"id": 868,
												"nodeType": "InlineAssembly",
												"src": "1237:66:4"
											}
										]
									},
									"id": 870,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getPausableStorage",
									"nameLocation": "1156:19:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 863,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1175:2:4"
									},
									"returnParameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "1224:1:4",
												"nodeType": "VariableDeclaration",
												"scope": 870,
												"src": "1200:25:4",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PausableStorage_$859_storage_ptr",
													"typeString": "struct PausableUpgradeable.PausableStorage"
												},
												"typeName": {
													"id": 865,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 864,
														"name": "PausableStorage",
														"nameLocations": [
															"1200:15:4"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 859,
														"src": "1200:15:4"
													},
													"referencedDeclaration": 859,
													"src": "1200:15:4",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PausableStorage_$859_storage_ptr",
														"typeString": "struct PausableUpgradeable.PausableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1199:27:4"
									},
									"scope": 1020,
									"src": "1147:162:4",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 871,
										"nodeType": "StructuredDocumentation",
										"src": "1315:73:4",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 875,
									"name": "Paused",
									"nameLocation": "1399:6:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 873,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1414:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "1406:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 872,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1405:17:4"
									},
									"src": "1393:30:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 876,
										"nodeType": "StructuredDocumentation",
										"src": "1429:70:4",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 880,
									"name": "Unpaused",
									"nameLocation": "1510:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 878,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1527:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 880,
												"src": "1519:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 877,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1519:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1518:17:4"
									},
									"src": "1504:32:4"
								},
								{
									"documentation": {
										"id": 881,
										"nodeType": "StructuredDocumentation",
										"src": "1542:76:4",
										"text": " @dev The operation failed because the contract is paused."
									},
									"errorSelector": "d93c0665",
									"id": 883,
									"name": "EnforcedPause",
									"nameLocation": "1629:13:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 882,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1642:2:4"
									},
									"src": "1623:22:4"
								},
								{
									"documentation": {
										"id": 884,
										"nodeType": "StructuredDocumentation",
										"src": "1651:80:4",
										"text": " @dev The operation failed because the contract is not paused."
									},
									"errorSelector": "8dfc202b",
									"id": 886,
									"name": "ExpectedPause",
									"nameLocation": "1742:13:4",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 885,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1755:2:4"
									},
									"src": "1736:22:4"
								},
								{
									"body": {
										"id": 895,
										"nodeType": "Block",
										"src": "1889:44:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 892,
														"name": "__Pausable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 914,
														"src": "1899:25:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 893,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1899:27:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 894,
												"nodeType": "ExpressionStatement",
												"src": "1899:27:4"
											}
										]
									},
									"documentation": {
										"id": 887,
										"nodeType": "StructuredDocumentation",
										"src": "1764:67:4",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 896,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 890,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 889,
												"name": "onlyInitializing",
												"nameLocations": [
													"1872:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "1872:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1872:16:4"
										}
									],
									"name": "__Pausable_init",
									"nameLocation": "1845:15:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 888,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1860:2:4"
									},
									"returnParameters": {
										"id": 891,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1889:0:4"
									},
									"scope": 1020,
									"src": "1836:97:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 913,
										"nodeType": "Block",
										"src": "2002:93:4",
										"statements": [
											{
												"assignments": [
													903
												],
												"declarations": [
													{
														"constant": false,
														"id": 903,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2036:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 913,
														"src": "2012:25:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PausableStorage_$859_storage_ptr",
															"typeString": "struct PausableUpgradeable.PausableStorage"
														},
														"typeName": {
															"id": 902,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 901,
																"name": "PausableStorage",
																"nameLocations": [
																	"2012:15:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 859,
																"src": "2012:15:4"
															},
															"referencedDeclaration": 859,
															"src": "2012:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PausableStorage_$859_storage_ptr",
																"typeString": "struct PausableUpgradeable.PausableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 906,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 904,
														"name": "_getPausableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "2040:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$859_storage_ptr_$",
															"typeString": "function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"
														}
													},
													"id": 905,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2040:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PausableStorage_$859_storage_ptr",
														"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2012:49:4"
											},
											{
												"expression": {
													"id": 911,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 907,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 903,
															"src": "2071:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PausableStorage_$859_storage_ptr",
																"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
															}
														},
														"id": 909,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2073:7:4",
														"memberName": "_paused",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 858,
														"src": "2071:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 910,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2083:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2071:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 912,
												"nodeType": "ExpressionStatement",
												"src": "2071:17:4"
											}
										]
									},
									"id": 914,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 899,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 898,
												"name": "onlyInitializing",
												"nameLocations": [
													"1985:16:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "1985:16:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "1985:16:4"
										}
									],
									"name": "__Pausable_init_unchained",
									"nameLocation": "1948:25:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 897,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1973:2:4"
									},
									"returnParameters": {
										"id": 900,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2002:0:4"
									},
									"scope": 1020,
									"src": "1939:156:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 921,
										"nodeType": "Block",
										"src": "2306:47:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 917,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 958,
														"src": "2316:17:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 918,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2316:19:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 919,
												"nodeType": "ExpressionStatement",
												"src": "2316:19:4"
											},
											{
												"id": 920,
												"nodeType": "PlaceholderStatement",
												"src": "2345:1:4"
											}
										]
									},
									"documentation": {
										"id": 915,
										"nodeType": "StructuredDocumentation",
										"src": "2101:175:4",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 922,
									"name": "whenNotPaused",
									"nameLocation": "2290:13:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2303:2:4"
									},
									"src": "2281:72:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 929,
										"nodeType": "Block",
										"src": "2553:44:4",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 925,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 971,
														"src": "2563:14:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 926,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2563:16:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 927,
												"nodeType": "ExpressionStatement",
												"src": "2563:16:4"
											},
											{
												"id": 928,
												"nodeType": "PlaceholderStatement",
												"src": "2589:1:4"
											}
										]
									},
									"documentation": {
										"id": 923,
										"nodeType": "StructuredDocumentation",
										"src": "2359:167:4",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 930,
									"name": "whenPaused",
									"nameLocation": "2540:10:4",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2550:2:4"
									},
									"src": "2531:66:4",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 945,
										"nodeType": "Block",
										"src": "2745:92:4",
										"statements": [
											{
												"assignments": [
													938
												],
												"declarations": [
													{
														"constant": false,
														"id": 938,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2779:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 945,
														"src": "2755:25:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PausableStorage_$859_storage_ptr",
															"typeString": "struct PausableUpgradeable.PausableStorage"
														},
														"typeName": {
															"id": 937,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 936,
																"name": "PausableStorage",
																"nameLocations": [
																	"2755:15:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 859,
																"src": "2755:15:4"
															},
															"referencedDeclaration": 859,
															"src": "2755:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PausableStorage_$859_storage_ptr",
																"typeString": "struct PausableUpgradeable.PausableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 941,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 939,
														"name": "_getPausableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "2783:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$859_storage_ptr_$",
															"typeString": "function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"
														}
													},
													"id": 940,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2783:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PausableStorage_$859_storage_ptr",
														"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2755:49:4"
											},
											{
												"expression": {
													"expression": {
														"id": 942,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 938,
														"src": "2821:1:4",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PausableStorage_$859_storage_ptr",
															"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
														}
													},
													"id": 943,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2823:7:4",
													"memberName": "_paused",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 858,
													"src": "2821:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 935,
												"id": 944,
												"nodeType": "Return",
												"src": "2814:16:4"
											}
										]
									},
									"documentation": {
										"id": 931,
										"nodeType": "StructuredDocumentation",
										"src": "2603:84:4",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 946,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "2701:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 932,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2707:2:4"
									},
									"returnParameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 946,
												"src": "2739:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 933,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2739:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2738:6:4"
									},
									"scope": 1020,
									"src": "2692:145:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 957,
										"nodeType": "Block",
										"src": "2956:77:4",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 950,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 946,
														"src": "2970:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 951,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2970:8:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 956,
												"nodeType": "IfStatement",
												"src": "2966:61:4",
												"trueBody": {
													"id": 955,
													"nodeType": "Block",
													"src": "2980:47:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 952,
																	"name": "EnforcedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 883,
																	"src": "3001:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 953,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3001:15:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 954,
															"nodeType": "RevertStatement",
															"src": "2994:22:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 947,
										"nodeType": "StructuredDocumentation",
										"src": "2843:57:4",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 958,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "2914:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 948,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2931:2:4"
									},
									"returnParameters": {
										"id": 949,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2956:0:4"
									},
									"scope": 1020,
									"src": "2905:128:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 970,
										"nodeType": "Block",
										"src": "3153:78:4",
										"statements": [
											{
												"condition": {
													"id": 964,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3167:9:4",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 962,
															"name": "paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 946,
															"src": "3168:6:4",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 963,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3168:8:4",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 969,
												"nodeType": "IfStatement",
												"src": "3163:62:4",
												"trueBody": {
													"id": 968,
													"nodeType": "Block",
													"src": "3178:47:4",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 965,
																	"name": "ExpectedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 886,
																	"src": "3199:13:4",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 966,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3199:15:4",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 967,
															"nodeType": "RevertStatement",
															"src": "3192:22:4"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 959,
										"nodeType": "StructuredDocumentation",
										"src": "3039:61:4",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 971,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "3114:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 960,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3128:2:4"
									},
									"returnParameters": {
										"id": 961,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3153:0:4"
									},
									"scope": 1020,
									"src": "3105:126:4",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 994,
										"nodeType": "Block",
										"src": "3415:127:4",
										"statements": [
											{
												"assignments": [
													979
												],
												"declarations": [
													{
														"constant": false,
														"id": 979,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3449:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 994,
														"src": "3425:25:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PausableStorage_$859_storage_ptr",
															"typeString": "struct PausableUpgradeable.PausableStorage"
														},
														"typeName": {
															"id": 978,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 977,
																"name": "PausableStorage",
																"nameLocations": [
																	"3425:15:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 859,
																"src": "3425:15:4"
															},
															"referencedDeclaration": 859,
															"src": "3425:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PausableStorage_$859_storage_ptr",
																"typeString": "struct PausableUpgradeable.PausableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 982,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 980,
														"name": "_getPausableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "3453:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$859_storage_ptr_$",
															"typeString": "function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"
														}
													},
													"id": 981,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3453:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PausableStorage_$859_storage_ptr",
														"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3425:49:4"
											},
											{
												"expression": {
													"id": 987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 983,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 979,
															"src": "3484:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PausableStorage_$859_storage_ptr",
																"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
															}
														},
														"id": 985,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3486:7:4",
														"memberName": "_paused",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 858,
														"src": "3484:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 986,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3496:4:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3484:16:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 988,
												"nodeType": "ExpressionStatement",
												"src": "3484:16:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 990,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 826,
																"src": "3522:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 991,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3522:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 989,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 875,
														"src": "3515:6:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 992,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3515:20:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 993,
												"nodeType": "EmitStatement",
												"src": "3510:25:4"
											}
										]
									},
									"documentation": {
										"id": 972,
										"nodeType": "StructuredDocumentation",
										"src": "3237:124:4",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 995,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 975,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 974,
												"name": "whenNotPaused",
												"nameLocations": [
													"3401:13:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 922,
												"src": "3401:13:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "3401:13:4"
										}
									],
									"name": "_pause",
									"nameLocation": "3375:6:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 973,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3381:2:4"
									},
									"returnParameters": {
										"id": 976,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3415:0:4"
									},
									"scope": 1020,
									"src": "3366:176:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1018,
										"nodeType": "Block",
										"src": "3722:130:4",
										"statements": [
											{
												"assignments": [
													1003
												],
												"declarations": [
													{
														"constant": false,
														"id": 1003,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3756:1:4",
														"nodeType": "VariableDeclaration",
														"scope": 1018,
														"src": "3732:25:4",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PausableStorage_$859_storage_ptr",
															"typeString": "struct PausableUpgradeable.PausableStorage"
														},
														"typeName": {
															"id": 1002,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1001,
																"name": "PausableStorage",
																"nameLocations": [
																	"3732:15:4"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 859,
																"src": "3732:15:4"
															},
															"referencedDeclaration": 859,
															"src": "3732:15:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PausableStorage_$859_storage_ptr",
																"typeString": "struct PausableUpgradeable.PausableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1006,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1004,
														"name": "_getPausableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 870,
														"src": "3760:19:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$859_storage_ptr_$",
															"typeString": "function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"
														}
													},
													"id": 1005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3760:21:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PausableStorage_$859_storage_ptr",
														"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3732:49:4"
											},
											{
												"expression": {
													"id": 1011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1007,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1003,
															"src": "3791:1:4",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PausableStorage_$859_storage_ptr",
																"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
															}
														},
														"id": 1009,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3793:7:4",
														"memberName": "_paused",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 858,
														"src": "3791:9:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1010,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3803:5:4",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "3791:17:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1012,
												"nodeType": "ExpressionStatement",
												"src": "3791:17:4"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1014,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 826,
																"src": "3832:10:4",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1015,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3832:12:4",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1013,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 880,
														"src": "3823:8:4",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3823:22:4",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1017,
												"nodeType": "EmitStatement",
												"src": "3818:27:4"
											}
										]
									},
									"documentation": {
										"id": 996,
										"nodeType": "StructuredDocumentation",
										"src": "3548:121:4",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 1019,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 999,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 998,
												"name": "whenPaused",
												"nameLocations": [
													"3711:10:4"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 930,
												"src": "3711:10:4"
											},
											"nodeType": "ModifierInvocation",
											"src": "3711:10:4"
										}
									],
									"name": "_unpause",
									"nameLocation": "3683:8:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 997,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3691:2:4"
									},
									"returnParameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3722:0:4"
									},
									"scope": 1020,
									"src": "3674:178:4",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1021,
							"src": "701:3153:4",
							"usedErrors": [
								379,
								382,
								883,
								886
							],
							"usedEvents": [
								387,
								875,
								880
							]
						}
					],
					"src": "102:3753:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
					"exportedSymbols": {
						"ERC165Upgradeable": [
							1060
						],
						"IERC165": [
							1841
						],
						"Initializable": [
							616
						]
					},
					"id": 1061,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1022,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"id": 1024,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1061,
							"sourceUnit": 1842,
							"src": "140:80:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1023,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1841,
										"src": "148:7:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../../proxy/utils/Initializable.sol",
							"id": 1026,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1061,
							"sourceUnit": 617,
							"src": "221:66:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1025,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 616,
										"src": "229:13:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1028,
										"name": "Initializable",
										"nameLocations": [
											"807:13:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 616,
										"src": "807:13:5"
									},
									"id": 1029,
									"nodeType": "InheritanceSpecifier",
									"src": "807:13:5"
								},
								{
									"baseName": {
										"id": 1030,
										"name": "IERC165",
										"nameLocations": [
											"822:7:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1841,
										"src": "822:7:5"
									},
									"id": 1031,
									"nodeType": "InheritanceSpecifier",
									"src": "822:7:5"
								}
							],
							"canonicalName": "ERC165Upgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1027,
								"nodeType": "StructuredDocumentation",
								"src": "289:478:5",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1060,
							"linearizedBaseContracts": [
								1060,
								1841,
								616
							],
							"name": "ERC165Upgradeable",
							"nameLocation": "786:17:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1036,
										"nodeType": "Block",
										"src": "887:7:5",
										"statements": []
									},
									"id": 1037,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1034,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1033,
												"name": "onlyInitializing",
												"nameLocations": [
													"870:16:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "870:16:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "870:16:5"
										}
									],
									"name": "__ERC165_init",
									"nameLocation": "845:13:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1032,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "858:2:5"
									},
									"returnParameters": {
										"id": 1035,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "887:0:5"
									},
									"scope": 1060,
									"src": "836:58:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1042,
										"nodeType": "Block",
										"src": "961:7:5",
										"statements": []
									},
									"id": 1043,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1040,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1039,
												"name": "onlyInitializing",
												"nameLocations": [
													"944:16:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "944:16:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "944:16:5"
										}
									],
									"name": "__ERC165_init_unchained",
									"nameLocation": "909:23:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1038,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "932:2:5"
									},
									"returnParameters": {
										"id": 1041,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "961:0:5"
									},
									"scope": 1060,
									"src": "900:68:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1840
									],
									"body": {
										"id": 1058,
										"nodeType": "Block",
										"src": "1116:64:5",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1056,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1051,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1046,
														"src": "1133:11:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1053,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1841,
																	"src": "1153:7:5",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1841_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$1841_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1052,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "1148:4:5",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1054,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1148:13:5",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$1841",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1055,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1162:11:5",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "1148:25:5",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "1133:40:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1050,
												"id": 1057,
												"nodeType": "Return",
												"src": "1126:47:5"
											}
										]
									},
									"documentation": {
										"id": 1044,
										"nodeType": "StructuredDocumentation",
										"src": "973:56:5",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1059,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1043:17:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1047,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1046,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1068:11:5",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "1061:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1045,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:20:5"
									},
									"returnParameters": {
										"id": 1050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1049,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1059,
												"src": "1110:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1048,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1110:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1109:6:5"
									},
									"scope": 1060,
									"src": "1034:146:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1061,
							"src": "768:414:5",
							"usedErrors": [
								379,
								382
							],
							"usedEvents": [
								387
							]
						}
					],
					"src": "114:1069:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							1143
						]
					},
					"id": 1144,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1062,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:6"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1063,
								"nodeType": "StructuredDocumentation",
								"src": "135:89:6",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 1143,
							"linearizedBaseContracts": [
								1143
							],
							"name": "IAccessControl",
							"nameLocation": "235:14:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1064,
										"nodeType": "StructuredDocumentation",
										"src": "256:56:6",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 1070,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "323:32:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1069,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1066,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "364:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "356:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1065,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "356:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1068,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "381:10:6",
												"nodeType": "VariableDeclaration",
												"scope": 1070,
												"src": "373:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1067,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "373:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "355:37:6"
									},
									"src": "317:76:6"
								},
								{
									"documentation": {
										"id": 1071,
										"nodeType": "StructuredDocumentation",
										"src": "399:148:6",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 1073,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "558:28:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1072,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "586:2:6"
									},
									"src": "552:37:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1074,
										"nodeType": "StructuredDocumentation",
										"src": "595:254:6",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 1082,
									"name": "RoleAdminChanged",
									"nameLocation": "860:16:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1081,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1076,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "893:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "877:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1075,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "877:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1078,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "915:17:6",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "899:33:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1077,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "899:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1080,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "950:12:6",
												"nodeType": "VariableDeclaration",
												"scope": 1082,
												"src": "934:28:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1079,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "934:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:87:6"
									},
									"src": "854:110:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1083,
										"nodeType": "StructuredDocumentation",
										"src": "970:212:6",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 1091,
									"name": "RoleGranted",
									"nameLocation": "1193:11:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1085,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1221:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "1205:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1084,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1205:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1087,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1243:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "1227:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1086,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1089,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1268:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1091,
												"src": "1252:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1088,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1252:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1204:71:6"
									},
									"src": "1187:89:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1092,
										"nodeType": "StructuredDocumentation",
										"src": "1282:275:6",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 1100,
									"name": "RoleRevoked",
									"nameLocation": "1568:11:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1094,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1596:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "1580:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1093,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1580:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1096,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1618:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "1602:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1095,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1602:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1098,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1643:6:6",
												"nodeType": "VariableDeclaration",
												"scope": 1100,
												"src": "1627:22:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1097,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1627:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1579:71:6"
									},
									"src": "1562:89:6"
								},
								{
									"documentation": {
										"id": 1101,
										"nodeType": "StructuredDocumentation",
										"src": "1657:76:6",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 1110,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1747:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1106,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1103,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1763:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "1755:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1102,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1755:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1105,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1777:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "1769:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1104,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1769:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1754:31:6"
									},
									"returnParameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1110,
												"src": "1809:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1107,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1809:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1808:6:6"
									},
									"scope": 1143,
									"src": "1738:77:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1111,
										"nodeType": "StructuredDocumentation",
										"src": "1821:184:6",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 1118,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2019:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1114,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1113,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2040:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1118,
												"src": "2032:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1112,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2032:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2031:14:6"
									},
									"returnParameters": {
										"id": 1117,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1118,
												"src": "2069:7:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1115,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2069:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2068:9:6"
									},
									"scope": 1143,
									"src": "2010:68:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1119,
										"nodeType": "StructuredDocumentation",
										"src": "2084:239:6",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 1126,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2337:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1121,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2355:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "2347:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1120,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2347:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2369:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1126,
												"src": "2361:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1122,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2361:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2346:31:6"
									},
									"returnParameters": {
										"id": 1125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2386:0:6"
									},
									"scope": 1143,
									"src": "2328:59:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1127,
										"nodeType": "StructuredDocumentation",
										"src": "2393:223:6",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 1134,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2630:10:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1129,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2649:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "2641:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1128,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2641:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1131,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2663:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1134,
												"src": "2655:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1130,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2655:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2640:31:6"
									},
									"returnParameters": {
										"id": 1133,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2680:0:6"
									},
									"scope": 1143,
									"src": "2621:60:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1135,
										"nodeType": "StructuredDocumentation",
										"src": "2687:491:6",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 1142,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3192:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1137,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3213:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "3205:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1136,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3205:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1139,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3227:18:6",
												"nodeType": "VariableDeclaration",
												"scope": 1142,
												"src": "3219:26:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1138,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3204:42:6"
									},
									"returnParameters": {
										"id": 1141,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:6"
									},
									"scope": 1143,
									"src": "3183:73:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1144,
							"src": "225:3033:6",
							"usedErrors": [
								1070,
								1073
							],
							"usedEvents": [
								1082,
								1091,
								1100
							]
						}
					],
					"src": "109:3150:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
					"exportedSymbols": {
						"IERC1822Proxiable": [
							1153
						]
					},
					"id": 1154,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1145,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:7"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1822Proxiable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1146,
								"nodeType": "StructuredDocumentation",
								"src": "139:203:7",
								"text": " @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."
							},
							"fullyImplemented": false,
							"id": 1153,
							"linearizedBaseContracts": [
								1153
							],
							"name": "IERC1822Proxiable",
							"nameLocation": "353:17:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1147,
										"nodeType": "StructuredDocumentation",
										"src": "377:438:7",
										"text": " @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."
									},
									"functionSelector": "52d1902d",
									"id": 1152,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "proxiableUUID",
									"nameLocation": "829:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1148,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "842:2:7"
									},
									"returnParameters": {
										"id": 1151,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1150,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1152,
												"src": "868:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1149,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "868:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "867:9:7"
									},
									"scope": 1153,
									"src": "820:57:7",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1154,
							"src": "343:536:7",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "113:767:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
					"exportedSymbols": {
						"Address": [
							1719
						],
						"ERC1967Utils": [
							1456
						],
						"IBeacon": [
							1466
						],
						"StorageSlot": [
							1829
						]
					},
					"id": 1457,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1155,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
							"file": "../beacon/IBeacon.sol",
							"id": 1157,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1457,
							"sourceUnit": 1467,
							"src": "140:46:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1156,
										"name": "IBeacon",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1466,
										"src": "148:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 1159,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1457,
							"sourceUnit": 1720,
							"src": "187:48:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1158,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1719,
										"src": "195:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
							"file": "../../utils/StorageSlot.sol",
							"id": 1161,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1457,
							"sourceUnit": 1830,
							"src": "236:56:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1160,
										"name": "StorageSlot",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1829,
										"src": "244:11:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC1967Utils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1162,
								"nodeType": "StructuredDocumentation",
								"src": "294:154:8",
								"text": " @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots."
							},
							"fullyImplemented": true,
							"id": 1456,
							"linearizedBaseContracts": [
								1456
							],
							"name": "ERC1967Utils",
							"nameLocation": "457:12:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1163,
										"nodeType": "StructuredDocumentation",
										"src": "660:68:8",
										"text": " @dev Emitted when the implementation is upgraded."
									},
									"eventSelector": "bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
									"id": 1167,
									"name": "Upgraded",
									"nameLocation": "739:8:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1165,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "764:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "748:30:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1164,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "748:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "747:32:8"
									},
									"src": "733:47:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1168,
										"nodeType": "StructuredDocumentation",
										"src": "786:67:8",
										"text": " @dev Emitted when the admin account has changed."
									},
									"eventSelector": "7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f",
									"id": 1174,
									"name": "AdminChanged",
									"nameLocation": "864:12:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1173,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1170,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousAdmin",
												"nameLocation": "885:13:8",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "877:21:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1169,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "877:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1172,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "908:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1174,
												"src": "900:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1171,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:41:8"
									},
									"src": "858:60:8"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1175,
										"nodeType": "StructuredDocumentation",
										"src": "924:59:8",
										"text": " @dev Emitted when the beacon is changed."
									},
									"eventSelector": "1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e",
									"id": 1179,
									"name": "BeaconUpgraded",
									"nameLocation": "994:14:8",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1178,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1177,
												"indexed": true,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "1025:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1179,
												"src": "1009:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1176,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1009:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1008:24:8"
									},
									"src": "988:45:8"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1180,
										"nodeType": "StructuredDocumentation",
										"src": "1039:170:8",
										"text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
									},
									"id": 1183,
									"mutability": "constant",
									"name": "IMPLEMENTATION_SLOT",
									"nameLocation": "1305:19:8",
									"nodeType": "VariableDeclaration",
									"scope": 1456,
									"src": "1279:114:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1181,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1279:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
										"id": 1182,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1327:66:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
											"typeString": "int_const 2444...(69 digits omitted)...5612"
										},
										"value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									},
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 1184,
										"nodeType": "StructuredDocumentation",
										"src": "1400:69:8",
										"text": " @dev The `implementation` of the proxy is invalid."
									},
									"errorSelector": "4c9c8ce3",
									"id": 1188,
									"name": "ERC1967InvalidImplementation",
									"nameLocation": "1480:28:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1187,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1186,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1517:14:8",
												"nodeType": "VariableDeclaration",
												"scope": 1188,
												"src": "1509:22:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1185,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:24:8"
									},
									"src": "1474:59:8"
								},
								{
									"documentation": {
										"id": 1189,
										"nodeType": "StructuredDocumentation",
										"src": "1539:60:8",
										"text": " @dev The `admin` of the proxy is invalid."
									},
									"errorSelector": "62e77ba2",
									"id": 1193,
									"name": "ERC1967InvalidAdmin",
									"nameLocation": "1610:19:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1192,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1191,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1638:5:8",
												"nodeType": "VariableDeclaration",
												"scope": 1193,
												"src": "1630:13:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1190,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1630:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1629:15:8"
									},
									"src": "1604:41:8"
								},
								{
									"documentation": {
										"id": 1194,
										"nodeType": "StructuredDocumentation",
										"src": "1651:61:8",
										"text": " @dev The `beacon` of the proxy is invalid."
									},
									"errorSelector": "64ced0ec",
									"id": 1198,
									"name": "ERC1967InvalidBeacon",
									"nameLocation": "1723:20:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1196,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "1752:6:8",
												"nodeType": "VariableDeclaration",
												"scope": 1198,
												"src": "1744:14:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1195,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1744:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1743:16:8"
									},
									"src": "1717:43:8"
								},
								{
									"documentation": {
										"id": 1199,
										"nodeType": "StructuredDocumentation",
										"src": "1766:82:8",
										"text": " @dev An upgrade function sees `msg.value > 0` that may be lost."
									},
									"errorSelector": "b398979f",
									"id": 1201,
									"name": "ERC1967NonPayable",
									"nameLocation": "1859:17:8",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1200,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1876:2:8"
									},
									"src": "1853:26:8"
								},
								{
									"body": {
										"id": 1213,
										"nodeType": "Block",
										"src": "2018:77:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1209,
																"name": "IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1183,
																"src": "2062:19:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1207,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1829,
																"src": "2035:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1829_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 1208,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2047:14:8",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1751,
															"src": "2035:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1725_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 1210,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2035:47:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1725_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 1211,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2083:5:8",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1724,
													"src": "2035:53:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1206,
												"id": 1212,
												"nodeType": "Return",
												"src": "2028:60:8"
											}
										]
									},
									"documentation": {
										"id": 1202,
										"nodeType": "StructuredDocumentation",
										"src": "1885:67:8",
										"text": " @dev Returns the current implementation address."
									},
									"id": 1214,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getImplementation",
									"nameLocation": "1966:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1203,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1983:2:8"
									},
									"returnParameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1205,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1214,
												"src": "2009:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1204,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2009:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:9:8"
									},
									"scope": 1456,
									"src": "1957:138:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1240,
										"nodeType": "Block",
										"src": "2249:218:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1224,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1220,
																"name": "newImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1217,
																"src": "2263:17:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1221,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2281:4:8",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "2263:22:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1222,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2286:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2263:29:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1223,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2296:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2263:34:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1230,
												"nodeType": "IfStatement",
												"src": "2259:119:8",
												"trueBody": {
													"id": 1229,
													"nodeType": "Block",
													"src": "2299:79:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1226,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1217,
																		"src": "2349:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1225,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1188,
																	"src": "2320:28:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1227,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2320:47:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1228,
															"nodeType": "RevertStatement",
															"src": "2313:54:8"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1238,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 1234,
																	"name": "IMPLEMENTATION_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1183,
																	"src": "2414:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1231,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1829,
																	"src": "2387:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1829_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 1233,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2399:14:8",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1751,
																"src": "2387:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1725_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 1235,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2387:47:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1725_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 1236,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2435:5:8",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1724,
														"src": "2387:53:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1237,
														"name": "newImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1217,
														"src": "2443:17:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2387:73:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1239,
												"nodeType": "ExpressionStatement",
												"src": "2387:73:8"
											}
										]
									},
									"documentation": {
										"id": 1215,
										"nodeType": "StructuredDocumentation",
										"src": "2101:80:8",
										"text": " @dev Stores a new address in the EIP1967 implementation slot."
									},
									"id": 1241,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nameLocation": "2195:18:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1218,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1217,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2222:17:8",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "2214:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1216,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2214:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2213:27:8"
									},
									"returnParameters": {
										"id": 1219,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2249:0:8"
									},
									"scope": 1456,
									"src": "2186:281:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1274,
										"nodeType": "Block",
										"src": "2860:254:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1250,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1244,
															"src": "2889:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1249,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1241,
														"src": "2870:18:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2870:37:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1252,
												"nodeType": "ExpressionStatement",
												"src": "2870:37:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1254,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1244,
															"src": "2931:17:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1253,
														"name": "Upgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1167,
														"src": "2922:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2922:27:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1256,
												"nodeType": "EmitStatement",
												"src": "2917:32:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1257,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1246,
															"src": "2964:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1258,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2969:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2964:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1259,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2978:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2964:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1272,
													"nodeType": "Block",
													"src": "3065:43:8",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1269,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1455,
																	"src": "3079:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1270,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3079:18:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1271,
															"nodeType": "ExpressionStatement",
															"src": "3079:18:8"
														}
													]
												},
												"id": 1273,
												"nodeType": "IfStatement",
												"src": "2960:148:8",
												"trueBody": {
													"id": 1268,
													"nodeType": "Block",
													"src": "2981:78:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1264,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1244,
																		"src": "3024:17:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1265,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1246,
																		"src": "3043:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 1261,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1719,
																		"src": "2995:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$1719_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 1263,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3003:20:8",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1638,
																	"src": "2995:28:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 1266,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2995:53:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1267,
															"nodeType": "ExpressionStatement",
															"src": "2995:53:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1242,
										"nodeType": "StructuredDocumentation",
										"src": "2473:301:8",
										"text": " @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 1275,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeToAndCall",
									"nameLocation": "2788:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1247,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1244,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2813:17:8",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "2805:25:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1243,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2805:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1246,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2845:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1275,
												"src": "2832:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1245,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2832:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2804:46:8"
									},
									"returnParameters": {
										"id": 1248,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2860:0:8"
									},
									"scope": 1456,
									"src": "2779:335:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1276,
										"nodeType": "StructuredDocumentation",
										"src": "3120:145:8",
										"text": " @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
									},
									"id": 1279,
									"mutability": "constant",
									"name": "ADMIN_SLOT",
									"nameLocation": "3361:10:8",
									"nodeType": "VariableDeclaration",
									"scope": 1456,
									"src": "3335:105:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1277,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3335:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
										"id": 1278,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3374:66:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
											"typeString": "int_const 8195...(69 digits omitted)...7091"
										},
										"value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1291,
										"nodeType": "Block",
										"src": "3844:68:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1287,
																"name": "ADMIN_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1279,
																"src": "3888:10:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1285,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1829,
																"src": "3861:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1829_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 1286,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3873:14:8",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1751,
															"src": "3861:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1725_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 1288,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3861:38:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1725_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 1289,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3900:5:8",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1724,
													"src": "3861:44:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1284,
												"id": 1290,
												"nodeType": "Return",
												"src": "3854:51:8"
											}
										]
									},
									"documentation": {
										"id": 1280,
										"nodeType": "StructuredDocumentation",
										"src": "3447:340:8",
										"text": " @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
									},
									"id": 1292,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAdmin",
									"nameLocation": "3801:8:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1281,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3809:2:8"
									},
									"returnParameters": {
										"id": 1284,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1283,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1292,
												"src": "3835:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1282,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3835:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3834:9:8"
									},
									"scope": 1456,
									"src": "3792:120:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1322,
										"nodeType": "Block",
										"src": "4039:172:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1303,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1298,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1295,
														"src": "4053:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1301,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4073:1:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1300,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4065:7:8",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1299,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4065:7:8",
																"typeDescriptions": {}
															}
														},
														"id": 1302,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4065:10:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4053:22:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1312,
												"nodeType": "IfStatement",
												"src": "4049:91:8",
												"trueBody": {
													"id": 1311,
													"nodeType": "Block",
													"src": "4077:63:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1307,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4126:1:8",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1306,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4118:7:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1305,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4118:7:8",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1308,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4118:10:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1304,
																	"name": "ERC1967InvalidAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1193,
																	"src": "4098:19:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1309,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4098:31:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1310,
															"nodeType": "RevertStatement",
															"src": "4091:38:8"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1320,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 1316,
																	"name": "ADMIN_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1279,
																	"src": "4176:10:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1313,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1829,
																	"src": "4149:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1829_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 1315,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4161:14:8",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1751,
																"src": "4149:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1725_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 1317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4149:38:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1725_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 1318,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4188:5:8",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1724,
														"src": "4149:44:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1319,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1295,
														"src": "4196:8:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4149:55:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1321,
												"nodeType": "ExpressionStatement",
												"src": "4149:55:8"
											}
										]
									},
									"documentation": {
										"id": 1293,
										"nodeType": "StructuredDocumentation",
										"src": "3918:71:8",
										"text": " @dev Stores a new address in the EIP1967 admin slot."
									},
									"id": 1323,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAdmin",
									"nameLocation": "4003:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1295,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "4021:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1323,
												"src": "4013:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4013:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4012:18:8"
									},
									"returnParameters": {
										"id": 1297,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4039:0:8"
									},
									"scope": 1456,
									"src": "3994:217:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1339,
										"nodeType": "Block",
										"src": "4379:85:8",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1330,
																"name": "getAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1292,
																"src": "4407:8:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1331,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4407:10:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1332,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1326,
															"src": "4419:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1329,
														"name": "AdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1174,
														"src": "4394:12:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1333,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4394:34:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1334,
												"nodeType": "EmitStatement",
												"src": "4389:39:8"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1336,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1326,
															"src": "4448:8:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1335,
														"name": "_setAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1323,
														"src": "4438:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1337,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4438:19:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1338,
												"nodeType": "ExpressionStatement",
												"src": "4438:19:8"
											}
										]
									},
									"documentation": {
										"id": 1324,
										"nodeType": "StructuredDocumentation",
										"src": "4217:109:8",
										"text": " @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."
									},
									"id": 1340,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "changeAdmin",
									"nameLocation": "4340:11:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1327,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1326,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "4360:8:8",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "4352:16:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1325,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4352:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4351:18:8"
									},
									"returnParameters": {
										"id": 1328,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4379:0:8"
									},
									"scope": 1456,
									"src": "4331:133:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1341,
										"nodeType": "StructuredDocumentation",
										"src": "4470:201:8",
										"text": " @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
									},
									"id": 1344,
									"mutability": "constant",
									"name": "BEACON_SLOT",
									"nameLocation": "4767:11:8",
									"nodeType": "VariableDeclaration",
									"scope": 1456,
									"src": "4741:106:8",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1342,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4741:7:8",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530",
										"id": 1343,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4781:66:8",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1",
											"typeString": "int_const 7415...(69 digits omitted)...4704"
										},
										"value": "0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1356,
										"nodeType": "Block",
										"src": "4963:69:8",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1352,
																"name": "BEACON_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1344,
																"src": "5007:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1350,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1829,
																"src": "4980:11:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1829_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 1351,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4992:14:8",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1751,
															"src": "4980:26:8",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1725_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 1353,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4980:39:8",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1725_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 1354,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5020:5:8",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1724,
													"src": "4980:45:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1349,
												"id": 1355,
												"nodeType": "Return",
												"src": "4973:52:8"
											}
										]
									},
									"documentation": {
										"id": 1345,
										"nodeType": "StructuredDocumentation",
										"src": "4854:51:8",
										"text": " @dev Returns the current beacon."
									},
									"id": 1357,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBeacon",
									"nameLocation": "4919:9:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4928:2:8"
									},
									"returnParameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1348,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1357,
												"src": "4954:7:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1347,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4954:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4953:9:8"
									},
									"scope": 1456,
									"src": "4910:122:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1402,
										"nodeType": "Block",
										"src": "5161:390:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1367,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1363,
																"name": "newBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1360,
																"src": "5175:9:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5185:4:8",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5175:14:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1365,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5190:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5175:21:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1366,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5200:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5175:26:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1373,
												"nodeType": "IfStatement",
												"src": "5171:95:8",
												"trueBody": {
													"id": 1372,
													"nodeType": "Block",
													"src": "5203:63:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1369,
																		"name": "newBeacon",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1360,
																		"src": "5245:9:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1368,
																	"name": "ERC1967InvalidBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1198,
																	"src": "5224:20:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1370,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5224:31:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1371,
															"nodeType": "RevertStatement",
															"src": "5217:38:8"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1381,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 1377,
																	"name": "BEACON_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1344,
																	"src": "5303:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1374,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1829,
																	"src": "5276:11:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$1829_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 1376,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5288:14:8",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1751,
																"src": "5276:26:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1725_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 1378,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5276:39:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1725_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 1379,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5316:5:8",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1724,
														"src": "5276:45:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1380,
														"name": "newBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1360,
														"src": "5324:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5276:57:8",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1382,
												"nodeType": "ExpressionStatement",
												"src": "5276:57:8"
											},
											{
												"assignments": [
													1384
												],
												"declarations": [
													{
														"constant": false,
														"id": 1384,
														"mutability": "mutable",
														"name": "beaconImplementation",
														"nameLocation": "5352:20:8",
														"nodeType": "VariableDeclaration",
														"scope": 1402,
														"src": "5344:28:8",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1383,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5344:7:8",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1390,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 1386,
																	"name": "newBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1360,
																	"src": "5383:9:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1385,
																"name": "IBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1466,
																"src": "5375:7:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBeacon_$1466_$",
																	"typeString": "type(contract IBeacon)"
																}
															},
															"id": 1387,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5375:18:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBeacon_$1466",
																"typeString": "contract IBeacon"
															}
														},
														"id": 1388,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5394:14:8",
														"memberName": "implementation",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1465,
														"src": "5375:33:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 1389,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5375:35:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5344:66:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1395,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1391,
																"name": "beaconImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1384,
																"src": "5424:20:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1392,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5445:4:8",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5424:25:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1393,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5450:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5424:32:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1394,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5460:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5424:37:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1401,
												"nodeType": "IfStatement",
												"src": "5420:125:8",
												"trueBody": {
													"id": 1400,
													"nodeType": "Block",
													"src": "5463:82:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1397,
																		"name": "beaconImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1384,
																		"src": "5513:20:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1396,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1188,
																	"src": "5484:28:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1398,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5484:50:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1399,
															"nodeType": "RevertStatement",
															"src": "5477:57:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1358,
										"nodeType": "StructuredDocumentation",
										"src": "5038:71:8",
										"text": " @dev Stores a new beacon in the EIP1967 beacon slot."
									},
									"id": 1403,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setBeacon",
									"nameLocation": "5123:10:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1360,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "5142:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1403,
												"src": "5134:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1359,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5134:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5133:19:8"
									},
									"returnParameters": {
										"id": 1362,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:8"
									},
									"scope": 1456,
									"src": "5114:437:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1440,
										"nodeType": "Block",
										"src": "6155:254:8",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1412,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1406,
															"src": "6176:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1411,
														"name": "_setBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1403,
														"src": "6165:10:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6165:21:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1414,
												"nodeType": "ExpressionStatement",
												"src": "6165:21:8"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1416,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1406,
															"src": "6216:9:8",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1415,
														"name": "BeaconUpgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1179,
														"src": "6201:14:8",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1417,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6201:25:8",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1418,
												"nodeType": "EmitStatement",
												"src": "6196:30:8"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1422,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1419,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1408,
															"src": "6241:4:8",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1420,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6246:6:8",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6241:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1421,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6255:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6241:15:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1438,
													"nodeType": "Block",
													"src": "6360:43:8",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1435,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1455,
																	"src": "6374:16:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6374:18:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1437,
															"nodeType": "ExpressionStatement",
															"src": "6374:18:8"
														}
													]
												},
												"id": 1439,
												"nodeType": "IfStatement",
												"src": "6237:166:8",
												"trueBody": {
													"id": 1434,
													"nodeType": "Block",
													"src": "6258:96:8",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1427,
																						"name": "newBeacon",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1406,
																						"src": "6309:9:8",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 1426,
																					"name": "IBeacon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1466,
																					"src": "6301:7:8",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IBeacon_$1466_$",
																						"typeString": "type(contract IBeacon)"
																					}
																				},
																				"id": 1428,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6301:18:8",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IBeacon_$1466",
																					"typeString": "contract IBeacon"
																				}
																			},
																			"id": 1429,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6320:14:8",
																			"memberName": "implementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1465,
																			"src": "6301:33:8",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 1430,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6301:35:8",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1431,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1408,
																		"src": "6338:4:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 1423,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1719,
																		"src": "6272:7:8",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$1719_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 1425,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6280:20:8",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1638,
																	"src": "6272:28:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 1432,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6272:71:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1433,
															"nodeType": "ExpressionStatement",
															"src": "6272:71:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1404,
										"nodeType": "StructuredDocumentation",
										"src": "5557:514:8",
										"text": " @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."
									},
									"id": 1441,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeBeaconToAndCall",
									"nameLocation": "6085:22:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1406,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "6116:9:8",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "6108:17:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1405,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6108:7:8",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1408,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6140:4:8",
												"nodeType": "VariableDeclaration",
												"scope": 1441,
												"src": "6127:17:8",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1407,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6127:5:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6107:38:8"
									},
									"returnParameters": {
										"id": 1410,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6155:0:8"
									},
									"scope": 1456,
									"src": "6076:333:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1454,
										"nodeType": "Block",
										"src": "6634:86:8",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1448,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1445,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6648:3:8",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1446,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6652:5:8",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "6648:9:8",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1447,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6660:1:8",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6648:13:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1453,
												"nodeType": "IfStatement",
												"src": "6644:70:8",
												"trueBody": {
													"id": 1452,
													"nodeType": "Block",
													"src": "6663:51:8",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1449,
																	"name": "ERC1967NonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1201,
																	"src": "6684:17:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1450,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6684:19:8",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1451,
															"nodeType": "RevertStatement",
															"src": "6677:26:8"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1442,
										"nodeType": "StructuredDocumentation",
										"src": "6415:178:8",
										"text": " @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."
									},
									"id": 1455,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNonPayable",
									"nameLocation": "6607:16:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1443,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6623:2:8"
									},
									"returnParameters": {
										"id": 1444,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6634:0:8"
									},
									"scope": 1456,
									"src": "6598:122:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1457,
							"src": "449:6273:8",
							"usedErrors": [
								1188,
								1193,
								1198,
								1201
							],
							"usedEvents": [
								1167,
								1174,
								1179
							]
						}
					],
					"src": "114:6609:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
					"exportedSymbols": {
						"IBeacon": [
							1466
						]
					},
					"id": 1467,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1458,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBeacon",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1459,
								"nodeType": "StructuredDocumentation",
								"src": "134:79:9",
								"text": " @dev This is the interface that {BeaconProxy} expects of its beacon."
							},
							"fullyImplemented": false,
							"id": 1466,
							"linearizedBaseContracts": [
								1466
							],
							"name": "IBeacon",
							"nameLocation": "224:7:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1460,
										"nodeType": "StructuredDocumentation",
										"src": "238:168:9",
										"text": " @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."
									},
									"functionSelector": "5c60da1b",
									"id": 1465,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "420:14:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1461,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "434:2:9"
									},
									"returnParameters": {
										"id": 1464,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1463,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1465,
												"src": "460:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1462,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "459:9:9"
									},
									"scope": 1466,
									"src": "411:58:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1467,
							"src": "214:257:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "108:364:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1719
						]
					},
					"id": 1720,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1468,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1469,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:10",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1719,
							"linearizedBaseContracts": [
								1719
							],
							"name": "Address",
							"nameLocation": "203:7:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1470,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:10",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 1474,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1473,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1472,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1474,
												"src": "349:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1471,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:10"
									},
									"src": "316:50:10"
								},
								{
									"documentation": {
										"id": 1475,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:10",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 1479,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1478,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1477,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1479,
												"src": "475:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1476,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:10"
									},
									"src": "452:39:10"
								},
								{
									"documentation": {
										"id": 1480,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:10",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 1482,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1481,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:10"
									},
									"src": "591:24:10"
								},
								{
									"body": {
										"id": 1522,
										"nodeType": "Block",
										"src": "1602:260:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1496,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1492,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1719",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1719",
																		"typeString": "library Address"
																	}
																],
																"id": 1491,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1490,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1493,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1494,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:10",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1495,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1487,
														"src": "1640:6:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1505,
												"nodeType": "IfStatement",
												"src": "1612:109:10",
												"trueBody": {
													"id": 1504,
													"nodeType": "Block",
													"src": "1648:73:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1500,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$1719",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$1719",
																					"typeString": "library Address"
																				}
																			],
																			"id": 1499,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1498,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:10",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1501,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1497,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1474,
																	"src": "1669:26:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1502,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1503,
															"nodeType": "RevertStatement",
															"src": "1662:48:10"
														}
													]
												}
											},
											{
												"assignments": [
													1507,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1507,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1522,
														"src": "1732:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1506,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1514,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1512,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:10",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1508,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1485,
																"src": "1750:9:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1509,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:10",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1511,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1510,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1487,
																"src": "1772:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1513,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:10"
											},
											{
												"condition": {
													"id": 1516,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:10",
													"subExpression": {
														"id": 1515,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1507,
														"src": "1798:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1521,
												"nodeType": "IfStatement",
												"src": "1793:63:10",
												"trueBody": {
													"id": 1520,
													"nodeType": "Block",
													"src": "1807:49:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1517,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1482,
																	"src": "1828:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1518,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1519,
															"nodeType": "RevertStatement",
															"src": "1821:24:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1483,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:10",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1523,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1488,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1485,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:10",
												"nodeType": "VariableDeclaration",
												"scope": 1523,
												"src": "1550:25:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:10",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1487,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1523,
												"src": "1577:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1486,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:10"
									},
									"returnParameters": {
										"id": 1489,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:10"
									},
									"scope": 1719,
									"src": "1531:331:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1539,
										"nodeType": "Block",
										"src": "2794:62:10",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1534,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1526,
															"src": "2833:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1535,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1528,
															"src": "2841:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1536,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:10",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1533,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1586,
														"src": "2811:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 1537,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1532,
												"id": 1538,
												"nodeType": "Return",
												"src": "2804:45:10"
											}
										]
									},
									"documentation": {
										"id": 1524,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:10",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 1540,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1526,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1540,
												"src": "2727:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1525,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1528,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1540,
												"src": "2743:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1527,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:10"
									},
									"returnParameters": {
										"id": 1532,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1531,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1540,
												"src": "2780:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1530,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:10"
									},
									"scope": 1719,
									"src": "2705:151:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1585,
										"nodeType": "Block",
										"src": "3293:279:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1558,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1554,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1719",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1719",
																		"typeString": "library Address"
																	}
																],
																"id": 1553,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1552,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:10",
																	"typeDescriptions": {}
																}
															},
															"id": 1555,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:10",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1556,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:10",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1557,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1547,
														"src": "3331:5:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1567,
												"nodeType": "IfStatement",
												"src": "3303:108:10",
												"trueBody": {
													"id": 1566,
													"nodeType": "Block",
													"src": "3338:73:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1562,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$1719",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$1719",
																					"typeString": "library Address"
																				}
																			],
																			"id": 1561,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1560,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:10",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1563,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:10",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1559,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1474,
																	"src": "3359:26:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1564,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1565,
															"nodeType": "RevertStatement",
															"src": "3352:48:10"
														}
													]
												}
											},
											{
												"assignments": [
													1569,
													1571
												],
												"declarations": [
													{
														"constant": false,
														"id": 1569,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1585,
														"src": "3421:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1568,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1571,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 1585,
														"src": "3435:23:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1570,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1578,
												"initialValue": {
													"arguments": [
														{
															"id": 1576,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1545,
															"src": "3488:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1572,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1543,
																"src": "3462:6:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:10",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:10",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1575,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1574,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1547,
																"src": "3481:5:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1577,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1580,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1543,
															"src": "3537:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1581,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1569,
															"src": "3545:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1582,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1571,
															"src": "3554:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1579,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1678,
														"src": "3510:26:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1551,
												"id": 1584,
												"nodeType": "Return",
												"src": "3503:62:10"
											}
										]
									},
									"documentation": {
										"id": 1541,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:10",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 1586,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1548,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1543,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1586,
												"src": "3211:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1542,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1545,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1586,
												"src": "3227:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1544,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1547,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:10",
												"nodeType": "VariableDeclaration",
												"scope": 1586,
												"src": "3246:13:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1546,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:10"
									},
									"returnParameters": {
										"id": 1551,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1550,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1586,
												"src": "3279:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1549,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:10"
									},
									"scope": 1719,
									"src": "3180:392:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1611,
										"nodeType": "Block",
										"src": "3811:154:10",
										"statements": [
											{
												"assignments": [
													1597,
													1599
												],
												"declarations": [
													{
														"constant": false,
														"id": 1597,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1611,
														"src": "3822:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1596,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1599,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 1611,
														"src": "3836:23:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1598,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1604,
												"initialValue": {
													"arguments": [
														{
															"id": 1602,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1591,
															"src": "3881:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1600,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1589,
															"src": "3863:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1601,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:10",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1606,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1589,
															"src": "3930:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1607,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1597,
															"src": "3938:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1608,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1599,
															"src": "3947:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1605,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1678,
														"src": "3903:26:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1609,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1595,
												"id": 1610,
												"nodeType": "Return",
												"src": "3896:62:10"
											}
										]
									},
									"documentation": {
										"id": 1587,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:10",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 1612,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1592,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1589,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "3739:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1588,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1591,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "3755:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1590,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:10"
									},
									"returnParameters": {
										"id": 1595,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1594,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1612,
												"src": "3797:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1593,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:10"
									},
									"scope": 1719,
									"src": "3711:254:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1637,
										"nodeType": "Block",
										"src": "4203:156:10",
										"statements": [
											{
												"assignments": [
													1623,
													1625
												],
												"declarations": [
													{
														"constant": false,
														"id": 1623,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:10",
														"nodeType": "VariableDeclaration",
														"scope": 1637,
														"src": "4214:12:10",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1622,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1625,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:10",
														"nodeType": "VariableDeclaration",
														"scope": 1637,
														"src": "4228:23:10",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1624,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1630,
												"initialValue": {
													"arguments": [
														{
															"id": 1628,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1617,
															"src": "4275:4:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1626,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1615,
															"src": "4255:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1627,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:10",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1629,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:10"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1632,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1615,
															"src": "4324:6:10",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1633,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1623,
															"src": "4332:7:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1634,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1625,
															"src": "4341:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1631,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1678,
														"src": "4297:26:10",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1635,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:10",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1621,
												"id": 1636,
												"nodeType": "Return",
												"src": "4290:62:10"
											}
										]
									},
									"documentation": {
										"id": 1613,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:10",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 1638,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1618,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1615,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1638,
												"src": "4136:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1614,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1617,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1638,
												"src": "4152:17:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1616,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:10"
									},
									"returnParameters": {
										"id": 1621,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1620,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1638,
												"src": "4189:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1619,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:10"
									},
									"scope": 1719,
									"src": "4106:253:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1677,
										"nodeType": "Block",
										"src": "4783:424:10",
										"statements": [
											{
												"condition": {
													"id": 1651,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:10",
													"subExpression": {
														"id": 1650,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1643,
														"src": "4798:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1675,
													"nodeType": "Block",
													"src": "4857:344:10",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1666,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1660,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1657,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1645,
																			"src": "5045:10:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1658,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:10",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1659,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1665,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 1661,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1641,
																				"src": "5071:6:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1662,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:10",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:10",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1663,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:10",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1664,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1672,
															"nodeType": "IfStatement",
															"src": "5041:119:10",
															"trueBody": {
																"id": 1671,
																"nodeType": "Block",
																"src": "5096:64:10",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1668,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1641,
																					"src": "5138:6:10",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1667,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1479,
																				"src": "5121:16:10",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 1669,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:10",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1670,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:10"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1673,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1645,
																"src": "5180:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1649,
															"id": 1674,
															"nodeType": "Return",
															"src": "5173:17:10"
														}
													]
												},
												"id": 1676,
												"nodeType": "IfStatement",
												"src": "4793:408:10",
												"trueBody": {
													"id": 1656,
													"nodeType": "Block",
													"src": "4807:44:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1653,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1645,
																		"src": "4829:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1652,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1718,
																	"src": "4821:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1654,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1655,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1639,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:10",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 1678,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1646,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1641,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1678,
												"src": "4670:14:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1640,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1643,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1678,
												"src": "4694:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1642,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1645,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1678,
												"src": "4716:23:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1644,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:10"
									},
									"returnParameters": {
										"id": 1649,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1648,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1678,
												"src": "4769:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1647,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:10"
									},
									"scope": 1719,
									"src": "4625:582:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1699,
										"nodeType": "Block",
										"src": "5509:122:10",
										"statements": [
											{
												"condition": {
													"id": 1689,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:10",
													"subExpression": {
														"id": 1688,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1681,
														"src": "5524:7:10",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1697,
													"nodeType": "Block",
													"src": "5583:42:10",
													"statements": [
														{
															"expression": {
																"id": 1695,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1683,
																"src": "5604:10:10",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1687,
															"id": 1696,
															"nodeType": "Return",
															"src": "5597:17:10"
														}
													]
												},
												"id": 1698,
												"nodeType": "IfStatement",
												"src": "5519:106:10",
												"trueBody": {
													"id": 1694,
													"nodeType": "Block",
													"src": "5533:44:10",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1691,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1683,
																		"src": "5555:10:10",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1690,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1718,
																	"src": "5547:7:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1692,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1693,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1679,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:10",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 1700,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1681,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "5433:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1680,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1683,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "5447:23:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1682,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:10"
									},
									"returnParameters": {
										"id": 1687,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1686,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1700,
												"src": "5495:12:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1685,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:10"
									},
									"scope": 1719,
									"src": "5407:224:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1717,
										"nodeType": "Block",
										"src": "5798:461:10",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1709,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1706,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1703,
															"src": "5874:10:10",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1707,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:10",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:10",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1708,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:10",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1715,
													"nodeType": "Block",
													"src": "6204:49:10",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1712,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1482,
																	"src": "6225:15:10",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1713,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:10",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1714,
															"nodeType": "RevertStatement",
															"src": "6218:24:10"
														}
													]
												},
												"id": 1716,
												"nodeType": "IfStatement",
												"src": "5870:383:10",
												"trueBody": {
													"id": 1711,
													"nodeType": "Block",
													"src": "5897:301:10",
													"statements": [
														{
															"AST": {
																"nativeSrc": "6055:133:10",
																"nodeType": "YulBlock",
																"src": "6055:133:10",
																"statements": [
																	{
																		"nativeSrc": "6073:40:10",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:10",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "6102:10:10",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:10"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6096:5:10",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:10"
																			},
																			"nativeSrc": "6096:17:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:10"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "6077:15:10",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:10",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6141:2:10",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:10",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "6145:10:10",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:10"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6137:3:10",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:10"
																					},
																					"nativeSrc": "6137:19:10",
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:10"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "6158:15:10",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:10"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6130:6:10",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:10"
																			},
																			"nativeSrc": "6130:44:10",
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:10"
																		},
																		"nativeSrc": "6130:44:10",
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:10"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 1703,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:10",
																	"valueSize": 1
																},
																{
																	"declaration": 1703,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:10",
																	"valueSize": 1
																}
															],
															"id": 1710,
															"nodeType": "InlineAssembly",
															"src": "6046:142:10"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1701,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:10",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 1718,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1704,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1703,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1718,
												"src": "5760:23:10",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1702,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:10"
									},
									"returnParameters": {
										"id": 1705,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:10"
									},
									"scope": 1719,
									"src": "5743:516:10",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1720,
							"src": "195:6066:10",
							"usedErrors": [
								1474,
								1479,
								1482
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							1829
						]
					},
					"id": 1830,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1721,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1722,
								"nodeType": "StructuredDocumentation",
								"src": "219:1025:11",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1829,
							"linearizedBaseContracts": [
								1829
							],
							"name": "StorageSlot",
							"nameLocation": "1253:11:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 1725,
									"members": [
										{
											"constant": false,
											"id": 1724,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1308:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 1725,
											"src": "1300:13:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1723,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1300:7:11",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1278:11:11",
									"nodeType": "StructDefinition",
									"scope": 1829,
									"src": "1271:49:11",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 1728,
									"members": [
										{
											"constant": false,
											"id": 1727,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1360:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 1728,
											"src": "1355:10:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1726,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1355:4:11",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1333:11:11",
									"nodeType": "StructDefinition",
									"scope": 1829,
									"src": "1326:46:11",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 1731,
									"members": [
										{
											"constant": false,
											"id": 1730,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1415:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 1731,
											"src": "1407:13:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1729,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1407:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1385:11:11",
									"nodeType": "StructDefinition",
									"scope": 1829,
									"src": "1378:49:11",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 1734,
									"members": [
										{
											"constant": false,
											"id": 1733,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1470:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 1734,
											"src": "1462:13:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1732,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1462:7:11",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1440:11:11",
									"nodeType": "StructDefinition",
									"scope": 1829,
									"src": "1433:49:11",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 1737,
									"members": [
										{
											"constant": false,
											"id": 1736,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1523:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 1737,
											"src": "1516:12:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1735,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1516:6:11",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1495:10:11",
									"nodeType": "StructDefinition",
									"scope": 1829,
									"src": "1488:47:11",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 1740,
									"members": [
										{
											"constant": false,
											"id": 1739,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1574:5:11",
											"nodeType": "VariableDeclaration",
											"scope": 1740,
											"src": "1568:11:11",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1738,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1568:5:11",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1548:9:11",
									"nodeType": "StructDefinition",
									"scope": 1829,
									"src": "1541:45:11",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1750,
										"nodeType": "Block",
										"src": "1768:106:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1830:38:11",
													"nodeType": "YulBlock",
													"src": "1830:38:11",
													"statements": [
														{
															"nativeSrc": "1844:14:11",
															"nodeType": "YulAssignment",
															"src": "1844:14:11",
															"value": {
																"name": "slot",
																"nativeSrc": "1854:4:11",
																"nodeType": "YulIdentifier",
																"src": "1854:4:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "1844:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "1844:6:11"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1747,
														"isOffset": false,
														"isSlot": true,
														"src": "1844:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1743,
														"isOffset": false,
														"isSlot": false,
														"src": "1854:4:11",
														"valueSize": 1
													}
												],
												"id": 1749,
												"nodeType": "InlineAssembly",
												"src": "1821:47:11"
											}
										]
									},
									"documentation": {
										"id": 1741,
										"nodeType": "StructuredDocumentation",
										"src": "1592:87:11",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 1751,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1693:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1743,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1716:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1751,
												"src": "1708:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1742,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1708:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1707:14:11"
									},
									"returnParameters": {
										"id": 1748,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1747,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1765:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1751,
												"src": "1745:21:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1725_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1746,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1745,
														"name": "AddressSlot",
														"nameLocations": [
															"1745:11:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1725,
														"src": "1745:11:11"
													},
													"referencedDeclaration": 1725,
													"src": "1745:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1725_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1744:23:11"
									},
									"scope": 1829,
									"src": "1684:190:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1761,
										"nodeType": "Block",
										"src": "2056:106:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2118:38:11",
													"nodeType": "YulBlock",
													"src": "2118:38:11",
													"statements": [
														{
															"nativeSrc": "2132:14:11",
															"nodeType": "YulAssignment",
															"src": "2132:14:11",
															"value": {
																"name": "slot",
																"nativeSrc": "2142:4:11",
																"nodeType": "YulIdentifier",
																"src": "2142:4:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2132:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2132:6:11"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1758,
														"isOffset": false,
														"isSlot": true,
														"src": "2132:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1754,
														"isOffset": false,
														"isSlot": false,
														"src": "2142:4:11",
														"valueSize": 1
													}
												],
												"id": 1760,
												"nodeType": "InlineAssembly",
												"src": "2109:47:11"
											}
										]
									},
									"documentation": {
										"id": 1752,
										"nodeType": "StructuredDocumentation",
										"src": "1880:87:11",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 1762,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "1981:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1755,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1754,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2004:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "1996:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1753,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1996:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1995:14:11"
									},
									"returnParameters": {
										"id": 1759,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1758,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2053:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1762,
												"src": "2033:21:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$1728_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 1757,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1756,
														"name": "BooleanSlot",
														"nameLocations": [
															"2033:11:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1728,
														"src": "2033:11:11"
													},
													"referencedDeclaration": 1728,
													"src": "2033:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$1728_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2032:23:11"
									},
									"scope": 1829,
									"src": "1972:190:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1772,
										"nodeType": "Block",
										"src": "2344:106:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2406:38:11",
													"nodeType": "YulBlock",
													"src": "2406:38:11",
													"statements": [
														{
															"nativeSrc": "2420:14:11",
															"nodeType": "YulAssignment",
															"src": "2420:14:11",
															"value": {
																"name": "slot",
																"nativeSrc": "2430:4:11",
																"nodeType": "YulIdentifier",
																"src": "2430:4:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2420:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2420:6:11"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1769,
														"isOffset": false,
														"isSlot": true,
														"src": "2420:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1765,
														"isOffset": false,
														"isSlot": false,
														"src": "2430:4:11",
														"valueSize": 1
													}
												],
												"id": 1771,
												"nodeType": "InlineAssembly",
												"src": "2397:47:11"
											}
										]
									},
									"documentation": {
										"id": 1763,
										"nodeType": "StructuredDocumentation",
										"src": "2168:87:11",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 1773,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2269:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1766,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1765,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2292:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1773,
												"src": "2284:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1764,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2284:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2283:14:11"
									},
									"returnParameters": {
										"id": 1770,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1769,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2341:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1773,
												"src": "2321:21:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1731_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1768,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1767,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2321:11:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1731,
														"src": "2321:11:11"
													},
													"referencedDeclaration": 1731,
													"src": "2321:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1731_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2320:23:11"
									},
									"scope": 1829,
									"src": "2260:190:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1783,
										"nodeType": "Block",
										"src": "2632:106:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2694:38:11",
													"nodeType": "YulBlock",
													"src": "2694:38:11",
													"statements": [
														{
															"nativeSrc": "2708:14:11",
															"nodeType": "YulAssignment",
															"src": "2708:14:11",
															"value": {
																"name": "slot",
																"nativeSrc": "2718:4:11",
																"nodeType": "YulIdentifier",
																"src": "2718:4:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2708:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2708:6:11"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1780,
														"isOffset": false,
														"isSlot": true,
														"src": "2708:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1776,
														"isOffset": false,
														"isSlot": false,
														"src": "2718:4:11",
														"valueSize": 1
													}
												],
												"id": 1782,
												"nodeType": "InlineAssembly",
												"src": "2685:47:11"
											}
										]
									},
									"documentation": {
										"id": 1774,
										"nodeType": "StructuredDocumentation",
										"src": "2456:87:11",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 1784,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2557:14:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1777,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1776,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2580:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1784,
												"src": "2572:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1775,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2572:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2571:14:11"
									},
									"returnParameters": {
										"id": 1781,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1780,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2629:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1784,
												"src": "2609:21:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1734_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1779,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1778,
														"name": "Uint256Slot",
														"nameLocations": [
															"2609:11:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1734,
														"src": "2609:11:11"
													},
													"referencedDeclaration": 1734,
													"src": "2609:11:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1734_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2608:23:11"
									},
									"scope": 1829,
									"src": "2548:190:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1794,
										"nodeType": "Block",
										"src": "2917:106:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2979:38:11",
													"nodeType": "YulBlock",
													"src": "2979:38:11",
													"statements": [
														{
															"nativeSrc": "2993:14:11",
															"nodeType": "YulAssignment",
															"src": "2993:14:11",
															"value": {
																"name": "slot",
																"nativeSrc": "3003:4:11",
																"nodeType": "YulIdentifier",
																"src": "3003:4:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2993:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "2993:6:11"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1791,
														"isOffset": false,
														"isSlot": true,
														"src": "2993:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1787,
														"isOffset": false,
														"isSlot": false,
														"src": "3003:4:11",
														"valueSize": 1
													}
												],
												"id": 1793,
												"nodeType": "InlineAssembly",
												"src": "2970:47:11"
											}
										]
									},
									"documentation": {
										"id": 1785,
										"nodeType": "StructuredDocumentation",
										"src": "2744:86:11",
										"text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
									},
									"id": 1795,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "2844:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1788,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1787,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2866:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1795,
												"src": "2858:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1786,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2858:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2857:14:11"
									},
									"returnParameters": {
										"id": 1792,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1791,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2914:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1795,
												"src": "2895:20:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1737_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1790,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1789,
														"name": "StringSlot",
														"nameLocations": [
															"2895:10:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1737,
														"src": "2895:10:11"
													},
													"referencedDeclaration": 1737,
													"src": "2895:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1737_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2894:22:11"
									},
									"scope": 1829,
									"src": "2835:188:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1805,
										"nodeType": "Block",
										"src": "3225:112:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3287:44:11",
													"nodeType": "YulBlock",
													"src": "3287:44:11",
													"statements": [
														{
															"nativeSrc": "3301:20:11",
															"nodeType": "YulAssignment",
															"src": "3301:20:11",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3311:10:11",
																"nodeType": "YulIdentifier",
																"src": "3311:10:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3301:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3301:6:11"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1802,
														"isOffset": false,
														"isSlot": true,
														"src": "3301:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1798,
														"isOffset": false,
														"isSlot": true,
														"src": "3311:10:11",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1804,
												"nodeType": "InlineAssembly",
												"src": "3278:53:11"
											}
										]
									},
									"documentation": {
										"id": 1796,
										"nodeType": "StructuredDocumentation",
										"src": "3029:101:11",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 1806,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3144:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1799,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1798,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3173:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1806,
												"src": "3158:20:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1797,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3158:6:11",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3157:22:11"
									},
									"returnParameters": {
										"id": 1803,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1802,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3222:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1806,
												"src": "3203:20:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1737_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1801,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1800,
														"name": "StringSlot",
														"nameLocations": [
															"3203:10:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1737,
														"src": "3203:10:11"
													},
													"referencedDeclaration": 1737,
													"src": "3203:10:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1737_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3202:22:11"
									},
									"scope": 1829,
									"src": "3135:202:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1816,
										"nodeType": "Block",
										"src": "3513:106:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3575:38:11",
													"nodeType": "YulBlock",
													"src": "3575:38:11",
													"statements": [
														{
															"nativeSrc": "3589:14:11",
															"nodeType": "YulAssignment",
															"src": "3589:14:11",
															"value": {
																"name": "slot",
																"nativeSrc": "3599:4:11",
																"nodeType": "YulIdentifier",
																"src": "3599:4:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3589:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3589:6:11"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1813,
														"isOffset": false,
														"isSlot": true,
														"src": "3589:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1809,
														"isOffset": false,
														"isSlot": false,
														"src": "3599:4:11",
														"valueSize": 1
													}
												],
												"id": 1815,
												"nodeType": "InlineAssembly",
												"src": "3566:47:11"
											}
										]
									},
									"documentation": {
										"id": 1807,
										"nodeType": "StructuredDocumentation",
										"src": "3343:85:11",
										"text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
									},
									"id": 1817,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3442:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1810,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1809,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3463:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1817,
												"src": "3455:12:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1808,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3455:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3454:14:11"
									},
									"returnParameters": {
										"id": 1814,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1813,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3510:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1817,
												"src": "3492:19:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1740_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1812,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1811,
														"name": "BytesSlot",
														"nameLocations": [
															"3492:9:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1740,
														"src": "3492:9:11"
													},
													"referencedDeclaration": 1740,
													"src": "3492:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1740_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:21:11"
									},
									"scope": 1829,
									"src": "3433:186:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1827,
										"nodeType": "Block",
										"src": "3816:112:11",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3878:44:11",
													"nodeType": "YulBlock",
													"src": "3878:44:11",
													"statements": [
														{
															"nativeSrc": "3892:20:11",
															"nodeType": "YulAssignment",
															"src": "3892:20:11",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3902:10:11",
																"nodeType": "YulIdentifier",
																"src": "3902:10:11"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3892:6:11",
																	"nodeType": "YulIdentifier",
																	"src": "3892:6:11"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1824,
														"isOffset": false,
														"isSlot": true,
														"src": "3892:6:11",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1820,
														"isOffset": false,
														"isSlot": true,
														"src": "3902:10:11",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 1826,
												"nodeType": "InlineAssembly",
												"src": "3869:53:11"
											}
										]
									},
									"documentation": {
										"id": 1818,
										"nodeType": "StructuredDocumentation",
										"src": "3625:99:11",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 1828,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3738:12:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1821,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1820,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3765:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1828,
												"src": "3751:19:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1819,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3751:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3750:21:11"
									},
									"returnParameters": {
										"id": 1825,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1824,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3813:1:11",
												"nodeType": "VariableDeclaration",
												"scope": 1828,
												"src": "3795:19:11",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1740_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 1823,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1822,
														"name": "BytesSlot",
														"nameLocations": [
															"3795:9:11"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1740,
														"src": "3795:9:11"
													},
													"referencedDeclaration": 1740,
													"src": "3795:9:11",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1740_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3794:21:11"
									},
									"scope": 1829,
									"src": "3729:199:11",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 1830,
							"src": "1245:2685:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3738:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							1841
						]
					},
					"id": 1842,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1831,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1832,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:12",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1841,
							"linearizedBaseContracts": [
								1841
							],
							"name": "IERC165",
							"nameLocation": "431:7:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1833,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:12",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1840,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1836,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1835,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:12",
												"nodeType": "VariableDeclaration",
												"scope": 1840,
												"src": "817:18:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1834,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:12"
									},
									"returnParameters": {
										"id": 1839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1838,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1840,
												"src": "860:4:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1837,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:12"
									},
									"scope": 1841,
									"src": "790:76:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1842,
							"src": "421:447:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:12"
				},
				"id": 12
			},
			"src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol": {
				"ast": {
					"absolutePath": "src/contract/CryptoQuestTheShardsOfGenesisMMORPG.sol",
					"exportedSymbols": {
						"AccessControlUpgradeable": [
							362
						],
						"ContextUpgradeable": [
							844
						],
						"CryptoQuestTheShardsOfGenesisMMPORPG": [
							2566
						],
						"ERC165Upgradeable": [
							1060
						],
						"ERC1967Utils": [
							1456
						],
						"IAccessControl": [
							1143
						],
						"IERC1822Proxiable": [
							1153
						],
						"Initializable": [
							616
						],
						"PausableUpgradeable": [
							1020
						],
						"UUPSUpgradeable": [
							798
						]
					},
					"id": 2567,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1843,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "81:24:13"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
							"id": 1844,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2567,
							"sourceUnit": 1021,
							"src": "107:75:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
							"id": 1845,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2567,
							"sourceUnit": 363,
							"src": "183:81:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"id": 1846,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2567,
							"sourceUnit": 617,
							"src": "265:75:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"id": 1847,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2567,
							"sourceUnit": 799,
							"src": "341:77:13",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1848,
										"name": "Initializable",
										"nameLocations": [
											"469:13:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 616,
										"src": "469:13:13"
									},
									"id": 1849,
									"nodeType": "InheritanceSpecifier",
									"src": "469:13:13"
								},
								{
									"baseName": {
										"id": 1850,
										"name": "PausableUpgradeable",
										"nameLocations": [
											"484:19:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1020,
										"src": "484:19:13"
									},
									"id": 1851,
									"nodeType": "InheritanceSpecifier",
									"src": "484:19:13"
								},
								{
									"baseName": {
										"id": 1852,
										"name": "AccessControlUpgradeable",
										"nameLocations": [
											"505:24:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 362,
										"src": "505:24:13"
									},
									"id": 1853,
									"nodeType": "InheritanceSpecifier",
									"src": "505:24:13"
								},
								{
									"baseName": {
										"id": 1854,
										"name": "UUPSUpgradeable",
										"nameLocations": [
											"531:15:13"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 798,
										"src": "531:15:13"
									},
									"id": 1855,
									"nodeType": "InheritanceSpecifier",
									"src": "531:15:13"
								}
							],
							"canonicalName": "CryptoQuestTheShardsOfGenesisMMPORPG",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2566,
							"linearizedBaseContracts": [
								2566,
								798,
								1153,
								362,
								1060,
								1841,
								1143,
								1020,
								844,
								616
							],
							"name": "CryptoQuestTheShardsOfGenesisMMPORPG",
							"nameLocation": "429:36:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "e63ab1e9",
									"id": 1860,
									"mutability": "constant",
									"name": "PAUSER_ROLE",
									"nameLocation": "577:11:13",
									"nodeType": "VariableDeclaration",
									"scope": 2566,
									"src": "553:62:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1856,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "553:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5041555345525f524f4c45",
												"id": 1858,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "601:13:13",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
													"typeString": "literal_string \"PAUSER_ROLE\""
												},
												"value": "PAUSER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
													"typeString": "literal_string \"PAUSER_ROLE\""
												}
											],
											"id": 1857,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "591:9:13",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1859,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "591:24:13",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "f72c0d8b",
									"id": 1865,
									"mutability": "constant",
									"name": "UPGRADER_ROLE",
									"nameLocation": "645:13:13",
									"nodeType": "VariableDeclaration",
									"scope": 2566,
									"src": "621:66:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1861,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "621:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "55504752414445525f524f4c45",
												"id": 1863,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "671:15:13",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3",
													"typeString": "literal_string \"UPGRADER_ROLE\""
												},
												"value": "UPGRADER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3",
													"typeString": "literal_string \"UPGRADER_ROLE\""
												}
											],
											"id": 1862,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "661:9:13",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1864,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "661:26:13",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "be22d27d",
									"id": 1870,
									"mutability": "constant",
									"name": "GAME_ADMIN_ROLE",
									"nameLocation": "717:15:13",
									"nodeType": "VariableDeclaration",
									"scope": 2566,
									"src": "693:70:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1866,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "693:7:13",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "47414d455f41444d494e5f524f4c45",
												"id": 1868,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "745:17:13",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_9b7946abd96dccbe6cfc6cc2c13300ab429d93e16fa72dc459eeccda73817f08",
													"typeString": "literal_string \"GAME_ADMIN_ROLE\""
												},
												"value": "GAME_ADMIN_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_9b7946abd96dccbe6cfc6cc2c13300ab429d93e16fa72dc459eeccda73817f08",
													"typeString": "literal_string \"GAME_ADMIN_ROLE\""
												}
											],
											"id": 1867,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "735:9:13",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 1869,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "735:28:13",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "CryptoQuestTheShardsOfGenesisMMPORPG.Player",
									"id": 1893,
									"members": [
										{
											"constant": false,
											"id": 1872,
											"mutability": "mutable",
											"name": "level",
											"nameLocation": "799:5:13",
											"nodeType": "VariableDeclaration",
											"scope": 1893,
											"src": "794:10:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1871,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "794:4:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1874,
											"mutability": "mutable",
											"name": "experience",
											"nameLocation": "819:10:13",
											"nodeType": "VariableDeclaration",
											"scope": 1893,
											"src": "814:15:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1873,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "814:4:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1876,
											"mutability": "mutable",
											"name": "health",
											"nameLocation": "844:6:13",
											"nodeType": "VariableDeclaration",
											"scope": 1893,
											"src": "839:11:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1875,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "839:4:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1878,
											"mutability": "mutable",
											"name": "mana",
											"nameLocation": "865:4:13",
											"nodeType": "VariableDeclaration",
											"scope": 1893,
											"src": "860:9:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1877,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "860:4:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1880,
											"mutability": "mutable",
											"name": "attackDamage",
											"nameLocation": "884:12:13",
											"nodeType": "VariableDeclaration",
											"scope": 1893,
											"src": "879:17:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1879,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "879:4:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1882,
											"mutability": "mutable",
											"name": "defense",
											"nameLocation": "911:7:13",
											"nodeType": "VariableDeclaration",
											"scope": 1893,
											"src": "906:12:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1881,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "906:4:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1884,
											"mutability": "mutable",
											"name": "agility",
											"nameLocation": "933:7:13",
											"nodeType": "VariableDeclaration",
											"scope": 1893,
											"src": "928:12:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1883,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "928:4:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1886,
											"mutability": "mutable",
											"name": "luck",
											"nameLocation": "955:4:13",
											"nodeType": "VariableDeclaration",
											"scope": 1893,
											"src": "950:9:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1885,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "950:4:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1889,
											"mutability": "mutable",
											"name": "inventory",
											"nameLocation": "976:9:13",
											"nodeType": "VariableDeclaration",
											"scope": 1893,
											"src": "969:16:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											},
											"typeName": {
												"baseType": {
													"id": 1887,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "969:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1888,
												"nodeType": "ArrayTypeName",
												"src": "969:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1892,
											"mutability": "mutable",
											"name": "skills",
											"nameLocation": "1002:6:13",
											"nodeType": "VariableDeclaration",
											"scope": 1893,
											"src": "995:13:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											},
											"typeName": {
												"baseType": {
													"id": 1890,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "995:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1891,
												"nodeType": "ArrayTypeName",
												"src": "995:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Player",
									"nameLocation": "777:6:13",
									"nodeType": "StructDefinition",
									"scope": 2566,
									"src": "770:245:13",
									"visibility": "public"
								},
								{
									"canonicalName": "CryptoQuestTheShardsOfGenesisMMPORPG.Item",
									"id": 1906,
									"members": [
										{
											"constant": false,
											"id": 1895,
											"mutability": "mutable",
											"name": "id",
											"nameLocation": "1048:2:13",
											"nodeType": "VariableDeclaration",
											"scope": 1906,
											"src": "1043:7:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1894,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1043:4:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1897,
											"mutability": "mutable",
											"name": "name",
											"nameLocation": "1067:4:13",
											"nodeType": "VariableDeclaration",
											"scope": 1906,
											"src": "1060:11:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1896,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1060:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1899,
											"mutability": "mutable",
											"name": "attackBonus",
											"nameLocation": "1086:11:13",
											"nodeType": "VariableDeclaration",
											"scope": 1906,
											"src": "1081:16:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1898,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1081:4:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1901,
											"mutability": "mutable",
											"name": "defenseBonus",
											"nameLocation": "1112:12:13",
											"nodeType": "VariableDeclaration",
											"scope": 1906,
											"src": "1107:17:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1900,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1107:4:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1903,
											"mutability": "mutable",
											"name": "manaBonus",
											"nameLocation": "1139:9:13",
											"nodeType": "VariableDeclaration",
											"scope": 1906,
											"src": "1134:14:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1902,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1134:4:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1905,
											"mutability": "mutable",
											"name": "healthBonus",
											"nameLocation": "1163:11:13",
											"nodeType": "VariableDeclaration",
											"scope": 1906,
											"src": "1158:16:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1904,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1158:4:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Item",
									"nameLocation": "1028:4:13",
									"nodeType": "StructDefinition",
									"scope": 2566,
									"src": "1021:160:13",
									"visibility": "public"
								},
								{
									"canonicalName": "CryptoQuestTheShardsOfGenesisMMPORPG.Quest",
									"id": 1915,
									"members": [
										{
											"constant": false,
											"id": 1908,
											"mutability": "mutable",
											"name": "title",
											"nameLocation": "1217:5:13",
											"nodeType": "VariableDeclaration",
											"scope": 1915,
											"src": "1210:12:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1907,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1210:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1910,
											"mutability": "mutable",
											"name": "description",
											"nameLocation": "1239:11:13",
											"nodeType": "VariableDeclaration",
											"scope": 1915,
											"src": "1232:18:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1909,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1232:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1912,
											"mutability": "mutable",
											"name": "rewardXP",
											"nameLocation": "1265:8:13",
											"nodeType": "VariableDeclaration",
											"scope": 1915,
											"src": "1260:13:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1911,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1260:4:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1914,
											"mutability": "mutable",
											"name": "completed",
											"nameLocation": "1288:9:13",
											"nodeType": "VariableDeclaration",
											"scope": 1915,
											"src": "1283:14:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1913,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1283:4:13",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Quest",
									"nameLocation": "1194:5:13",
									"nodeType": "StructDefinition",
									"scope": 2566,
									"src": "1187:117:13",
									"visibility": "public"
								},
								{
									"canonicalName": "CryptoQuestTheShardsOfGenesisMMPORPG.Guild",
									"id": 1923,
									"members": [
										{
											"constant": false,
											"id": 1917,
											"mutability": "mutable",
											"name": "name",
											"nameLocation": "1340:4:13",
											"nodeType": "VariableDeclaration",
											"scope": 1923,
											"src": "1333:11:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1916,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1333:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1919,
											"mutability": "mutable",
											"name": "leader",
											"nameLocation": "1362:6:13",
											"nodeType": "VariableDeclaration",
											"scope": 1923,
											"src": "1354:14:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1918,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1354:7:13",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1922,
											"mutability": "mutable",
											"name": "members",
											"nameLocation": "1388:7:13",
											"nodeType": "VariableDeclaration",
											"scope": 1923,
											"src": "1378:17:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
												"typeString": "address[]"
											},
											"typeName": {
												"baseType": {
													"id": 1920,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1378:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1921,
												"nodeType": "ArrayTypeName",
												"src": "1378:9:13",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
													"typeString": "address[]"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Guild",
									"nameLocation": "1317:5:13",
									"nodeType": "StructDefinition",
									"scope": 2566,
									"src": "1310:92:13",
									"visibility": "public"
								},
								{
									"canonicalName": "CryptoQuestTheShardsOfGenesisMMPORPG.Recipe",
									"id": 1929,
									"members": [
										{
											"constant": false,
											"id": 1926,
											"mutability": "mutable",
											"name": "itemIds",
											"nameLocation": "1439:7:13",
											"nodeType": "VariableDeclaration",
											"scope": 1929,
											"src": "1432:14:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
												"typeString": "uint256[]"
											},
											"typeName": {
												"baseType": {
													"id": 1924,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1432:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 1925,
												"nodeType": "ArrayTypeName",
												"src": "1432:6:13",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
													"typeString": "uint256[]"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 1928,
											"mutability": "mutable",
											"name": "resultItemId",
											"nameLocation": "1461:12:13",
											"nodeType": "VariableDeclaration",
											"scope": 1929,
											"src": "1456:17:13",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1927,
												"name": "uint",
												"nodeType": "ElementaryTypeName",
												"src": "1456:4:13",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Recipe",
									"nameLocation": "1415:6:13",
									"nodeType": "StructDefinition",
									"scope": 2566,
									"src": "1408:72:13",
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1932,
									"mutability": "mutable",
									"name": "nextItemId",
									"nameLocation": "1499:10:13",
									"nodeType": "VariableDeclaration",
									"scope": 2566,
									"src": "1486:27:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1930,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1486:4:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1931,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1512:1:13",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 1935,
									"mutability": "mutable",
									"name": "nextRecipeId",
									"nameLocation": "1532:12:13",
									"nodeType": "VariableDeclaration",
									"scope": 2566,
									"src": "1519:29:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 1933,
										"name": "uint",
										"nodeType": "ElementaryTypeName",
										"src": "1519:4:13",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "31",
										"id": 1934,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1547:1:13",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1_by_1",
											"typeString": "int_const 1"
										},
										"value": "1"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"functionSelector": "bfb231d2",
									"id": 1940,
									"mutability": "mutable",
									"name": "items",
									"nameLocation": "1584:5:13",
									"nodeType": "VariableDeclaration",
									"scope": 2566,
									"src": "1555:34:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Item_$1906_storage_$",
										"typeString": "mapping(uint256 => struct CryptoQuestTheShardsOfGenesisMMPORPG.Item)"
									},
									"typeName": {
										"id": 1939,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1936,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "1563:4:13",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1555:21:13",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Item_$1906_storage_$",
											"typeString": "mapping(uint256 => struct CryptoQuestTheShardsOfGenesisMMPORPG.Item)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1938,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1937,
												"name": "Item",
												"nameLocations": [
													"1571:4:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1906,
												"src": "1571:4:13"
											},
											"referencedDeclaration": 1906,
											"src": "1571:4:13",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Item_$1906_storage_ptr",
												"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Item"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "e2eb41ff",
									"id": 1945,
									"mutability": "mutable",
									"name": "players",
									"nameLocation": "1629:7:13",
									"nodeType": "VariableDeclaration",
									"scope": 2566,
									"src": "1595:41:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$1893_storage_$",
										"typeString": "mapping(address => struct CryptoQuestTheShardsOfGenesisMMPORPG.Player)"
									},
									"typeName": {
										"id": 1944,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1941,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1603:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1595:26:13",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$1893_storage_$",
											"typeString": "mapping(address => struct CryptoQuestTheShardsOfGenesisMMPORPG.Player)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1943,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1942,
												"name": "Player",
												"nameLocations": [
													"1614:6:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1893,
												"src": "1614:6:13"
											},
											"referencedDeclaration": 1893,
											"src": "1614:6:13",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Player_$1893_storage_ptr",
												"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Player"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "d3dcff7c",
									"id": 1951,
									"mutability": "mutable",
									"name": "playerQuests",
									"nameLocation": "1677:12:13",
									"nodeType": "VariableDeclaration",
									"scope": 2566,
									"src": "1642:47:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Quest_$1915_storage_$dyn_storage_$",
										"typeString": "mapping(address => struct CryptoQuestTheShardsOfGenesisMMPORPG.Quest[])"
									},
									"typeName": {
										"id": 1950,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1946,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1650:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1642:27:13",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Quest_$1915_storage_$dyn_storage_$",
											"typeString": "mapping(address => struct CryptoQuestTheShardsOfGenesisMMPORPG.Quest[])"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"baseType": {
												"id": 1948,
												"nodeType": "UserDefinedTypeName",
												"pathNode": {
													"id": 1947,
													"name": "Quest",
													"nameLocations": [
														"1661:5:13"
													],
													"nodeType": "IdentifierPath",
													"referencedDeclaration": 1915,
													"src": "1661:5:13"
												},
												"referencedDeclaration": 1915,
												"src": "1661:5:13",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Quest_$1915_storage_ptr",
													"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Quest"
												}
											},
											"id": 1949,
											"nodeType": "ArrayTypeName",
											"src": "1661:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_array$_t_struct$_Quest_$1915_storage_$dyn_storage_ptr",
												"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Quest[]"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "a75859e1",
									"id": 1956,
									"mutability": "mutable",
									"name": "guilds",
									"nameLocation": "1728:6:13",
									"nodeType": "VariableDeclaration",
									"scope": 2566,
									"src": "1695:39:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Guild_$1923_storage_$",
										"typeString": "mapping(address => struct CryptoQuestTheShardsOfGenesisMMPORPG.Guild)"
									},
									"typeName": {
										"id": 1955,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1952,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1703:7:13",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1695:25:13",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Guild_$1923_storage_$",
											"typeString": "mapping(address => struct CryptoQuestTheShardsOfGenesisMMPORPG.Guild)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1954,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1953,
												"name": "Guild",
												"nameLocations": [
													"1714:5:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1923,
												"src": "1714:5:13"
											},
											"referencedDeclaration": 1923,
											"src": "1714:5:13",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Guild_$1923_storage_ptr",
												"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Guild"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"id": 1960,
									"mutability": "mutable",
									"name": "guildNameToLeader",
									"nameLocation": "1767:17:13",
									"nodeType": "VariableDeclaration",
									"scope": 2566,
									"src": "1740:44:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
										"typeString": "mapping(string => address)"
									},
									"typeName": {
										"id": 1959,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1957,
											"name": "string",
											"nodeType": "ElementaryTypeName",
											"src": "1748:6:13",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											}
										},
										"nodeType": "Mapping",
										"src": "1740:26:13",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
											"typeString": "mapping(string => address)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1958,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1758:7:13",
											"stateMutability": "nonpayable",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										}
									},
									"visibility": "internal"
								},
								{
									"constant": false,
									"functionSelector": "443c227c",
									"id": 1965,
									"mutability": "mutable",
									"name": "recipes",
									"nameLocation": "1821:7:13",
									"nodeType": "VariableDeclaration",
									"scope": 2566,
									"src": "1790:38:13",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Recipe_$1929_storage_$",
										"typeString": "mapping(uint256 => struct CryptoQuestTheShardsOfGenesisMMPORPG.Recipe)"
									},
									"typeName": {
										"id": 1964,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 1961,
											"name": "uint",
											"nodeType": "ElementaryTypeName",
											"src": "1798:4:13",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1790:23:13",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Recipe_$1929_storage_$",
											"typeString": "mapping(uint256 => struct CryptoQuestTheShardsOfGenesisMMPORPG.Recipe)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 1963,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 1962,
												"name": "Recipe",
												"nameLocations": [
													"1806:6:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1929,
												"src": "1806:6:13"
											},
											"referencedDeclaration": 1929,
											"src": "1806:6:13",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Recipe_$1929_storage_ptr",
												"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Recipe"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "be21664565742a9f42cbb6d005f92db59c7bcad35b12ef5b57b79e75676b247a",
									"id": 1971,
									"name": "QuestCompleted",
									"nameLocation": "1841:14:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1970,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1967,
												"indexed": true,
												"mutability": "mutable",
												"name": "player",
												"nameLocation": "1872:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1971,
												"src": "1856:22:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1966,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1856:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1969,
												"indexed": false,
												"mutability": "mutable",
												"name": "questTitle",
												"nameLocation": "1887:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 1971,
												"src": "1880:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1968,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1880:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1855:43:13"
									},
									"src": "1835:64:13"
								},
								{
									"anonymous": false,
									"eventSelector": "b4cca19a27ce42915c3cee0cee28fc5d90969ee49f09ec71659546a63b5f7bc0",
									"id": 1975,
									"name": "PlayerCreated",
									"nameLocation": "1910:13:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1974,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1973,
												"indexed": true,
												"mutability": "mutable",
												"name": "player",
												"nameLocation": "1940:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1975,
												"src": "1924:22:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1972,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1924:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1923:24:13"
									},
									"src": "1904:44:13"
								},
								{
									"anonymous": false,
									"eventSelector": "78d68ba0e8c23b92e7c700d99efed2719520cbd4af845b2c03ae251f9cdf3d52",
									"id": 1981,
									"name": "ItemAdded",
									"nameLocation": "1959:9:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1977,
												"indexed": false,
												"mutability": "mutable",
												"name": "itemId",
												"nameLocation": "1974:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1981,
												"src": "1969:11:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1976,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1969:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1979,
												"indexed": false,
												"mutability": "mutable",
												"name": "itemName",
												"nameLocation": "1989:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 1981,
												"src": "1982:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1978,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1982:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1968:30:13"
									},
									"src": "1953:46:13"
								},
								{
									"anonymous": false,
									"eventSelector": "072208535a97b2e307167838c66aacd47f8de3a2cb92bc2ddb2b2b52009c9fd5",
									"id": 1987,
									"name": "GuildCreated",
									"nameLocation": "2010:12:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1986,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1983,
												"indexed": false,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "2030:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1987,
												"src": "2023:11:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 1982,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "2023:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1985,
												"indexed": false,
												"mutability": "mutable",
												"name": "leader",
												"nameLocation": "2044:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1987,
												"src": "2036:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1984,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2036:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2022:29:13"
									},
									"src": "2004:48:13"
								},
								{
									"anonymous": false,
									"eventSelector": "9becfd2b1fc8127387c5b0002a6cbc8382e6c8fb9f76dfd6cfd92cbe94383d0e",
									"id": 1993,
									"name": "RecipeAdded",
									"nameLocation": "2063:11:13",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1992,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1989,
												"indexed": false,
												"mutability": "mutable",
												"name": "recipeId",
												"nameLocation": "2080:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 1993,
												"src": "2075:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1988,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2075:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1991,
												"indexed": false,
												"mutability": "mutable",
												"name": "resultItemId",
												"nameLocation": "2095:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 1993,
												"src": "2090:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1990,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "2090:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2074:34:13"
									},
									"src": "2057:52:13"
								},
								{
									"body": {
										"id": 2033,
										"nodeType": "Block",
										"src": "2210:292:13",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2004,
														"name": "__Pausable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 896,
														"src": "2220:15:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2005,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2220:17:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2006,
												"nodeType": "ExpressionStatement",
												"src": "2220:17:13"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2007,
														"name": "__AccessControl_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 63,
														"src": "2247:20:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2008,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2247:22:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2009,
												"nodeType": "ExpressionStatement",
												"src": "2247:22:13"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2010,
														"name": "__UUPSUpgradeable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 670,
														"src": "2279:22:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2011,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2279:24:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2012,
												"nodeType": "ExpressionStatement",
												"src": "2279:24:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2014,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "2325:18:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2015,
															"name": "defaultAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1995,
															"src": "2345:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2013,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "2314:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 2016,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2314:44:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2017,
												"nodeType": "ExpressionStatement",
												"src": "2314:44:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2019,
															"name": "PAUSER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1860,
															"src": "2379:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2020,
															"name": "pauser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1997,
															"src": "2392:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2018,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "2368:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 2021,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2368:31:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2022,
												"nodeType": "ExpressionStatement",
												"src": "2368:31:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2024,
															"name": "UPGRADER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1865,
															"src": "2420:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2025,
															"name": "upgrader",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1999,
															"src": "2435:8:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2023,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "2409:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 2026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2409:35:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2027,
												"nodeType": "ExpressionStatement",
												"src": "2409:35:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2029,
															"name": "GAME_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1870,
															"src": "2465:15:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2030,
															"name": "defaultAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1995,
															"src": "2482:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2028,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "2454:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 2031,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2454:41:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2032,
												"nodeType": "ExpressionStatement",
												"src": "2454:41:13"
											}
										]
									},
									"functionSelector": "c0c53b8b",
									"id": 2034,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2002,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2001,
												"name": "initializer",
												"nameLocations": [
													"2191:11:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 470,
												"src": "2191:11:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "2191:11:13"
										}
									],
									"name": "initialize",
									"nameLocation": "2124:10:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2000,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1995,
												"mutability": "mutable",
												"name": "defaultAdmin",
												"nameLocation": "2143:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 2034,
												"src": "2135:20:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1994,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2135:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1997,
												"mutability": "mutable",
												"name": "pauser",
												"nameLocation": "2165:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2034,
												"src": "2157:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1996,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2157:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1999,
												"mutability": "mutable",
												"name": "upgrader",
												"nameLocation": "2181:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2034,
												"src": "2173:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1998,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2173:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2134:56:13"
									},
									"returnParameters": {
										"id": 2003,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2210:0:13"
									},
									"scope": 2566,
									"src": "2115:387:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2043,
										"nodeType": "Block",
										"src": "2554:25:13",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2040,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 995,
														"src": "2564:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2041,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2564:8:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2042,
												"nodeType": "ExpressionStatement",
												"src": "2564:8:13"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 2044,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2037,
													"name": "PAUSER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1860,
													"src": "2541:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2038,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2036,
												"name": "onlyRole",
												"nameLocations": [
													"2532:8:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "2532:8:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "2532:21:13"
										}
									],
									"name": "pause",
									"nameLocation": "2517:5:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2035,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2522:2:13"
									},
									"returnParameters": {
										"id": 2039,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2554:0:13"
									},
									"scope": 2566,
									"src": "2508:71:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2053,
										"nodeType": "Block",
										"src": "2633:27:13",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2050,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1019,
														"src": "2643:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2051,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2643:10:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2052,
												"nodeType": "ExpressionStatement",
												"src": "2643:10:13"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 2054,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2047,
													"name": "PAUSER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1860,
													"src": "2620:11:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2048,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2046,
												"name": "onlyRole",
												"nameLocations": [
													"2611:8:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "2611:8:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "2611:21:13"
										}
									],
									"name": "unpause",
									"nameLocation": "2594:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2045,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2601:2:13"
									},
									"returnParameters": {
										"id": 2049,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2633:0:13"
									},
									"scope": 2566,
									"src": "2585:75:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										752
									],
									"body": {
										"id": 2063,
										"nodeType": "Block",
										"src": "2762:2:13",
										"statements": []
									},
									"id": 2064,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2060,
													"name": "UPGRADER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1865,
													"src": "2747:13:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2061,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2059,
												"name": "onlyRole",
												"nameLocations": [
													"2738:8:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "2738:8:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "2738:23:13"
										}
									],
									"name": "_authorizeUpgrade",
									"nameLocation": "2675:17:13",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2058,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "2729:8:13"
									},
									"parameters": {
										"id": 2057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2056,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2701:17:13",
												"nodeType": "VariableDeclaration",
												"scope": 2064,
												"src": "2693:25:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2055,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2693:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2692:27:13"
									},
									"returnParameters": {
										"id": 2062,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2762:0:13"
									},
									"scope": 2566,
									"src": "2666:98:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2109,
										"nodeType": "Block",
										"src": "2801:217:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2074,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 2068,
																		"name": "players",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1945,
																		"src": "2819:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$1893_storage_$",
																			"typeString": "mapping(address => struct CryptoQuestTheShardsOfGenesisMMPORPG.Player storage ref)"
																		}
																	},
																	"id": 2071,
																	"indexExpression": {
																		"expression": {
																			"id": 2069,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "2827:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2070,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "2831:6:13",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "2827:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2819:19:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Player_$1893_storage",
																		"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Player storage ref"
																	}
																},
																"id": 2072,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2839:5:13",
																"memberName": "level",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1872,
																"src": "2819:25:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"hexValue": "30",
																"id": 2073,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2848:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2819:30:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "506c6179657220616c726561647920657869737473",
															"id": 2075,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2851:23:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e62d5747e47bcd18d9ddf74b7bcef9f67e80418a4c933197d321fea58848ef3f",
																"typeString": "literal_string \"Player already exists\""
															},
															"value": "Player already exists"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e62d5747e47bcd18d9ddf74b7bcef9f67e80418a4c933197d321fea58848ef3f",
																"typeString": "literal_string \"Player already exists\""
															}
														],
														"id": 2067,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2811:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2076,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:64:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2077,
												"nodeType": "ExpressionStatement",
												"src": "2811:64:13"
											},
											{
												"expression": {
													"id": 2102,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2078,
															"name": "players",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1945,
															"src": "2885:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$1893_storage_$",
																"typeString": "mapping(address => struct CryptoQuestTheShardsOfGenesisMMPORPG.Player storage ref)"
															}
														},
														"id": 2081,
														"indexExpression": {
															"expression": {
																"id": 2079,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "2893:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2080,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2897:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "2893:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "2885:19:13",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Player_$1893_storage",
															"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Player storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"hexValue": "31",
																"id": 2083,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2914:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																"value": "1"
															},
															{
																"hexValue": "30",
																"id": 2084,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2917:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															{
																"hexValue": "313030",
																"id": 2085,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2920:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																"value": "100"
															},
															{
																"hexValue": "3530",
																"id": 2086,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2925:2:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_50_by_1",
																	"typeString": "int_const 50"
																},
																"value": "50"
															},
															{
																"hexValue": "3130",
																"id": 2087,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2929:2:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																"value": "10"
															},
															{
																"hexValue": "35",
																"id": 2088,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2933:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_5_by_1",
																	"typeString": "int_const 5"
																},
																"value": "5"
															},
															{
																"hexValue": "33",
																"id": 2089,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2936:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																},
																"value": "3"
															},
															{
																"hexValue": "32",
																"id": 2090,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2939:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																"value": "2"
															},
															{
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2094,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2953:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2093,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "NewExpression",
																	"src": "2942:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256) pure returns (uint256[] memory)"
																	},
																	"typeName": {
																		"baseType": {
																			"id": 2091,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "2946:4:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2092,
																		"nodeType": "ArrayTypeName",
																		"src": "2946:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[]"
																		}
																	}
																},
																"id": 2095,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2942:13:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																	"typeString": "uint256[] memory"
																}
															},
															{
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2099,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "2968:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2098,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "NewExpression",
																	"src": "2957:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
																		"typeString": "function (uint256) pure returns (uint256[] memory)"
																	},
																	"typeName": {
																		"baseType": {
																			"id": 2096,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "2961:4:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2097,
																		"nodeType": "ArrayTypeName",
																		"src": "2961:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
																			"typeString": "uint256[]"
																		}
																	}
																},
																"id": 2100,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2957:13:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																	"typeString": "uint256[] memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_1_by_1",
																	"typeString": "int_const 1"
																},
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																{
																	"typeIdentifier": "t_rational_100_by_1",
																	"typeString": "int_const 100"
																},
																{
																	"typeIdentifier": "t_rational_50_by_1",
																	"typeString": "int_const 50"
																},
																{
																	"typeIdentifier": "t_rational_10_by_1",
																	"typeString": "int_const 10"
																},
																{
																	"typeIdentifier": "t_rational_5_by_1",
																	"typeString": "int_const 5"
																},
																{
																	"typeIdentifier": "t_rational_3_by_1",
																	"typeString": "int_const 3"
																},
																{
																	"typeIdentifier": "t_rational_2_by_1",
																	"typeString": "int_const 2"
																},
																{
																	"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																	"typeString": "uint256[] memory"
																},
																{
																	"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																	"typeString": "uint256[] memory"
																}
															],
															"id": 2082,
															"name": "Player",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1893,
															"src": "2907:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Player_$1893_storage_ptr_$",
																"typeString": "type(struct CryptoQuestTheShardsOfGenesisMMPORPG.Player storage pointer)"
															}
														},
														"id": 2101,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2907:64:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Player_$1893_memory_ptr",
															"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Player memory"
														}
													},
													"src": "2885:86:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Player_$1893_storage",
														"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Player storage ref"
													}
												},
												"id": 2103,
												"nodeType": "ExpressionStatement",
												"src": "2885:86:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2105,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3000:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2106,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3004:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3000:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2104,
														"name": "PlayerCreated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1975,
														"src": "2986:13:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 2107,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2986:25:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2108,
												"nodeType": "EmitStatement",
												"src": "2981:30:13"
											}
										]
									},
									"functionSelector": "3fa9fcf8",
									"id": 2110,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "createPlayer",
									"nameLocation": "2779:12:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2065,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2791:2:13"
									},
									"returnParameters": {
										"id": 2066,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2801:0:13"
									},
									"scope": 2566,
									"src": "2770:248:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2147,
										"nodeType": "Block",
										"src": "3165:174:13",
										"statements": [
											{
												"expression": {
													"id": 2137,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2126,
															"name": "items",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1940,
															"src": "3175:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Item_$1906_storage_$",
																"typeString": "mapping(uint256 => struct CryptoQuestTheShardsOfGenesisMMPORPG.Item storage ref)"
															}
														},
														"id": 2128,
														"indexExpression": {
															"id": 2127,
															"name": "nextItemId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1932,
															"src": "3181:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3175:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Item_$1906_storage",
															"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Item storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2130,
																"name": "nextItemId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1932,
																"src": "3200:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2131,
																"name": "name",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2112,
																"src": "3212:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"id": 2132,
																"name": "attackBonus",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2114,
																"src": "3218:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2133,
																"name": "defenseBonus",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2116,
																"src": "3231:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2134,
																"name": "manaBonus",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2118,
																"src": "3245:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"id": 2135,
																"name": "healthBonus",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2120,
																"src": "3256:11:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2129,
															"name": "Item",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1906,
															"src": "3195:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Item_$1906_storage_ptr_$",
																"typeString": "type(struct CryptoQuestTheShardsOfGenesisMMPORPG.Item storage pointer)"
															}
														},
														"id": 2136,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3195:73:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Item_$1906_memory_ptr",
															"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Item memory"
														}
													},
													"src": "3175:93:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Item_$1906_storage",
														"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Item storage ref"
													}
												},
												"id": 2138,
												"nodeType": "ExpressionStatement",
												"src": "3175:93:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2140,
															"name": "nextItemId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1932,
															"src": "3293:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2141,
															"name": "name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2112,
															"src": "3305:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														],
														"id": 2139,
														"name": "ItemAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1981,
														"src": "3283:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (uint256,string memory)"
														}
													},
													"id": 2142,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3283:27:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2143,
												"nodeType": "EmitStatement",
												"src": "3278:32:13"
											},
											{
												"expression": {
													"id": 2145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "3320:12:13",
													"subExpression": {
														"id": 2144,
														"name": "nextItemId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1932,
														"src": "3320:10:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2146,
												"nodeType": "ExpressionStatement",
												"src": "3320:12:13"
											}
										]
									},
									"functionSelector": "31fee8be",
									"id": 2148,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2123,
													"name": "GAME_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1870,
													"src": "3148:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2124,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2122,
												"name": "onlyRole",
												"nameLocations": [
													"3139:8:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "3139:8:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "3139:25:13"
										}
									],
									"name": "addItem",
									"nameLocation": "3033:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2112,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "3055:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 2148,
												"src": "3041:18:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2111,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3041:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2114,
												"mutability": "mutable",
												"name": "attackBonus",
												"nameLocation": "3066:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2148,
												"src": "3061:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2113,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3061:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2116,
												"mutability": "mutable",
												"name": "defenseBonus",
												"nameLocation": "3084:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 2148,
												"src": "3079:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2115,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3079:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2118,
												"mutability": "mutable",
												"name": "manaBonus",
												"nameLocation": "3103:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2148,
												"src": "3098:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2117,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3098:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2120,
												"mutability": "mutable",
												"name": "healthBonus",
												"nameLocation": "3119:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2148,
												"src": "3114:16:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2119,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3114:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3040:91:13"
									},
									"returnParameters": {
										"id": 2125,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3165:0:13"
									},
									"scope": 2566,
									"src": "3024:315:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2173,
										"nodeType": "Block",
										"src": "3461:90:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2166,
																	"name": "title",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2150,
																	"src": "3507:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"id": 2167,
																	"name": "description",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2152,
																	"src": "3514:11:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																{
																	"id": 2168,
																	"name": "rewardXP",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2154,
																	"src": "3527:8:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"hexValue": "66616c7365",
																	"id": 2169,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3537:5:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																],
																"id": 2165,
																"name": "Quest",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1915,
																"src": "3501:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_Quest_$1915_storage_ptr_$",
																	"typeString": "type(struct CryptoQuestTheShardsOfGenesisMMPORPG.Quest storage pointer)"
																}
															},
															"id": 2170,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3501:42:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Quest_$1915_memory_ptr",
																"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Quest memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Quest_$1915_memory_ptr",
																"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Quest memory"
															}
														],
														"expression": {
															"baseExpression": {
																"id": 2160,
																"name": "playerQuests",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1951,
																"src": "3471:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Quest_$1915_storage_$dyn_storage_$",
																	"typeString": "mapping(address => struct CryptoQuestTheShardsOfGenesisMMPORPG.Quest storage ref[] storage ref)"
																}
															},
															"id": 2163,
															"indexExpression": {
																"expression": {
																	"id": 2161,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3484:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2162,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3488:6:13",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3484:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3471:24:13",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Quest_$1915_storage_$dyn_storage",
																"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Quest storage ref[] storage ref"
															}
														},
														"id": 2164,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3496:4:13",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "3471:29:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Quest_$1915_storage_$dyn_storage_ptr_$_t_struct$_Quest_$1915_storage_$returns$__$attached_to$_t_array$_t_struct$_Quest_$1915_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct CryptoQuestTheShardsOfGenesisMMPORPG.Quest storage ref[] storage pointer,struct CryptoQuestTheShardsOfGenesisMMPORPG.Quest storage ref)"
														}
													},
													"id": 2171,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3471:73:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2172,
												"nodeType": "ExpressionStatement",
												"src": "3471:73:13"
											}
										]
									},
									"functionSelector": "6f347a78",
									"id": 2174,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2157,
													"name": "GAME_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1870,
													"src": "3444:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2158,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2156,
												"name": "onlyRole",
												"nameLocations": [
													"3435:8:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "3435:8:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "3435:25:13"
										}
									],
									"name": "startQuest",
									"nameLocation": "3354:10:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2150,
												"mutability": "mutable",
												"name": "title",
												"nameLocation": "3379:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 2174,
												"src": "3365:19:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2149,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3365:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2152,
												"mutability": "mutable",
												"name": "description",
												"nameLocation": "3400:11:13",
												"nodeType": "VariableDeclaration",
												"scope": 2174,
												"src": "3386:25:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2151,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3386:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2154,
												"mutability": "mutable",
												"name": "rewardXP",
												"nameLocation": "3418:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2174,
												"src": "3413:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2153,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "3413:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3364:63:13"
									},
									"returnParameters": {
										"id": 2159,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3461:0:13"
									},
									"scope": 2566,
									"src": "3345:206:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2247,
										"nodeType": "Block",
										"src": "3613:476:13",
										"statements": [
											{
												"body": {
													"id": 2245,
													"nodeType": "Block",
													"src": "3682:401:13",
													"statements": [
														{
															"assignments": [
																2195
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2195,
																	"mutability": "mutable",
																	"name": "quest",
																	"nameLocation": "3710:5:13",
																	"nodeType": "VariableDeclaration",
																	"scope": 2245,
																	"src": "3696:19:13",
																	"stateVariable": false,
																	"storageLocation": "storage",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Quest_$1915_storage_ptr",
																		"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Quest"
																	},
																	"typeName": {
																		"id": 2194,
																		"nodeType": "UserDefinedTypeName",
																		"pathNode": {
																			"id": 2193,
																			"name": "Quest",
																			"nameLocations": [
																				"3696:5:13"
																			],
																			"nodeType": "IdentifierPath",
																			"referencedDeclaration": 1915,
																			"src": "3696:5:13"
																		},
																		"referencedDeclaration": 1915,
																		"src": "3696:5:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Quest_$1915_storage_ptr",
																			"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Quest"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2202,
															"initialValue": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 2196,
																		"name": "playerQuests",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1951,
																		"src": "3718:12:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Quest_$1915_storage_$dyn_storage_$",
																			"typeString": "mapping(address => struct CryptoQuestTheShardsOfGenesisMMPORPG.Quest storage ref[] storage ref)"
																		}
																	},
																	"id": 2199,
																	"indexExpression": {
																		"expression": {
																			"id": 2197,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "3731:3:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 2198,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3735:6:13",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "3731:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3718:24:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Quest_$1915_storage_$dyn_storage",
																		"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Quest storage ref[] storage ref"
																	}
																},
																"id": 2201,
																"indexExpression": {
																	"id": 2200,
																	"name": "i",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2180,
																	"src": "3743:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3718:27:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Quest_$1915_storage",
																	"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Quest storage ref"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3696:49:13"
														},
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 2220,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"id": 2216,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"expression": {
																							"id": 2206,
																							"name": "quest",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2195,
																							"src": "3790:5:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_struct$_Quest_$1915_storage_ptr",
																								"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Quest storage pointer"
																							}
																						},
																						"id": 2207,
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "3796:5:13",
																						"memberName": "title",
																						"nodeType": "MemberAccess",
																						"referencedDeclaration": 1908,
																						"src": "3790:11:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_storage",
																							"typeString": "string storage ref"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_string_storage",
																							"typeString": "string storage ref"
																						}
																					],
																					"expression": {
																						"id": 2204,
																						"name": "abi",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967295,
																						"src": "3773:3:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_abi",
																							"typeString": "abi"
																						}
																					},
																					"id": 2205,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "3777:12:13",
																					"memberName": "encodePacked",
																					"nodeType": "MemberAccess",
																					"src": "3773:16:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																						"typeString": "function () pure returns (bytes memory)"
																					}
																				},
																				"id": 2208,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3773:29:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 2203,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967288,
																			"src": "3763:9:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 2209,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3763:40:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"id": 2213,
																						"name": "questTitle",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2176,
																						"src": "3834:10:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_string_memory_ptr",
																							"typeString": "string memory"
																						}
																					],
																					"expression": {
																						"id": 2211,
																						"name": "abi",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967295,
																						"src": "3817:3:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_abi",
																							"typeString": "abi"
																						}
																					},
																					"id": 2212,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"memberLocation": "3821:12:13",
																					"memberName": "encodePacked",
																					"nodeType": "MemberAccess",
																					"src": "3817:16:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
																						"typeString": "function () pure returns (bytes memory)"
																					}
																				},
																				"id": 2214,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "functionCall",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "3817:28:13",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"id": 2210,
																			"name": "keccak256",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967288,
																			"src": "3807:9:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
																				"typeString": "function (bytes memory) pure returns (bytes32)"
																			}
																		},
																		"id": 2215,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3807:39:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"src": "3763:83:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"id": 2219,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "!",
																	"prefix": true,
																	"src": "3850:16:13",
																	"subExpression": {
																		"expression": {
																			"id": 2217,
																			"name": "quest",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2195,
																			"src": "3851:5:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Quest_$1915_storage_ptr",
																				"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Quest storage pointer"
																			}
																		},
																		"id": 2218,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3857:9:13",
																		"memberName": "completed",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1914,
																		"src": "3851:15:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "3763:103:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2244,
															"nodeType": "IfStatement",
															"src": "3759:314:13",
															"trueBody": {
																"id": 2243,
																"nodeType": "Block",
																"src": "3868:205:13",
																"statements": [
																	{
																		"expression": {
																			"id": 2225,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"id": 2221,
																					"name": "quest",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2195,
																					"src": "3886:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Quest_$1915_storage_ptr",
																						"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Quest storage pointer"
																					}
																				},
																				"id": 2223,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "3892:9:13",
																				"memberName": "completed",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1914,
																				"src": "3886:15:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "=",
																			"rightHandSide": {
																				"hexValue": "74727565",
																				"id": 2224,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "bool",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3904:4:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bool",
																					"typeString": "bool"
																				},
																				"value": "true"
																			},
																			"src": "3886:22:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 2226,
																		"nodeType": "ExpressionStatement",
																		"src": "3886:22:13"
																	},
																	{
																		"expression": {
																			"id": 2234,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftHandSide": {
																				"expression": {
																					"baseExpression": {
																						"id": 2227,
																						"name": "players",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1945,
																						"src": "3926:7:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$1893_storage_$",
																							"typeString": "mapping(address => struct CryptoQuestTheShardsOfGenesisMMPORPG.Player storage ref)"
																						}
																					},
																					"id": 2230,
																					"indexExpression": {
																						"expression": {
																							"id": 2228,
																							"name": "msg",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 4294967281,
																							"src": "3934:3:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_magic_message",
																								"typeString": "msg"
																							}
																						},
																						"id": 2229,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"memberLocation": "3938:6:13",
																						"memberName": "sender",
																						"nodeType": "MemberAccess",
																						"src": "3934:10:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					},
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"nodeType": "IndexAccess",
																					"src": "3926:19:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Player_$1893_storage",
																						"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Player storage ref"
																					}
																				},
																				"id": 2231,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": true,
																				"memberLocation": "3946:10:13",
																				"memberName": "experience",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1874,
																				"src": "3926:30:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "Assignment",
																			"operator": "+=",
																			"rightHandSide": {
																				"expression": {
																					"id": 2232,
																					"name": "quest",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2195,
																					"src": "3960:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Quest_$1915_storage_ptr",
																						"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Quest storage pointer"
																					}
																				},
																				"id": 2233,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3966:8:13",
																				"memberName": "rewardXP",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1912,
																				"src": "3960:14:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3926:48:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"id": 2235,
																		"nodeType": "ExpressionStatement",
																		"src": "3926:48:13"
																	},
																	{
																		"eventCall": {
																			"arguments": [
																				{
																					"expression": {
																						"id": 2237,
																						"name": "msg",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 4294967281,
																						"src": "4012:3:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_magic_message",
																							"typeString": "msg"
																						}
																					},
																					"id": 2238,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "4016:6:13",
																					"memberName": "sender",
																					"nodeType": "MemberAccess",
																					"src": "4012:10:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				},
																				{
																					"id": 2239,
																					"name": "questTitle",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2176,
																					"src": "4024:10:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					},
																					{
																						"typeIdentifier": "t_string_memory_ptr",
																						"typeString": "string memory"
																					}
																				],
																				"id": 2236,
																				"name": "QuestCompleted",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1971,
																				"src": "3997:14:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
																					"typeString": "function (address,string memory)"
																				}
																			},
																			"id": 2240,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3997:38:13",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 2241,
																		"nodeType": "EmitStatement",
																		"src": "3992:43:13"
																	},
																	{
																		"id": 2242,
																		"nodeType": "Break",
																		"src": "4053:5:13"
																	}
																]
															}
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2189,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2183,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2180,
														"src": "3640:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"baseExpression": {
																"id": 2184,
																"name": "playerQuests",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1951,
																"src": "3644:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_array$_t_struct$_Quest_$1915_storage_$dyn_storage_$",
																	"typeString": "mapping(address => struct CryptoQuestTheShardsOfGenesisMMPORPG.Quest storage ref[] storage ref)"
																}
															},
															"id": 2187,
															"indexExpression": {
																"expression": {
																	"id": 2185,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "3657:3:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2186,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3661:6:13",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "3657:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3644:24:13",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Quest_$1915_storage_$dyn_storage",
																"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Quest storage ref[] storage ref"
															}
														},
														"id": 2188,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3669:6:13",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "3644:31:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3640:35:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2246,
												"initializationExpression": {
													"assignments": [
														2180
													],
													"declarations": [
														{
															"constant": false,
															"id": 2180,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "3633:1:13",
															"nodeType": "VariableDeclaration",
															"scope": 2246,
															"src": "3628:6:13",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2179,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "3628:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2182,
													"initialValue": {
														"hexValue": "30",
														"id": 2181,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3637:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "3628:10:13"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 2191,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "3677:3:13",
														"subExpression": {
															"id": 2190,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2180,
															"src": "3677:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2192,
													"nodeType": "ExpressionStatement",
													"src": "3677:3:13"
												},
												"nodeType": "ForStatement",
												"src": "3623:460:13"
											}
										]
									},
									"functionSelector": "17435e1a",
									"id": 2248,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "completeQuest",
									"nameLocation": "3566:13:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2176,
												"mutability": "mutable",
												"name": "questTitle",
												"nameLocation": "3594:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 2248,
												"src": "3580:24:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2175,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3580:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3579:26:13"
									},
									"returnParameters": {
										"id": 2178,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3613:0:13"
									},
									"scope": 2566,
									"src": "3557:532:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2304,
										"nodeType": "Block",
										"src": "4185:278:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"id": 2259,
																	"name": "guildNameToLeader",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1960,
																	"src": "4203:17:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
																		"typeString": "mapping(string memory => address)"
																	}
																},
																"id": 2261,
																"indexExpression": {
																	"id": 2260,
																	"name": "name",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2250,
																	"src": "4221:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_string_memory_ptr",
																		"typeString": "string memory"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4203:23:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2264,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4238:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2263,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4230:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2262,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4230:7:13",
																		"typeDescriptions": {}
																	}
																},
																"id": 2265,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4230:10:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4203:37:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4775696c6420616c726561647920657869737473",
															"id": 2267,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4242:22:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c02f3e50ed6b54b03eba0a4b156b8b2c122f79039273c822fbda9326f1dec609",
																"typeString": "literal_string \"Guild already exists\""
															},
															"value": "Guild already exists"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c02f3e50ed6b54b03eba0a4b156b8b2c122f79039273c822fbda9326f1dec609",
																"typeString": "literal_string \"Guild already exists\""
															}
														],
														"id": 2258,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4195:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2268,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4195:70:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2269,
												"nodeType": "ExpressionStatement",
												"src": "4195:70:13"
											},
											{
												"expression": {
													"id": 2282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2270,
															"name": "guilds",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1956,
															"src": "4275:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Guild_$1923_storage_$",
																"typeString": "mapping(address => struct CryptoQuestTheShardsOfGenesisMMPORPG.Guild storage ref)"
															}
														},
														"id": 2272,
														"indexExpression": {
															"id": 2271,
															"name": "leader",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2252,
															"src": "4282:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4275:14:13",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Guild_$1923_storage",
															"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Guild storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2274,
																"name": "name",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2250,
																"src": "4298:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																}
															},
															{
																"id": 2275,
																"name": "leader",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2252,
																"src": "4304:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															{
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 2279,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4326:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 2278,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "NewExpression",
																	"src": "4312:13:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
																		"typeString": "function (uint256) pure returns (address[] memory)"
																	},
																	"typeName": {
																		"baseType": {
																			"id": 2276,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4316:7:13",
																			"stateMutability": "nonpayable",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 2277,
																		"nodeType": "ArrayTypeName",
																		"src": "4316:9:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
																			"typeString": "address[]"
																		}
																	}
																},
																"id": 2280,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4312:16:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_string_memory_ptr",
																	"typeString": "string memory"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																},
																{
																	"typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
																	"typeString": "address[] memory"
																}
															],
															"id": 2273,
															"name": "Guild",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1923,
															"src": "4292:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Guild_$1923_storage_ptr_$",
																"typeString": "type(struct CryptoQuestTheShardsOfGenesisMMPORPG.Guild storage pointer)"
															}
														},
														"id": 2281,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4292:37:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Guild_$1923_memory_ptr",
															"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Guild memory"
														}
													},
													"src": "4275:54:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Guild_$1923_storage",
														"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Guild storage ref"
													}
												},
												"id": 2283,
												"nodeType": "ExpressionStatement",
												"src": "4275:54:13"
											},
											{
												"expression": {
													"id": 2291,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"baseExpression": {
																	"id": 2284,
																	"name": "guilds",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1956,
																	"src": "4339:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Guild_$1923_storage_$",
																		"typeString": "mapping(address => struct CryptoQuestTheShardsOfGenesisMMPORPG.Guild storage ref)"
																	}
																},
																"id": 2286,
																"indexExpression": {
																	"id": 2285,
																	"name": "leader",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2252,
																	"src": "4346:6:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4339:14:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Guild_$1923_storage",
																	"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Guild storage ref"
																}
															},
															"id": 2287,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4354:7:13",
															"memberName": "members",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1922,
															"src": "4339:22:13",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 2289,
														"indexExpression": {
															"hexValue": "30",
															"id": 2288,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4362:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4339:25:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2290,
														"name": "leader",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2252,
														"src": "4367:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4339:34:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2292,
												"nodeType": "ExpressionStatement",
												"src": "4339:34:13"
											},
											{
												"expression": {
													"id": 2297,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2293,
															"name": "guildNameToLeader",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1960,
															"src": "4383:17:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
																"typeString": "mapping(string memory => address)"
															}
														},
														"id": 2295,
														"indexExpression": {
															"id": 2294,
															"name": "name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2250,
															"src": "4401:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4383:23:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2296,
														"name": "leader",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2252,
														"src": "4409:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4383:32:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 2298,
												"nodeType": "ExpressionStatement",
												"src": "4383:32:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2300,
															"name": "name",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2250,
															"src": "4443:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															}
														},
														{
															"id": 2301,
															"name": "leader",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2252,
															"src": "4449:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_string_memory_ptr",
																"typeString": "string memory"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2299,
														"name": "GuildCreated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1987,
														"src": "4430:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_address_$returns$__$",
															"typeString": "function (string memory,address)"
														}
													},
													"id": 2302,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4430:26:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2303,
												"nodeType": "EmitStatement",
												"src": "4425:31:13"
											}
										]
									},
									"functionSelector": "4fa4a1bb",
									"id": 2305,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2255,
													"name": "GAME_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1870,
													"src": "4168:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2256,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2254,
												"name": "onlyRole",
												"nameLocations": [
													"4159:8:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "4159:8:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "4159:25:13"
										}
									],
									"name": "createGuild",
									"nameLocation": "4104:11:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2253,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2250,
												"mutability": "mutable",
												"name": "name",
												"nameLocation": "4130:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 2305,
												"src": "4116:18:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2249,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4116:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2252,
												"mutability": "mutable",
												"name": "leader",
												"nameLocation": "4144:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 2305,
												"src": "4136:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2251,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4115:36:13"
									},
									"returnParameters": {
										"id": 2257,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4185:0:13"
									},
									"scope": 2566,
									"src": "4095:368:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2367,
										"nodeType": "Block",
										"src": "4520:461:13",
										"statements": [
											{
												"assignments": [
													2311
												],
												"declarations": [
													{
														"constant": false,
														"id": 2311,
														"mutability": "mutable",
														"name": "leader",
														"nameLocation": "4538:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2367,
														"src": "4530:14:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 2310,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "4530:7:13",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2315,
												"initialValue": {
													"baseExpression": {
														"id": 2312,
														"name": "guildNameToLeader",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1960,
														"src": "4547:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_address_$",
															"typeString": "mapping(string memory => address)"
														}
													},
													"id": 2314,
													"indexExpression": {
														"id": 2313,
														"name": "guildName",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2307,
														"src": "4565:9:13",
														"typeDescriptions": {
															"typeIdentifier": "t_string_memory_ptr",
															"typeString": "string memory"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4547:28:13",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4530:45:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2322,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2317,
																"name": "leader",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2311,
																"src": "4593:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"arguments": [
																	{
																		"hexValue": "30",
																		"id": 2320,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4611:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		}
																	],
																	"id": 2319,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "4603:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2318,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "4603:7:13",
																		"typeDescriptions": {}
																	}
																},
																"id": 2321,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4603:10:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "4593:20:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4775696c6420646f6573206e6f74206578697374",
															"id": 2323,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4615:22:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_df115ebb113eb795e874836f8b2917a4781efe582dc2481c741971644f30822e",
																"typeString": "literal_string \"Guild does not exist\""
															},
															"value": "Guild does not exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_df115ebb113eb795e874836f8b2917a4781efe582dc2481c741971644f30822e",
																"typeString": "literal_string \"Guild does not exist\""
															}
														],
														"id": 2316,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4585:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4585:53:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2325,
												"nodeType": "ExpressionStatement",
												"src": "4585:53:13"
											},
											{
												"assignments": [
													2328
												],
												"declarations": [
													{
														"constant": false,
														"id": 2328,
														"mutability": "mutable",
														"name": "guild",
														"nameLocation": "4747:5:13",
														"nodeType": "VariableDeclaration",
														"scope": 2367,
														"src": "4733:19:13",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Guild_$1923_storage_ptr",
															"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Guild"
														},
														"typeName": {
															"id": 2327,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2326,
																"name": "Guild",
																"nameLocations": [
																	"4733:5:13"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1923,
																"src": "4733:5:13"
															},
															"referencedDeclaration": 1923,
															"src": "4733:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Guild_$1923_storage_ptr",
																"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Guild"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2332,
												"initialValue": {
													"baseExpression": {
														"id": 2329,
														"name": "guilds",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1956,
														"src": "4755:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Guild_$1923_storage_$",
															"typeString": "mapping(address => struct CryptoQuestTheShardsOfGenesisMMPORPG.Guild storage ref)"
														}
													},
													"id": 2331,
													"indexExpression": {
														"id": 2330,
														"name": "leader",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2311,
														"src": "4762:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4755:14:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Guild_$1923_storage",
														"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Guild storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4733:36:13"
											},
											{
												"body": {
													"id": 2356,
													"nodeType": "Block",
													"src": "4827:107:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		"id": 2352,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"baseExpression": {
																				"expression": {
																					"id": 2346,
																					"name": "guild",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2328,
																					"src": "4849:5:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_Guild_$1923_storage_ptr",
																						"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Guild storage pointer"
																					}
																				},
																				"id": 2347,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "4855:7:13",
																				"memberName": "members",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 1922,
																				"src": "4849:13:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_array$_t_address_$dyn_storage",
																					"typeString": "address[] storage ref"
																				}
																			},
																			"id": 2349,
																			"indexExpression": {
																				"id": 2348,
																				"name": "i",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2334,
																				"src": "4863:1:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "4849:16:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"expression": {
																				"id": 2350,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "4869:3:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 2351,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4873:6:13",
																			"memberName": "sender",
																			"nodeType": "MemberAccess",
																			"src": "4869:10:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"src": "4849:30:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "53656e64657220697320616c72656164792061206d656d626572206f6620746865206775696c64",
																		"id": 2353,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4881:41:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_60488ddff5208baf36b3dd08007032a8dda5e33f922203c6a10ac3af154485c2",
																			"typeString": "literal_string \"Sender is already a member of the guild\""
																		},
																		"value": "Sender is already a member of the guild"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_60488ddff5208baf36b3dd08007032a8dda5e33f922203c6a10ac3af154485c2",
																			"typeString": "literal_string \"Sender is already a member of the guild\""
																		}
																	],
																	"id": 2345,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "4841:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2354,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4841:82:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2355,
															"nodeType": "ExpressionStatement",
															"src": "4841:82:13"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2341,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2337,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2334,
														"src": "4796:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"expression": {
																"id": 2338,
																"name": "guild",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2328,
																"src": "4800:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Guild_$1923_storage_ptr",
																	"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Guild storage pointer"
																}
															},
															"id": 2339,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4806:7:13",
															"memberName": "members",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1922,
															"src": "4800:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 2340,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4814:6:13",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "4800:20:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4796:24:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2357,
												"initializationExpression": {
													"assignments": [
														2334
													],
													"declarations": [
														{
															"constant": false,
															"id": 2334,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "4789:1:13",
															"nodeType": "VariableDeclaration",
															"scope": 2357,
															"src": "4784:6:13",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2333,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "4784:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2336,
													"initialValue": {
														"hexValue": "30",
														"id": 2335,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4793:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "4784:10:13"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 2343,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "4822:3:13",
														"subExpression": {
															"id": 2342,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2334,
															"src": "4822:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2344,
													"nodeType": "ExpressionStatement",
													"src": "4822:3:13"
												},
												"nodeType": "ForStatement",
												"src": "4779:155:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2363,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4963:3:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2364,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4967:6:13",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4963:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"expression": {
															"expression": {
																"id": 2358,
																"name": "guild",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2328,
																"src": "4944:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Guild_$1923_storage_ptr",
																	"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Guild storage pointer"
																}
															},
															"id": 2361,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4950:7:13",
															"memberName": "members",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1922,
															"src": "4944:13:13",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_address_$dyn_storage",
																"typeString": "address[] storage ref"
															}
														},
														"id": 2362,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4958:4:13",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "4944:18:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_address_$dyn_storage_ptr_$_t_address_$returns$__$attached_to$_t_array$_t_address_$dyn_storage_ptr_$",
															"typeString": "function (address[] storage pointer,address)"
														}
													},
													"id": 2365,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4944:30:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2366,
												"nodeType": "ExpressionStatement",
												"src": "4944:30:13"
											}
										]
									},
									"functionSelector": "e551ba4b",
									"id": 2368,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "joinGuild",
									"nameLocation": "4478:9:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2308,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2307,
												"mutability": "mutable",
												"name": "guildName",
												"nameLocation": "4502:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 2368,
												"src": "4488:23:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2306,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "4488:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4487:25:13"
									},
									"returnParameters": {
										"id": 2309,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4520:0:13"
									},
									"scope": 2566,
									"src": "4469:512:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2396,
										"nodeType": "Block",
										"src": "5081:148:13",
										"statements": [
											{
												"expression": {
													"id": 2386,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2379,
															"name": "recipes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1965,
															"src": "5091:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Recipe_$1929_storage_$",
																"typeString": "mapping(uint256 => struct CryptoQuestTheShardsOfGenesisMMPORPG.Recipe storage ref)"
															}
														},
														"id": 2381,
														"indexExpression": {
															"id": 2380,
															"name": "nextRecipeId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1935,
															"src": "5099:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5091:21:13",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Recipe_$1929_storage",
															"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Recipe storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2383,
																"name": "itemIds",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2371,
																"src": "5122:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																	"typeString": "uint256[] memory"
																}
															},
															{
																"id": 2384,
																"name": "resultItemId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2373,
																"src": "5131:12:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																	"typeString": "uint256[] memory"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2382,
															"name": "Recipe",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1929,
															"src": "5115:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Recipe_$1929_storage_ptr_$",
																"typeString": "type(struct CryptoQuestTheShardsOfGenesisMMPORPG.Recipe storage pointer)"
															}
														},
														"id": 2385,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5115:29:13",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Recipe_$1929_memory_ptr",
															"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Recipe memory"
														}
													},
													"src": "5091:53:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Recipe_$1929_storage",
														"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Recipe storage ref"
													}
												},
												"id": 2387,
												"nodeType": "ExpressionStatement",
												"src": "5091:53:13"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2389,
															"name": "nextRecipeId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1935,
															"src": "5171:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2390,
															"name": "resultItemId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2373,
															"src": "5185:12:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2388,
														"name": "RecipeAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1993,
														"src": "5159:11:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (uint256,uint256)"
														}
													},
													"id": 2391,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5159:39:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2392,
												"nodeType": "EmitStatement",
												"src": "5154:44:13"
											},
											{
												"expression": {
													"id": 2394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "++",
													"prefix": false,
													"src": "5208:14:13",
													"subExpression": {
														"id": 2393,
														"name": "nextRecipeId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1935,
														"src": "5208:12:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2395,
												"nodeType": "ExpressionStatement",
												"src": "5208:14:13"
											}
										]
									},
									"functionSelector": "a9834b67",
									"id": 2397,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2376,
													"name": "GAME_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 1870,
													"src": "5064:15:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2377,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2375,
												"name": "onlyRole",
												"nameLocations": [
													"5055:8:13"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "5055:8:13"
											},
											"nodeType": "ModifierInvocation",
											"src": "5055:25:13"
										}
									],
									"name": "addRecipe",
									"nameLocation": "4996:9:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2374,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2371,
												"mutability": "mutable",
												"name": "itemIds",
												"nameLocation": "5020:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 2397,
												"src": "5006:21:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 2369,
														"name": "uint",
														"nodeType": "ElementaryTypeName",
														"src": "5006:4:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2370,
													"nodeType": "ArrayTypeName",
													"src": "5006:6:13",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2373,
												"mutability": "mutable",
												"name": "resultItemId",
												"nameLocation": "5034:12:13",
												"nodeType": "VariableDeclaration",
												"scope": 2397,
												"src": "5029:17:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2372,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5029:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5005:42:13"
									},
									"returnParameters": {
										"id": 2378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5081:0:13"
									},
									"scope": 2566,
									"src": "4987:242:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2564,
										"nodeType": "Block",
										"src": "5276:1258:13",
										"statements": [
											{
												"assignments": [
													2404
												],
												"declarations": [
													{
														"constant": false,
														"id": 2404,
														"mutability": "mutable",
														"name": "recipe",
														"nameLocation": "5300:6:13",
														"nodeType": "VariableDeclaration",
														"scope": 2564,
														"src": "5286:20:13",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Recipe_$1929_memory_ptr",
															"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Recipe"
														},
														"typeName": {
															"id": 2403,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2402,
																"name": "Recipe",
																"nameLocations": [
																	"5286:6:13"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1929,
																"src": "5286:6:13"
															},
															"referencedDeclaration": 1929,
															"src": "5286:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Recipe_$1929_storage_ptr",
																"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Recipe"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2408,
												"initialValue": {
													"baseExpression": {
														"id": 2405,
														"name": "recipes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1965,
														"src": "5309:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_uint256_$_t_struct$_Recipe_$1929_storage_$",
															"typeString": "mapping(uint256 => struct CryptoQuestTheShardsOfGenesisMMPORPG.Recipe storage ref)"
														}
													},
													"id": 2407,
													"indexExpression": {
														"id": 2406,
														"name": "recipeId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2399,
														"src": "5317:8:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5309:17:13",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Recipe_$1929_storage",
														"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Recipe storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5286:40:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"expression": {
																		"id": 2410,
																		"name": "recipe",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2404,
																		"src": "5344:6:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_Recipe_$1929_memory_ptr",
																			"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Recipe memory"
																		}
																	},
																	"id": 2411,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5351:7:13",
																	"memberName": "itemIds",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1926,
																	"src": "5344:14:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																		"typeString": "uint256[] memory"
																	}
																},
																"id": 2412,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5359:6:13",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "5344:21:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2413,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5368:1:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5344:25:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e76616c696420726563697065",
															"id": 2415,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5371:16:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_ffd94407a19cf8baf61f33fd1e368fd23471d93aa28c06b7e15811441edc47e5",
																"typeString": "literal_string \"Invalid recipe\""
															},
															"value": "Invalid recipe"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_ffd94407a19cf8baf61f33fd1e368fd23471d93aa28c06b7e15811441edc47e5",
																"typeString": "literal_string \"Invalid recipe\""
															}
														],
														"id": 2409,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5336:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2416,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5336:52:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2417,
												"nodeType": "ExpressionStatement",
												"src": "5336:52:13"
											},
											{
												"body": {
													"id": 2475,
													"nodeType": "Block",
													"src": "5506:368:13",
													"statements": [
														{
															"assignments": [
																2431
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2431,
																	"mutability": "mutable",
																	"name": "hasItem",
																	"nameLocation": "5525:7:13",
																	"nodeType": "VariableDeclaration",
																	"scope": 2475,
																	"src": "5520:12:13",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"typeName": {
																		"id": 2430,
																		"name": "bool",
																		"nodeType": "ElementaryTypeName",
																		"src": "5520:4:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2433,
															"initialValue": {
																"hexValue": "66616c7365",
																"id": 2432,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5535:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "5520:20:13"
														},
														{
															"body": {
																"id": 2468,
																"nodeType": "Block",
																"src": "5618:173:13",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2460,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"baseExpression": {
																					"expression": {
																						"baseExpression": {
																							"id": 2449,
																							"name": "players",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1945,
																							"src": "5640:7:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$1893_storage_$",
																								"typeString": "mapping(address => struct CryptoQuestTheShardsOfGenesisMMPORPG.Player storage ref)"
																							}
																						},
																						"id": 2452,
																						"indexExpression": {
																							"expression": {
																								"id": 2450,
																								"name": "msg",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967281,
																								"src": "5648:3:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_message",
																									"typeString": "msg"
																								}
																							},
																							"id": 2451,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "5652:6:13",
																							"memberName": "sender",
																							"nodeType": "MemberAccess",
																							"src": "5648:10:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "5640:19:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Player_$1893_storage",
																							"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Player storage ref"
																						}
																					},
																					"id": 2453,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "5660:9:13",
																					"memberName": "inventory",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1889,
																					"src": "5640:29:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																						"typeString": "uint256[] storage ref"
																					}
																				},
																				"id": 2455,
																				"indexExpression": {
																					"id": 2454,
																					"name": "j",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2435,
																					"src": "5670:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "5640:32:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"baseExpression": {
																					"expression": {
																						"id": 2456,
																						"name": "recipe",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2404,
																						"src": "5676:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Recipe_$1929_memory_ptr",
																							"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Recipe memory"
																						}
																					},
																					"id": 2457,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "5683:7:13",
																					"memberName": "itemIds",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1926,
																					"src": "5676:14:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 2459,
																				"indexExpression": {
																					"id": 2458,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2419,
																					"src": "5691:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "5676:17:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "5640:53:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 2467,
																		"nodeType": "IfStatement",
																		"src": "5636:141:13",
																		"trueBody": {
																			"id": 2466,
																			"nodeType": "Block",
																			"src": "5695:82:13",
																			"statements": [
																				{
																					"expression": {
																						"id": 2463,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"id": 2461,
																							"name": "hasItem",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 2431,
																							"src": "5717:7:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"hexValue": "74727565",
																							"id": 2462,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": true,
																							"kind": "bool",
																							"lValueRequested": false,
																							"nodeType": "Literal",
																							"src": "5727:4:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bool",
																								"typeString": "bool"
																							},
																							"value": "true"
																						},
																						"src": "5717:14:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_bool",
																							"typeString": "bool"
																						}
																					},
																					"id": 2464,
																					"nodeType": "ExpressionStatement",
																					"src": "5717:14:13"
																				},
																				{
																					"id": 2465,
																					"nodeType": "Break",
																					"src": "5753:5:13"
																				}
																			]
																		}
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2445,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2438,
																	"name": "j",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2435,
																	"src": "5571:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"expression": {
																			"baseExpression": {
																				"id": 2439,
																				"name": "players",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1945,
																				"src": "5575:7:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$1893_storage_$",
																					"typeString": "mapping(address => struct CryptoQuestTheShardsOfGenesisMMPORPG.Player storage ref)"
																				}
																			},
																			"id": 2442,
																			"indexExpression": {
																				"expression": {
																					"id": 2440,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "5583:3:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 2441,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "5587:6:13",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "5583:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "5575:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Player_$1893_storage",
																				"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Player storage ref"
																			}
																		},
																		"id": 2443,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5595:9:13",
																		"memberName": "inventory",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1889,
																		"src": "5575:29:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																			"typeString": "uint256[] storage ref"
																		}
																	},
																	"id": 2444,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5605:6:13",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "5575:36:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5571:40:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2469,
															"initializationExpression": {
																"assignments": [
																	2435
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 2435,
																		"mutability": "mutable",
																		"name": "j",
																		"nameLocation": "5564:1:13",
																		"nodeType": "VariableDeclaration",
																		"scope": 2469,
																		"src": "5559:6:13",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 2434,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "5559:4:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 2437,
																"initialValue": {
																	"hexValue": "30",
																	"id": 2436,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5568:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "5559:10:13"
															},
															"isSimpleCounterLoop": true,
															"loopExpression": {
																"expression": {
																	"id": 2447,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "5613:3:13",
																	"subExpression": {
																		"id": 2446,
																		"name": "j",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2435,
																		"src": "5613:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2448,
																"nodeType": "ExpressionStatement",
																"src": "5613:3:13"
															},
															"nodeType": "ForStatement",
															"src": "5554:237:13"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2471,
																		"name": "hasItem",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2431,
																		"src": "5812:7:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "506c6179657220646f6573206e6f74206861766520616c6c207265717569726564206974656d73",
																		"id": 2472,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5821:41:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_6549b2fa5584e8c8ec502931a0b58219efc997d0668f171ad9fa4547ef7827c7",
																			"typeString": "literal_string \"Player does not have all required items\""
																		},
																		"value": "Player does not have all required items"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_6549b2fa5584e8c8ec502931a0b58219efc997d0668f171ad9fa4547ef7827c7",
																			"typeString": "literal_string \"Player does not have all required items\""
																		}
																	],
																	"id": 2470,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "5804:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2473,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5804:59:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2474,
															"nodeType": "ExpressionStatement",
															"src": "5804:59:13"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2426,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2422,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2419,
														"src": "5474:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"expression": {
																"id": 2423,
																"name": "recipe",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2404,
																"src": "5478:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Recipe_$1929_memory_ptr",
																	"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Recipe memory"
																}
															},
															"id": 2424,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5485:7:13",
															"memberName": "itemIds",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1926,
															"src": "5478:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 2425,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5493:6:13",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5478:21:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5474:25:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2476,
												"initializationExpression": {
													"assignments": [
														2419
													],
													"declarations": [
														{
															"constant": false,
															"id": 2419,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5467:1:13",
															"nodeType": "VariableDeclaration",
															"scope": 2476,
															"src": "5462:6:13",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2418,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "5462:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2421,
													"initialValue": {
														"hexValue": "30",
														"id": 2420,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5471:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5462:10:13"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 2428,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "5501:3:13",
														"subExpression": {
															"id": 2427,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2419,
															"src": "5501:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2429,
													"nodeType": "ExpressionStatement",
													"src": "5501:3:13"
												},
												"nodeType": "ForStatement",
												"src": "5457:417:13"
											},
											{
												"body": {
													"id": 2552,
													"nodeType": "Block",
													"src": "5994:410:13",
													"statements": [
														{
															"body": {
																"id": 2550,
																"nodeType": "Block",
																"src": "6072:322:13",
																"statements": [
																	{
																		"condition": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2515,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"baseExpression": {
																					"expression": {
																						"baseExpression": {
																							"id": 2504,
																							"name": "players",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 1945,
																							"src": "6094:7:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$1893_storage_$",
																								"typeString": "mapping(address => struct CryptoQuestTheShardsOfGenesisMMPORPG.Player storage ref)"
																							}
																						},
																						"id": 2507,
																						"indexExpression": {
																							"expression": {
																								"id": 2505,
																								"name": "msg",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 4294967281,
																								"src": "6102:3:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_magic_message",
																									"typeString": "msg"
																								}
																							},
																							"id": 2506,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "6106:6:13",
																							"memberName": "sender",
																							"nodeType": "MemberAccess",
																							"src": "6102:10:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_address",
																								"typeString": "address"
																							}
																						},
																						"isConstant": false,
																						"isLValue": true,
																						"isPure": false,
																						"lValueRequested": false,
																						"nodeType": "IndexAccess",
																						"src": "6094:19:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Player_$1893_storage",
																							"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Player storage ref"
																						}
																					},
																					"id": 2508,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "6114:9:13",
																					"memberName": "inventory",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1889,
																					"src": "6094:29:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																						"typeString": "uint256[] storage ref"
																					}
																				},
																				"id": 2510,
																				"indexExpression": {
																					"id": 2509,
																					"name": "j",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2490,
																					"src": "6124:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "6094:32:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "==",
																			"rightExpression": {
																				"baseExpression": {
																					"expression": {
																						"id": 2511,
																						"name": "recipe",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2404,
																						"src": "6130:6:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_Recipe_$1929_memory_ptr",
																							"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Recipe memory"
																						}
																					},
																					"id": 2512,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "6137:7:13",
																					"memberName": "itemIds",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 1926,
																					"src": "6130:14:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																						"typeString": "uint256[] memory"
																					}
																				},
																				"id": 2514,
																				"indexExpression": {
																					"id": 2513,
																					"name": "i",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2478,
																					"src": "6145:1:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"nodeType": "IndexAccess",
																				"src": "6130:17:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "6094:53:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"id": 2549,
																		"nodeType": "IfStatement",
																		"src": "6090:290:13",
																		"trueBody": {
																			"id": 2548,
																			"nodeType": "Block",
																			"src": "6149:231:13",
																			"statements": [
																				{
																					"expression": {
																						"id": 2537,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"lValueRequested": false,
																						"leftHandSide": {
																							"baseExpression": {
																								"expression": {
																									"baseExpression": {
																										"id": 2516,
																										"name": "players",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1945,
																										"src": "6171:7:13",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$1893_storage_$",
																											"typeString": "mapping(address => struct CryptoQuestTheShardsOfGenesisMMPORPG.Player storage ref)"
																										}
																									},
																									"id": 2519,
																									"indexExpression": {
																										"expression": {
																											"id": 2517,
																											"name": "msg",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 4294967281,
																											"src": "6179:3:13",
																											"typeDescriptions": {
																												"typeIdentifier": "t_magic_message",
																												"typeString": "msg"
																											}
																										},
																										"id": 2518,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "6183:6:13",
																										"memberName": "sender",
																										"nodeType": "MemberAccess",
																										"src": "6179:10:13",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "6171:19:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_Player_$1893_storage",
																										"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Player storage ref"
																									}
																								},
																								"id": 2520,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "6191:9:13",
																								"memberName": "inventory",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 1889,
																								"src": "6171:29:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																									"typeString": "uint256[] storage ref"
																								}
																							},
																							"id": 2522,
																							"indexExpression": {
																								"id": 2521,
																								"name": "j",
																								"nodeType": "Identifier",
																								"overloadedDeclarations": [],
																								"referencedDeclaration": 2490,
																								"src": "6201:1:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": true,
																							"nodeType": "IndexAccess",
																							"src": "6171:32:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"nodeType": "Assignment",
																						"operator": "=",
																						"rightHandSide": {
																							"baseExpression": {
																								"expression": {
																									"baseExpression": {
																										"id": 2523,
																										"name": "players",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1945,
																										"src": "6206:7:13",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$1893_storage_$",
																											"typeString": "mapping(address => struct CryptoQuestTheShardsOfGenesisMMPORPG.Player storage ref)"
																										}
																									},
																									"id": 2526,
																									"indexExpression": {
																										"expression": {
																											"id": 2524,
																											"name": "msg",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 4294967281,
																											"src": "6214:3:13",
																											"typeDescriptions": {
																												"typeIdentifier": "t_magic_message",
																												"typeString": "msg"
																											}
																										},
																										"id": 2525,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "6218:6:13",
																										"memberName": "sender",
																										"nodeType": "MemberAccess",
																										"src": "6214:10:13",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "6206:19:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_Player_$1893_storage",
																										"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Player storage ref"
																									}
																								},
																								"id": 2527,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "6226:9:13",
																								"memberName": "inventory",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 1889,
																								"src": "6206:29:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																									"typeString": "uint256[] storage ref"
																								}
																							},
																							"id": 2536,
																							"indexExpression": {
																								"commonType": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								},
																								"id": 2535,
																								"isConstant": false,
																								"isLValue": false,
																								"isPure": false,
																								"lValueRequested": false,
																								"leftExpression": {
																									"expression": {
																										"expression": {
																											"baseExpression": {
																												"id": 2528,
																												"name": "players",
																												"nodeType": "Identifier",
																												"overloadedDeclarations": [],
																												"referencedDeclaration": 1945,
																												"src": "6236:7:13",
																												"typeDescriptions": {
																													"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$1893_storage_$",
																													"typeString": "mapping(address => struct CryptoQuestTheShardsOfGenesisMMPORPG.Player storage ref)"
																												}
																											},
																											"id": 2531,
																											"indexExpression": {
																												"expression": {
																													"id": 2529,
																													"name": "msg",
																													"nodeType": "Identifier",
																													"overloadedDeclarations": [],
																													"referencedDeclaration": 4294967281,
																													"src": "6244:3:13",
																													"typeDescriptions": {
																														"typeIdentifier": "t_magic_message",
																														"typeString": "msg"
																													}
																												},
																												"id": 2530,
																												"isConstant": false,
																												"isLValue": false,
																												"isPure": false,
																												"lValueRequested": false,
																												"memberLocation": "6248:6:13",
																												"memberName": "sender",
																												"nodeType": "MemberAccess",
																												"src": "6244:10:13",
																												"typeDescriptions": {
																													"typeIdentifier": "t_address",
																													"typeString": "address"
																												}
																											},
																											"isConstant": false,
																											"isLValue": true,
																											"isPure": false,
																											"lValueRequested": false,
																											"nodeType": "IndexAccess",
																											"src": "6236:19:13",
																											"typeDescriptions": {
																												"typeIdentifier": "t_struct$_Player_$1893_storage",
																												"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Player storage ref"
																											}
																										},
																										"id": 2532,
																										"isConstant": false,
																										"isLValue": true,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "6256:9:13",
																										"memberName": "inventory",
																										"nodeType": "MemberAccess",
																										"referencedDeclaration": 1889,
																										"src": "6236:29:13",
																										"typeDescriptions": {
																											"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																											"typeString": "uint256[] storage ref"
																										}
																									},
																									"id": 2533,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": false,
																									"lValueRequested": false,
																									"memberLocation": "6266:6:13",
																									"memberName": "length",
																									"nodeType": "MemberAccess",
																									"src": "6236:36:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_uint256",
																										"typeString": "uint256"
																									}
																								},
																								"nodeType": "BinaryOperation",
																								"operator": "-",
																								"rightExpression": {
																									"hexValue": "31",
																									"id": 2534,
																									"isConstant": false,
																									"isLValue": false,
																									"isPure": true,
																									"kind": "number",
																									"lValueRequested": false,
																									"nodeType": "Literal",
																									"src": "6275:1:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_rational_1_by_1",
																										"typeString": "int_const 1"
																									},
																									"value": "1"
																								},
																								"src": "6236:40:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_uint256",
																									"typeString": "uint256"
																								}
																							},
																							"isConstant": false,
																							"isLValue": true,
																							"isPure": false,
																							"lValueRequested": false,
																							"nodeType": "IndexAccess",
																							"src": "6206:71:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_uint256",
																								"typeString": "uint256"
																							}
																						},
																						"src": "6171:106:13",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"id": 2538,
																					"nodeType": "ExpressionStatement",
																					"src": "6171:106:13"
																				},
																				{
																					"expression": {
																						"arguments": [],
																						"expression": {
																							"argumentTypes": [],
																							"expression": {
																								"expression": {
																									"baseExpression": {
																										"id": 2539,
																										"name": "players",
																										"nodeType": "Identifier",
																										"overloadedDeclarations": [],
																										"referencedDeclaration": 1945,
																										"src": "6299:7:13",
																										"typeDescriptions": {
																											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$1893_storage_$",
																											"typeString": "mapping(address => struct CryptoQuestTheShardsOfGenesisMMPORPG.Player storage ref)"
																										}
																									},
																									"id": 2542,
																									"indexExpression": {
																										"expression": {
																											"id": 2540,
																											"name": "msg",
																											"nodeType": "Identifier",
																											"overloadedDeclarations": [],
																											"referencedDeclaration": 4294967281,
																											"src": "6307:3:13",
																											"typeDescriptions": {
																												"typeIdentifier": "t_magic_message",
																												"typeString": "msg"
																											}
																										},
																										"id": 2541,
																										"isConstant": false,
																										"isLValue": false,
																										"isPure": false,
																										"lValueRequested": false,
																										"memberLocation": "6311:6:13",
																										"memberName": "sender",
																										"nodeType": "MemberAccess",
																										"src": "6307:10:13",
																										"typeDescriptions": {
																											"typeIdentifier": "t_address",
																											"typeString": "address"
																										}
																									},
																									"isConstant": false,
																									"isLValue": true,
																									"isPure": false,
																									"lValueRequested": false,
																									"nodeType": "IndexAccess",
																									"src": "6299:19:13",
																									"typeDescriptions": {
																										"typeIdentifier": "t_struct$_Player_$1893_storage",
																										"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Player storage ref"
																									}
																								},
																								"id": 2543,
																								"isConstant": false,
																								"isLValue": true,
																								"isPure": false,
																								"lValueRequested": false,
																								"memberLocation": "6319:9:13",
																								"memberName": "inventory",
																								"nodeType": "MemberAccess",
																								"referencedDeclaration": 1889,
																								"src": "6299:29:13",
																								"typeDescriptions": {
																									"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																									"typeString": "uint256[] storage ref"
																								}
																							},
																							"id": 2544,
																							"isConstant": false,
																							"isLValue": false,
																							"isPure": false,
																							"lValueRequested": false,
																							"memberLocation": "6329:3:13",
																							"memberName": "pop",
																							"nodeType": "MemberAccess",
																							"src": "6299:33:13",
																							"typeDescriptions": {
																								"typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
																								"typeString": "function (uint256[] storage pointer)"
																							}
																						},
																						"id": 2545,
																						"isConstant": false,
																						"isLValue": false,
																						"isPure": false,
																						"kind": "functionCall",
																						"lValueRequested": false,
																						"nameLocations": [],
																						"names": [],
																						"nodeType": "FunctionCall",
																						"src": "6299:35:13",
																						"tryCall": false,
																						"typeDescriptions": {
																							"typeIdentifier": "t_tuple$__$",
																							"typeString": "tuple()"
																						}
																					},
																					"id": 2546,
																					"nodeType": "ExpressionStatement",
																					"src": "6299:35:13"
																				},
																				{
																					"id": 2547,
																					"nodeType": "Break",
																					"src": "6356:5:13"
																				}
																			]
																		}
																	}
																]
															},
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2500,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2493,
																	"name": "j",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2490,
																	"src": "6025:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "<",
																"rightExpression": {
																	"expression": {
																		"expression": {
																			"baseExpression": {
																				"id": 2494,
																				"name": "players",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1945,
																				"src": "6029:7:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$1893_storage_$",
																					"typeString": "mapping(address => struct CryptoQuestTheShardsOfGenesisMMPORPG.Player storage ref)"
																				}
																			},
																			"id": 2497,
																			"indexExpression": {
																				"expression": {
																					"id": 2495,
																					"name": "msg",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967281,
																					"src": "6037:3:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_magic_message",
																						"typeString": "msg"
																					}
																				},
																				"id": 2496,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "6041:6:13",
																				"memberName": "sender",
																				"nodeType": "MemberAccess",
																				"src": "6037:10:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "6029:19:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Player_$1893_storage",
																				"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Player storage ref"
																			}
																		},
																		"id": 2498,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "6049:9:13",
																		"memberName": "inventory",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 1889,
																		"src": "6029:29:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																			"typeString": "uint256[] storage ref"
																		}
																	},
																	"id": 2499,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6059:6:13",
																	"memberName": "length",
																	"nodeType": "MemberAccess",
																	"src": "6029:36:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "6025:40:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 2551,
															"initializationExpression": {
																"assignments": [
																	2490
																],
																"declarations": [
																	{
																		"constant": false,
																		"id": 2490,
																		"mutability": "mutable",
																		"name": "j",
																		"nameLocation": "6018:1:13",
																		"nodeType": "VariableDeclaration",
																		"scope": 2551,
																		"src": "6013:6:13",
																		"stateVariable": false,
																		"storageLocation": "default",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"typeName": {
																			"id": 2489,
																			"name": "uint",
																			"nodeType": "ElementaryTypeName",
																			"src": "6013:4:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"visibility": "internal"
																	}
																],
																"id": 2492,
																"initialValue": {
																	"hexValue": "30",
																	"id": 2491,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "6022:1:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"nodeType": "VariableDeclarationStatement",
																"src": "6013:10:13"
															},
															"isSimpleCounterLoop": true,
															"loopExpression": {
																"expression": {
																	"id": 2502,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "UnaryOperation",
																	"operator": "++",
																	"prefix": false,
																	"src": "6067:3:13",
																	"subExpression": {
																		"id": 2501,
																		"name": "j",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2490,
																		"src": "6067:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"id": 2503,
																"nodeType": "ExpressionStatement",
																"src": "6067:3:13"
															},
															"nodeType": "ForStatement",
															"src": "6008:386:13"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2485,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2481,
														"name": "i",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2478,
														"src": "5962:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"expression": {
															"expression": {
																"id": 2482,
																"name": "recipe",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2404,
																"src": "5966:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Recipe_$1929_memory_ptr",
																	"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Recipe memory"
																}
															},
															"id": 2483,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5973:7:13",
															"memberName": "itemIds",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1926,
															"src": "5966:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
																"typeString": "uint256[] memory"
															}
														},
														"id": 2484,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5981:6:13",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5966:21:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5962:25:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2553,
												"initializationExpression": {
													"assignments": [
														2478
													],
													"declarations": [
														{
															"constant": false,
															"id": 2478,
															"mutability": "mutable",
															"name": "i",
															"nameLocation": "5955:1:13",
															"nodeType": "VariableDeclaration",
															"scope": 2553,
															"src": "5950:6:13",
															"stateVariable": false,
															"storageLocation": "default",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"typeName": {
																"id": 2477,
																"name": "uint",
																"nodeType": "ElementaryTypeName",
																"src": "5950:4:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"visibility": "internal"
														}
													],
													"id": 2480,
													"initialValue": {
														"hexValue": "30",
														"id": 2479,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5959:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"nodeType": "VariableDeclarationStatement",
													"src": "5950:10:13"
												},
												"isSimpleCounterLoop": true,
												"loopExpression": {
													"expression": {
														"id": 2487,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "++",
														"prefix": false,
														"src": "5989:3:13",
														"subExpression": {
															"id": 2486,
															"name": "i",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2478,
															"src": "5989:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 2488,
													"nodeType": "ExpressionStatement",
													"src": "5989:3:13"
												},
												"nodeType": "ForStatement",
												"src": "5945:459:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2560,
																"name": "recipe",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2404,
																"src": "6507:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Recipe_$1929_memory_ptr",
																	"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Recipe memory"
																}
															},
															"id": 2561,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6514:12:13",
															"memberName": "resultItemId",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1928,
															"src": "6507:19:13",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"expression": {
																"baseExpression": {
																	"id": 2554,
																	"name": "players",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1945,
																	"src": "6472:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Player_$1893_storage_$",
																		"typeString": "mapping(address => struct CryptoQuestTheShardsOfGenesisMMPORPG.Player storage ref)"
																	}
																},
																"id": 2557,
																"indexExpression": {
																	"expression": {
																		"id": 2555,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "6480:3:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2556,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6484:6:13",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "6480:10:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "6472:19:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Player_$1893_storage",
																	"typeString": "struct CryptoQuestTheShardsOfGenesisMMPORPG.Player storage ref"
																}
															},
															"id": 2558,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6492:9:13",
															"memberName": "inventory",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1889,
															"src": "6472:29:13",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_uint256_$dyn_storage",
																"typeString": "uint256[] storage ref"
															}
														},
														"id": 2559,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6502:4:13",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "6472:34:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$",
															"typeString": "function (uint256[] storage pointer,uint256)"
														}
													},
													"id": 2562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6472:55:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2563,
												"nodeType": "ExpressionStatement",
												"src": "6472:55:13"
											}
										]
									},
									"functionSelector": "7309cbbd",
									"id": 2565,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "craftItem",
									"nameLocation": "5244:9:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2400,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2399,
												"mutability": "mutable",
												"name": "recipeId",
												"nameLocation": "5259:8:13",
												"nodeType": "VariableDeclaration",
												"scope": 2565,
												"src": "5254:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2398,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "5254:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5253:15:13"
									},
									"returnParameters": {
										"id": 2401,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5276:0:13"
									},
									"scope": 2566,
									"src": "5235:1299:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 2567,
							"src": "420:6116:13",
							"usedErrors": [
								379,
								382,
								643,
								648,
								883,
								886,
								1070,
								1073,
								1188,
								1201,
								1479,
								1482
							],
							"usedEvents": [
								387,
								875,
								880,
								1082,
								1091,
								1100,
								1167,
								1971,
								1975,
								1981,
								1987,
								1993
							]
						}
					],
					"src": "81:6456:13"
				},
				"id": 13
			}
		}
	}
}