{
	"id": "d37c96adaf32740fdfda84cd798ec5d9",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.25",
	"solcLongVersion": "0.8.25+commit.b61c2a91",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol": {
				"content": "// SPDX-License-Identifier: MIT\npragma solidity ^0.8.19;\n\nimport \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\n\ncontract CryptoQuestTheShardsOfGenesisWallet is Initializable, AccessControlUpgradeable, PausableUpgradeable, UUPSUpgradeable {\n    bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\");\n    bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\");\n    bytes32 public constant UPGRADER_ROLE = keccak256(\"UPGRADER_ROLE\");\n\n    // Struct for multi-signature transaction\n    struct Transaction {\n        address to;\n        uint256 value;\n        bytes data;\n        bool executed;\n        uint256 numConfirmations;\n    }\n\n    mapping(uint256 => mapping(address => bool)) public isConfirmed;\n    Transaction[] public transactions;\n    uint256 public requiredConfirmations;\n\n    // Struct for staking\n    struct Stake {\n        uint256 amount;\n        uint256 startTime;\n    }\n\n    mapping(address => Stake) public stakes;\n    uint256 public stakingRate; // e.g., rate of return for staking\n\n    event TransactionSubmitted(uint256 indexed txIndex);\n    event TransactionConfirmed(address indexed owner, uint256 indexed txIndex);\n    event TransactionExecuted(uint256 indexed txIndex);\n    event TransactionRevoked(address indexed owner, uint256 indexed txIndex);\n    event TokensStaked(address indexed user, uint256 amount, uint256 startTime);\n    event TokensUnstaked(address indexed user, uint256 amount, uint256 reward);\n\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor() {\n        _disableInitializers();\n    }\n\n    function initialize(address admin, uint256 _requiredConfirmations, uint256 _stakingRate) initializer public {\n        __AccessControl_init();\n        __Pausable_init();\n        __UUPSUpgradeable_init();\n\n        _grantRole(DEFAULT_ADMIN_ROLE, admin);\n        _grantRole(PAUSER_ROLE, admin);\n        _grantRole(ADMIN_ROLE, admin);\n        _grantRole(UPGRADER_ROLE, admin);\n\n        requiredConfirmations = _requiredConfirmations;\n        stakingRate = _stakingRate;\n    }\n\n    modifier onlyAdmin() {\n        require(hasRole(ADMIN_ROLE, msg.sender), \"Not an admin\");\n        _;\n    }\n\n    modifier txExists(uint256 _txIndex) {\n        require(_txIndex < transactions.length, \"Transaction does not exist\");\n        _;\n    }\n\n    modifier notExecuted(uint256 _txIndex) {\n        require(!transactions[_txIndex].executed, \"Transaction already executed\");\n        _;\n    }\n\n    modifier notConfirmed(uint256 _txIndex) {\n        require(!isConfirmed[_txIndex][msg.sender], \"Transaction already confirmed\");\n        _;\n    }\n\n    function submitTransaction(address _to, uint256 _value, bytes memory _data) public onlyAdmin {\n        uint256 txIndex = transactions.length;\n\n        transactions.push(Transaction({\n            to: _to,\n            value: _value,\n            data: _data,\n            executed: false,\n            numConfirmations: 0\n        }));\n\n        emit TransactionSubmitted(txIndex);\n    }\n\n    function confirmTransaction(uint256 _txIndex)\n        public\n        onlyAdmin\n        txExists(_txIndex)\n        notExecuted(_txIndex)\n        notConfirmed(_txIndex)\n    {\n        Transaction storage transaction = transactions[_txIndex];\n        transaction.numConfirmations += 1;\n        isConfirmed[_txIndex][msg.sender] = true;\n\n        emit TransactionConfirmed(msg.sender, _txIndex);\n    }\n\n    function executeTransaction(uint256 _txIndex) public onlyAdmin txExists(_txIndex) notExecuted(_txIndex) {\n        Transaction storage transaction = transactions[_txIndex];\n\n        require(transaction.numConfirmations >= requiredConfirmations, \"Cannot execute tx\");\n\n        transaction.executed = true;\n\n        (bool success, ) = transaction.to.call{value: transaction.value}(transaction.data);\n        require(success, \"Transaction failed\");\n\n        emit TransactionExecuted(_txIndex);\n    }\n\n    function revokeConfirmation(uint256 _txIndex) public onlyAdmin txExists(_txIndex) notExecuted(_txIndex) {\n        Transaction storage transaction = transactions[_txIndex];\n\n        require(isConfirmed[_txIndex][msg.sender], \"Transaction not confirmed\");\n\n        transaction.numConfirmations -= 1;\n        isConfirmed[_txIndex][msg.sender] = false;\n\n        emit TransactionRevoked(msg.sender, _txIndex);\n    }\n\n    // Staking functionality\n    function stakeTokens(uint256 _amount) public whenNotPaused {\n        IERC20Upgradeable token = IERC20Upgradeable(address(this));\n        require(token.transferFrom(msg.sender, address(this), _amount), \"Token transfer failed\");\n\n        stakes[msg.sender] = Stake({\n            amount: _amount,\n            startTime: block.timestamp\n        });\n\n        emit TokensStaked(msg.sender, _amount, block.timestamp);\n    }\n\n    function unstakeTokens() public whenNotPaused {\n        Stake memory stake = stakes[msg.sender];\n        require(stake.amount > 0, \"No tokens staked\");\n\n        uint256 stakingDuration = block.timestamp - stake.startTime;\n        uint256 reward = (stake.amount * stakingRate * stakingDuration) / (365 days);\n\n        IERC20Upgradeable token = IERC20Upgradeable(address(this));\n        require(token.transfer(msg.sender, stake.amount + reward), \"Token transfer failed\");\n\n        delete stakes[msg.sender];\n\n        emit TokensUnstaked(msg.sender, stake.amount, reward);\n    }\n\n    function pause() public onlyRole(PAUSER_ROLE) {\n        _pause();\n    }\n\n    function unpause() public onlyRole(PAUSER_ROLE) {\n        _unpause();\n    }\n\n    function _authorizeUpgrade(address newImplementation) internal override onlyRole(UPGRADER_ROLE) {}\n\n    receive() external payable {}\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1822Proxiable} from \"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\";\nimport {ERC1967Utils} from \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable __self = address(this);\n\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev The call is from an unauthorized context.\n     */\n    error UUPSUnauthorizedCallContext();\n\n    /**\n     * @dev The storage `slot` is unsupported as a UUID.\n     */\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        _checkProxy();\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        _checkNotDelegated();\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data);\n    }\n\n    /**\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\n     * context is not of a proxy with an ERC1967-compliant implementation pointing to self.\n     * See {_onlyProxy}.\n     */\n    function _checkProxy() internal view virtual {\n        if (\n            address(this) == __self || // Must be called through delegatecall\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\n        ) {\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Reverts if the execution is performed via delegatecall.\n     * See {notDelegated}.\n     */\n    function _checkNotDelegated() internal view virtual {\n        if (address(this) != __self) {\n            // Must not be called through delegatecall\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n     *\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n     * is expected to be the implementation slot in ERC1967.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\n                revert UUPSUnsupportedProxiableUUID(slot);\n            }\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\n        } catch {\n            // The implementation is not UUPS\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC1155/IERC1155.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165Upgradeable.sol\";\n\n/**\n * @dev Required interface of an ERC1155 compliant contract, as defined in the\n * https://eips.ethereum.org/EIPS/eip-1155[EIP].\n *\n * _Available since v3.1._\n */\ninterface IERC1155Upgradeable is IERC165Upgradeable {\n    /**\n     * @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\n     */\n    event TransferSingle(address indexed operator, address indexed from, address indexed to, uint256 id, uint256 value);\n\n    /**\n     * @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n     * transfers.\n     */\n    event TransferBatch(\n        address indexed operator,\n        address indexed from,\n        address indexed to,\n        uint256[] ids,\n        uint256[] values\n    );\n\n    /**\n     * @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n     * `approved`.\n     */\n    event ApprovalForAll(address indexed account, address indexed operator, bool approved);\n\n    /**\n     * @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n     *\n     * If an {URI} event was emitted for `id`, the standard\n     * https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n     * returned by {IERC1155MetadataURI-uri}.\n     */\n    event URI(string value, uint256 indexed id);\n\n    /**\n     * @dev Returns the amount of tokens of token type `id` owned by `account`.\n     *\n     * Requirements:\n     *\n     * - `account` cannot be the zero address.\n     */\n    function balanceOf(address account, uint256 id) external view returns (uint256);\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n     *\n     * Requirements:\n     *\n     * - `accounts` and `ids` must have the same length.\n     */\n    function balanceOfBatch(\n        address[] calldata accounts,\n        uint256[] calldata ids\n    ) external view returns (uint256[] memory);\n\n    /**\n     * @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n     *\n     * Emits an {ApprovalForAll} event.\n     *\n     * Requirements:\n     *\n     * - `operator` cannot be the caller.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n     *\n     * See {setApprovalForAll}.\n     */\n    function isApprovedForAll(address account, address operator) external view returns (bool);\n\n    /**\n     * @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n     *\n     * Emits a {TransferSingle} event.\n     *\n     * Requirements:\n     *\n     * - `to` cannot be the zero address.\n     * - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n     * - `from` must have a balance of tokens of type `id` of at least `amount`.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n     * acceptance magic value.\n     */\n    function safeTransferFrom(address from, address to, uint256 id, uint256 amount, bytes calldata data) external;\n\n    /**\n     * @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n     *\n     * Emits a {TransferBatch} event.\n     *\n     * Requirements:\n     *\n     * - `ids` and `amounts` must have the same length.\n     * - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n     * acceptance magic value.\n     */\n    function safeBatchTransferFrom(\n        address from,\n        address to,\n        uint256[] calldata ids,\n        uint256[] calldata amounts,\n        bytes calldata data\n    ) external;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165Upgradeable.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721Upgradeable is IERC165Upgradeable {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20Upgradeable {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.7.0) (security/Pausable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    function __Pausable_init() internal onlyInitializing {\n        __Pausable_init_unchained();\n    }\n\n    function __Pausable_init_unchained() internal onlyInitializing {\n        _paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        require(!paused(), \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        require(paused(), \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(_msgSender());\n    }\n\n    /**\n     * @dev This empty reserved space is put in place to allow future versions to add new\n     * variables without shifting down storage in the inheritance chain.\n     * See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\n     */\n    uint256[49] private __gap;\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"@openzeppelin/contracts/access/IAccessControl.sol\";\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {ERC165Upgradeable} from \"../utils/introspection/ERC165Upgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControlUpgradeable is Initializable, ContextUpgradeable, IAccessControl, ERC165Upgradeable {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.AccessControl\n    struct AccessControlStorage {\n        mapping(bytes32 role => RoleData) _roles;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.AccessControl\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant AccessControlStorageLocation = 0x02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800;\n\n    function _getAccessControlStorage() private pure returns (AccessControlStorage storage $) {\n        assembly {\n            $.slot := AccessControlStorageLocation\n        }\n    }\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    function __AccessControl_init() internal onlyInitializing {\n    }\n\n    function __AccessControl_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        return $._roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        return $._roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        $._roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        if (!hasRole(role, account)) {\n            $._roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        if (hasRole(role, account)) {\n            $._roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165Upgradeable {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n */\nlibrary ERC1967Utils {\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165Upgradeable is Initializable, IERC165 {\n    function __ERC165_init() internal onlyInitializing {\n    }\n\n    function __ERC165_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol": {
				"AccessControlUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":\"AccessControlUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x6662ec4e5cefca03eeadd073e9469df8d2944bb2ee8ec8f7622c2c46aab5f225\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d8544c6f8daa4d1bc215c6a72fe0acdb748664a105b0e5efc19295667521d45\",\"dweb:/ipfs/QmdGWqdnXT8S3RgCR6aV8XHZrsybieMQLLnug1NtpSjEXN\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xdaba3f7c42c55b2896353f32bd27d4d5f8bae741b3b05d4c53f67abc4dc47ce8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fa2e61141c602510bcd2cd936ed9561922ac8772a9b9c9a9db091a74e354a45\",\"dweb:/ipfs/QmcHQDDoEBwJmwUbzoVkytvJsBx3KVHYFFnDkvRGWh9Wmh\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"UUPSUpgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"stateVariables": {
							"UPGRADE_INTERFACE_VERSION": {
								"details": "The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade."
							},
							"__self": {
								"custom:oz-upgrades-unsafe-allow": "state-variable-immutable"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"proxiableUUID()": "52d1902d",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930\",\"dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol": {
				"PausableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"stateVariables": {
							"__gap": {
								"details": "This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"stateVariables\":{\"__gap\":{\"details\":\"This empty reserved space is put in place to allow future versions to add new variables without shifting down storage in the inheritance chain. See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":\"PausableUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0xad32f6821f860555f9530902a65b54203a4f5db2117f4384ae47a124958078db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d362da7417bc7d7cc8623f3d3f8f04c3808d043ee6379568c63a63ec14a124e\",\"dweb:/ipfs/QmYm3wDHUcfGh3MNiRqpWEBbSSYnDSyUsppDATy5DVsfui\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 820,
								"contract": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 925,
								"contract": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol:PausableUpgradeable",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)49_storage"
							}
						],
						"types": {
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol": {
				"IERC1155Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"indexed": false,
									"internalType": "uint256[]",
									"name": "values",
									"type": "uint256[]"
								}
							],
							"name": "TransferBatch",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "TransferSingle",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "string",
									"name": "value",
									"type": "string"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "URI",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address[]",
									"name": "accounts",
									"type": "address[]"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								}
							],
							"name": "balanceOfBatch",
							"outputs": [
								{
									"internalType": "uint256[]",
									"name": "",
									"type": "uint256[]"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256[]",
									"name": "ids",
									"type": "uint256[]"
								},
								{
									"internalType": "uint256[]",
									"name": "amounts",
									"type": "uint256[]"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeBatchTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "id",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._",
						"events": {
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`."
							},
							"TransferBatch(address,address,address,uint256[],uint256[])": {
								"details": "Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers."
							},
							"TransferSingle(address,address,address,uint256,uint256)": {
								"details": "Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
							},
							"URI(string,uint256)": {
								"details": "Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}."
							}
						},
						"kind": "dev",
						"methods": {
							"balanceOf(address,uint256)": {
								"details": "Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address."
							},
							"balanceOfBatch(address[],uint256[])": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}."
							},
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": {
								"details": "xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value."
							},
							"safeTransferFrom(address,address,uint256,uint256,bytes)": {
								"details": "Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"balanceOf(address,uint256)": "00fdd58e",
							"balanceOfBatch(address[],uint256[])": "4e1273f4",
							"isApprovedForAll(address,address)": "e985e9c5",
							"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)": "2eb2c2d6",
							"safeTransferFrom(address,address,uint256,uint256,bytes)": "f242432a",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"values\",\"type\":\"uint256[]\"}],\"name\":\"TransferBatch\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"TransferSingle\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"value\",\"type\":\"string\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"URI\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"accounts\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"}],\"name\":\"balanceOfBatch\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256[]\",\"name\":\"ids\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"amounts\",\"type\":\"uint256[]\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeBatchTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC1155 compliant contract, as defined in the https://eips.ethereum.org/EIPS/eip-1155[EIP]. _Available since v3.1._\",\"events\":{\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to `approved`.\"},\"TransferBatch(address,address,address,uint256[],uint256[])\":{\"details\":\"Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all transfers.\"},\"TransferSingle(address,address,address,uint256,uint256)\":{\"details\":\"Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`.\"},\"URI(string,uint256)\":{\"details\":\"Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI. If an {URI} event was emitted for `id`, the standard https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value returned by {IERC1155MetadataURI-uri}.\"}},\"kind\":\"dev\",\"methods\":{\"balanceOf(address,uint256)\":{\"details\":\"Returns the amount of tokens of token type `id` owned by `account`. Requirements: - `account` cannot be the zero address.\"},\"balanceOfBatch(address[],uint256[])\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}. Requirements: - `accounts` and `ids` must have the same length.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns true if `operator` is approved to transfer ``account``'s tokens. See {setApprovalForAll}.\"},\"safeBatchTransferFrom(address,address,uint256[],uint256[],bytes)\":{\"details\":\"xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}. Emits a {TransferBatch} event. Requirements: - `ids` and `amounts` must have the same length. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the acceptance magic value.\"},\"safeTransferFrom(address,address,uint256,uint256,bytes)\":{\"details\":\"Transfers `amount` tokens of token type `id` from `from` to `to`. Emits a {TransferSingle} event. Requirements: - `to` cannot be the zero address. - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}. - `from` must have a balance of tokens of type `id` of at least `amount`. - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the acceptance magic value.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`, Emits an {ApprovalForAll} event. Requirements: - `operator` cannot be the caller.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol\":\"IERC1155Upgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol\":{\"keccak256\":\"0xf51f292659a77777c0ed7375a39683d8bee53b86a6e7bd0c76f34ce7aa37a3a8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://32c68498e1b6013477d299e4881dcea818d7e4c3e3aba7a18bde3989b12dff83\",\"dweb:/ipfs/QmZzw1eHLQmDLfKbxVivEWUdae2BfTmjSg1aLowuLwScuZ\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"IERC20Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":\"IERC20Upgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol": {
				"IERC721Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\":\"IERC721Upgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\":{\"keccak256\":\"0xbe63437e37e32162d5d11ea8f11a44378c092b4bcbb05b51a813fe4bf33297d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68a514febde6ffd8afe3cb5b40815d10c0a926063237d5d167cbaa90239f75ae\",\"dweb:/ipfs/QmVBvYeR6oGBw7K7vu5FMotr8josejtaGwugM68VTZacww\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
				"ERC165Upgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":\"ERC165Upgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xdaba3f7c42c55b2896353f32bd27d4d5f8bae741b3b05d4c53f67abc4dc47ce8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fa2e61141c602510bcd2cd936ed9561922ac8772a9b9c9a9db091a74e354a45\",\"dweb:/ipfs/QmcHQDDoEBwJmwUbzoVkytvJsBx3KVHYFFnDkvRGWh9Wmh\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol": {
				"IERC165Upgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":\"IERC165Upgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"IERC1822Proxiable": {
					"abi": [
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.",
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"proxiableUUID()": "52d1902d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ERC1967Utils": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidAdmin",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidBeacon",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.",
						"errors": {
							"ERC1967InvalidAdmin(address)": [
								{
									"details": "The `admin` of the proxy is invalid."
								}
							],
							"ERC1967InvalidBeacon(address)": [
								{
									"details": "The `beacon` of the proxy is invalid."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							]
						},
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"ADMIN_SLOT": {
								"details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
							},
							"BEACON_SLOT": {
								"details": "The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
							},
							"IMPLEMENTATION_SLOT": {
								"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":449:6722  library ERC1967Utils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":449:6722  library ERC1967Utils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c42ac95af82140ea89348cb50ce0e35e1d71ea0959dafb2d3dbb3d804fe81b4b64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c42ac95af82140ea89348cb50ce0e35e1d71ea0959dafb2d3dbb3d804fe81b4b64736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 0x2A 0xC9 GAS 0xF8 0x21 BLOCKHASH 0xEA DUP10 CALLVALUE DUP13 0xB5 0xC 0xE0 0xE3 MCOPY SAR PUSH18 0xEA0959DAFB2D3DBB3D804FE81B4B64736F6C PUSH4 0x43000819 STOP CALLER ",
							"sourceMap": "449:6273:12:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;449:6273:12;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c42ac95af82140ea89348cb50ce0e35e1d71ea0959dafb2d3dbb3d804fe81b4b64736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC4 0x2A 0xC9 GAS 0xF8 0x21 BLOCKHASH 0xEA DUP10 CALLVALUE DUP13 0xB5 0xC 0xE0 0xE3 MCOPY SAR PUSH18 0xEA0959DAFB2D3DBB3D804FE81B4B64736F6C PUSH4 0x43000819 STOP CALLER ",
							"sourceMap": "449:6273:12:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_checkNonPayable()": "infinite",
								"_setAdmin(address)": "infinite",
								"_setBeacon(address)": "infinite",
								"_setImplementation(address)": "infinite",
								"changeAdmin(address)": "infinite",
								"getAdmin()": "infinite",
								"getBeacon()": "infinite",
								"getImplementation()": "infinite",
								"upgradeBeaconToAndCall(address,bytes memory)": "infinite",
								"upgradeToAndCall(address,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH #[$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH [$]",
									"source": 12,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 12,
									"value": "B"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "CODECOPY",
									"source": 12
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP1",
									"source": 12
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MLOAD",
									"source": 12
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "BYTE",
									"source": 12
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "EQ",
									"source": 12
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH [tag]",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "JUMPI",
									"source": 12
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 12,
									"value": "4"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 12,
									"value": "24"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "REVERT",
									"source": 12
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "tag",
									"source": 12,
									"value": "1"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "JUMPDEST",
									"source": 12
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "ADDRESS",
									"source": 12
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 12,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MSTORE",
									"source": 12
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 12,
									"value": "73"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MSTORE8",
									"source": 12
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP3",
									"source": 12
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP2",
									"source": 12
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "RETURN",
									"source": 12
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c42ac95af82140ea89348cb50ce0e35e1d71ea0959dafb2d3dbb3d804fe81b4b64736f6c63430008190033",
									".code": [
										{
											"begin": 449,
											"end": 6722,
											"name": "PUSHDEPLOYADDRESS",
											"source": 12
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "ADDRESS",
											"source": 12
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "EQ",
											"source": 12
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "PUSH",
											"source": 12,
											"value": "80"
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "REVERT",
											"source": 12
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"IBeacon": {
					"abi": [
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is the interface that {BeaconProxy} expects of its beacon.",
						"kind": "dev",
						"methods": {
							"implementation()": {
								"details": "Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"implementation()": "5c60da1b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c850201aa3fb2a5ef650558516dbe42dcd41181bc95adab2bd080a7385ed789264736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c850201aa3fb2a5ef650558516dbe42dcd41181bc95adab2bd080a7385ed789264736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 POP KECCAK256 BYTE LOG3 0xFB 0x2A MCOPY 0xF6 POP SSTORE DUP6 AND 0xDB 0xE4 0x2D 0xCD COINBASE XOR SHL 0xC9 GAS 0xDA 0xB2 0xBD ADDMOD EXP PUSH20 0x85ED789264736F6C634300081900330000000000 ",
							"sourceMap": "195:6066:14:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;195:6066:14;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c850201aa3fb2a5ef650558516dbe42dcd41181bc95adab2bd080a7385ed789264736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC8 POP KECCAK256 BYTE LOG3 0xFB 0x2A MCOPY 0xF6 POP SSTORE DUP6 AND 0xDB 0xE4 0x2D 0xCD COINBASE XOR SHL 0xC9 GAS 0xDA 0xB2 0xBD ADDMOD EXP PUSH20 0x85ED789264736F6C634300081900330000000000 ",
							"sourceMap": "195:6066:14:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 14,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 14
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 14
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c850201aa3fb2a5ef650558516dbe42dcd41181bc95adab2bd080a7385ed789264736f6c63430008190033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 14
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220df88fb0344753f545a845de418d08c2ad14d7427f23fe4d8255f5508210e4d9f64736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220df88fb0344753f545a845de418d08c2ad14d7427f23fe4d8255f5508210e4d9f64736f6c63430008190033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF DUP9 0xFB SUB PREVRANDAO PUSH22 0x3F545A845DE418D08C2AD14D7427F23FE4D8255F5508 0x21 0xE 0x4D SWAP16 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "1245:2685:15:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1245:2685:15;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220df88fb0344753f545a845de418d08c2ad14d7427f23fe4d8255f5508210e4d9f64736f6c63430008190033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xDF DUP9 0xFB SUB PREVRANDAO PUSH22 0x3F545A845DE418D08C2AD14D7427F23FE4D8255F5508 0x21 0xE 0x4D SWAP16 PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "1245:2685:15:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH #[$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [$]",
									"source": 15,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 15,
									"value": "B"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "CODECOPY",
									"source": 15
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP1",
									"source": 15
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MLOAD",
									"source": 15
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "BYTE",
									"source": 15
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "EQ",
									"source": 15
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [tag]",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPI",
									"source": 15
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 15,
									"value": "4"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 15,
									"value": "24"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "REVERT",
									"source": 15
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "tag",
									"source": 15,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPDEST",
									"source": 15
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "ADDRESS",
									"source": 15
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 15,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 15
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 15,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE8",
									"source": 15
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 15
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 15
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "RETURN",
									"source": 15
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220df88fb0344753f545a845de418d08c2ad14d7427f23fe4d8255f5508210e4d9f64736f6c63430008190033",
									".code": [
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSHDEPLOYADDRESS",
											"source": 15
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "ADDRESS",
											"source": 15
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "EQ",
											"source": 15
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 15,
											"value": "80"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 15,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "MSTORE",
											"source": 15
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 15,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "DUP1",
											"source": 15
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "REVERT",
											"source": 15
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol": {
				"CryptoQuestTheShardsOfGenesisWallet": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "startTime",
									"type": "uint256"
								}
							],
							"name": "TokensStaked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "user",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "reward",
									"type": "uint256"
								}
							],
							"name": "TokensUnstaked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "txIndex",
									"type": "uint256"
								}
							],
							"name": "TransactionConfirmed",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "txIndex",
									"type": "uint256"
								}
							],
							"name": "TransactionExecuted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "txIndex",
									"type": "uint256"
								}
							],
							"name": "TransactionRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "txIndex",
									"type": "uint256"
								}
							],
							"name": "TransactionSubmitted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PAUSER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "UPGRADER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_txIndex",
									"type": "uint256"
								}
							],
							"name": "confirmTransaction",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_txIndex",
									"type": "uint256"
								}
							],
							"name": "executeTransaction",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_requiredConfirmations",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "_stakingRate",
									"type": "uint256"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								},
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "isConfirmed",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "requiredConfirmations",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_txIndex",
									"type": "uint256"
								}
							],
							"name": "revokeConfirmation",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "_amount",
									"type": "uint256"
								}
							],
							"name": "stakeTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "stakes",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "startTime",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "stakingRate",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "_to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "_value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "_data",
									"type": "bytes"
								}
							],
							"name": "submitTransaction",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"name": "transactions",
							"outputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								},
								{
									"internalType": "bool",
									"name": "executed",
									"type": "bool"
								},
								{
									"internalType": "uint256",
									"name": "numConfirmations",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unstakeTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"stateMutability": "payable",
							"type": "receive"
						}
					],
					"devdoc": {
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							],
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"custom:oz-upgrades-unsafe-allow": "constructor"
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"proxiableUUID()": {
								"details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":620:6121  contract CryptoQuestTheShardsOfGenesisWallet is Initializable, AccessControlUpgradeable, PausableUpgradeable, UUPSUpgradeable {... */\n  mstore(0x40, 0xa0)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1171:1175  this */\n  address\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1128:1176  address private immutable __self = address(this) */\n  0x80\n  mstore\n    /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2011:2064  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2035:2057  _disableInitializers() */\n  tag_4\n    /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2035:2055  _disableInitializers */\n  tag_5\n    /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2035:2057  _disableInitializers() */\n  jump\t// in\ntag_4:\n    /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":620:6121  contract CryptoQuestTheShardsOfGenesisWallet is Initializable, AccessControlUpgradeable, PausableUpgradeable, UUPSUpgradeable {... */\n  jump(tag_15)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7711:8133  function _disableInitializers() internal virtual {... */\ntag_5:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n  0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7900:7915  $._initializing */\n  dup1\n  sload\n  0x010000000000000000\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7896:7972  if ($._initializing) {... */\n  iszero\n  tag_10\n  jumpi\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7938:7961  InvalidInitialization() */\n  mload(0x40)\n  shl(0xe0, 0xf92ee8a9)\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7896:7972  if ($._initializing) {... */\ntag_10:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7985:7999  $._initialized */\n  dup1\n  sload\n  sub(shl(0x40, 0x01), 0x01)\n  swap1\n  dup2\n  and\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7985:8019  $._initialized != type(uint64).max */\n  eq\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7981:8127  if ($._initialized != type(uint64).max) {... */\n  tag_11\n  jumpi\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8035:8068  $._initialized = type(uint64).max */\n  dup1\n  sload\n  not(sub(shl(0x40, 0x01), 0x01))\n  and\n  sub(shl(0x40, 0x01), 0x01)\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8087:8116  Initialized(type(uint64).max) */\n  mload(0x40)\n    /* \"#utility.yul\":158:208   */\n  swap1\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8087:8116  Initialized(type(uint64).max) */\n  0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n  swap1\n    /* \"#utility.yul\":146:148   */\n  0x20\n    /* \"#utility.yul\":131:149   */\n  add\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8087:8116  Initialized(type(uint64).max) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7981:8127  if ($._initialized != type(uint64).max) {... */\ntag_11:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7760:8133  {... */\n  pop\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7711:8133  function _disableInitializers() internal virtual {... */\n  jump\t// out\n    /* \"#utility.yul\":14:214   */\ntag_15:\n    /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":620:6121  contract CryptoQuestTheShardsOfGenesisWallet is Initializable, AccessControlUpgradeable, PausableUpgradeable, UUPSUpgradeable {... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x3b04ad91523c4dcf551e081621e633b9099d51bf9c5461e58c3bc7354a578b27\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":620:6121  contract CryptoQuestTheShardsOfGenesisWallet is Initializable, AccessControlUpgradeable, PausableUpgradeable, UUPSUpgradeable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x82e717f7\n      gt\n      tag_31\n      jumpi\n      dup1\n      0xc01a8c84\n      gt\n      tag_32\n      jumpi\n      dup1\n      0xd547741f\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xe63ab1e9\n      eq\n      tag_28\n      jumpi\n      dup1\n      0xee22610b\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xf72c0d8b\n      eq\n      tag_30\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      dup1\n      0xc01a8c84\n      eq\n      tag_24\n      jumpi\n      dup1\n      0xc63a6ad2\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xc6427474\n      eq\n      tag_26\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_32:\n      dup1\n      0x9ace38c2\n      gt\n      tag_34\n      jumpi\n      dup1\n      0x9ace38c2\n      eq\n      tag_20\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xa5ce413b\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xad3cb1cc\n      eq\n      tag_23\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      dup1\n      0x82e717f7\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_19\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_31:\n      dup1\n      0x4f1ef286\n      gt\n      tag_35\n      jumpi\n      dup1\n      0x7547c7a3\n      gt\n      tag_36\n      jumpi\n      dup1\n      0x7547c7a3\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x75b238fc\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x7a1ac61e\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x80f59a65\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      dup1\n      0x4f1ef286\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x52d1902d\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup1\n      0x248a9ca3\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x2f2ff15d\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_8\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_9\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x16934fc4\n      eq\n      tag_4\n      jumpi\n      dup1\n      0x20ea8d86\n      eq\n      tag_5\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      jumpi(tag_2, calldatasize)\n      stop\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3443:3645  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      tag_41\n      tag_42\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      mload(0x40)\n        /* \"#utility.yul\":470:484   */\n      swap1\n      iszero\n        /* \"#utility.yul\":463:485   */\n      iszero\n        /* \"#utility.yul\":445:486   */\n      dup2\n      mstore\n        /* \"#utility.yul\":433:435   */\n      0x20\n        /* \"#utility.yul\":418:436   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3443:3645  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":1411:1450  mapping(address => Stake) public stakes */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      tag_48\n      tag_49\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_49:\n      mstore(0x20, 0x35)\n      0x00\n      swap1\n      dup2\n      mstore\n      0x40\n      swap1\n      keccak256\n      dup1\n      sload\n      0x01\n      swap1\n      swap2\n      add\n      sload\n      dup3\n      jump\n    tag_48:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":1040:1065   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":1096:1098   */\n      0x20\n        /* \"#utility.yul\":1081:1099   */\n      dup4\n      add\n        /* \"#utility.yul\":1074:1108   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":1013:1031   */\n      add\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":1411:1450  mapping(address => Stake) public stakes */\n      tag_45\n        /* \"#utility.yul\":866:1114   */\n      jump\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4380:4790  function revokeConfirmation(uint256 _txIndex) public onlyAdmin txExists(_txIndex) notExecuted(_txIndex) {... */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_54\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_54:\n      pop\n      tag_55\n      tag_56\n      calldatasize\n      0x04\n      tag_57\n      jump\t// in\n    tag_56:\n      tag_58\n      jump\t// in\n    tag_55:\n      stop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4759:4950  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_59\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_59:\n      pop\n      tag_60\n      tag_61\n      calldatasize\n      0x04\n      tag_57\n      jump\t// in\n    tag_61:\n      tag_63\n      jump\t// in\n    tag_60:\n      mload(0x40)\n        /* \"#utility.yul\":1635:1660   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1623:1625   */\n      0x20\n        /* \"#utility.yul\":1608:1626   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4759:4950  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      tag_45\n        /* \"#utility.yul\":1489:1666   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5246:5382  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_66\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_66:\n      pop\n      tag_55\n      tag_68\n      calldatasize\n      0x04\n      tag_69\n      jump\t// in\n    tag_68:\n      tag_70\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6348:6593  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_71\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_71:\n      pop\n      tag_55\n      tag_73\n      calldatasize\n      0x04\n      tag_69\n      jump\t// in\n    tag_73:\n      tag_74\n      jump\t// in\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5905:5980  function unpause() public onlyRole(PAUSER_ROLE) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      pop\n      tag_55\n      tag_77\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4158:4372  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_10:\n      tag_55\n      tag_79\n      calldatasize\n      0x04\n      tag_80\n      jump\t// in\n    tag_79:\n      tag_81\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3705:3839  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_82\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_82:\n      pop\n      tag_60\n      tag_84\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1879:1963  function paused() public view virtual returns (bool) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_86\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_86:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1926:1930  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1949:1956  _paused */\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1879:1963  function paused() public view virtual returns (bool) {... */\n      jump(tag_41)\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4825:5241  function stakeTokens(uint256 _amount) public whenNotPaused {... */\n    tag_13:\n      callvalue\n      dup1\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      pop\n      tag_55\n      tag_92\n      calldatasize\n      0x04\n      tag_57\n      jump\t// in\n    tag_92:\n      tag_93\n      jump\t// in\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":820:880  bytes32 public constant ADMIN_ROLE = keccak256(\"ADMIN_ROLE\") */\n    tag_14:\n      callvalue\n      dup1\n      iszero\n      tag_94\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_94:\n      pop\n      tag_60\n      0x00\n      dup1\n      mload\n      0x20\n      data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      dup2\n      jump\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2070:2540  function initialize(address admin, uint256 _requiredConfirmations, uint256 _stakingRate) initializer public {... */\n    tag_15:\n      callvalue\n      dup1\n      iszero\n      tag_98\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_98:\n      pop\n      tag_55\n      tag_100\n      calldatasize\n      0x04\n      tag_101\n      jump\t// in\n    tag_100:\n      tag_102\n      jump\t// in\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":1157:1220  mapping(uint256 => mapping(address => bool)) public isConfirmed */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_103\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_103:\n      pop\n      tag_41\n      tag_105\n      calldatasize\n      0x04\n      tag_69\n      jump\t// in\n    tag_105:\n      0x32\n      0x20\n      swap1\n      dup2\n      mstore\n      0x00\n      swap3\n      dup4\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      swap1\n      swap2\n      mstore\n      swap1\n      dup3\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      dup2\n      jump\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":1265:1301  uint256 public requiredConfirmations */\n    tag_17:\n      callvalue\n      dup1\n      iszero\n      tag_109\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_109:\n      pop\n      tag_60\n      sload(0x34)\n      dup2\n      jump\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5828:5899  function pause() public onlyRole(PAUSER_ROLE) {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_114\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_114:\n      pop\n      tag_55\n      tag_116\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3732:3939  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_117\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_117:\n      pop\n      tag_41\n      tag_119\n      calldatasize\n      0x04\n      tag_69\n      jump\t// in\n    tag_119:\n      tag_120\n      jump\t// in\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":1226:1259  Transaction[] public transactions */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_122\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_122:\n      pop\n      tag_123\n      tag_124\n      calldatasize\n      0x04\n      tag_57\n      jump\t// in\n    tag_124:\n      tag_125\n      jump\t// in\n    tag_123:\n      mload(0x40)\n      tag_45\n      swap6\n      swap5\n      swap4\n      swap3\n      swap2\n      swap1\n      tag_127\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2317:2366  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_128\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_128:\n      pop\n      tag_60\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2362:2366  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2317:2366  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup2\n      jump\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5247:5822  function unstakeTokens() public whenNotPaused {... */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_132\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_132:\n      pop\n      tag_55\n      tag_134\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1819:1877  string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\" */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_135\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_135:\n      pop\n      tag_136\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xdc, 0x0352e302e3)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\n    tag_136:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_139\n      jump\t// in\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":3478:3873  function confirmTransaction(uint256 _txIndex)... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_140\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_140:\n      pop\n      tag_55\n      tag_142\n      calldatasize\n      0x04\n      tag_57\n      jump\t// in\n    tag_142:\n      tag_143\n      jump\t// in\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":1456:1482  uint256 public stakingRate */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_144\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_144:\n      pop\n      tag_60\n      sload(0x36)\n      dup2\n      jump\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":3092:3472  function submitTransaction(address _to, uint256 _value, bytes memory _data) public onlyAdmin {... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_148\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_148:\n      pop\n      tag_55\n      tag_150\n      calldatasize\n      0x04\n      tag_151\n      jump\t// in\n    tag_150:\n      tag_152\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5662:5800  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_153\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_153:\n      pop\n      tag_55\n      tag_155\n      calldatasize\n      0x04\n      tag_69\n      jump\t// in\n    tag_155:\n      tag_156\n      jump\t// in\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":752:814  bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\") */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_157\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_157:\n      pop\n      tag_60\n      0x00\n      dup1\n      mload\n      0x20\n      data_9b87106a812d214d41ad9b68a21119e2948eaaf1040375c939ec808b8862455c\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      dup2\n      jump\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":3879:4374  function executeTransaction(uint256 _txIndex) public onlyAdmin txExists(_txIndex) notExecuted(_txIndex) {... */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_161\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_161:\n      pop\n      tag_55\n      tag_163\n      calldatasize\n      0x04\n      tag_57\n      jump\t// in\n    tag_163:\n      tag_164\n      jump\t// in\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":886:952  bytes32 public constant UPGRADER_ROLE = keccak256(\"UPGRADER_ROLE\") */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_165\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_165:\n      pop\n      tag_60\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":926:952  keccak256(\"UPGRADER_ROLE\") */\n      0x189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":886:952  bytes32 public constant UPGRADER_ROLE = keccak256(\"UPGRADER_ROLE\") */\n      dup2\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3443:3645  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_44:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3528:3532  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3551:3598  interfaceId == type(IAccessControl).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x7965db0b)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3551:3638  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      tag_171\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":1133:1173  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3602:3638  super.supportsInterface(interfaceId) */\n    tag_171:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3544:3638  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3443:3645  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4380:4790  function revokeConfirmation(uint256 _txIndex) public onlyAdmin txExists(_txIndex) notExecuted(_txIndex) {... */\n    tag_58:\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2585:2616  hasRole(ADMIN_ROLE, msg.sender) */\n      tag_174\n      0x00\n      dup1\n      mload\n      0x20\n      data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2605:2615  msg.sender */\n      caller\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2585:2592  hasRole */\n      tag_120\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2585:2616  hasRole(ADMIN_ROLE, msg.sender) */\n      jump\t// in\n    tag_174:\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2577:2633  require(hasRole(ADMIN_ROLE, msg.sender), \"Not an admin\") */\n      tag_175\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_176\n      swap1\n      tag_177\n      jump\t// in\n    tag_176:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_175:\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2722:2734  transactions */\n      0x33\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2722:2741  transactions.length */\n      sload\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4452:4460  _txIndex */\n      dup2\n      swap1\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2711:2741  _txIndex < transactions.length */\n      dup2\n      lt\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2703:2772  require(_txIndex < transactions.length, \"Transaction does not exist\") */\n      tag_179\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_176\n      swap1\n      tag_181\n      jump\t// in\n    tag_179:\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4474:4482  _txIndex */\n      dup2\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2854:2866  transactions */\n      0x33\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2867:2875  _txIndex */\n      dup2\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2854:2876  transactions[_txIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_184\n      jumpi\n      tag_184\n      tag_185\n      jump\t// in\n    tag_184:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2854:2885  transactions[_txIndex].executed */\n      0x03\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2854:2876  transactions[_txIndex] */\n      0x05\n      swap1\n      swap3\n      mul\n      add\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2854:2885  transactions[_txIndex].executed */\n      add\n      sload\n      0xff\n      and\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2853:2885  !transactions[_txIndex].executed */\n      iszero\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2845:2918  require(!transactions[_txIndex].executed, \"Transaction already executed\") */\n      tag_187\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_176\n      swap1\n      tag_189\n      jump\t// in\n    tag_187:\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4494:4525  Transaction storage transaction */\n      0x00\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4528:4540  transactions */\n      0x33\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4541:4549  _txIndex */\n      dup5\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4528:4550  transactions[_txIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_192\n      jumpi\n      tag_192\n      tag_185\n      jump\t// in\n    tag_192:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      dup1\n      dup4\n      keccak256\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4569:4590  isConfirmed[_txIndex] */\n      dup8\n      dup5\n      mstore\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4569:4580  isConfirmed */\n      0x32\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4569:4590  isConfirmed[_txIndex] */\n      dup3\n      mstore\n      0x40\n      dup1\n      dup6\n      keccak256\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4591:4601  msg.sender */\n      caller\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4569:4602  isConfirmed[_txIndex][msg.sender] */\n      dup7\n      mstore\n      swap1\n      swap3\n      mstore\n      swap3\n      keccak256\n      sload\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4528:4550  transactions[_txIndex] */\n      0x05\n      swap1\n      swap2\n      mul\n      swap1\n      swap2\n      add\n      swap2\n      pop\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4569:4602  isConfirmed[_txIndex][msg.sender] */\n      0xff\n      and\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4561:4632  require(isConfirmed[_txIndex][msg.sender], \"Transaction not confirmed\") */\n      tag_194\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":6868:6870   */\n      0x20\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4561:4632  require(isConfirmed[_txIndex][msg.sender], \"Transaction not confirmed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":6850:6871   */\n      mstore\n        /* \"#utility.yul\":6907:6909   */\n      0x19\n        /* \"#utility.yul\":6887:6905   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":6880:6910   */\n      mstore\n        /* \"#utility.yul\":6946:6973   */\n      0x5472616e73616374696f6e206e6f7420636f6e6669726d656400000000000000\n        /* \"#utility.yul\":6926:6944   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":6919:6974   */\n      mstore\n        /* \"#utility.yul\":6991:7009   */\n      0x64\n      add\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4561:4632  require(isConfirmed[_txIndex][msg.sender], \"Transaction not confirmed\") */\n      tag_176\n        /* \"#utility.yul\":6666:7015   */\n      jump\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4561:4632  require(isConfirmed[_txIndex][msg.sender], \"Transaction not confirmed\") */\n    tag_194:\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4675:4676  1 */\n      0x01\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4643:4654  transaction */\n      dup2\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4643:4671  transaction.numConfirmations */\n      0x04\n      add\n      0x00\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4643:4676  transaction.numConfirmations -= 1 */\n      dup3\n      dup3\n      sload\n      tag_197\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_197:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4722:4727  false */\n      0x00\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4686:4707  isConfirmed[_txIndex] */\n      dup5\n      dup2\n      mstore\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4686:4697  isConfirmed */\n      0x32\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4686:4707  isConfirmed[_txIndex] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4708:4718  msg.sender */\n      caller\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4686:4719  isConfirmed[_txIndex][msg.sender] */\n      dup1\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4686:4727  isConfirmed[_txIndex][msg.sender] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4743:4783  TransactionRevoked(msg.sender, _txIndex) */\n      mload\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4698:4706  _txIndex */\n      dup7\n      swap3\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4743:4783  TransactionRevoked(msg.sender, _txIndex) */\n      0xe5c8875c5e14471f806f15f740cd9fd54937d151e9dcf8ad3ba988d6a285e67e\n      swap2\n      log3\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4484:4790  {... */\n      pop\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2782:2783  _ */\n      pop\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2643:2644  _ */\n      pop\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4380:4790  function revokeConfirmation(uint256 _txIndex) public onlyAdmin txExists(_txIndex) notExecuted(_txIndex) {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4759:4950  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_63:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4824:4831  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4919:4933  $._roles[role] */\n      swap1\n      dup2\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_b3da67d1b252aeab7c8063542d95e75f82a5307a82535949bc38f7cf7ba8897f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4919:4943  $._roles[role].adminRole */\n      0x01\n      add\n      sload\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4759:4950  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5246:5382  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_70:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5320:5338  getRoleAdmin(role) */\n      tag_202\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5333:5337  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5320:5332  getRoleAdmin */\n      tag_63\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5320:5338  getRoleAdmin(role) */\n      jump\t// in\n    tag_202:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_204\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_205\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_204:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5350:5375  _grantRole(role, account) */\n      tag_207\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5361:5365  role */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5367:5374  account */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5350:5360  _grantRole */\n      tag_208\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5350:5375  _grantRole(role, account) */\n      jump\t// in\n    tag_207:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5246:5382  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6348:6593  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_74:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6441:6475  callerConfirmation != _msgSender() */\n      dup2\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6441:6475  callerConfirmation != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6437:6539  if (callerConfirmation != _msgSender()) {... */\n      tag_212\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6498:6528  AccessControlBadConfirmation() */\n      mload(0x40)\n      shl(0xe1, 0x334bd919)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6437:6539  if (callerConfirmation != _msgSender()) {... */\n    tag_212:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6549:6586  _revokeRole(role, callerConfirmation) */\n      tag_213\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6561:6565  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6567:6585  callerConfirmation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6549:6560  _revokeRole */\n      tag_214\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6549:6586  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_213:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6348:6593  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5905:5980  function unpause() public onlyRole(PAUSER_ROLE) {... */\n    tag_77:\n      0x00\n      dup1\n      mload\n      0x20\n      data_9b87106a812d214d41ad9b68a21119e2948eaaf1040375c939ec808b8862455c\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_216\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_205\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_216:\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5963:5973  _unpause() */\n      tag_218\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5963:5971  _unpause */\n      tag_219\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5963:5973  _unpause() */\n      jump\t// in\n    tag_218:\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5905:5980  function unpause() public onlyRole(PAUSER_ROLE) {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4158:4372  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_81:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2653:2666  _checkProxy() */\n      tag_221\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2653:2664  _checkProxy */\n      tag_222\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2653:2666  _checkProxy() */\n      jump\t// in\n    tag_221:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4273:4309  _authorizeUpgrade(newImplementation) */\n      tag_224\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4291:4308  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4273:4290  _authorizeUpgrade */\n      tag_225\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4273:4309  _authorizeUpgrade(newImplementation) */\n      jump\t// in\n    tag_224:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4319:4365  _upgradeToAndCallUUPS(newImplementation, data) */\n      tag_226\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4341:4358  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4360:4364  data */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4319:4340  _upgradeToAndCallUUPS */\n      tag_227\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4319:4365  _upgradeToAndCallUUPS(newImplementation, data) */\n      jump\t// in\n    tag_226:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4158:4372  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3705:3839  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_84:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3774:3781  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2924:2944  _checkNotDelegated() */\n      tag_229\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2924:2942  _checkNotDelegated */\n      tag_230\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2924:2944  _checkNotDelegated() */\n      jump\t// in\n    tag_229:\n      pop\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3705:3839  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4825:5241  function stakeTokens(uint256 _amount) public whenNotPaused {... */\n    tag_93:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      tag_234\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1520  _requireNotPaused */\n      tag_235\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      jump\t// in\n    tag_234:\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4970:5024  token.transferFrom(msg.sender, address(this), _amount) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4989:4999  msg.sender */\n      caller\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4970:5024  token.transferFrom(msg.sender, address(this), _amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7525:7559   */\n      mstore\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4946:4950  this */\n      address\n        /* \"#utility.yul\":7575:7593   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":7568:7611   */\n      dup2\n      swap1\n      mstore\n        /* \"#utility.yul\":7627:7645   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":7620:7654   */\n      dup4\n      swap1\n      mstore\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4946:4950  this */\n      swap1\n      dup2\n      swap1\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4970:4988  token.transferFrom */\n      0x23b872dd\n      swap1\n        /* \"#utility.yul\":7460:7478   */\n      0x64\n      add\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4970:5024  token.transferFrom(msg.sender, address(this), _amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_240\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_240:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_241\n      swap2\n      swap1\n      tag_242\n      jump\t// in\n    tag_241:\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4962:5050  require(token.transferFrom(msg.sender, address(this), _amount), \"Token transfer failed\") */\n      tag_243\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8149:8151   */\n      0x20\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4962:5050  require(token.transferFrom(msg.sender, address(this), _amount), \"Token transfer failed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8131:8152   */\n      mstore\n        /* \"#utility.yul\":8188:8190   */\n      0x15\n        /* \"#utility.yul\":8168:8186   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8161:8191   */\n      mstore\n      shl(0x5a, 0x151bdad95b881d1c985b9cd9995c8819985a5b1959)\n        /* \"#utility.yul\":8207:8225   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8200:8251   */\n      mstore\n        /* \"#utility.yul\":8268:8286   */\n      0x64\n      add\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4962:5050  require(token.transferFrom(msg.sender, address(this), _amount), \"Token transfer failed\") */\n      tag_176\n        /* \"#utility.yul\":7947:8292   */\n      jump\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4962:5050  require(token.transferFrom(msg.sender, address(this), _amount), \"Token transfer failed\") */\n    tag_243:\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5082:5168  Stake({... */\n      0x40\n      dup1\n      mload\n      dup1\n      dup3\n      add\n      dup3\n      mstore\n      dup4\n      dup2\n      mstore\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5142:5157  block.timestamp */\n      timestamp\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5082:5168  Stake({... */\n      0x20\n      dup1\n      dup4\n      add\n      dup3\n      dup2\n      mstore\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5068:5078  msg.sender */\n      caller\n      0x00\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5061:5079  stakes[msg.sender] */\n      dup2\n      dup2\n      mstore\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5061:5067  stakes */\n      0x35\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5061:5079  stakes[msg.sender] */\n      dup5\n      mstore\n      dup7\n      swap1\n      keccak256\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5061:5168  stakes[msg.sender] = Stake({... */\n      swap5\n      mload\n      dup6\n      sstore\n      swap1\n      mload\n      0x01\n      swap1\n      swap5\n      add\n      swap4\n      swap1\n      swap4\n      sstore\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5184:5234  TokensStaked(msg.sender, _amount, block.timestamp) */\n      dup4\n      mload\n        /* \"#utility.yul\":1040:1065   */\n      dup7\n      dup2\n      mstore\n        /* \"#utility.yul\":1081:1099   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":1074:1108   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5068:5078  msg.sender */\n      swap1\n      swap2\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5184:5234  TokensStaked(msg.sender, _amount, block.timestamp) */\n      0xdd2a19c3bdd089cbe77c04f5655f83de0504d6140d12c8667646f55d0557c4dc\n      swap2\n        /* \"#utility.yul\":1013:1031   */\n      add\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5184:5234  TokensStaked(msg.sender, _amount, block.timestamp) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4884:5241  {... */\n      pop\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4825:5241  function stakeTokens(uint256 _amount) public whenNotPaused {... */\n      pop\n      jump\t// out\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2070:2540  function initialize(address admin, uint256 _requiredConfirmations, uint256 _stakingRate) initializer public {... */\n    tag_102:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      dup1\n      sload\n      shl(0x40, 0x01)\n      dup2\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4742  initialized == 0 */\n      dup2\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_250\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4746:4760  isTopLevelCall */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n    tag_250:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4760  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4787  bool construction */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4801  initialized */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4805:4806  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_251\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4818:4822  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4835  address(this).code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4840  address(this).code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n    tag_251:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4840  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4856:4868  initialSetup */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4868  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_252\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4873:4885  construction */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4872:4885  !construction */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n    tag_252:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n      iszero\n      tag_253\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4908:4931  InvalidInitialization() */\n      mload(0x40)\n      shl(0xe0, 0xf92ee8a9)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n    tag_253:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      dup5\n      sload\n      not(0xffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4968:4969  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      or\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n      dup4\n      iszero\n      tag_254\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5035  $._initializing = true */\n      dup5\n      sload\n      not(shl(0x40, 0xff))\n      and\n      shl(0x40, 0x01)\n      or\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n    tag_254:\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2188:2210  __AccessControl_init() */\n      tag_256\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2188:2208  __AccessControl_init */\n      tag_257\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2188:2210  __AccessControl_init() */\n      jump\t// in\n    tag_256:\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2220:2237  __Pausable_init() */\n      tag_258\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2220:2235  __Pausable_init */\n      tag_259\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2220:2237  __Pausable_init() */\n      jump\t// in\n    tag_258:\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2247:2271  __UUPSUpgradeable_init() */\n      tag_260\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2247:2269  __UUPSUpgradeable_init */\n      tag_257\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2247:2271  __UUPSUpgradeable_init() */\n      jump\t// in\n    tag_260:\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2282:2319  _grantRole(DEFAULT_ADMIN_ROLE, admin) */\n      tag_262\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2362:2366  0x00 */\n      0x00\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2313:2318  admin */\n      dup10\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2282:2292  _grantRole */\n      tag_208\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2282:2319  _grantRole(DEFAULT_ADMIN_ROLE, admin) */\n      jump\t// in\n    tag_262:\n      pop\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2329:2359  _grantRole(PAUSER_ROLE, admin) */\n      tag_263\n      0x00\n      dup1\n      mload\n      0x20\n      data_9b87106a812d214d41ad9b68a21119e2948eaaf1040375c939ec808b8862455c\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2353:2358  admin */\n      dup10\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2329:2339  _grantRole */\n      tag_208\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2329:2359  _grantRole(PAUSER_ROLE, admin) */\n      jump\t// in\n    tag_263:\n      pop\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2369:2398  _grantRole(ADMIN_ROLE, admin) */\n      tag_264\n      0x00\n      dup1\n      mload\n      0x20\n      data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2392:2397  admin */\n      dup10\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2369:2379  _grantRole */\n      tag_208\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2369:2398  _grantRole(ADMIN_ROLE, admin) */\n      jump\t// in\n    tag_264:\n      pop\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2408:2440  _grantRole(UPGRADER_ROLE, admin) */\n      tag_265\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":926:952  keccak256(\"UPGRADER_ROLE\") */\n      0x189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2434:2439  admin */\n      dup10\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2408:2418  _grantRole */\n      tag_208\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2408:2440  _grantRole(UPGRADER_ROLE, admin) */\n      jump\t// in\n    tag_265:\n      pop\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2451:2472  requiredConfirmations */\n      0x34\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2451:2497  requiredConfirmations = _requiredConfirmations */\n      dup8\n      swap1\n      sstore\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2507:2518  stakingRate */\n      0x36\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2507:2533  stakingRate = _stakingRate */\n      dup7\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n      dup4\n      iszero\n      tag_266\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5123  $._initializing = false */\n      dup5\n      sload\n      not(shl(0x40, 0xff))\n      and\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      0x01\n        /* \"#utility.yul\":8450:8500   */\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n      swap1\n        /* \"#utility.yul\":8438:8440   */\n      0x20\n        /* \"#utility.yul\":8423:8441   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n    tag_266:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4092:5173  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2070:2540  function initialize(address admin, uint256 _requiredConfirmations, uint256 _stakingRate) initializer public {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5828:5899  function pause() public onlyRole(PAUSER_ROLE) {... */\n    tag_116:\n      0x00\n      dup1\n      mload\n      0x20\n      data_9b87106a812d214d41ad9b68a21119e2948eaaf1040375c939ec808b8862455c\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_270\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_205\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_270:\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5884:5892  _pause() */\n      tag_218\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5884:5890  _pause */\n      tag_273\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5884:5892  _pause() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3732:3939  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_120:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3809:3813  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3901:3915  $._roles[role] */\n      swap2\n      dup3\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_b3da67d1b252aeab7c8063542d95e75f82a5307a82535949bc38f7cf7ba8897f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3901:3932  $._roles[role].hasRole[account] */\n      swap4\n      swap1\n      swap4\n      and\n      dup5\n      mstore\n      swap2\n      swap1\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3732:3939  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      jump\t// out\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":1226:1259  Transaction[] public transactions */\n    tag_125:\n      0x33\n      dup2\n      dup2\n      sload\n      dup2\n      lt\n      tag_276\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_276:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n      0x05\n      swap1\n      swap2\n      mul\n      add\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      0x02\n      dup4\n      add\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      swap1\n      swap4\n      and\n      swap5\n      pop\n      swap1\n      swap3\n      swap2\n      tag_278\n      swap1\n      tag_279\n      jump\t// in\n    tag_278:\n      dup1\n      0x1f\n      add\n      0x20\n      dup1\n      swap2\n      div\n      mul\n      0x20\n      add\n      mload(0x40)\n      swap1\n      dup2\n      add\n      0x40\n      mstore\n      dup1\n      swap3\n      swap2\n      swap1\n      dup2\n      dup2\n      mstore\n      0x20\n      add\n      dup3\n      dup1\n      sload\n      tag_280\n      swap1\n      tag_279\n      jump\t// in\n    tag_280:\n      dup1\n      iszero\n      tag_281\n      jumpi\n      dup1\n      0x1f\n      lt\n      tag_282\n      jumpi\n      0x0100\n      dup1\n      dup4\n      sload\n      div\n      mul\n      dup4\n      mstore\n      swap2\n      0x20\n      add\n      swap2\n      jump(tag_281)\n    tag_282:\n      dup3\n      add\n      swap2\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n    tag_283:\n      dup2\n      sload\n      dup2\n      mstore\n      swap1\n      0x01\n      add\n      swap1\n      0x20\n      add\n      dup1\n      dup4\n      gt\n      tag_283\n      jumpi\n      dup3\n      swap1\n      sub\n      0x1f\n      and\n      dup3\n      add\n      swap2\n    tag_281:\n      pop\n      pop\n      pop\n      pop\n      0x03\n      dup4\n      add\n      sload\n      0x04\n      swap1\n      swap4\n      add\n      sload\n      swap2\n      swap3\n      0xff\n      and\n      swap2\n      swap1\n      pop\n      dup6\n      jump\t// out\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5247:5822  function unstakeTokens() public whenNotPaused {... */\n    tag_134:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      tag_285\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1520  _requireNotPaused */\n      tag_235\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      jump\t// in\n    tag_285:\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5331:5341  msg.sender */\n      caller\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5303:5321  Stake memory stake */\n      0x00\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5324:5342  stakes[msg.sender] */\n      swap1\n      dup2\n      mstore\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5324:5330  stakes */\n      0x35\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5324:5342  stakes[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      swap2\n      dup3\n      swap1\n      keccak256\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5303:5342  Stake memory stake = stakes[msg.sender] */\n      dup3\n      mload\n      dup1\n      dup5\n      add\n      swap1\n      swap4\n      mstore\n      dup1\n      sload\n      dup1\n      dup5\n      mstore\n      0x01\n      swap1\n      swap2\n      add\n      sload\n      swap2\n      dup4\n      add\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5352:5397  require(stake.amount > 0, \"No tokens staked\") */\n      tag_287\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":9098:9100   */\n      0x20\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5352:5397  require(stake.amount > 0, \"No tokens staked\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9080:9101   */\n      mstore\n        /* \"#utility.yul\":9137:9139   */\n      0x10\n        /* \"#utility.yul\":9117:9135   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":9110:9140   */\n      mstore\n      shl(0x82, 0x139bc81d1bdad95b9cc81cdd185ad959)\n        /* \"#utility.yul\":9156:9174   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":9149:9195   */\n      mstore\n        /* \"#utility.yul\":9212:9230   */\n      0x64\n      add\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5352:5397  require(stake.amount > 0, \"No tokens staked\") */\n      tag_176\n        /* \"#utility.yul\":8896:9236   */\n      jump\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5352:5397  require(stake.amount > 0, \"No tokens staked\") */\n    tag_287:\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5408:5431  uint256 stakingDuration */\n      0x00\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5452:5457  stake */\n      dup2\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5452:5467  stake.startTime */\n      0x20\n      add\n      mload\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5434:5449  block.timestamp */\n      timestamp\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5434:5467  block.timestamp - stake.startTime */\n      tag_290\n      swap2\n      swap1\n      tag_198\n      jump\t// in\n    tag_290:\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5408:5467  uint256 stakingDuration = block.timestamp - stake.startTime */\n      swap1\n      pop\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5477:5491  uint256 reward */\n      0x00\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5544:5552  365 days */\n      0x01e13380\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5524:5539  stakingDuration */\n      dup3\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5510:5521  stakingRate */\n      sload(0x36)\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5495:5500  stake */\n      dup6\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5495:5507  stake.amount */\n      0x00\n      add\n      mload\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5495:5521  stake.amount * stakingRate */\n      tag_291\n      swap2\n      swap1\n      tag_292\n      jump\t// in\n    tag_291:\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5495:5539  stake.amount * stakingRate * stakingDuration */\n      tag_293\n      swap2\n      swap1\n      tag_292\n      jump\t// in\n    tag_293:\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5494:5553  (stake.amount * stakingRate * stakingDuration) / (365 days) */\n      tag_294\n      swap2\n      swap1\n      tag_295\n      jump\t// in\n    tag_294:\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5667:5679  stake.amount */\n      dup4\n      mload\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5477:5553  uint256 reward = (stake.amount * stakingRate * stakingDuration) / (365 days) */\n      swap1\n      swap2\n      pop\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5616:5620  this */\n      address\n      swap1\n      dup2\n      swap1\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5640:5654  token.transfer */\n      0xa9059cbb\n      swap1\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5655:5665  msg.sender */\n      caller\n      swap1\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5667:5688  stake.amount + reward */\n      tag_296\n      swap1\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5477:5553  uint256 reward = (stake.amount * stakingRate * stakingDuration) / (365 days) */\n      dup7\n      swap1\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5667:5688  stake.amount + reward */\n      tag_297\n      jump\t// in\n    tag_296:\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5640:5689  token.transfer(msg.sender, stake.amount + reward) */\n      mload(0x40)\n      not(sub(shl(0xe0, 0x01), 0x01))\n      0xe0\n      dup6\n      swap1\n      shl\n      and\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9958:9990   */\n      swap1\n      swap3\n      and\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5640:5689  token.transfer(msg.sender, stake.amount + reward) */\n      0x04\n      dup4\n      add\n        /* \"#utility.yul\":9940:9991   */\n      mstore\n        /* \"#utility.yul\":10007:10025   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10000:10034   */\n      mstore\n        /* \"#utility.yul\":9913:9931   */\n      0x44\n      add\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5640:5689  token.transfer(msg.sender, stake.amount + reward) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_301\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_301:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_302\n      swap2\n      swap1\n      tag_242\n      jump\t// in\n    tag_302:\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5632:5715  require(token.transfer(msg.sender, stake.amount + reward), \"Token transfer failed\") */\n      tag_303\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8149:8151   */\n      0x20\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5632:5715  require(token.transfer(msg.sender, stake.amount + reward), \"Token transfer failed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8131:8152   */\n      mstore\n        /* \"#utility.yul\":8188:8190   */\n      0x15\n        /* \"#utility.yul\":8168:8186   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8161:8191   */\n      mstore\n      shl(0x5a, 0x151bdad95b881d1c985b9cd9995c8819985a5b1959)\n        /* \"#utility.yul\":8207:8225   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8200:8251   */\n      mstore\n        /* \"#utility.yul\":8268:8286   */\n      0x64\n      add\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5632:5715  require(token.transfer(msg.sender, stake.amount + reward), \"Token transfer failed\") */\n      tag_176\n        /* \"#utility.yul\":7947:8292   */\n      jump\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5632:5715  require(token.transfer(msg.sender, stake.amount + reward), \"Token transfer failed\") */\n    tag_303:\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5740:5750  msg.sender */\n      caller\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5733:5751  stakes[msg.sender] */\n      0x00\n      dup2\n      dup2\n      mstore\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5733:5739  stakes */\n      0x35\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5733:5751  stakes[msg.sender] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5726:5751  delete stakes[msg.sender] */\n      dup4\n      dup2\n      sstore\n      0x01\n      add\n      swap3\n      swap1\n      swap3\n      sstore\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5794:5806  stake.amount */\n      dup7\n      mload\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5767:5815  TokensUnstaked(msg.sender, stake.amount, reward) */\n      dup3\n      mload\n        /* \"#utility.yul\":1040:1065   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1081:1099   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":1074:1108   */\n      dup6\n      swap1\n      mstore\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5767:5815  TokensUnstaked(msg.sender, stake.amount, reward) */\n      0x6f2d3e000c89d37446b7c0374c0125068ff316d1e3ee302336478a8cd03c2336\n      swap2\n        /* \"#utility.yul\":1013:1031   */\n      add\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5767:5815  TokensUnstaked(msg.sender, stake.amount, reward) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log2\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5293:5822  {... */\n      pop\n      pop\n      pop\n      pop\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5247:5822  function unstakeTokens() public whenNotPaused {... */\n      jump\t// out\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":3478:3873  function confirmTransaction(uint256 _txIndex)... */\n    tag_143:\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2585:2616  hasRole(ADMIN_ROLE, msg.sender) */\n      tag_307\n      0x00\n      dup1\n      mload\n      0x20\n      data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2605:2615  msg.sender */\n      caller\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2585:2592  hasRole */\n      tag_120\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2585:2616  hasRole(ADMIN_ROLE, msg.sender) */\n      jump\t// in\n    tag_307:\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2577:2633  require(hasRole(ADMIN_ROLE, msg.sender), \"Not an admin\") */\n      tag_308\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_176\n      swap1\n      tag_177\n      jump\t// in\n    tag_308:\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2722:2734  transactions */\n      0x33\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2722:2741  transactions.length */\n      sload\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":3574:3582  _txIndex */\n      dup2\n      swap1\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2711:2741  _txIndex < transactions.length */\n      dup2\n      lt\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2703:2772  require(_txIndex < transactions.length, \"Transaction does not exist\") */\n      tag_311\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_176\n      swap1\n      tag_181\n      jump\t// in\n    tag_311:\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":3604:3612  _txIndex */\n      dup2\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2854:2866  transactions */\n      0x33\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2867:2875  _txIndex */\n      dup2\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2854:2876  transactions[_txIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_315\n      jumpi\n      tag_315\n      tag_185\n      jump\t// in\n    tag_315:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2854:2885  transactions[_txIndex].executed */\n      0x03\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2854:2876  transactions[_txIndex] */\n      0x05\n      swap1\n      swap3\n      mul\n      add\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2854:2885  transactions[_txIndex].executed */\n      add\n      sload\n      0xff\n      and\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2853:2885  !transactions[_txIndex].executed */\n      iszero\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2845:2918  require(!transactions[_txIndex].executed, \"Transaction already executed\") */\n      tag_317\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_176\n      swap1\n      tag_189\n      jump\t// in\n    tag_317:\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":3001:3022  isConfirmed[_txIndex] */\n      0x00\n      dup4\n      dup2\n      mstore\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":3001:3012  isConfirmed */\n      0x32\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":3001:3022  isConfirmed[_txIndex] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":3023:3033  msg.sender */\n      caller\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":3001:3034  isConfirmed[_txIndex][msg.sender] */\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n      sload\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":3635:3643  _txIndex */\n      dup4\n      swap1\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":3001:3034  isConfirmed[_txIndex][msg.sender] */\n      0xff\n      and\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":3000:3034  !isConfirmed[_txIndex][msg.sender] */\n      iszero\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2992:3068  require(!isConfirmed[_txIndex][msg.sender], \"Transaction already confirmed\") */\n      tag_320\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10247:10249   */\n      0x20\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2992:3068  require(!isConfirmed[_txIndex][msg.sender], \"Transaction already confirmed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10229:10250   */\n      mstore\n        /* \"#utility.yul\":10286:10288   */\n      0x1d\n        /* \"#utility.yul\":10266:10284   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10259:10289   */\n      mstore\n        /* \"#utility.yul\":10325:10356   */\n      0x5472616e73616374696f6e20616c726561647920636f6e6669726d6564000000\n        /* \"#utility.yul\":10305:10323   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10298:10357   */\n      mstore\n        /* \"#utility.yul\":10374:10392   */\n      0x64\n      add\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2992:3068  require(!isConfirmed[_txIndex][msg.sender], \"Transaction already confirmed\") */\n      tag_176\n        /* \"#utility.yul\":10045:10398   */\n      jump\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2992:3068  require(!isConfirmed[_txIndex][msg.sender], \"Transaction already confirmed\") */\n    tag_320:\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":3659:3690  Transaction storage transaction */\n      0x00\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":3693:3705  transactions */\n      0x33\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":3706:3714  _txIndex */\n      dup6\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":3693:3715  transactions[_txIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_325\n      jumpi\n      tag_325\n      tag_185\n      jump\t// in\n    tag_325:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":3659:3715  Transaction storage transaction = transactions[_txIndex] */\n      swap1\n      pop\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":3757:3758  1 */\n      0x01\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":3725:3736  transaction */\n      dup2\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":3725:3753  transaction.numConfirmations */\n      0x04\n      add\n      0x00\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":3725:3758  transaction.numConfirmations += 1 */\n      dup3\n      dup3\n      sload\n      tag_327\n      swap2\n      swap1\n      tag_297\n      jump\t// in\n    tag_327:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":3768:3789  isConfirmed[_txIndex] */\n      0x00\n      dup6\n      dup2\n      mstore\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":3768:3779  isConfirmed */\n      0x32\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":3768:3789  isConfirmed[_txIndex] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":3790:3800  msg.sender */\n      caller\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":3768:3801  isConfirmed[_txIndex][msg.sender] */\n      dup1\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":3768:3808  isConfirmed[_txIndex][msg.sender] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":3804:3808  true */\n      0x01\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":3768:3808  isConfirmed[_txIndex][msg.sender] = true */\n      or\n      swap1\n      sstore\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":3824:3866  TransactionConfirmed(msg.sender, _txIndex) */\n      mload\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":3780:3788  _txIndex */\n      dup8\n      swap3\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":3824:3866  TransactionConfirmed(msg.sender, _txIndex) */\n      0xf8a17c9136a3ae33364fac05eb088a3cbafee10c1889c88593e20ee2d8e4eb88\n      swap2\n      log3\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":3649:3873  {... */\n      pop\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2928:2929  _ */\n      pop\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2782:2783  _ */\n      pop\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2643:2644  _ */\n      pop\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":3478:3873  function confirmTransaction(uint256 _txIndex)... */\n      pop\n      jump\t// out\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":3092:3472  function submitTransaction(address _to, uint256 _value, bytes memory _data) public onlyAdmin {... */\n    tag_152:\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2585:2616  hasRole(ADMIN_ROLE, msg.sender) */\n      tag_329\n      0x00\n      dup1\n      mload\n      0x20\n      data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2605:2615  msg.sender */\n      caller\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2585:2592  hasRole */\n      tag_120\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2585:2616  hasRole(ADMIN_ROLE, msg.sender) */\n      jump\t// in\n    tag_329:\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2577:2633  require(hasRole(ADMIN_ROLE, msg.sender), \"Not an admin\") */\n      tag_330\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_176\n      swap1\n      tag_177\n      jump\t// in\n    tag_330:\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":3213:3225  transactions */\n      0x33\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":3213:3232  transactions.length */\n      dup1\n      sload\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":3261:3419  Transaction({... */\n      0x40\n      dup1\n      mload\n      0xa0\n      dup2\n      add\n      dup3\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n      dup8\n      dup2\n      and\n      dup3\n      mstore\n      0x20\n      dup3\n      add\n      dup8\n      dup2\n      mstore\n      swap3\n      dup3\n      add\n      dup7\n      dup2\n      mstore\n      0x00\n      0x60\n      dup5\n      add\n      dup2\n      swap1\n      mstore\n      0x80\n      dup5\n      add\n      dup2\n      swap1\n      mstore\n      0x01\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":3243:3420  transactions.push(Transaction({... */\n      dup7\n      add\n      dup8\n      sstore\n      swap6\n      swap1\n      swap6\n      mstore\n      dup2\n      mload\n      0x82a75bdeeae8604d839476ae9efd8b0e15aa447e21bfd7f41283bb54e22c9a82\n      0x05\n      dup7\n      mul\n      swap1\n      dup2\n      add\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      swap3\n      swap1\n      swap4\n      and\n      swap2\n      swap1\n      swap2\n      or\n      dup3\n      sstore\n      swap3\n      mload\n      0x82a75bdeeae8604d839476ae9efd8b0e15aa447e21bfd7f41283bb54e22c9a83\n      dup5\n      add\n      sstore\n      swap4\n      mload\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":3213:3232  transactions.length */\n      swap3\n      swap4\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":3261:3419  Transaction({... */\n      swap1\n      swap3\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":3243:3420  transactions.push(Transaction({... */\n      swap1\n      swap2\n      0x82a75bdeeae8604d839476ae9efd8b0e15aa447e21bfd7f41283bb54e22c9a84\n      add\n      swap1\n      tag_334\n      swap1\n      dup3\n      tag_335\n      jump\t// in\n    tag_334:\n      pop\n      0x60\n      dup3\n      add\n      mload\n      0x03\n      dup3\n      add\n      dup1\n      sload\n      not(0xff)\n      and\n      swap2\n      iszero\n      iszero\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n      0x80\n      swap1\n      swap2\n      add\n      mload\n      0x04\n      swap1\n      swap2\n      add\n      sstore\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":3436:3465  TransactionSubmitted(txIndex) */\n      mload(0x40)\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":3457:3464  txIndex */\n      dup2\n      swap1\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":3436:3465  TransactionSubmitted(txIndex) */\n      0xd0b5d9eac097410294ec9f2cee7cd185cf31ab46babf3dfdbeac8b222b03f2d1\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":3185:3472  {... */\n      pop\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":3092:3472  function submitTransaction(address _to, uint256 _value, bytes memory _data) public onlyAdmin {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5662:5800  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_156:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5737:5755  getRoleAdmin(role) */\n      tag_336\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5750:5754  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5737:5749  getRoleAdmin */\n      tag_63\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5737:5755  getRoleAdmin(role) */\n      jump\t// in\n    tag_336:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_338\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_205\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_338:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5767:5793  _revokeRole(role, account) */\n      tag_207\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5779:5783  role */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5785:5792  account */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5767:5778  _revokeRole */\n      tag_214\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5767:5793  _revokeRole(role, account) */\n      jump\t// in\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":3879:4374  function executeTransaction(uint256 _txIndex) public onlyAdmin txExists(_txIndex) notExecuted(_txIndex) {... */\n    tag_164:\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2585:2616  hasRole(ADMIN_ROLE, msg.sender) */\n      tag_342\n      0x00\n      dup1\n      mload\n      0x20\n      data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2605:2615  msg.sender */\n      caller\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2585:2592  hasRole */\n      tag_120\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2585:2616  hasRole(ADMIN_ROLE, msg.sender) */\n      jump\t// in\n    tag_342:\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2577:2633  require(hasRole(ADMIN_ROLE, msg.sender), \"Not an admin\") */\n      tag_343\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_176\n      swap1\n      tag_177\n      jump\t// in\n    tag_343:\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2722:2734  transactions */\n      0x33\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2722:2741  transactions.length */\n      sload\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":3951:3959  _txIndex */\n      dup2\n      swap1\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2711:2741  _txIndex < transactions.length */\n      dup2\n      lt\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2703:2772  require(_txIndex < transactions.length, \"Transaction does not exist\") */\n      tag_346\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_176\n      swap1\n      tag_181\n      jump\t// in\n    tag_346:\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":3973:3981  _txIndex */\n      dup2\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2854:2866  transactions */\n      0x33\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2867:2875  _txIndex */\n      dup2\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2854:2876  transactions[_txIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_350\n      jumpi\n      tag_350\n      tag_185\n      jump\t// in\n    tag_350:\n      0x00\n      swap2\n      dup3\n      mstore\n      0x20\n      swap1\n      swap2\n      keccak256\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2854:2885  transactions[_txIndex].executed */\n      0x03\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2854:2876  transactions[_txIndex] */\n      0x05\n      swap1\n      swap3\n      mul\n      add\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2854:2885  transactions[_txIndex].executed */\n      add\n      sload\n      0xff\n      and\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2853:2885  !transactions[_txIndex].executed */\n      iszero\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2845:2918  require(!transactions[_txIndex].executed, \"Transaction already executed\") */\n      tag_352\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_176\n      swap1\n      tag_189\n      jump\t// in\n    tag_352:\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":3993:4024  Transaction storage transaction */\n      0x00\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4027:4039  transactions */\n      0x33\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4040:4048  _txIndex */\n      dup5\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4027:4049  transactions[_txIndex] */\n      dup2\n      sload\n      dup2\n      lt\n      tag_356\n      jumpi\n      tag_356\n      tag_185\n      jump\t// in\n    tag_356:\n      swap1\n      0x00\n      mstore\n      keccak256(0x00, 0x20)\n      swap1\n      0x05\n      mul\n      add\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":3993:4049  Transaction storage transaction = transactions[_txIndex] */\n      swap1\n      pop\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4100:4121  requiredConfirmations */\n      sload(0x34)\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4068:4079  transaction */\n      dup2\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4068:4096  transaction.numConfirmations */\n      0x04\n      add\n      sload\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4068:4121  transaction.numConfirmations >= requiredConfirmations */\n      lt\n      iszero\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4060:4143  require(transaction.numConfirmations >= requiredConfirmations, \"Cannot execute tx\") */\n      tag_358\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12769:12771   */\n      0x20\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4060:4143  require(transaction.numConfirmations >= requiredConfirmations, \"Cannot execute tx\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12751:12772   */\n      mstore\n        /* \"#utility.yul\":12808:12810   */\n      0x11\n        /* \"#utility.yul\":12788:12806   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12781:12811   */\n      mstore\n      shl(0x7b, 0x086c2dcdcdee840caf0cac6eae8ca40e8f)\n        /* \"#utility.yul\":12827:12845   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12820:12867   */\n      mstore\n        /* \"#utility.yul\":12884:12902   */\n      0x64\n      add\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4060:4143  require(transaction.numConfirmations >= requiredConfirmations, \"Cannot execute tx\") */\n      tag_176\n        /* \"#utility.yul\":12567:12908   */\n      jump\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4060:4143  require(transaction.numConfirmations >= requiredConfirmations, \"Cannot execute tx\") */\n    tag_358:\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4154:4174  transaction.executed */\n      0x03\n      dup2\n      add\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4154:4181  transaction.executed = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4177:4181  true */\n      0x01\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4154:4181  transaction.executed = true */\n      swap1\n      dup2\n      or\n      swap1\n      swap2\n      sstore\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4211:4225  transaction.to */\n      dup2\n      sload\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4238:4255  transaction.value */\n      swap1\n      dup3\n      add\n      sload\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4211:4274  transaction.to.call{value: transaction.value}(transaction.data) */\n      mload(0x40)\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4154:4174  transaction.executed */\n      0x00\n      swap3\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4211:4225  transaction.to */\n      and\n      swap2\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4238:4255  transaction.value */\n      swap1\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4211:4274  transaction.to.call{value: transaction.value}(transaction.data) */\n      tag_361\n      swap1\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4257:4273  transaction.data */\n      0x02\n      dup7\n      add\n      swap1\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4211:4274  transaction.to.call{value: transaction.value}(transaction.data) */\n      tag_362\n      jump\t// in\n    tag_361:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      dup8\n      gas\n      call\n      swap3\n      pop\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_365\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_364)\n    tag_365:\n      0x60\n      swap2\n      pop\n    tag_364:\n      pop\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4192:4274  (bool success, ) = transaction.to.call{value: transaction.value}(transaction.data) */\n      pop\n      swap1\n      pop\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4292:4299  success */\n      dup1\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4284:4322  require(success, \"Transaction failed\") */\n      tag_366\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":13961:13963   */\n      0x20\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4284:4322  require(success, \"Transaction failed\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":13943:13964   */\n      mstore\n        /* \"#utility.yul\":14000:14002   */\n      0x12\n        /* \"#utility.yul\":13980:13998   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":13973:14003   */\n      mstore\n      shl(0x72, 0x151c985b9cd858dd1a5bdb8819985a5b1959)\n        /* \"#utility.yul\":14019:14037   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14012:14060   */\n      mstore\n        /* \"#utility.yul\":14077:14095   */\n      0x64\n      add\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4284:4322  require(success, \"Transaction failed\") */\n      tag_176\n        /* \"#utility.yul\":13759:14101   */\n      jump\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4284:4322  require(success, \"Transaction failed\") */\n    tag_366:\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4338:4367  TransactionExecuted(_txIndex) */\n      mload(0x40)\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4358:4366  _txIndex */\n      dup6\n      swap1\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":4338:4367  TransactionExecuted(_txIndex) */\n      0x15ed165a284872ea7017f03df402a0cadfbfab588320ffaf83f160c2f82781c7\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":3983:4374  {... */\n      pop\n      pop\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2782:2783  _ */\n      pop\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":2643:2644  _ */\n      pop\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":3879:4374  function executeTransaction(uint256 _txIndex) public onlyAdmin txExists(_txIndex) notExecuted(_txIndex) {... */\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4148:4251  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_205:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4214:4244  _checkRole(role, _msgSender()) */\n      tag_218\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4225:4229  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4214:4224  _checkRole */\n      tag_374\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4214:4244  _checkRole(role, _msgSender()) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7270:7657  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_208:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7347:7351  bool */\n      0x00\n      0x00\n      dup1\n      mload\n      0x20\n      data_b3da67d1b252aeab7c8063542d95e75f82a5307a82535949bc38f7cf7ba8897f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7437:7459  hasRole(role, account) */\n      tag_377\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7445:7449  role */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7451:7458  account */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7437:7444  hasRole */\n      tag_120\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7437:7459  hasRole(role, account) */\n      jump\t// in\n    tag_377:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7432:7651  if (!hasRole(role, account)) {... */\n      tag_378\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7475:7483  $._roles */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7475:7489  $._roles[role] */\n      dup5\n      dup2\n      mstore\n      0x20\n      dup3\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7475:7506  $._roles[role].hasRole[account] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7475:7513  $._roles[role].hasRole[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7509:7513  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7475:7513  $._roles[role].hasRole[account] = true */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7559:7571  _msgSender() */\n      tag_379\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7559:7571  _msgSender() */\n    tag_379:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7532:7572  RoleGranted(role, account, _msgSender()) */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7550:7557  account */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7532:7572  RoleGranted(role, account, _msgSender()) */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7544:7548  role */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7532:7572  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7593:7597  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7586:7597  return true */\n      swap2\n      pop\n      pop\n      jump(tag_171)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7432:7651  if (!hasRole(role, account)) {... */\n    tag_378:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7635:7640  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7628:7640  return false */\n      swap2\n      pop\n      pop\n      jump(tag_171)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7892:8280  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_214:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7970:7974  bool */\n      0x00\n      0x00\n      dup1\n      mload\n      0x20\n      data_b3da67d1b252aeab7c8063542d95e75f82a5307a82535949bc38f7cf7ba8897f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8059:8081  hasRole(role, account) */\n      tag_384\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8067:8071  role */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8073:8080  account */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8059:8066  hasRole */\n      tag_120\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8059:8081  hasRole(role, account) */\n      jump\t// in\n    tag_384:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8055:8274  if (hasRole(role, account)) {... */\n      iszero\n      tag_378\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8131:8136  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8097:8111  $._roles[role] */\n      dup5\n      dup2\n      mstore\n      0x20\n      dup3\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8097:8128  $._roles[role].hasRole[account] */\n      dup8\n      and\n      dup1\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8097:8136  $._roles[role].hasRole[account] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8155:8195  RoleRevoked(role, account, _msgSender()) */\n      mload\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n      swap3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8097:8111  $._roles[role] */\n      dup8\n      swap2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8155:8195  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      swap2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8131:8136  false */\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8155:8195  RoleRevoked(role, account, _msgSender()) */\n      log4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8216:8220  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8209:8220  return true */\n      swap2\n      pop\n      pop\n      jump(tag_171)\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2697:2814  function _unpause() internal virtual whenPaused {... */\n    tag_219:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1750:1766  _requirePaused() */\n      tag_389\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1750:1764  _requirePaused */\n      tag_390\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1750:1766  _requirePaused() */\n      jump\t// in\n    tag_389:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2765:2770  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2755:2770  _paused = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2785:2807  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2794:2806  _msgSender() */\n    tag_392:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2785:2807  Unpaused(_msgSender()) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":14270:14302   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":14252:14303   */\n      dup2\n      mstore\n        /* \"#utility.yul\":14240:14242   */\n      0x20\n        /* \"#utility.yul\":14225:14243   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2785:2807  Unpaused(_msgSender()) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2697:2814  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4599:4911  function _checkProxy() internal view virtual {... */\n    tag_222:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4679:4683  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4688:4694  __self */\n      immutable(\"0x3b04ad91523c4dcf551e081621e633b9099d51bf9c5461e58c3bc7354a578b27\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4671:4694  address(this) == __self */\n      and\n      eq\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4671:4791  address(this) == __self || // Must be called through delegatecall... */\n      tag_396\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4785:4791  __self */\n      immutable(\"0x3b04ad91523c4dcf551e081621e633b9099d51bf9c5461e58c3bc7354a578b27\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4749:4791  ERC1967Utils.getImplementation() != __self */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4749:4781  ERC1967Utils.getImplementation() */\n      tag_397\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2035:2088  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1957:2095  function getImplementation() internal view returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4749:4781  ERC1967Utils.getImplementation() */\n    tag_397:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4749:4791  ERC1967Utils.getImplementation() != __self */\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4671:4791  address(this) == __self || // Must be called through delegatecall... */\n    tag_396:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4654:4905  if (... */\n      iszero\n      tag_399\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4865:4894  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      shl(0xe1, 0x703e46dd)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4654:4905  if (... */\n    tag_399:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4599:4911  function _checkProxy() internal view virtual {... */\n      jump\t// out\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":5986:6084  function _authorizeUpgrade(address newImplementation) internal override onlyRole(UPGRADER_ROLE) {} */\n    tag_225:\n        /* \"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":926:952  keccak256(\"UPGRADER_ROLE\") */\n      0x189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_226\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_205\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6052:6590  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {... */\n    tag_227:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6169:6186  newImplementation */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6151:6201  IERC1822Proxiable(newImplementation).proxiableUUID */\n      and\n      0x52d1902d\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6151:6203  IERC1822Proxiable(newImplementation).proxiableUUID() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_404\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_405\n      swap2\n      dup2\n      add\n      swap1\n      tag_406\n      jump\t// in\n    tag_405:\n      0x01\n    tag_404:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6147:6584  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n      tag_407\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6513:6573  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      shl(0xe0, 0x4c9c8ce3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":14270:14302   */\n      dup4\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6513:6573  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14252:14303   */\n      mstore\n        /* \"#utility.yul\":14225:14243   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6513:6573  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      tag_176\n        /* \"#utility.yul\":14106:14309   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6147:6584  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n    tag_407:\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6245:6285  slot != ERC1967Utils.IMPLEMENTATION_SLOT */\n      dup2\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6241:6361  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n      tag_413\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6312:6346  UUPSUnsupportedProxiableUUID(slot) */\n      mload(0x40)\n      shl(0xe2, 0x2a875269)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":1635:1660   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":1608:1626   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6312:6346  UUPSUnsupportedProxiableUUID(slot) */\n      tag_176\n        /* \"#utility.yul\":1489:1666   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6241:6361  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n    tag_413:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6374:6428  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      tag_213\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6404:6421  newImplementation */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6423:6427  data */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6374:6403  ERC1967Utils.upgradeToAndCall */\n      tag_416\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6374:6428  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5028:5241  function _checkNotDelegated() internal view virtual {... */\n    tag_230:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5102:5106  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5111:5117  __self */\n      immutable(\"0x3b04ad91523c4dcf551e081621e633b9099d51bf9c5461e58c3bc7354a578b27\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5094:5117  address(this) != __self */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5090:5235  if (address(this) != __self) {... */\n      tag_399\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5195:5224  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      shl(0xe1, 0x703e46dd)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2031:2137  function _requireNotPaused() internal view virtual {... */\n    tag_235:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1926:1930  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1949:1956  _paused */\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2100:2109  !paused() */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2092:2130  require(!paused(), \"Pausable: paused\") */\n      tag_399\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":14705:14707   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2092:2130  require(!paused(), \"Pausable: paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14687:14708   */\n      mstore\n        /* \"#utility.yul\":14744:14746   */\n      0x10\n        /* \"#utility.yul\":14724:14742   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":14717:14747   */\n      mstore\n      shl(0x82, 0x14185d5cd8589b194e881c185d5cd959)\n        /* \"#utility.yul\":14763:14781   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":14756:14802   */\n      mstore\n        /* \"#utility.yul\":14819:14837   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2092:2130  require(!paused(), \"Pausable: paused\") */\n      tag_176\n        /* \"#utility.yul\":14503:14843   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3231:3296  function __AccessControl_init() internal onlyInitializing {... */\n    tag_257:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_399\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_427\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1084:1181  function __Pausable_init() internal onlyInitializing {... */\n    tag_259:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_430\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_427\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_430:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1147:1174  __Pausable_init_unchained() */\n      tag_399\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1147:1172  __Pausable_init_unchained */\n      tag_433\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1147:1174  __Pausable_init_unchained() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2450:2565  function _pause() internal virtual whenNotPaused {... */\n    tag_273:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      tag_438\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1520  _requireNotPaused */\n      tag_235\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1503:1522  _requireNotPaused() */\n      jump\t// in\n    tag_438:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2509:2516  _paused */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2509:2523  _paused = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2519:2523  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2509:2523  _paused = true */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2538:2558  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2545:2557  _msgSender() */\n      tag_392\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4381:4578  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_374:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4469:4491  hasRole(role, account) */\n      tag_443\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4477:4481  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4483:4490  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4469:4476  hasRole */\n      tag_120\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4469:4491  hasRole(role, account) */\n      jump\t// in\n    tag_443:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4464:4572  if (!hasRole(role, account)) {... */\n      tag_226\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4514:4561  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      shl(0xe0, 0xe2517d3f)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":9958:9990   */\n      dup3\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4514:4561  AccessControlUnauthorizedAccount(account, role) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":9940:9991   */\n      mstore\n        /* \"#utility.yul\":10007:10025   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":10000:10034   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":9913:9931   */\n      0x44\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4514:4561  AccessControlUnauthorizedAccount(account, role) */\n      tag_176\n        /* \"#utility.yul\":9766:10040   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2209:2315  function _requirePaused() internal view virtual {... */\n    tag_390:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1926:1930  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1949:1956  _paused */\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2267:2308  require(paused(), \"Pausable: not paused\") */\n      tag_399\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":15329:15331   */\n      0x20\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2267:2308  require(paused(), \"Pausable: not paused\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":15311:15332   */\n      mstore\n        /* \"#utility.yul\":15368:15370   */\n      0x14\n        /* \"#utility.yul\":15348:15366   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":15341:15371   */\n      mstore\n      shl(0x62, 0x14185d5cd8589b194e881b9bdd081c185d5cd959)\n        /* \"#utility.yul\":15387:15405   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":15380:15430   */\n      mstore\n        /* \"#utility.yul\":15447:15465   */\n      0x64\n      add\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":2267:2308  require(paused(), \"Pausable: not paused\") */\n      tag_176\n        /* \"#utility.yul\":15127:15471   */\n      jump\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2779:3114  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n    tag_416:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2870:2907  _setImplementation(newImplementation) */\n      tag_456\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2889:2906  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2870:2888  _setImplementation */\n      tag_457\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2870:2907  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_456:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2922:2949  Upgraded(newImplementation) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2964:2975  data.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2964:2979  data.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2960:3108  if (data.length > 0) {... */\n      tag_458\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2995:3048  Address.functionDelegateCall(newImplementation, data) */\n      tag_213\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3024:3041  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3043:3047  data */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2995:3023  Address.functionDelegateCall */\n      tag_460\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2995:3048  Address.functionDelegateCall(newImplementation, data) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2960:3108  if (data.length > 0) {... */\n    tag_458:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3079:3097  _checkNonPayable() */\n      tag_226\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3079:3095  _checkNonPayable */\n      tag_463\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3079:3097  _checkNonPayable() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n    tag_427:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8600  _getInitializableStorage()._initializing */\n      sload\n      shl(0x40, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n      tag_399\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7191:7208  NotInitializing() */\n      mload(0x40)\n      shl(0xe3, 0x1afcd79f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1187:1282  function __Pausable_init_unchained() internal onlyInitializing {... */\n    tag_433:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_469\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_427\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_469:\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1270:1275  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1260:1275  _paused = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":1187:1282  function __Pausable_init_unchained() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2186:2467  function _setImplementation(address newImplementation) private {... */\n    tag_457:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2263:2280  newImplementation */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2263:2292  newImplementation.code.length */\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2296:2297  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2263:2297  newImplementation.code.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2259:2378  if (newImplementation.code.length == 0) {... */\n      tag_473\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2320:2367  ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      shl(0xe0, 0x4c9c8ce3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":14270:14302   */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2320:2367  ERC1967InvalidImplementation(newImplementation) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14252:14303   */\n      mstore\n        /* \"#utility.yul\":14225:14243   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2320:2367  ERC1967InvalidImplementation(newImplementation) */\n      tag_176\n        /* \"#utility.yul\":14106:14309   */\n      jump\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2259:2378  if (newImplementation.code.length == 0) {... */\n    tag_473:\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2387:2460  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2186:2467  function _setImplementation(address newImplementation) private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4106:4359  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_460:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4189:4201  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4214:4226  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4228:4251  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4255:4261  target */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4255:4274  target.delegatecall */\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4275:4279  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4255:4280  target.delegatecall(data) */\n      mload(0x40)\n      tag_477\n      swap2\n      swap1\n      tag_478\n      jump\t// in\n    tag_477:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_481\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_480)\n    tag_481:\n      0x60\n      swap2\n      pop\n    tag_480:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4213:4280  (bool success, bytes memory returndata) = target.delegatecall(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4297:4352  verifyCallResultFromTarget(target, success, returndata) */\n      tag_482\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4324:4330  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4332:4339  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4341:4351  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4297:4323  verifyCallResultFromTarget */\n      tag_483\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4297:4352  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_482:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4290:4352  return verifyCallResultFromTarget(target, success, returndata) */\n      swap6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4106:4359  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6598:6720  function _checkNonPayable() private {... */\n    tag_463:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6648:6657  msg.value */\n      callvalue\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6648:6661  msg.value > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6644:6714  if (msg.value > 0) {... */\n      tag_399\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6684:6703  ERC1967NonPayable() */\n      mload(0x40)\n      shl(0xe0, 0xb398979f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_483:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4769:4781  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4798:4805  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      tag_489\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      tag_490\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4829:4839  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4828  _revert */\n      tag_491\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      jump\t// in\n    tag_490:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      jump(tag_492)\n    tag_489:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5062  returndata.length */\n      dup2\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5067  returndata.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_493\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5089  target.code.length */\n      dup5\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5094  target.code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n    tag_493:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_494\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      mload(0x40)\n      shl(0xe0, 0x9996b315)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":14270:14302   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":14252:14303   */\n      mstore\n        /* \"#utility.yul\":14225:14243   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      tag_176\n        /* \"#utility.yul\":14106:14309   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_494:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5180:5190  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n    tag_492:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5743:6259  function _revert(bytes memory returndata) private pure {... */\n    tag_491:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5891  returndata.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5895  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n      tag_497\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6102:6112  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6096:6113  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6158:6173  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6145:6155  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6141:6143  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6137:6156  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6130:6174  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n    tag_497:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6225:6242  FailedInnerCall() */\n      mload(0x40)\n      shl(0xe1, 0x0a12f521)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":14:300   */\n    tag_43:\n        /* \"#utility.yul\":72:78   */\n      0x00\n        /* \"#utility.yul\":125:127   */\n      0x20\n        /* \"#utility.yul\":113:122   */\n      dup3\n        /* \"#utility.yul\":104:111   */\n      dup5\n        /* \"#utility.yul\":100:123   */\n      sub\n        /* \"#utility.yul\":96:128   */\n      slt\n        /* \"#utility.yul\":93:145   */\n      iszero\n      tag_509\n      jumpi\n        /* \"#utility.yul\":141:142   */\n      0x00\n        /* \"#utility.yul\":138:139   */\n      dup1\n        /* \"#utility.yul\":131:143   */\n      revert\n        /* \"#utility.yul\":93:145   */\n    tag_509:\n        /* \"#utility.yul\":167:190   */\n      dup2\n      calldataload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":219:251   */\n      dup2\n      and\n        /* \"#utility.yul\":209:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":199:270   */\n      tag_492\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      dup1\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":497:670   */\n    tag_499:\n        /* \"#utility.yul\":565:585   */\n      dup1\n      calldataload\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":614:645   */\n      dup2\n      and\n        /* \"#utility.yul\":604:646   */\n      dup2\n      eq\n        /* \"#utility.yul\":594:664   */\n      tag_513\n      jumpi\n        /* \"#utility.yul\":660:661   */\n      0x00\n        /* \"#utility.yul\":657:658   */\n      dup1\n        /* \"#utility.yul\":650:662   */\n      revert\n        /* \"#utility.yul\":594:664   */\n    tag_513:\n        /* \"#utility.yul\":497:670   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":675:861   */\n    tag_50:\n        /* \"#utility.yul\":734:740   */\n      0x00\n        /* \"#utility.yul\":787:789   */\n      0x20\n        /* \"#utility.yul\":775:784   */\n      dup3\n        /* \"#utility.yul\":766:773   */\n      dup5\n        /* \"#utility.yul\":762:785   */\n      sub\n        /* \"#utility.yul\":758:790   */\n      slt\n        /* \"#utility.yul\":755:807   */\n      iszero\n      tag_515\n      jumpi\n        /* \"#utility.yul\":803:804   */\n      0x00\n        /* \"#utility.yul\":800:801   */\n      dup1\n        /* \"#utility.yul\":793:805   */\n      revert\n        /* \"#utility.yul\":755:807   */\n    tag_515:\n        /* \"#utility.yul\":826:855   */\n      tag_492\n        /* \"#utility.yul\":845:854   */\n      dup3\n        /* \"#utility.yul\":826:855   */\n      tag_499\n      jump\t// in\n        /* \"#utility.yul\":1119:1299   */\n    tag_57:\n        /* \"#utility.yul\":1178:1184   */\n      0x00\n        /* \"#utility.yul\":1231:1233   */\n      0x20\n        /* \"#utility.yul\":1219:1228   */\n      dup3\n        /* \"#utility.yul\":1210:1217   */\n      dup5\n        /* \"#utility.yul\":1206:1229   */\n      sub\n        /* \"#utility.yul\":1202:1234   */\n      slt\n        /* \"#utility.yul\":1199:1251   */\n      iszero\n      tag_519\n      jumpi\n        /* \"#utility.yul\":1247:1248   */\n      0x00\n        /* \"#utility.yul\":1244:1245   */\n      dup1\n        /* \"#utility.yul\":1237:1249   */\n      revert\n        /* \"#utility.yul\":1199:1251   */\n    tag_519:\n      pop\n        /* \"#utility.yul\":1270:1293   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":1119:1299   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1671:1925   */\n    tag_69:\n        /* \"#utility.yul\":1739:1745   */\n      0x00\n        /* \"#utility.yul\":1747:1753   */\n      dup1\n        /* \"#utility.yul\":1800:1802   */\n      0x40\n        /* \"#utility.yul\":1788:1797   */\n      dup4\n        /* \"#utility.yul\":1779:1786   */\n      dup6\n        /* \"#utility.yul\":1775:1798   */\n      sub\n        /* \"#utility.yul\":1771:1803   */\n      slt\n        /* \"#utility.yul\":1768:1820   */\n      iszero\n      tag_524\n      jumpi\n        /* \"#utility.yul\":1816:1817   */\n      0x00\n        /* \"#utility.yul\":1813:1814   */\n      dup1\n        /* \"#utility.yul\":1806:1818   */\n      revert\n        /* \"#utility.yul\":1768:1820   */\n    tag_524:\n        /* \"#utility.yul\":1852:1861   */\n      dup3\n        /* \"#utility.yul\":1839:1862   */\n      calldataload\n        /* \"#utility.yul\":1829:1862   */\n      swap2\n      pop\n        /* \"#utility.yul\":1881:1919   */\n      tag_525\n        /* \"#utility.yul\":1915:1917   */\n      0x20\n        /* \"#utility.yul\":1904:1913   */\n      dup5\n        /* \"#utility.yul\":1900:1918   */\n      add\n        /* \"#utility.yul\":1881:1919   */\n      tag_499\n      jump\t// in\n    tag_525:\n        /* \"#utility.yul\":1871:1919   */\n      swap1\n      pop\n        /* \"#utility.yul\":1671:1925   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1930:2057   */\n    tag_500:\n        /* \"#utility.yul\":1991:2001   */\n      0x4e487b71\n        /* \"#utility.yul\":1986:1989   */\n      0xe0\n        /* \"#utility.yul\":1982:2002   */\n      shl\n        /* \"#utility.yul\":1979:1980   */\n      0x00\n        /* \"#utility.yul\":1972:2003   */\n      mstore\n        /* \"#utility.yul\":2022:2026   */\n      0x41\n        /* \"#utility.yul\":2019:2020   */\n      0x04\n        /* \"#utility.yul\":2012:2027   */\n      mstore\n        /* \"#utility.yul\":2046:2050   */\n      0x24\n        /* \"#utility.yul\":2043:2044   */\n      0x00\n        /* \"#utility.yul\":2036:2051   */\n      revert\n        /* \"#utility.yul\":2062:2780   */\n    tag_501:\n        /* \"#utility.yul\":2104:2109   */\n      0x00\n        /* \"#utility.yul\":2157:2160   */\n      dup3\n        /* \"#utility.yul\":2150:2154   */\n      0x1f\n        /* \"#utility.yul\":2142:2148   */\n      dup4\n        /* \"#utility.yul\":2138:2155   */\n      add\n        /* \"#utility.yul\":2134:2161   */\n      slt\n        /* \"#utility.yul\":2124:2179   */\n      tag_528\n      jumpi\n        /* \"#utility.yul\":2175:2176   */\n      0x00\n        /* \"#utility.yul\":2172:2173   */\n      dup1\n        /* \"#utility.yul\":2165:2177   */\n      revert\n        /* \"#utility.yul\":2124:2179   */\n    tag_528:\n        /* \"#utility.yul\":2211:2217   */\n      dup2\n        /* \"#utility.yul\":2198:2218   */\n      calldataload\n        /* \"#utility.yul\":2237:2255   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":2274:2276   */\n      dup1\n        /* \"#utility.yul\":2270:2272   */\n      dup3\n        /* \"#utility.yul\":2267:2277   */\n      gt\n        /* \"#utility.yul\":2264:2300   */\n      iszero\n      tag_530\n      jumpi\n        /* \"#utility.yul\":2280:2298   */\n      tag_530\n      tag_500\n      jump\t// in\n    tag_530:\n        /* \"#utility.yul\":2355:2357   */\n      0x40\n        /* \"#utility.yul\":2349:2358   */\n      mload\n        /* \"#utility.yul\":2323:2325   */\n      0x1f\n        /* \"#utility.yul\":2409:2422   */\n      dup4\n      add\n      not(0x1f)\n        /* \"#utility.yul\":2405:2427   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":2429:2431   */\n      0x3f\n        /* \"#utility.yul\":2401:2432   */\n      add\n        /* \"#utility.yul\":2397:2437   */\n      and\n        /* \"#utility.yul\":2385:2438   */\n      dup2\n      add\n      swap1\n        /* \"#utility.yul\":2453:2471   */\n      dup3\n      dup3\n      gt\n        /* \"#utility.yul\":2473:2495   */\n      dup2\n      dup4\n      lt\n        /* \"#utility.yul\":2450:2496   */\n      or\n        /* \"#utility.yul\":2447:2519   */\n      iszero\n      tag_532\n      jumpi\n        /* \"#utility.yul\":2499:2517   */\n      tag_532\n      tag_500\n      jump\t// in\n    tag_532:\n        /* \"#utility.yul\":2539:2549   */\n      dup2\n        /* \"#utility.yul\":2535:2537   */\n      0x40\n        /* \"#utility.yul\":2528:2550   */\n      mstore\n        /* \"#utility.yul\":2574:2576   */\n      dup4\n        /* \"#utility.yul\":2566:2572   */\n      dup2\n        /* \"#utility.yul\":2559:2577   */\n      mstore\n        /* \"#utility.yul\":2620:2623   */\n      dup7\n        /* \"#utility.yul\":2613:2617   */\n      0x20\n        /* \"#utility.yul\":2608:2610   */\n      dup6\n        /* \"#utility.yul\":2600:2606   */\n      dup9\n        /* \"#utility.yul\":2596:2611   */\n      add\n        /* \"#utility.yul\":2592:2618   */\n      add\n        /* \"#utility.yul\":2589:2624   */\n      gt\n        /* \"#utility.yul\":2586:2641   */\n      iszero\n      tag_533\n      jumpi\n        /* \"#utility.yul\":2637:2638   */\n      0x00\n        /* \"#utility.yul\":2634:2635   */\n      dup1\n        /* \"#utility.yul\":2627:2639   */\n      revert\n        /* \"#utility.yul\":2586:2641   */\n    tag_533:\n        /* \"#utility.yul\":2701:2703   */\n      dup4\n        /* \"#utility.yul\":2694:2698   */\n      0x20\n        /* \"#utility.yul\":2686:2692   */\n      dup8\n        /* \"#utility.yul\":2682:2699   */\n      add\n        /* \"#utility.yul\":2675:2679   */\n      0x20\n        /* \"#utility.yul\":2667:2673   */\n      dup4\n        /* \"#utility.yul\":2663:2680   */\n      add\n        /* \"#utility.yul\":2650:2704   */\n      calldatacopy\n        /* \"#utility.yul\":2748:2749   */\n      0x00\n        /* \"#utility.yul\":2741:2745   */\n      0x20\n        /* \"#utility.yul\":2736:2738   */\n      dup6\n        /* \"#utility.yul\":2728:2734   */\n      dup4\n        /* \"#utility.yul\":2724:2739   */\n      add\n        /* \"#utility.yul\":2720:2746   */\n      add\n        /* \"#utility.yul\":2713:2750   */\n      mstore\n        /* \"#utility.yul\":2768:2774   */\n      dup1\n        /* \"#utility.yul\":2759:2774   */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":2062:2780   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2785:3179   */\n    tag_80:\n        /* \"#utility.yul\":2862:2868   */\n      0x00\n        /* \"#utility.yul\":2870:2876   */\n      dup1\n        /* \"#utility.yul\":2923:2925   */\n      0x40\n        /* \"#utility.yul\":2911:2920   */\n      dup4\n        /* \"#utility.yul\":2902:2909   */\n      dup6\n        /* \"#utility.yul\":2898:2921   */\n      sub\n        /* \"#utility.yul\":2894:2926   */\n      slt\n        /* \"#utility.yul\":2891:2943   */\n      iszero\n      tag_535\n      jumpi\n        /* \"#utility.yul\":2939:2940   */\n      0x00\n        /* \"#utility.yul\":2936:2937   */\n      dup1\n        /* \"#utility.yul\":2929:2941   */\n      revert\n        /* \"#utility.yul\":2891:2943   */\n    tag_535:\n        /* \"#utility.yul\":2962:2991   */\n      tag_536\n        /* \"#utility.yul\":2981:2990   */\n      dup4\n        /* \"#utility.yul\":2962:2991   */\n      tag_499\n      jump\t// in\n    tag_536:\n        /* \"#utility.yul\":2952:2991   */\n      swap2\n      pop\n        /* \"#utility.yul\":3042:3044   */\n      0x20\n        /* \"#utility.yul\":3031:3040   */\n      dup4\n        /* \"#utility.yul\":3027:3045   */\n      add\n        /* \"#utility.yul\":3014:3046   */\n      calldataload\n        /* \"#utility.yul\":3069:3087   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3061:3067   */\n      dup2\n        /* \"#utility.yul\":3058:3088   */\n      gt\n        /* \"#utility.yul\":3055:3105   */\n      iszero\n      tag_537\n      jumpi\n        /* \"#utility.yul\":3101:3102   */\n      0x00\n        /* \"#utility.yul\":3098:3099   */\n      dup1\n        /* \"#utility.yul\":3091:3103   */\n      revert\n        /* \"#utility.yul\":3055:3105   */\n    tag_537:\n        /* \"#utility.yul\":3124:3173   */\n      tag_538\n        /* \"#utility.yul\":3165:3172   */\n      dup6\n        /* \"#utility.yul\":3156:3162   */\n      dup3\n        /* \"#utility.yul\":3145:3154   */\n      dup7\n        /* \"#utility.yul\":3141:3163   */\n      add\n        /* \"#utility.yul\":3124:3173   */\n      tag_501\n      jump\t// in\n    tag_538:\n        /* \"#utility.yul\":3114:3173   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2785:3179   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3184:3506   */\n    tag_101:\n        /* \"#utility.yul\":3261:3267   */\n      0x00\n        /* \"#utility.yul\":3269:3275   */\n      dup1\n        /* \"#utility.yul\":3277:3283   */\n      0x00\n        /* \"#utility.yul\":3330:3332   */\n      0x60\n        /* \"#utility.yul\":3318:3327   */\n      dup5\n        /* \"#utility.yul\":3309:3316   */\n      dup7\n        /* \"#utility.yul\":3305:3328   */\n      sub\n        /* \"#utility.yul\":3301:3333   */\n      slt\n        /* \"#utility.yul\":3298:3350   */\n      iszero\n      tag_540\n      jumpi\n        /* \"#utility.yul\":3346:3347   */\n      0x00\n        /* \"#utility.yul\":3343:3344   */\n      dup1\n        /* \"#utility.yul\":3336:3348   */\n      revert\n        /* \"#utility.yul\":3298:3350   */\n    tag_540:\n        /* \"#utility.yul\":3369:3398   */\n      tag_541\n        /* \"#utility.yul\":3388:3397   */\n      dup5\n        /* \"#utility.yul\":3369:3398   */\n      tag_499\n      jump\t// in\n    tag_541:\n        /* \"#utility.yul\":3359:3398   */\n      swap6\n        /* \"#utility.yul\":3445:3447   */\n      0x20\n        /* \"#utility.yul\":3430:3448   */\n      dup6\n      add\n        /* \"#utility.yul\":3417:3449   */\n      calldataload\n      swap6\n      pop\n        /* \"#utility.yul\":3496:3498   */\n      0x40\n        /* \"#utility.yul\":3481:3499   */\n      swap1\n      swap5\n      add\n        /* \"#utility.yul\":3468:3500   */\n      calldataload\n      swap4\n        /* \"#utility.yul\":3184:3506   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3952:4240   */\n    tag_502:\n        /* \"#utility.yul\":3993:3996   */\n      0x00\n        /* \"#utility.yul\":4031:4036   */\n      dup2\n        /* \"#utility.yul\":4025:4037   */\n      mload\n        /* \"#utility.yul\":4058:4064   */\n      dup1\n        /* \"#utility.yul\":4053:4056   */\n      dup5\n        /* \"#utility.yul\":4046:4065   */\n      mstore\n        /* \"#utility.yul\":4114:4120   */\n      dup1\n        /* \"#utility.yul\":4107:4111   */\n      0x20\n        /* \"#utility.yul\":4100:4105   */\n      dup5\n        /* \"#utility.yul\":4096:4112   */\n      add\n        /* \"#utility.yul\":4089:4093   */\n      0x20\n        /* \"#utility.yul\":4084:4087   */\n      dup7\n        /* \"#utility.yul\":4080:4094   */\n      add\n        /* \"#utility.yul\":4074:4121   */\n      mcopy\n        /* \"#utility.yul\":4166:4167   */\n      0x00\n        /* \"#utility.yul\":4159:4163   */\n      0x20\n        /* \"#utility.yul\":4150:4156   */\n      dup3\n        /* \"#utility.yul\":4145:4148   */\n      dup7\n        /* \"#utility.yul\":4141:4157   */\n      add\n        /* \"#utility.yul\":4137:4164   */\n      add\n        /* \"#utility.yul\":4130:4168   */\n      mstore\n        /* \"#utility.yul\":4229:4233   */\n      0x20\n        /* \"#utility.yul\":4222:4224   */\n      0x1f\n        /* \"#utility.yul\":4218:4225   */\n      not\n        /* \"#utility.yul\":4213:4215   */\n      0x1f\n        /* \"#utility.yul\":4205:4211   */\n      dup4\n        /* \"#utility.yul\":4201:4216   */\n      add\n        /* \"#utility.yul\":4197:4226   */\n      and\n        /* \"#utility.yul\":4192:4195   */\n      dup6\n        /* \"#utility.yul\":4188:4227   */\n      add\n        /* \"#utility.yul\":4184:4234   */\n      add\n        /* \"#utility.yul\":4177:4234   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":3952:4240   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4245:4785   */\n    tag_127:\n        /* \"#utility.yul\":4527:4528   */\n      0x01\n        /* \"#utility.yul\":4523:4524   */\n      dup1\n        /* \"#utility.yul\":4518:4521   */\n      0xa0\n        /* \"#utility.yul\":4514:4525   */\n      shl\n        /* \"#utility.yul\":4510:4529   */\n      sub\n        /* \"#utility.yul\":4502:4508   */\n      dup7\n        /* \"#utility.yul\":4498:4530   */\n      and\n        /* \"#utility.yul\":4487:4496   */\n      dup2\n        /* \"#utility.yul\":4480:4531   */\n      mstore\n        /* \"#utility.yul\":4567:4573   */\n      dup5\n        /* \"#utility.yul\":4562:4564   */\n      0x20\n        /* \"#utility.yul\":4551:4560   */\n      dup3\n        /* \"#utility.yul\":4547:4565   */\n      add\n        /* \"#utility.yul\":4540:4574   */\n      mstore\n        /* \"#utility.yul\":4610:4613   */\n      0xa0\n        /* \"#utility.yul\":4605:4607   */\n      0x40\n        /* \"#utility.yul\":4594:4603   */\n      dup3\n        /* \"#utility.yul\":4590:4608   */\n      add\n        /* \"#utility.yul\":4583:4614   */\n      mstore\n        /* \"#utility.yul\":4461:4465   */\n      0x00\n        /* \"#utility.yul\":4631:4676   */\n      tag_548\n        /* \"#utility.yul\":4671:4674   */\n      0xa0\n        /* \"#utility.yul\":4660:4669   */\n      dup4\n        /* \"#utility.yul\":4656:4675   */\n      add\n        /* \"#utility.yul\":4648:4654   */\n      dup7\n        /* \"#utility.yul\":4631:4676   */\n      tag_502\n      jump\t// in\n    tag_548:\n        /* \"#utility.yul\":4719:4733   */\n      swap4\n      iszero\n        /* \"#utility.yul\":4712:4734   */\n      iszero\n        /* \"#utility.yul\":4707:4709   */\n      0x60\n        /* \"#utility.yul\":4692:4710   */\n      dup4\n      add\n        /* \"#utility.yul\":4685:4735   */\n      mstore\n      pop\n        /* \"#utility.yul\":4766:4769   */\n      0x80\n        /* \"#utility.yul\":4751:4770   */\n      add\n        /* \"#utility.yul\":4744:4779   */\n      mstore\n        /* \"#utility.yul\":4623:4676   */\n      swap4\n        /* \"#utility.yul\":4245:4785   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4790:5009   */\n    tag_139:\n        /* \"#utility.yul\":4939:4941   */\n      0x20\n        /* \"#utility.yul\":4928:4937   */\n      dup2\n        /* \"#utility.yul\":4921:4942   */\n      mstore\n        /* \"#utility.yul\":4902:4906   */\n      0x00\n        /* \"#utility.yul\":4959:5003   */\n      tag_492\n        /* \"#utility.yul\":4999:5001   */\n      0x20\n        /* \"#utility.yul\":4988:4997   */\n      dup4\n        /* \"#utility.yul\":4984:5002   */\n      add\n        /* \"#utility.yul\":4976:4982   */\n      dup5\n        /* \"#utility.yul\":4959:5003   */\n      tag_502\n      jump\t// in\n        /* \"#utility.yul\":5014:5476   */\n    tag_151:\n        /* \"#utility.yul\":5100:5106   */\n      0x00\n        /* \"#utility.yul\":5108:5114   */\n      dup1\n        /* \"#utility.yul\":5116:5122   */\n      0x00\n        /* \"#utility.yul\":5169:5171   */\n      0x60\n        /* \"#utility.yul\":5157:5166   */\n      dup5\n        /* \"#utility.yul\":5148:5155   */\n      dup7\n        /* \"#utility.yul\":5144:5167   */\n      sub\n        /* \"#utility.yul\":5140:5172   */\n      slt\n        /* \"#utility.yul\":5137:5189   */\n      iszero\n      tag_552\n      jumpi\n        /* \"#utility.yul\":5185:5186   */\n      0x00\n        /* \"#utility.yul\":5182:5183   */\n      dup1\n        /* \"#utility.yul\":5175:5187   */\n      revert\n        /* \"#utility.yul\":5137:5189   */\n    tag_552:\n        /* \"#utility.yul\":5208:5237   */\n      tag_553\n        /* \"#utility.yul\":5227:5236   */\n      dup5\n        /* \"#utility.yul\":5208:5237   */\n      tag_499\n      jump\t// in\n    tag_553:\n        /* \"#utility.yul\":5198:5237   */\n      swap3\n      pop\n        /* \"#utility.yul\":5284:5286   */\n      0x20\n        /* \"#utility.yul\":5273:5282   */\n      dup5\n        /* \"#utility.yul\":5269:5287   */\n      add\n        /* \"#utility.yul\":5256:5288   */\n      calldataload\n        /* \"#utility.yul\":5246:5288   */\n      swap2\n      pop\n        /* \"#utility.yul\":5339:5341   */\n      0x40\n        /* \"#utility.yul\":5328:5337   */\n      dup5\n        /* \"#utility.yul\":5324:5342   */\n      add\n        /* \"#utility.yul\":5311:5343   */\n      calldataload\n        /* \"#utility.yul\":5366:5384   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":5358:5364   */\n      dup2\n        /* \"#utility.yul\":5355:5385   */\n      gt\n        /* \"#utility.yul\":5352:5402   */\n      iszero\n      tag_554\n      jumpi\n        /* \"#utility.yul\":5398:5399   */\n      0x00\n        /* \"#utility.yul\":5395:5396   */\n      dup1\n        /* \"#utility.yul\":5388:5400   */\n      revert\n        /* \"#utility.yul\":5352:5402   */\n    tag_554:\n        /* \"#utility.yul\":5421:5470   */\n      tag_555\n        /* \"#utility.yul\":5462:5469   */\n      dup7\n        /* \"#utility.yul\":5453:5459   */\n      dup3\n        /* \"#utility.yul\":5442:5451   */\n      dup8\n        /* \"#utility.yul\":5438:5460   */\n      add\n        /* \"#utility.yul\":5421:5470   */\n      tag_501\n      jump\t// in\n    tag_555:\n        /* \"#utility.yul\":5411:5470   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":5014:5476   */\n      swap3\n      pop\n      swap3\n      pop\n      swap3\n      jump\t// out\n        /* \"#utility.yul\":5481:5817   */\n    tag_177:\n        /* \"#utility.yul\":5683:5685   */\n      0x20\n        /* \"#utility.yul\":5665:5686   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":5722:5724   */\n      0x0c\n        /* \"#utility.yul\":5702:5720   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":5695:5725   */\n      mstore\n      shl(0xa1, 0x2737ba1030b71030b236b4b7)\n        /* \"#utility.yul\":5756:5758   */\n      0x40\n        /* \"#utility.yul\":5741:5759   */\n      dup3\n      add\n        /* \"#utility.yul\":5734:5776   */\n      mstore\n        /* \"#utility.yul\":5808:5810   */\n      0x60\n        /* \"#utility.yul\":5793:5811   */\n      add\n      swap1\n        /* \"#utility.yul\":5481:5817   */\n      jump\t// out\n        /* \"#utility.yul\":5822:6172   */\n    tag_181:\n        /* \"#utility.yul\":6024:6026   */\n      0x20\n        /* \"#utility.yul\":6006:6027   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6063:6065   */\n      0x1a\n        /* \"#utility.yul\":6043:6061   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6036:6066   */\n      mstore\n        /* \"#utility.yul\":6102:6130   */\n      0x5472616e73616374696f6e20646f6573206e6f74206578697374000000000000\n        /* \"#utility.yul\":6097:6099   */\n      0x40\n        /* \"#utility.yul\":6082:6100   */\n      dup3\n      add\n        /* \"#utility.yul\":6075:6131   */\n      mstore\n        /* \"#utility.yul\":6163:6165   */\n      0x60\n        /* \"#utility.yul\":6148:6166   */\n      add\n      swap1\n        /* \"#utility.yul\":5822:6172   */\n      jump\t// out\n        /* \"#utility.yul\":6177:6304   */\n    tag_185:\n        /* \"#utility.yul\":6238:6248   */\n      0x4e487b71\n        /* \"#utility.yul\":6233:6236   */\n      0xe0\n        /* \"#utility.yul\":6229:6249   */\n      shl\n        /* \"#utility.yul\":6226:6227   */\n      0x00\n        /* \"#utility.yul\":6219:6250   */\n      mstore\n        /* \"#utility.yul\":6269:6273   */\n      0x32\n        /* \"#utility.yul\":6266:6267   */\n      0x04\n        /* \"#utility.yul\":6259:6274   */\n      mstore\n        /* \"#utility.yul\":6293:6297   */\n      0x24\n        /* \"#utility.yul\":6290:6291   */\n      0x00\n        /* \"#utility.yul\":6283:6298   */\n      revert\n        /* \"#utility.yul\":6309:6661   */\n    tag_189:\n        /* \"#utility.yul\":6511:6513   */\n      0x20\n        /* \"#utility.yul\":6493:6514   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":6550:6552   */\n      0x1c\n        /* \"#utility.yul\":6530:6548   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":6523:6553   */\n      mstore\n        /* \"#utility.yul\":6589:6619   */\n      0x5472616e73616374696f6e20616c726561647920657865637574656400000000\n        /* \"#utility.yul\":6584:6586   */\n      0x40\n        /* \"#utility.yul\":6569:6587   */\n      dup3\n      add\n        /* \"#utility.yul\":6562:6620   */\n      mstore\n        /* \"#utility.yul\":6652:6654   */\n      0x60\n        /* \"#utility.yul\":6637:6655   */\n      add\n      swap1\n        /* \"#utility.yul\":6309:6661   */\n      jump\t// out\n        /* \"#utility.yul\":7020:7147   */\n    tag_503:\n        /* \"#utility.yul\":7081:7091   */\n      0x4e487b71\n        /* \"#utility.yul\":7076:7079   */\n      0xe0\n        /* \"#utility.yul\":7072:7092   */\n      shl\n        /* \"#utility.yul\":7069:7070   */\n      0x00\n        /* \"#utility.yul\":7062:7093   */\n      mstore\n        /* \"#utility.yul\":7112:7116   */\n      0x11\n        /* \"#utility.yul\":7109:7110   */\n      0x04\n        /* \"#utility.yul\":7102:7117   */\n      mstore\n        /* \"#utility.yul\":7136:7140   */\n      0x24\n        /* \"#utility.yul\":7133:7134   */\n      0x00\n        /* \"#utility.yul\":7126:7141   */\n      revert\n        /* \"#utility.yul\":7152:7280   */\n    tag_198:\n        /* \"#utility.yul\":7219:7228   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":7240:7251   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":7237:7274   */\n      iszero\n      tag_171\n      jumpi\n        /* \"#utility.yul\":7254:7272   */\n      tag_171\n      tag_503\n      jump\t// in\n        /* \"#utility.yul\":7665:7942   */\n    tag_242:\n        /* \"#utility.yul\":7732:7738   */\n      0x00\n        /* \"#utility.yul\":7785:7787   */\n      0x20\n        /* \"#utility.yul\":7773:7782   */\n      dup3\n        /* \"#utility.yul\":7764:7771   */\n      dup5\n        /* \"#utility.yul\":7760:7783   */\n      sub\n        /* \"#utility.yul\":7756:7788   */\n      slt\n        /* \"#utility.yul\":7753:7805   */\n      iszero\n      tag_567\n      jumpi\n        /* \"#utility.yul\":7801:7802   */\n      0x00\n        /* \"#utility.yul\":7798:7799   */\n      dup1\n        /* \"#utility.yul\":7791:7803   */\n      revert\n        /* \"#utility.yul\":7753:7805   */\n    tag_567:\n        /* \"#utility.yul\":7833:7842   */\n      dup2\n        /* \"#utility.yul\":7827:7843   */\n      mload\n        /* \"#utility.yul\":7886:7891   */\n      dup1\n        /* \"#utility.yul\":7879:7892   */\n      iszero\n        /* \"#utility.yul\":7872:7893   */\n      iszero\n        /* \"#utility.yul\":7865:7870   */\n      dup2\n        /* \"#utility.yul\":7862:7894   */\n      eq\n        /* \"#utility.yul\":7852:7912   */\n      tag_492\n      jumpi\n        /* \"#utility.yul\":7908:7909   */\n      0x00\n        /* \"#utility.yul\":7905:7906   */\n      dup1\n        /* \"#utility.yul\":7898:7910   */\n      revert\n        /* \"#utility.yul\":8511:8891   */\n    tag_279:\n        /* \"#utility.yul\":8590:8591   */\n      0x01\n        /* \"#utility.yul\":8586:8598   */\n      dup2\n      dup2\n      shr\n      swap1\n        /* \"#utility.yul\":8633:8645   */\n      dup3\n      and\n      dup1\n        /* \"#utility.yul\":8654:8715   */\n      tag_572\n      jumpi\n        /* \"#utility.yul\":8708:8712   */\n      0x7f\n        /* \"#utility.yul\":8700:8706   */\n      dup3\n        /* \"#utility.yul\":8696:8713   */\n      and\n        /* \"#utility.yul\":8686:8713   */\n      swap2\n      pop\n        /* \"#utility.yul\":8654:8715   */\n    tag_572:\n        /* \"#utility.yul\":8761:8763   */\n      0x20\n        /* \"#utility.yul\":8753:8759   */\n      dup3\n        /* \"#utility.yul\":8750:8764   */\n      lt\n        /* \"#utility.yul\":8730:8748   */\n      dup2\n        /* \"#utility.yul\":8727:8765   */\n      sub\n        /* \"#utility.yul\":8724:8885   */\n      tag_573\n      jumpi\n        /* \"#utility.yul\":8807:8817   */\n      0x4e487b71\n        /* \"#utility.yul\":8802:8805   */\n      0xe0\n        /* \"#utility.yul\":8798:8818   */\n      shl\n        /* \"#utility.yul\":8795:8796   */\n      0x00\n        /* \"#utility.yul\":8788:8819   */\n      mstore\n        /* \"#utility.yul\":8842:8846   */\n      0x22\n        /* \"#utility.yul\":8839:8840   */\n      0x04\n        /* \"#utility.yul\":8832:8847   */\n      mstore\n        /* \"#utility.yul\":8870:8874   */\n      0x24\n        /* \"#utility.yul\":8867:8868   */\n      0x00\n        /* \"#utility.yul\":8860:8875   */\n      revert\n        /* \"#utility.yul\":8724:8885   */\n    tag_573:\n      pop\n        /* \"#utility.yul\":8511:8891   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":9241:9409   */\n    tag_292:\n        /* \"#utility.yul\":9314:9323   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":9345:9354   */\n      dup2\n      iszero\n        /* \"#utility.yul\":9362:9377   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":9356:9378   */\n      dup5\n      eq\n        /* \"#utility.yul\":9342:9379   */\n      or\n        /* \"#utility.yul\":9332:9403   */\n      tag_171\n      jumpi\n        /* \"#utility.yul\":9383:9401   */\n      tag_171\n      tag_503\n      jump\t// in\n        /* \"#utility.yul\":9414:9631   */\n    tag_295:\n        /* \"#utility.yul\":9454:9455   */\n      0x00\n        /* \"#utility.yul\":9480:9481   */\n      dup3\n        /* \"#utility.yul\":9470:9602   */\n      tag_579\n      jumpi\n        /* \"#utility.yul\":9524:9534   */\n      0x4e487b71\n        /* \"#utility.yul\":9519:9522   */\n      0xe0\n        /* \"#utility.yul\":9515:9535   */\n      shl\n        /* \"#utility.yul\":9512:9513   */\n      0x00\n        /* \"#utility.yul\":9505:9536   */\n      mstore\n        /* \"#utility.yul\":9559:9563   */\n      0x12\n        /* \"#utility.yul\":9556:9557   */\n      0x04\n        /* \"#utility.yul\":9549:9564   */\n      mstore\n        /* \"#utility.yul\":9587:9591   */\n      0x24\n        /* \"#utility.yul\":9584:9585   */\n      0x00\n        /* \"#utility.yul\":9577:9592   */\n      revert\n        /* \"#utility.yul\":9470:9602   */\n    tag_579:\n      pop\n        /* \"#utility.yul\":9616:9625   */\n      div\n      swap1\n        /* \"#utility.yul\":9414:9631   */\n      jump\t// out\n        /* \"#utility.yul\":9636:9761   */\n    tag_297:\n        /* \"#utility.yul\":9701:9710   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":9722:9732   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":9719:9755   */\n      iszero\n      tag_171\n      jumpi\n        /* \"#utility.yul\":9735:9753   */\n      tag_171\n      tag_503\n      jump\t// in\n        /* \"#utility.yul\":10528:11045   */\n    tag_505:\n        /* \"#utility.yul\":10629:10631   */\n      0x1f\n        /* \"#utility.yul\":10624:10627   */\n      dup3\n        /* \"#utility.yul\":10621:10632   */\n      gt\n        /* \"#utility.yul\":10618:11039   */\n      iszero\n      tag_213\n      jumpi\n        /* \"#utility.yul\":10665:10670   */\n      dup1\n        /* \"#utility.yul\":10662:10663   */\n      0x00\n        /* \"#utility.yul\":10655:10671   */\n      mstore\n        /* \"#utility.yul\":10709:10713   */\n      0x20\n        /* \"#utility.yul\":10706:10707   */\n      0x00\n        /* \"#utility.yul\":10696:10714   */\n      keccak256\n        /* \"#utility.yul\":10779:10781   */\n      0x1f\n        /* \"#utility.yul\":10767:10777   */\n      dup5\n        /* \"#utility.yul\":10763:10782   */\n      add\n        /* \"#utility.yul\":10760:10761   */\n      0x05\n        /* \"#utility.yul\":10756:10783   */\n      shr\n        /* \"#utility.yul\":10750:10754   */\n      dup2\n        /* \"#utility.yul\":10746:10784   */\n      add\n        /* \"#utility.yul\":10815:10819   */\n      0x20\n        /* \"#utility.yul\":10803:10813   */\n      dup6\n        /* \"#utility.yul\":10800:10820   */\n      lt\n        /* \"#utility.yul\":10797:10844   */\n      iszero\n      tag_588\n      jumpi\n      pop\n        /* \"#utility.yul\":10838:10842   */\n      dup1\n        /* \"#utility.yul\":10797:10844   */\n    tag_588:\n        /* \"#utility.yul\":10893:10895   */\n      0x1f\n        /* \"#utility.yul\":10888:10891   */\n      dup5\n        /* \"#utility.yul\":10884:10896   */\n      add\n        /* \"#utility.yul\":10881:10882   */\n      0x05\n        /* \"#utility.yul\":10877:10897   */\n      shr\n        /* \"#utility.yul\":10871:10875   */\n      dup3\n        /* \"#utility.yul\":10867:10898   */\n      add\n        /* \"#utility.yul\":10857:10898   */\n      swap2\n      pop\n        /* \"#utility.yul\":10948:11029   */\n    tag_589:\n        /* \"#utility.yul\":10966:10968   */\n      dup2\n        /* \"#utility.yul\":10959:10964   */\n      dup2\n        /* \"#utility.yul\":10956:10969   */\n      lt\n        /* \"#utility.yul\":10948:11029   */\n      iszero\n      tag_591\n      jumpi\n        /* \"#utility.yul\":11025:11026   */\n      0x00\n        /* \"#utility.yul\":11011:11027   */\n      dup2\n      sstore\n        /* \"#utility.yul\":10992:10993   */\n      0x01\n        /* \"#utility.yul\":10981:10994   */\n      add\n        /* \"#utility.yul\":10948:11029   */\n      jump(tag_589)\n    tag_591:\n        /* \"#utility.yul\":10952:10955   */\n      pop\n      pop\n        /* \"#utility.yul\":10528:11045   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":11221:12562   */\n    tag_335:\n        /* \"#utility.yul\":11345:11348   */\n      dup2\n        /* \"#utility.yul\":11339:11349   */\n      mload\n        /* \"#utility.yul\":11372:11390   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":11364:11370   */\n      dup2\n        /* \"#utility.yul\":11361:11391   */\n      gt\n        /* \"#utility.yul\":11358:11414   */\n      iszero\n      tag_595\n      jumpi\n        /* \"#utility.yul\":11394:11412   */\n      tag_595\n      tag_500\n      jump\t// in\n    tag_595:\n        /* \"#utility.yul\":11423:11519   */\n      tag_596\n        /* \"#utility.yul\":11512:11518   */\n      dup2\n        /* \"#utility.yul\":11472:11510   */\n      tag_597\n        /* \"#utility.yul\":11504:11508   */\n      dup5\n        /* \"#utility.yul\":11498:11509   */\n      sload\n        /* \"#utility.yul\":11472:11510   */\n      tag_279\n      jump\t// in\n    tag_597:\n        /* \"#utility.yul\":11466:11470   */\n      dup5\n        /* \"#utility.yul\":11423:11519   */\n      tag_505\n      jump\t// in\n    tag_596:\n        /* \"#utility.yul\":11574:11578   */\n      0x20\n      dup1\n        /* \"#utility.yul\":11631:11633   */\n      0x1f\n        /* \"#utility.yul\":11620:11634   */\n      dup4\n      gt\n        /* \"#utility.yul\":11648:11649   */\n      0x01\n        /* \"#utility.yul\":11643:12305   */\n      dup2\n      eq\n      tag_599\n      jumpi\n        /* \"#utility.yul\":12349:12350   */\n      0x00\n        /* \"#utility.yul\":12366:12372   */\n      dup5\n        /* \"#utility.yul\":12363:12452   */\n      iszero\n      tag_600\n      jumpi\n      pop\n        /* \"#utility.yul\":12418:12437   */\n      dup6\n      dup4\n      add\n        /* \"#utility.yul\":12412:12438   */\n      mload\n        /* \"#utility.yul\":12363:12452   */\n    tag_600:\n      not(0x00)\n        /* \"#utility.yul\":11178:11179   */\n      0x03\n        /* \"#utility.yul\":11174:11185   */\n      dup7\n      swap1\n      shl\n        /* \"#utility.yul\":11170:11194   */\n      shr\n        /* \"#utility.yul\":11166:11195   */\n      not\n        /* \"#utility.yul\":11156:11196   */\n      and\n        /* \"#utility.yul\":11202:11203   */\n      0x01\n        /* \"#utility.yul\":11198:11209   */\n      dup6\n      swap1\n      shl\n        /* \"#utility.yul\":11153:11210   */\n      or\n        /* \"#utility.yul\":12465:12546   */\n      dup6\n      sstore\n        /* \"#utility.yul\":11613:12556   */\n      jump(tag_598)\n        /* \"#utility.yul\":11643:12305   */\n    tag_599:\n        /* \"#utility.yul\":10475:10476   */\n      0x00\n        /* \"#utility.yul\":10468:10482   */\n      dup6\n      dup2\n      mstore\n        /* \"#utility.yul\":10512:10516   */\n      0x20\n        /* \"#utility.yul\":10499:10517   */\n      dup2\n      keccak256\n      not(0x1f)\n        /* \"#utility.yul\":11679:11699   */\n      dup7\n      and\n      swap2\n        /* \"#utility.yul\":11796:12032   */\n    tag_603:\n        /* \"#utility.yul\":11810:11817   */\n      dup3\n        /* \"#utility.yul\":11807:11808   */\n      dup2\n        /* \"#utility.yul\":11804:11818   */\n      lt\n        /* \"#utility.yul\":11796:12032   */\n      iszero\n      tag_605\n      jumpi\n        /* \"#utility.yul\":11899:11918   */\n      dup9\n      dup7\n      add\n        /* \"#utility.yul\":11893:11919   */\n      mload\n        /* \"#utility.yul\":11878:11920   */\n      dup3\n      sstore\n        /* \"#utility.yul\":11991:12018   */\n      swap5\n      dup5\n      add\n      swap5\n        /* \"#utility.yul\":11959:11960   */\n      0x01\n        /* \"#utility.yul\":11947:11961   */\n      swap1\n      swap2\n      add\n      swap1\n        /* \"#utility.yul\":11826:11845   */\n      dup5\n      add\n        /* \"#utility.yul\":11796:12032   */\n      jump(tag_603)\n    tag_605:\n        /* \"#utility.yul\":11800:11803   */\n      pop\n        /* \"#utility.yul\":12060:12066   */\n      dup6\n        /* \"#utility.yul\":12051:12058   */\n      dup3\n        /* \"#utility.yul\":12048:12067   */\n      lt\n        /* \"#utility.yul\":12045:12246   */\n      iszero\n      tag_606\n      jumpi\n        /* \"#utility.yul\":12121:12140   */\n      dup8\n      dup6\n      add\n        /* \"#utility.yul\":12115:12141   */\n      mload\n      not(0x00)\n        /* \"#utility.yul\":12204:12205   */\n      0x03\n        /* \"#utility.yul\":12200:12214   */\n      dup9\n      swap1\n      shl\n        /* \"#utility.yul\":12216:12219   */\n      0xf8\n        /* \"#utility.yul\":12196:12220   */\n      and\n        /* \"#utility.yul\":12192:12229   */\n      shr\n        /* \"#utility.yul\":12188:12230   */\n      not\n        /* \"#utility.yul\":12173:12231   */\n      and\n        /* \"#utility.yul\":12158:12232   */\n      dup2\n      sstore\n        /* \"#utility.yul\":12045:12246   */\n    tag_606:\n      pop\n      pop\n        /* \"#utility.yul\":12292:12293   */\n      0x01\n        /* \"#utility.yul\":12283:12289   */\n      dup5\n        /* \"#utility.yul\":12280:12281   */\n      0x01\n        /* \"#utility.yul\":12276:12290   */\n      shl\n        /* \"#utility.yul\":12272:12294   */\n      add\n        /* \"#utility.yul\":12266:12270   */\n      dup6\n        /* \"#utility.yul\":12259:12295   */\n      sstore\n        /* \"#utility.yul\":11613:12556   */\n    tag_598:\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":11221:12562   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":12913:13754   */\n    tag_362:\n        /* \"#utility.yul\":13039:13042   */\n      0x00\n        /* \"#utility.yul\":13068:13069   */\n      dup1\n        /* \"#utility.yul\":13101:13107   */\n      dup4\n        /* \"#utility.yul\":13095:13108   */\n      sload\n        /* \"#utility.yul\":13131:13167   */\n      tag_609\n        /* \"#utility.yul\":13157:13166   */\n      dup2\n        /* \"#utility.yul\":13131:13167   */\n      tag_279\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":13186:13187   */\n      0x01\n        /* \"#utility.yul\":13203:13220   */\n      dup3\n      dup2\n      and\n        /* \"#utility.yul\":13229:13362   */\n      dup1\n      iszero\n      tag_611\n      jumpi\n        /* \"#utility.yul\":13376:13377   */\n      0x01\n        /* \"#utility.yul\":13371:13729   */\n      dup2\n      eq\n      tag_612\n      jumpi\n        /* \"#utility.yul\":13196:13729   */\n      jump(tag_610)\n        /* \"#utility.yul\":13229:13362   */\n    tag_611:\n      not(0xff)\n        /* \"#utility.yul\":13262:13286   */\n      dup5\n      and\n        /* \"#utility.yul\":13250:13287   */\n      dup8\n      mstore\n        /* \"#utility.yul\":13335:13349   */\n      dup3\n      iszero\n        /* \"#utility.yul\":13328:13350   */\n      iszero\n        /* \"#utility.yul\":13316:13351   */\n      dup4\n      mul\n        /* \"#utility.yul\":13307:13352   */\n      dup8\n      add\n      swap5\n      pop\n        /* \"#utility.yul\":13229:13362   */\n      jump(tag_610)\n        /* \"#utility.yul\":13371:13729   */\n    tag_612:\n        /* \"#utility.yul\":13402:13408   */\n      dup8\n        /* \"#utility.yul\":13399:13400   */\n      0x00\n        /* \"#utility.yul\":13392:13409   */\n      mstore\n        /* \"#utility.yul\":13432:13436   */\n      0x20\n        /* \"#utility.yul\":13477:13481   */\n      dup1\n        /* \"#utility.yul\":13474:13475   */\n      0x00\n        /* \"#utility.yul\":13464:13482   */\n      keccak256\n        /* \"#utility.yul\":13504:13505   */\n      0x00\n        /* \"#utility.yul\":13518:13683   */\n    tag_613:\n        /* \"#utility.yul\":13532:13538   */\n      dup6\n        /* \"#utility.yul\":13529:13530   */\n      dup2\n        /* \"#utility.yul\":13526:13539   */\n      lt\n        /* \"#utility.yul\":13518:13683   */\n      iszero\n      tag_615\n      jumpi\n        /* \"#utility.yul\":13610:13624   */\n      dup2\n      sload\n        /* \"#utility.yul\":13597:13608   */\n      dup11\n      dup3\n      add\n        /* \"#utility.yul\":13590:13625   */\n      mstore\n        /* \"#utility.yul\":13653:13669   */\n      swap1\n      dup5\n      add\n      swap1\n        /* \"#utility.yul\":13547:13557   */\n      dup3\n      add\n        /* \"#utility.yul\":13518:13683   */\n      jump(tag_613)\n    tag_615:\n        /* \"#utility.yul\":13522:13525   */\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":13712:13718   */\n      dup3\n        /* \"#utility.yul\":13707:13710   */\n      dup8\n        /* \"#utility.yul\":13703:13719   */\n      add\n        /* \"#utility.yul\":13696:13719   */\n      swap5\n      pop\n        /* \"#utility.yul\":13196:13729   */\n    tag_610:\n      pop\n        /* \"#utility.yul\":13745:13748   */\n      swap3\n      swap7\n        /* \"#utility.yul\":12913:13754   */\n      swap6\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":14314:14498   */\n    tag_406:\n        /* \"#utility.yul\":14384:14390   */\n      0x00\n        /* \"#utility.yul\":14437:14439   */\n      0x20\n        /* \"#utility.yul\":14425:14434   */\n      dup3\n        /* \"#utility.yul\":14416:14423   */\n      dup5\n        /* \"#utility.yul\":14412:14435   */\n      sub\n        /* \"#utility.yul\":14408:14440   */\n      slt\n        /* \"#utility.yul\":14405:14457   */\n      iszero\n      tag_619\n      jumpi\n        /* \"#utility.yul\":14453:14454   */\n      0x00\n        /* \"#utility.yul\":14450:14451   */\n      dup1\n        /* \"#utility.yul\":14443:14455   */\n      revert\n        /* \"#utility.yul\":14405:14457   */\n    tag_619:\n      pop\n        /* \"#utility.yul\":14476:14492   */\n      mload\n      swap2\n        /* \"#utility.yul\":14314:14498   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":15476:15777   */\n    tag_478:\n        /* \"#utility.yul\":15605:15608   */\n      0x00\n        /* \"#utility.yul\":15643:15649   */\n      dup3\n        /* \"#utility.yul\":15637:15650   */\n      mload\n        /* \"#utility.yul\":15689:15695   */\n      dup1\n        /* \"#utility.yul\":15682:15686   */\n      0x20\n        /* \"#utility.yul\":15674:15680   */\n      dup6\n        /* \"#utility.yul\":15670:15687   */\n      add\n        /* \"#utility.yul\":15665:15668   */\n      dup5\n        /* \"#utility.yul\":15659:15696   */\n      mcopy\n        /* \"#utility.yul\":15751:15752   */\n      0x00\n        /* \"#utility.yul\":15715:15731   */\n      swap3\n      add\n        /* \"#utility.yul\":15740:15753   */\n      swap2\n      dup3\n      mstore\n      pop\n        /* \"#utility.yul\":15715:15731   */\n      swap2\n        /* \"#utility.yul\":15476:15777   */\n      swap1\n      pop\n      jump\t// out\n    stop\n    data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d 360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n    data_9b87106a812d214d41ad9b68a21119e2948eaaf1040375c939ec808b8862455c 65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a\n    data_b3da67d1b252aeab7c8063542d95e75f82a5307a82535949bc38f7cf7ba8897f 02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800\n    data_cb864c43dd5d441bb6271f424f11befa622c032dfd374d226e26fbbdb782b8f8 a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775\n\n    auxdata: 0xa2646970667358221220e641ad3c449ccb231cc153557173105ee11a6d50f55d942a6471de7513fbb93864736f6c63430008190033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_2232": {
									"entryPoint": null,
									"id": 2232,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_disableInitializers_584": {
									"entryPoint": 33,
									"id": 584,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getInitializableStorage_615": {
									"entryPoint": null,
									"id": 615,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:216:18",
										"nodeType": "YulBlock",
										"src": "0:216:18",
										"statements": [
											{
												"nativeSrc": "6:3:18",
												"nodeType": "YulBlock",
												"src": "6:3:18",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "113:101:18",
													"nodeType": "YulBlock",
													"src": "113:101:18",
													"statements": [
														{
															"nativeSrc": "123:26:18",
															"nodeType": "YulAssignment",
															"src": "123:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "135:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "135:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "146:2:18",
																		"nodeType": "YulLiteral",
																		"src": "146:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "131:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "131:3:18"
																},
																"nativeSrc": "131:18:18",
																"nodeType": "YulFunctionCall",
																"src": "131:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "123:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "123:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "165:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "165:9:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "180:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "180:6:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "196:2:18",
																								"nodeType": "YulLiteral",
																								"src": "196:2:18",
																								"type": "",
																								"value": "64"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "200:1:18",
																								"nodeType": "YulLiteral",
																								"src": "200:1:18",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "192:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "192:3:18"
																						},
																						"nativeSrc": "192:10:18",
																						"nodeType": "YulFunctionCall",
																						"src": "192:10:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "204:1:18",
																						"nodeType": "YulLiteral",
																						"src": "204:1:18",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "188:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "188:3:18"
																				},
																				"nativeSrc": "188:18:18",
																				"nodeType": "YulFunctionCall",
																				"src": "188:18:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "176:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "176:3:18"
																		},
																		"nativeSrc": "176:31:18",
																		"nodeType": "YulFunctionCall",
																		"src": "176:31:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "158:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "158:6:18"
																},
																"nativeSrc": "158:50:18",
																"nodeType": "YulFunctionCall",
																"src": "158:50:18"
															},
															"nativeSrc": "158:50:18",
															"nodeType": "YulExpressionStatement",
															"src": "158:50:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed",
												"nativeSrc": "14:200:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "82:9:18",
														"nodeType": "YulTypedName",
														"src": "82:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "93:6:18",
														"nodeType": "YulTypedName",
														"src": "93:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "104:4:18",
														"nodeType": "YulTypedName",
														"src": "104:4:18",
														"type": ""
													}
												],
												"src": "14:200:18"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(64, 1), 1)))\n    }\n}",
									"id": 18,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405230608052348015610013575f80fd5b5061001c610021565b6100d3565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff16156100715760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b03908116146100d05780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b608051611fb06100f95f395f818161144f0152818161147801526115db0152611fb05ff3fe6080604052600436106101b2575f3560e01c806382e717f7116100e7578063c01a8c8411610087578063d547741f11610062578063d547741f146104db578063e63ab1e9146104fa578063ee22610b1461051a578063f72c0d8b14610539575f80fd5b8063c01a8c8414610488578063c63a6ad2146104a7578063c6427474146104bc575f80fd5b80639ace38c2116100c25780639ace38c2146103f4578063a217fddf14610424578063a5ce413b14610437578063ad3cb1cc1461044b575f80fd5b806382e717f7146103ac5780638456cb59146103c157806391d14854146103d5575f80fd5b80634f1ef286116101525780637547c7a31161012d5780637547c7a31461031557806375b238fc146103345780637a1ac61e1461035457806380f59a6514610373575f80fd5b80634f1ef286146102d857806352d1902d146102eb5780635c975abb146102ff575f80fd5b8063248a9ca31161018d578063248a9ca3146102595780632f2ff15d1461028657806336568abe146102a55780633f4ba83a146102c4575f80fd5b806301ffc9a7146101bd57806316934fc4146101f157806320ea8d8614610238575f80fd5b366101b957005b5f80fd5b3480156101c8575f80fd5b506101dc6101d7366004611960565b61056c565b60405190151581526020015b60405180910390f35b3480156101fc575f80fd5b5061022361020b3660046119a2565b60356020525f90815260409020805460019091015482565b604080519283526020830191909152016101e8565b348015610243575f80fd5b506102576102523660046119bb565b6105a2565b005b348015610264575f80fd5b506102786102733660046119bb565b610739565b6040519081526020016101e8565b348015610291575f80fd5b506102576102a03660046119d2565b610759565b3480156102b0575f80fd5b506102576102bf3660046119d2565b61077b565b3480156102cf575f80fd5b506102576107b3565b6102576102e6366004611a99565b6107d5565b3480156102f6575f80fd5b506102786107f4565b34801561030a575f80fd5b505f5460ff166101dc565b348015610320575f80fd5b5061025761032f3660046119bb565b61080f565b34801561033f575f80fd5b506102785f80516020611f5b83398151915281565b34801561035f575f80fd5b5061025761036e366004611ae4565b610936565b34801561037e575f80fd5b506101dc61038d3660046119d2565b603260209081525f928352604080842090915290825290205460ff1681565b3480156103b7575f80fd5b5061027860345481565b3480156103cc575f80fd5b50610257610ac5565b3480156103e0575f80fd5b506101dc6103ef3660046119d2565b610ae4565b3480156103ff575f80fd5b5061041361040e3660046119bb565b610b1a565b6040516101e8959493929190611b42565b34801561042f575f80fd5b506102785f81565b348015610442575f80fd5b50610257610bef565b348015610456575f80fd5b5061047b604051806040016040528060058152602001640352e302e360dc1b81525081565b6040516101e89190611b7c565b348015610493575f80fd5b506102576104a23660046119bb565b610dc6565b3480156104b2575f80fd5b5061027860365481565b3480156104c7575f80fd5b506102576104d6366004611b8e565b610f5a565b3480156104e6575f80fd5b506102576104f53660046119d2565b6110be565b348015610505575f80fd5b506102785f80516020611f1b83398151915281565b348015610525575f80fd5b506102576105343660046119bb565b6110da565b348015610544575f80fd5b506102787f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e381565b5f6001600160e01b03198216637965db0b60e01b148061059c57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6105b95f80516020611f5b83398151915233610ae4565b6105de5760405162461bcd60e51b81526004016105d590611be1565b60405180910390fd5b603354819081106106015760405162461bcd60e51b81526004016105d590611c07565b816033818154811061061557610615611c3e565b5f91825260209091206003600590920201015460ff16156106485760405162461bcd60e51b81526004016105d590611c52565b5f6033848154811061065c5761065c611c3e565b5f91825260208083208784526032825260408085203386529092529220546005909102909101915060ff166106d35760405162461bcd60e51b815260206004820152601960248201527f5472616e73616374696f6e206e6f7420636f6e6669726d65640000000000000060448201526064016105d5565b6001816004015f8282546106e79190611c9d565b90915550505f848152603260209081526040808320338085529252808320805460ff191690555186927fe5c8875c5e14471f806f15f740cd9fd54937d151e9dcf8ad3ba988d6a285e67e91a350505050565b5f9081525f80516020611f3b833981519152602052604090206001015490565b61076282610739565b61076b816112cf565b61077583836112d9565b50505050565b6001600160a01b03811633146107a45760405163334bd91960e11b815260040160405180910390fd5b6107ae828261137a565b505050565b5f80516020611f1b8339815191526107ca816112cf565b6107d26113f3565b50565b6107dd611444565b6107e6826114ea565b6107f08282611514565b5050565b5f6107fd6115d0565b505f80516020611efb83398151915290565b610817611619565b6040516323b872dd60e01b81523360048201523060248201819052604482018390529081906323b872dd906064016020604051808303815f875af1158015610861573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108859190611cb0565b6108c95760405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b60448201526064016105d5565b604080518082018252838152426020808301828152335f8181526035845286902094518555905160019094019390935583518681529081019190915290917fdd2a19c3bdd089cbe77c04f5655f83de0504d6140d12c8667646f55d0557c4dc910160405180910390a25050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff165f8115801561097b5750825b90505f8267ffffffffffffffff1660011480156109975750303b155b9050811580156109a5575080155b156109c35760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff1916600117855583156109ed57845460ff60401b1916600160401b1785555b6109f561165e565b6109fd611666565b610a0561165e565b610a0f5f896112d9565b50610a275f80516020611f1b833981519152896112d9565b50610a3f5f80516020611f5b833981519152896112d9565b50610a6a7f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3896112d9565b50603487905560368690558315610abb57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b5050505050505050565b5f80516020611f1b833981519152610adc816112cf565b6107d2611676565b5f9182525f80516020611f3b833981519152602090815260408084206001600160a01b0393909316845291905290205460ff1690565b60338181548110610b29575f80fd5b5f9182526020909120600590910201805460018201546002830180546001600160a01b039093169450909291610b5e90611ccf565b80601f0160208091040260200160405190810160405280929190818152602001828054610b8a90611ccf565b8015610bd55780601f10610bac57610100808354040283529160200191610bd5565b820191905f5260205f20905b815481529060010190602001808311610bb857829003601f168201915b505050506003830154600490930154919260ff1691905085565b610bf7611619565b335f908152603560209081526040918290208251808401909352805480845260019091015491830191909152610c625760405162461bcd60e51b815260206004820152601060248201526f139bc81d1bdad95b9cc81cdd185ad95960821b60448201526064016105d5565b5f816020015142610c739190611c9d565b90505f6301e1338082603654855f0151610c8d9190611d07565b610c979190611d07565b610ca19190611d1e565b83519091503090819063a9059cbb903390610cbd908690611d3d565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303815f875af1158015610d05573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d299190611cb0565b610d6d5760405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b60448201526064016105d5565b335f81815260356020908152604080832083815560010192909255865182519081529081018590527f6f2d3e000c89d37446b7c0374c0125068ff316d1e3ee302336478a8cd03c2336910160405180910390a250505050565b610ddd5f80516020611f5b83398151915233610ae4565b610df95760405162461bcd60e51b81526004016105d590611be1565b60335481908110610e1c5760405162461bcd60e51b81526004016105d590611c07565b8160338181548110610e3057610e30611c3e565b5f91825260209091206003600590920201015460ff1615610e635760405162461bcd60e51b81526004016105d590611c52565b5f838152603260209081526040808320338452909152902054839060ff1615610ece5760405162461bcd60e51b815260206004820152601d60248201527f5472616e73616374696f6e20616c726561647920636f6e6669726d656400000060448201526064016105d5565b5f60338581548110610ee257610ee2611c3e565b905f5260205f20906005020190506001816004015f828254610f049190611d3d565b90915550505f858152603260209081526040808320338085529252808320805460ff191660011790555187927ff8a17c9136a3ae33364fac05eb088a3cbafee10c1889c88593e20ee2d8e4eb8891a35050505050565b610f715f80516020611f5b83398151915233610ae4565b610f8d5760405162461bcd60e51b81526004016105d590611be1565b603380546040805160a0810182526001600160a01b038781168252602082018781529282018681525f60608401819052608084018190526001860187559590955281517f82a75bdeeae8604d839476ae9efd8b0e15aa447e21bfd7f41283bb54e22c9a826005860290810180546001600160a01b0319169290931691909117825592517f82a75bdeeae8604d839476ae9efd8b0e15aa447e21bfd7f41283bb54e22c9a8384015593519293909290917f82a75bdeeae8604d839476ae9efd8b0e15aa447e21bfd7f41283bb54e22c9a8401906110699082611d9b565b50606082015160038201805460ff191691151591909117905560809091015160049091015560405181907fd0b5d9eac097410294ec9f2cee7cd185cf31ab46babf3dfdbeac8b222b03f2d1905f90a250505050565b6110c782610739565b6110d0816112cf565b610775838361137a565b6110f15f80516020611f5b83398151915233610ae4565b61110d5760405162461bcd60e51b81526004016105d590611be1565b603354819081106111305760405162461bcd60e51b81526004016105d590611c07565b816033818154811061114457611144611c3e565b5f91825260209091206003600590920201015460ff16156111775760405162461bcd60e51b81526004016105d590611c52565b5f6033848154811061118b5761118b611c3e565b905f5260205f2090600502019050603454816004015410156111e35760405162461bcd60e51b8152602060048201526011602482015270086c2dcdcdee840caf0cac6eae8ca40e8f607b1b60448201526064016105d5565b60038101805460ff191660019081179091558154908201546040515f926001600160a01b03169190611219906002860190611e5b565b5f6040518083038185875af1925050503d805f8114611253576040519150601f19603f3d011682016040523d82523d5f602084013e611258565b606091505b505090508061129e5760405162461bcd60e51b8152602060048201526012602482015271151c985b9cd858dd1a5bdb8819985a5b195960721b60448201526064016105d5565b60405185907f15ed165a284872ea7017f03df402a0cadfbfab588320ffaf83f160c2f82781c7905f90a25050505050565b6107d281336116b2565b5f5f80516020611f3b8339815191526112f28484610ae4565b611371575f848152602082815260408083206001600160a01b03871684529091529020805460ff191660011790556113273390565b6001600160a01b0316836001600160a01b0316857f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4600191505061059c565b5f91505061059c565b5f5f80516020611f3b8339815191526113938484610ae4565b15611371575f848152602082815260408083206001600160a01b0387168085529252808320805460ff1916905551339287917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a4600191505061059c565b6113fb6116eb565b5f805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614806114ca57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166114be5f80516020611efb833981519152546001600160a01b031690565b6001600160a01b031614155b156114e85760405163703e46dd60e11b815260040160405180910390fd5b565b7f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e36107f0816112cf565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561156e575060408051601f3d908101601f1916820190925261156b91810190611ecd565b60015b61159657604051634c9c8ce360e01b81526001600160a01b03831660048201526024016105d5565b5f80516020611efb83398151915281146115c657604051632a87526960e21b8152600481018290526024016105d5565b6107ae8383611733565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146114e85760405163703e46dd60e11b815260040160405180910390fd5b5f5460ff16156114e85760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016105d5565b6114e8611788565b61166e611788565b6114e86117d1565b61167e611619565b5f805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586114273390565b6116bc8282610ae4565b6107f05760405163e2517d3f60e01b81526001600160a01b0382166004820152602481018390526044016105d5565b5f5460ff166114e85760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016105d5565b61173c826117e4565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a2805115611780576107ae8282611847565b6107f06118b9565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff166114e857604051631afcd79f60e31b815260040160405180910390fd5b6117d9611788565b5f805460ff19169055565b806001600160a01b03163b5f0361181957604051634c9c8ce360e01b81526001600160a01b03821660048201526024016105d5565b5f80516020611efb83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b60605f80846001600160a01b0316846040516118639190611ee4565b5f60405180830381855af49150503d805f811461189b576040519150601f19603f3d011682016040523d82523d5f602084013e6118a0565b606091505b50915091506118b08583836118d8565b95945050505050565b34156114e85760405163b398979f60e01b815260040160405180910390fd5b6060826118ed576118e882611937565b611930565b815115801561190457506001600160a01b0384163b155b1561192d57604051639996b31560e01b81526001600160a01b03851660048201526024016105d5565b50805b9392505050565b8051156119475780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b5f60208284031215611970575f80fd5b81356001600160e01b031981168114611930575f80fd5b80356001600160a01b038116811461199d575f80fd5b919050565b5f602082840312156119b2575f80fd5b61193082611987565b5f602082840312156119cb575f80fd5b5035919050565b5f80604083850312156119e3575f80fd5b823591506119f360208401611987565b90509250929050565b634e487b7160e01b5f52604160045260245ffd5b5f82601f830112611a1f575f80fd5b813567ffffffffffffffff80821115611a3a57611a3a6119fc565b604051601f8301601f19908116603f01168101908282118183101715611a6257611a626119fc565b81604052838152866020858801011115611a7a575f80fd5b836020870160208301375f602085830101528094505050505092915050565b5f8060408385031215611aaa575f80fd5b611ab383611987565b9150602083013567ffffffffffffffff811115611ace575f80fd5b611ada85828601611a10565b9150509250929050565b5f805f60608486031215611af6575f80fd5b611aff84611987565b95602085013595506040909401359392505050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b60018060a01b038616815284602082015260a060408201525f611b6860a0830186611b14565b931515606083015250608001529392505050565b602081525f6119306020830184611b14565b5f805f60608486031215611ba0575f80fd5b611ba984611987565b925060208401359150604084013567ffffffffffffffff811115611bcb575f80fd5b611bd786828701611a10565b9150509250925092565b6020808252600c908201526b2737ba1030b71030b236b4b760a11b604082015260600190565b6020808252601a908201527f5472616e73616374696f6e20646f6573206e6f74206578697374000000000000604082015260600190565b634e487b7160e01b5f52603260045260245ffd5b6020808252601c908201527f5472616e73616374696f6e20616c726561647920657865637574656400000000604082015260600190565b634e487b7160e01b5f52601160045260245ffd5b8181038181111561059c5761059c611c89565b5f60208284031215611cc0575f80fd5b81518015158114611930575f80fd5b600181811c90821680611ce357607f821691505b602082108103611d0157634e487b7160e01b5f52602260045260245ffd5b50919050565b808202811582820484141761059c5761059c611c89565b5f82611d3857634e487b7160e01b5f52601260045260245ffd5b500490565b8082018082111561059c5761059c611c89565b601f8211156107ae57805f5260205f20601f840160051c81016020851015611d755750805b601f840160051c820191505b81811015611d94575f8155600101611d81565b5050505050565b815167ffffffffffffffff811115611db557611db56119fc565b611dc981611dc38454611ccf565b84611d50565b602080601f831160018114611dfc575f8415611de55750858301515b5f19600386901b1c1916600185901b178555611e53565b5f85815260208120601f198616915b82811015611e2a57888601518255948401946001909101908401611e0b565b5085821015611e4757878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b5f808354611e6881611ccf565b60018281168015611e805760018114611e9557611ec1565b60ff1984168752821515830287019450611ec1565b875f526020805f205f5b85811015611eb85781548a820152908401908201611e9f565b50505082870194505b50929695505050505050565b5f60208284031215611edd575f80fd5b5051919050565b5f82518060208501845e5f92019182525091905056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775a2646970667358221220e641ad3c449ccb231cc153557173105ee11a6d50f55d942a6471de7513fbb93864736f6c63430008190033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH1 0x80 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x13 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C PUSH2 0x21 JUMP JUMPDEST PUSH2 0xD3 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH9 0x10000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x71 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 AND EQ PUSH2 0xD0 JUMPI DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x1FB0 PUSH2 0xF9 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x144F ADD MSTORE DUP2 DUP2 PUSH2 0x1478 ADD MSTORE PUSH2 0x15DB ADD MSTORE PUSH2 0x1FB0 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1B2 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x82E717F7 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0xC01A8C84 GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x62 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x4DB JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x4FA JUMPI DUP1 PUSH4 0xEE22610B EQ PUSH2 0x51A JUMPI DUP1 PUSH4 0xF72C0D8B EQ PUSH2 0x539 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC01A8C84 EQ PUSH2 0x488 JUMPI DUP1 PUSH4 0xC63A6AD2 EQ PUSH2 0x4A7 JUMPI DUP1 PUSH4 0xC6427474 EQ PUSH2 0x4BC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9ACE38C2 GT PUSH2 0xC2 JUMPI DUP1 PUSH4 0x9ACE38C2 EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x424 JUMPI DUP1 PUSH4 0xA5CE413B EQ PUSH2 0x437 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x44B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x82E717F7 EQ PUSH2 0x3AC JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x3C1 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x3D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4F1EF286 GT PUSH2 0x152 JUMPI DUP1 PUSH4 0x7547C7A3 GT PUSH2 0x12D JUMPI DUP1 PUSH4 0x7547C7A3 EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x334 JUMPI DUP1 PUSH4 0x7A1AC61E EQ PUSH2 0x354 JUMPI DUP1 PUSH4 0x80F59A65 EQ PUSH2 0x373 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2FF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0x18D JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x2C4 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x16934FC4 EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0x20EA8D86 EQ PUSH2 0x238 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x1B9 JUMPI STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DC PUSH2 0x1D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1960 JUMP JUMPDEST PUSH2 0x56C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x223 PUSH2 0x20B CALLDATASIZE PUSH1 0x4 PUSH2 0x19A2 JUMP JUMPDEST PUSH1 0x35 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x1E8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x243 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0x252 CALLDATASIZE PUSH1 0x4 PUSH2 0x19BB JUMP JUMPDEST PUSH2 0x5A2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x264 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x278 PUSH2 0x273 CALLDATASIZE PUSH1 0x4 PUSH2 0x19BB JUMP JUMPDEST PUSH2 0x739 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x291 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0x2A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x19D2 JUMP JUMPDEST PUSH2 0x759 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0x2BF CALLDATASIZE PUSH1 0x4 PUSH2 0x19D2 JUMP JUMPDEST PUSH2 0x77B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0x7B3 JUMP JUMPDEST PUSH2 0x257 PUSH2 0x2E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A99 JUMP JUMPDEST PUSH2 0x7D5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x278 PUSH2 0x7F4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH1 0xFF AND PUSH2 0x1DC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x320 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0x32F CALLDATASIZE PUSH1 0x4 PUSH2 0x19BB JUMP JUMPDEST PUSH2 0x80F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x278 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F5B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0x36E CALLDATASIZE PUSH1 0x4 PUSH2 0x1AE4 JUMP JUMPDEST PUSH2 0x936 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DC PUSH2 0x38D CALLDATASIZE PUSH1 0x4 PUSH2 0x19D2 JUMP JUMPDEST PUSH1 0x32 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x278 PUSH1 0x34 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0xAC5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DC PUSH2 0x3EF CALLDATASIZE PUSH1 0x4 PUSH2 0x19D2 JUMP JUMPDEST PUSH2 0xAE4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x413 PUSH2 0x40E CALLDATASIZE PUSH1 0x4 PUSH2 0x19BB JUMP JUMPDEST PUSH2 0xB1A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E8 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B42 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x278 PUSH0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x442 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0xBEF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x456 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x47B PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x352E302E3 PUSH1 0xDC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0x1B7C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x493 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0x4A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x19BB JUMP JUMPDEST PUSH2 0xDC6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x278 PUSH1 0x36 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0x4D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8E JUMP JUMPDEST PUSH2 0xF5A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0x4F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x19D2 JUMP JUMPDEST PUSH2 0x10BE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x505 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x278 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F1B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x525 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0x534 CALLDATASIZE PUSH1 0x4 PUSH2 0x19BB JUMP JUMPDEST PUSH2 0x10DA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x544 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x278 PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x59C JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5B9 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F5B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xAE4 JUMP JUMPDEST PUSH2 0x5DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D5 SWAP1 PUSH2 0x1BE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x33 SLOAD DUP2 SWAP1 DUP2 LT PUSH2 0x601 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D5 SWAP1 PUSH2 0x1C07 JUMP JUMPDEST DUP2 PUSH1 0x33 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x615 JUMPI PUSH2 0x615 PUSH2 0x1C3E JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 PUSH1 0x5 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x648 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D5 SWAP1 PUSH2 0x1C52 JUMP JUMPDEST PUSH0 PUSH1 0x33 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x65C JUMPI PUSH2 0x65C PUSH2 0x1C3E JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE PUSH1 0x32 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 CALLER DUP7 MSTORE SWAP1 SWAP3 MSTORE SWAP3 KECCAK256 SLOAD PUSH1 0x5 SWAP1 SWAP2 MUL SWAP1 SWAP2 ADD SWAP2 POP PUSH1 0xFF AND PUSH2 0x6D3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73616374696F6E206E6F7420636F6E6669726D656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D5 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x4 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x6E7 SWAP2 SWAP1 PUSH2 0x1C9D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH0 DUP5 DUP2 MSTORE PUSH1 0x32 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD DUP7 SWAP3 PUSH32 0xE5C8875C5E14471F806F15F740CD9FD54937D151E9DCF8AD3BA988D6A285E67E SWAP2 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F3B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x762 DUP3 PUSH2 0x739 JUMP JUMPDEST PUSH2 0x76B DUP2 PUSH2 0x12CF JUMP JUMPDEST PUSH2 0x775 DUP4 DUP4 PUSH2 0x12D9 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x7A4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7AE DUP3 DUP3 PUSH2 0x137A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F1B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x7CA DUP2 PUSH2 0x12CF JUMP JUMPDEST PUSH2 0x7D2 PUSH2 0x13F3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x7DD PUSH2 0x1444 JUMP JUMPDEST PUSH2 0x7E6 DUP3 PUSH2 0x14EA JUMP JUMPDEST PUSH2 0x7F0 DUP3 DUP3 PUSH2 0x1514 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7FD PUSH2 0x15D0 JUMP JUMPDEST POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1EFB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x817 PUSH2 0x1619 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x44 DUP3 ADD DUP4 SWAP1 MSTORE SWAP1 DUP2 SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x861 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x885 SWAP2 SWAP1 PUSH2 0x1CB0 JUMP JUMPDEST PUSH2 0x8C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x151BDAD95B881D1C985B9CD9995C8819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE DUP4 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP1 DUP4 ADD DUP3 DUP2 MSTORE CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x35 DUP5 MSTORE DUP7 SWAP1 KECCAK256 SWAP5 MLOAD DUP6 SSTORE SWAP1 MLOAD PUSH1 0x1 SWAP1 SWAP5 ADD SWAP4 SWAP1 SWAP4 SSTORE DUP4 MLOAD DUP7 DUP2 MSTORE SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP2 PUSH32 0xDD2A19C3BDD089CBE77C04F5655F83DE0504D6140D12C8667646F55D0557C4DC SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x97B JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x997 JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x9A5 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x9C3 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x9ED JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0x9F5 PUSH2 0x165E JUMP JUMPDEST PUSH2 0x9FD PUSH2 0x1666 JUMP JUMPDEST PUSH2 0xA05 PUSH2 0x165E JUMP JUMPDEST PUSH2 0xA0F PUSH0 DUP10 PUSH2 0x12D9 JUMP JUMPDEST POP PUSH2 0xA27 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F1B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP10 PUSH2 0x12D9 JUMP JUMPDEST POP PUSH2 0xA3F PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F5B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP10 PUSH2 0x12D9 JUMP JUMPDEST POP PUSH2 0xA6A PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 DUP10 PUSH2 0x12D9 JUMP JUMPDEST POP PUSH1 0x34 DUP8 SWAP1 SSTORE PUSH1 0x36 DUP7 SWAP1 SSTORE DUP4 ISZERO PUSH2 0xABB JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F1B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xADC DUP2 PUSH2 0x12CF JUMP JUMPDEST PUSH2 0x7D2 PUSH2 0x1676 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F3B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x33 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xB29 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP5 POP SWAP1 SWAP3 SWAP2 PUSH2 0xB5E SWAP1 PUSH2 0x1CCF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB8A SWAP1 PUSH2 0x1CCF JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBD5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBAC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBD5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBB8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 PUSH1 0xFF AND SWAP2 SWAP1 POP DUP6 JUMP JUMPDEST PUSH2 0xBF7 PUSH2 0x1619 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x35 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE DUP1 SLOAD DUP1 DUP5 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0xC62 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x139BC81D1BDAD95B9CC81CDD185AD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D5 JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x20 ADD MLOAD TIMESTAMP PUSH2 0xC73 SWAP2 SWAP1 PUSH2 0x1C9D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH4 0x1E13380 DUP3 PUSH1 0x36 SLOAD DUP6 PUSH0 ADD MLOAD PUSH2 0xC8D SWAP2 SWAP1 PUSH2 0x1D07 JUMP JUMPDEST PUSH2 0xC97 SWAP2 SWAP1 PUSH2 0x1D07 JUMP JUMPDEST PUSH2 0xCA1 SWAP2 SWAP1 PUSH2 0x1D1E JUMP JUMPDEST DUP4 MLOAD SWAP1 SWAP2 POP ADDRESS SWAP1 DUP2 SWAP1 PUSH4 0xA9059CBB SWAP1 CALLER SWAP1 PUSH2 0xCBD SWAP1 DUP7 SWAP1 PUSH2 0x1D3D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD05 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD29 SWAP2 SWAP1 PUSH2 0x1CB0 JUMP JUMPDEST PUSH2 0xD6D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x151BDAD95B881D1C985B9CD9995C8819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D5 JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x35 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 DUP2 SSTORE PUSH1 0x1 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP7 MLOAD DUP3 MLOAD SWAP1 DUP2 MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE PUSH32 0x6F2D3E000C89D37446B7C0374C0125068FF316D1E3EE302336478A8CD03C2336 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH2 0xDDD PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F5B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xAE4 JUMP JUMPDEST PUSH2 0xDF9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D5 SWAP1 PUSH2 0x1BE1 JUMP JUMPDEST PUSH1 0x33 SLOAD DUP2 SWAP1 DUP2 LT PUSH2 0xE1C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D5 SWAP1 PUSH2 0x1C07 JUMP JUMPDEST DUP2 PUSH1 0x33 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xE30 JUMPI PUSH2 0xE30 PUSH2 0x1C3E JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 PUSH1 0x5 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xE63 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D5 SWAP1 PUSH2 0x1C52 JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x32 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP4 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0xECE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73616374696F6E20616C726561647920636F6E6669726D6564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D5 JUMP JUMPDEST PUSH0 PUSH1 0x33 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0xEE2 JUMPI PUSH2 0xEE2 PUSH2 0x1C3E JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH1 0x1 DUP2 PUSH1 0x4 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xF04 SWAP2 SWAP1 PUSH2 0x1D3D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH0 DUP6 DUP2 MSTORE PUSH1 0x32 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD DUP8 SWAP3 PUSH32 0xF8A17C9136A3AE33364FAC05EB088A3CBAFEE10C1889C88593E20EE2D8E4EB88 SWAP2 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xF71 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F5B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xAE4 JUMP JUMPDEST PUSH2 0xF8D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D5 SWAP1 PUSH2 0x1BE1 JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP8 DUP2 MSTORE SWAP3 DUP3 ADD DUP7 DUP2 MSTORE PUSH0 PUSH1 0x60 DUP5 ADD DUP2 SWAP1 MSTORE PUSH1 0x80 DUP5 ADD DUP2 SWAP1 MSTORE PUSH1 0x1 DUP7 ADD DUP8 SSTORE SWAP6 SWAP1 SWAP6 MSTORE DUP2 MLOAD PUSH32 0x82A75BDEEAE8604D839476AE9EFD8B0E15AA447E21BFD7F41283BB54E22C9A82 PUSH1 0x5 DUP7 MUL SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP3 SWAP1 SWAP4 AND SWAP2 SWAP1 SWAP2 OR DUP3 SSTORE SWAP3 MLOAD PUSH32 0x82A75BDEEAE8604D839476AE9EFD8B0E15AA447E21BFD7F41283BB54E22C9A83 DUP5 ADD SSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH32 0x82A75BDEEAE8604D839476AE9EFD8B0E15AA447E21BFD7F41283BB54E22C9A84 ADD SWAP1 PUSH2 0x1069 SWAP1 DUP3 PUSH2 0x1D9B JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x80 SWAP1 SWAP2 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD SSTORE PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH32 0xD0B5D9EAC097410294EC9F2CEE7CD185CF31AB46BABF3DFDBEAC8B222B03F2D1 SWAP1 PUSH0 SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH2 0x10C7 DUP3 PUSH2 0x739 JUMP JUMPDEST PUSH2 0x10D0 DUP2 PUSH2 0x12CF JUMP JUMPDEST PUSH2 0x775 DUP4 DUP4 PUSH2 0x137A JUMP JUMPDEST PUSH2 0x10F1 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F5B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xAE4 JUMP JUMPDEST PUSH2 0x110D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D5 SWAP1 PUSH2 0x1BE1 JUMP JUMPDEST PUSH1 0x33 SLOAD DUP2 SWAP1 DUP2 LT PUSH2 0x1130 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D5 SWAP1 PUSH2 0x1C07 JUMP JUMPDEST DUP2 PUSH1 0x33 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1144 JUMPI PUSH2 0x1144 PUSH2 0x1C3E JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 PUSH1 0x5 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1177 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D5 SWAP1 PUSH2 0x1C52 JUMP JUMPDEST PUSH0 PUSH1 0x33 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x118B JUMPI PUSH2 0x118B PUSH2 0x1C3E JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH1 0x34 SLOAD DUP2 PUSH1 0x4 ADD SLOAD LT ISZERO PUSH2 0x11E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x86C2DCDCDEE840CAF0CAC6EAE8CA40E8F PUSH1 0x7B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D5 JUMP JUMPDEST PUSH1 0x3 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SLOAD SWAP1 DUP3 ADD SLOAD PUSH1 0x40 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 PUSH2 0x1219 SWAP1 PUSH1 0x2 DUP7 ADD SWAP1 PUSH2 0x1E5B JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1253 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1258 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x129E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x151C985B9CD858DD1A5BDB8819985A5B1959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP6 SWAP1 PUSH32 0x15ED165A284872EA7017F03DF402A0CADFBFAB588320FFAF83F160C2F82781C7 SWAP1 PUSH0 SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x7D2 DUP2 CALLER PUSH2 0x16B2 JUMP JUMPDEST PUSH0 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F3B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x12F2 DUP5 DUP5 PUSH2 0xAE4 JUMP JUMPDEST PUSH2 0x1371 JUMPI PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x1327 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x59C JUMP JUMPDEST PUSH0 SWAP2 POP POP PUSH2 0x59C JUMP JUMPDEST PUSH0 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F3B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1393 DUP5 DUP5 PUSH2 0xAE4 JUMP JUMPDEST ISZERO PUSH2 0x1371 JUMPI PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP8 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x59C JUMP JUMPDEST PUSH2 0x13FB PUSH2 0x16EB JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0x14CA JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x14BE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1EFB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x14E8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 PUSH2 0x7F0 DUP2 PUSH2 0x12CF JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x156E JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x156B SWAP2 DUP2 ADD SWAP1 PUSH2 0x1ECD JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1596 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5D5 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1EFB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0x15C6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x5D5 JUMP JUMPDEST PUSH2 0x7AE DUP4 DUP4 PUSH2 0x1733 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x14E8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x14E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D5 JUMP JUMPDEST PUSH2 0x14E8 PUSH2 0x1788 JUMP JUMPDEST PUSH2 0x166E PUSH2 0x1788 JUMP JUMPDEST PUSH2 0x14E8 PUSH2 0x17D1 JUMP JUMPDEST PUSH2 0x167E PUSH2 0x1619 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1427 CALLER SWAP1 JUMP JUMPDEST PUSH2 0x16BC DUP3 DUP3 PUSH2 0xAE4 JUMP JUMPDEST PUSH2 0x7F0 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x5D5 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0xFF AND PUSH2 0x14E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D5 JUMP JUMPDEST PUSH2 0x173C DUP3 PUSH2 0x17E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x1780 JUMPI PUSH2 0x7AE DUP3 DUP3 PUSH2 0x1847 JUMP JUMPDEST PUSH2 0x7F0 PUSH2 0x18B9 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x14E8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17D9 PUSH2 0x1788 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH0 SUB PUSH2 0x1819 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5D5 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1EFB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x1863 SWAP2 SWAP1 PUSH2 0x1EE4 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x189B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x18A0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x18B0 DUP6 DUP4 DUP4 PUSH2 0x18D8 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x14E8 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x18ED JUMPI PUSH2 0x18E8 DUP3 PUSH2 0x1937 JUMP JUMPDEST PUSH2 0x1930 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x1904 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x192D JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5D5 JUMP JUMPDEST POP DUP1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x1947 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1970 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1930 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x199D JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19B2 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1930 DUP3 PUSH2 0x1987 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19CB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19E3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x19F3 PUSH1 0x20 DUP5 ADD PUSH2 0x1987 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1A1F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1A3A JUMPI PUSH2 0x1A3A PUSH2 0x19FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1A62 JUMPI PUSH2 0x1A62 PUSH2 0x19FC JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x1A7A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AAA JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1AB3 DUP4 PUSH2 0x1987 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1ACE JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1ADA DUP6 DUP3 DUP7 ADD PUSH2 0x1A10 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1AF6 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1AFF DUP5 PUSH2 0x1987 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD MSTORE PUSH0 PUSH2 0x1B68 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x1B14 JUMP JUMPDEST SWAP4 ISZERO ISZERO PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x1930 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B14 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1BA0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1BA9 DUP5 PUSH2 0x1987 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BCB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1BD7 DUP7 DUP3 DUP8 ADD PUSH2 0x1A10 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xC SWAP1 DUP3 ADD MSTORE PUSH12 0x2737BA1030B71030B236B4B7 PUSH1 0xA1 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1A SWAP1 DUP3 ADD MSTORE PUSH32 0x5472616E73616374696F6E20646F6573206E6F74206578697374000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x5472616E73616374696F6E20616C726561647920657865637574656400000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x59C JUMPI PUSH2 0x59C PUSH2 0x1C89 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CC0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1930 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1CE3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1D01 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x59C JUMPI PUSH2 0x59C PUSH2 0x1C89 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1D38 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x59C JUMPI PUSH2 0x59C PUSH2 0x1C89 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x7AE JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1D75 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1D94 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1D81 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DB5 JUMPI PUSH2 0x1DB5 PUSH2 0x19FC JUMP JUMPDEST PUSH2 0x1DC9 DUP2 PUSH2 0x1DC3 DUP5 SLOAD PUSH2 0x1CCF JUMP JUMPDEST DUP5 PUSH2 0x1D50 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1DFC JUMPI PUSH0 DUP5 ISZERO PUSH2 0x1DE5 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x1E53 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1E2A JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x1E0B JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x1E47 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP4 SLOAD PUSH2 0x1E68 DUP2 PUSH2 0x1CCF JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0x1E80 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x1E95 JUMPI PUSH2 0x1EC1 JUMP JUMPDEST PUSH1 0xFF NOT DUP5 AND DUP8 MSTORE DUP3 ISZERO ISZERO DUP4 MUL DUP8 ADD SWAP5 POP PUSH2 0x1EC1 JUMP JUMPDEST DUP8 PUSH0 MSTORE PUSH1 0x20 DUP1 PUSH0 KECCAK256 PUSH0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1EB8 JUMPI DUP2 SLOAD DUP11 DUP3 ADD MSTORE SWAP1 DUP5 ADD SWAP1 DUP3 ADD PUSH2 0x1E9F JUMP JUMPDEST POP POP POP DUP3 DUP8 ADD SWAP5 POP JUMPDEST POP SWAP3 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EDD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP6 ADD DUP5 MCOPY PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP INVALID CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC65D7A28E3265B37A647492 SWAP16 CALLER PUSH6 0x21B332C1681B SWAP4 EXTCODEHASH PUSH13 0xB9F3376673440D862A02DD7BC7 0xDE 0xC4 0xDC 0xEE 0xDD 0xA7 PUSH22 0xE58DD541E08A116C6C53815C0BD028192F7B626800A4 SWAP9 SMOD KECCAK256 TLOAD 0xE4 0xD3 SSTORE MULMOD 0x2E CREATE2 0xA8 LOG1 DUP16 JUMP 0xE8 SWAP2 EXTCODECOPY DELEGATECALL LOG2 ADD 0xFB 0xE2 DUP8 DUP3 JUMPDEST MULMOD JUMP SWAP4 0xC2 OR PUSH22 0xA2646970667358221220E641AD3C449CCB231CC15355 PUSH18 0x73105EE11A6D50F55D942A6471DE7513FBB9 CODESIZE PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "620:5501:17:-:0;;;1171:4:2;1128:48;;2011:53:17;;;;;;;;;-1:-1:-1;2035:22:17;:20;:22::i;:::-;620:5501;;7711:422:1;8870:21;7900:15;;;;;;;7896:76;;;7938:23;;-1:-1:-1;;;7938:23:1;;;;;;;;;;;7896:76;7985:14;;-1:-1:-1;;;;;7985:14:1;;;:34;7981:146;;8035:33;;-1:-1:-1;;;;;;8035:33:1;-1:-1:-1;;;;;8035:33:1;;;;;8087:29;;158:50:18;;;8087:29:1;;146:2:18;131:18;8087:29:1;;;;;;;7981:146;7760:373;7711:422::o;14:200:18:-;620:5501:17;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@ADMIN_ROLE_2148": {
									"entryPoint": null,
									"id": 2148,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@DEFAULT_ADMIN_ROLE_28": {
									"entryPoint": null,
									"id": 28,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@PAUSER_ROLE_2143": {
									"entryPoint": null,
									"id": 2143,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@UPGRADER_ROLE_2153": {
									"entryPoint": null,
									"id": 2153,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@UPGRADE_INTERFACE_VERSION_640": {
									"entryPoint": null,
									"id": 640,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_2691": {
									"entryPoint": null,
									"id": 2691,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__AccessControl_init_63": {
									"entryPoint": 5726,
									"id": 63,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Pausable_init_830": {
									"entryPoint": 5734,
									"id": 830,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Pausable_init_unchained_840": {
									"entryPoint": 6097,
									"id": 840,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__UUPSUpgradeable_init_670": {
									"entryPoint": null,
									"id": 670,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_authorizeUpgrade_2687": {
									"entryPoint": 5354,
									"id": 2687,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkInitializing_538": {
									"entryPoint": 6024,
									"id": 538,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkNonPayable_1735": {
									"entryPoint": 6329,
									"id": 1735,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkNotDelegated_746": {
									"entryPoint": 5584,
									"id": 746,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkProxy_730": {
									"entryPoint": 5188,
									"id": 730,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkRole_129": {
									"entryPoint": 4815,
									"id": 129,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkRole_150": {
									"entryPoint": 5810,
									"id": 150,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_getAccessControlStorage_46": {
									"entryPoint": null,
									"id": 46,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getInitializableStorage_615": {
									"entryPoint": null,
									"id": 615,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_grantRole_315": {
									"entryPoint": 4825,
									"id": 315,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_isInitializing_606": {
									"entryPoint": null,
									"id": 606,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_1270": {
									"entryPoint": null,
									"id": 1270,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_904": {
									"entryPoint": 5750,
									"id": 904,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_877": {
									"entryPoint": 5657,
									"id": 877,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_888": {
									"entryPoint": 5867,
									"id": 888,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revert_1998": {
									"entryPoint": 6455,
									"id": 1998,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_revokeRole_361": {
									"entryPoint": 4986,
									"id": 361,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_setImplementation_1521": {
									"entryPoint": 6116,
									"id": 1521,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_unpause_920": {
									"entryPoint": 5107,
									"id": 920,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_upgradeToAndCallUUPS_797": {
									"entryPoint": 5396,
									"id": 797,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@confirmTransaction_2418": {
									"entryPoint": 3526,
									"id": 2418,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@executeTransaction_2474": {
									"entryPoint": 4314,
									"id": 2474,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@functionDelegateCall_1918": {
									"entryPoint": 6215,
									"id": 1918,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getAddressSlot_2031": {
									"entryPoint": null,
									"id": 2031,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getImplementation_1494": {
									"entryPoint": null,
									"id": 1494,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getRoleAdmin_171": {
									"entryPoint": 1849,
									"id": 171,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_190": {
									"entryPoint": 1881,
									"id": 190,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_116": {
									"entryPoint": 2788,
									"id": 116,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@initialize_2281": {
									"entryPoint": 2358,
									"id": 2281,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@isConfirmed_2170": {
									"entryPoint": null,
									"id": 2170,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@pause_2667": {
									"entryPoint": 2757,
									"id": 2667,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_865": {
									"entryPoint": null,
									"id": 865,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@proxiableUUID_688": {
									"entryPoint": 2036,
									"id": 688,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@renounceRole_232": {
									"entryPoint": 1915,
									"id": 232,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@requiredConfirmations_2176": {
									"entryPoint": null,
									"id": 2176,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@revokeConfirmation_2526": {
									"entryPoint": 1442,
									"id": 2526,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@revokeRole_209": {
									"entryPoint": 4286,
									"id": 209,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@stakeTokens_2577": {
									"entryPoint": 2063,
									"id": 2577,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@stakes_2186": {
									"entryPoint": null,
									"id": 2186,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@stakingRate_2188": {
									"entryPoint": null,
									"id": 2188,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@submitTransaction_2373": {
									"entryPoint": 3930,
									"id": 2373,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@supportsInterface_1327": {
									"entryPoint": null,
									"id": 1327,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_91": {
									"entryPoint": 1388,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@transactions_2174": {
									"entryPoint": 2842,
									"id": 2174,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@unpause_2677": {
									"entryPoint": 1971,
									"id": 2677,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@unstakeTokens_2657": {
									"entryPoint": 3055,
									"id": 2657,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@upgradeToAndCall_1555": {
									"entryPoint": 5939,
									"id": 1555,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@upgradeToAndCall_708": {
									"entryPoint": 2005,
									"id": 708,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_1958": {
									"entryPoint": 6360,
									"id": 1958,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_decode_address": {
									"entryPoint": 6535,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_bytes": {
									"entryPoint": 6672,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 6562,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_bytes_memory_ptr": {
									"entryPoint": 6809,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptr": {
									"entryPoint": 7054,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256": {
									"entryPoint": 6884,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 7344,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32_fromMemory": {
									"entryPoint": 7885,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 6610,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 6496,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 6587,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_address": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_bytes": {
									"entryPoint": 6932,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7908,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_storage__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 7771,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256_t_bytes_memory_ptr_t_bool_t_uint256__to_t_address_t_uint256_t_bytes_memory_ptr_t_bool_t_uint256__fromStack_reversed": {
									"entryPoint": 6978,
									"id": null,
									"parameterSlots": 6,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7036,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1f983d08a8c5ff4ffa11b495317acc03b08c5d01aeba8602c5a3a648ea98755b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_3c3f7cf602281cf7a98efd78d98ba46309975dadee18bcb57e640145699bd800__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7250,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_5f53099e044b88c99cc014ede5713cfdba96d95b088c34d5fa4406866af6c250__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7137,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_7e54dddc19fe041cd2ab5a676b9022929cd57fae1ef2ef044dff489da7dfdd60__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c00ff6506fc53457ae4202871882703dada01c533275bb259e2cd12acaf31a69__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c49f60e918d4d07c4337a420c2afcf7054eea7f9d81d8862809229abad6c8588__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_cb323e46bbcca91e157c2b50ad4ce2acbe1153338b838c84372d5723b8995ef0__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7175,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e3d0a597e455a5df21f74650a7518ab8d226371e3763bb9c00413fb3af8193f2__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"array_dataslot_bytes_storage": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 7485,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 7454,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 7431,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 7325,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"clean_up_bytearray_end_slots_bytes_storage": {
									"entryPoint": 7504,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage": {
									"entryPoint": 7579,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"extract_byte_array_length": {
									"entryPoint": 7375,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"extract_used_part_and_set_length_of_short_byte_array": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 7305,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x32": {
									"entryPoint": 7230,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 6652,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:15779:18",
										"nodeType": "YulBlock",
										"src": "0:15779:18",
										"statements": [
											{
												"nativeSrc": "6:3:18",
												"nodeType": "YulBlock",
												"src": "6:3:18",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "83:217:18",
													"nodeType": "YulBlock",
													"src": "83:217:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "129:16:18",
																"nodeType": "YulBlock",
																"src": "129:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "138:1:18",
																					"nodeType": "YulLiteral",
																					"src": "138:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "141:1:18",
																					"nodeType": "YulLiteral",
																					"src": "141:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "131:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "131:6:18"
																			},
																			"nativeSrc": "131:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "131:12:18"
																		},
																		"nativeSrc": "131:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "131:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "104:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "104:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "113:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "113:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "100:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "100:3:18"
																		},
																		"nativeSrc": "100:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "100:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "125:2:18",
																		"nodeType": "YulLiteral",
																		"src": "125:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "96:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "96:3:18"
																},
																"nativeSrc": "96:32:18",
																"nodeType": "YulFunctionCall",
																"src": "96:32:18"
															},
															"nativeSrc": "93:52:18",
															"nodeType": "YulIf",
															"src": "93:52:18"
														},
														{
															"nativeSrc": "154:36:18",
															"nodeType": "YulVariableDeclaration",
															"src": "154:36:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "180:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "180:9:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "167:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "167:12:18"
																},
																"nativeSrc": "167:23:18",
																"nodeType": "YulFunctionCall",
																"src": "167:23:18"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "158:5:18",
																	"nodeType": "YulTypedName",
																	"src": "158:5:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "254:16:18",
																"nodeType": "YulBlock",
																"src": "254:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "263:1:18",
																					"nodeType": "YulLiteral",
																					"src": "263:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "266:1:18",
																					"nodeType": "YulLiteral",
																					"src": "266:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "256:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:18"
																			},
																			"nativeSrc": "256:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:18"
																		},
																		"nativeSrc": "256:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "212:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "212:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "223:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "223:5:18"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "234:3:18",
																								"nodeType": "YulLiteral",
																								"src": "234:3:18",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "239:10:18",
																								"nodeType": "YulLiteral",
																								"src": "239:10:18",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "230:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "230:3:18"
																						},
																						"nativeSrc": "230:20:18",
																						"nodeType": "YulFunctionCall",
																						"src": "230:20:18"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "219:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "219:3:18"
																				},
																				"nativeSrc": "219:32:18",
																				"nodeType": "YulFunctionCall",
																				"src": "219:32:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "209:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "209:2:18"
																		},
																		"nativeSrc": "209:43:18",
																		"nodeType": "YulFunctionCall",
																		"src": "209:43:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "202:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "202:6:18"
																},
																"nativeSrc": "202:51:18",
																"nodeType": "YulFunctionCall",
																"src": "202:51:18"
															},
															"nativeSrc": "199:71:18",
															"nodeType": "YulIf",
															"src": "199:71:18"
														},
														{
															"nativeSrc": "279:15:18",
															"nodeType": "YulAssignment",
															"src": "279:15:18",
															"value": {
																"name": "value",
																"nativeSrc": "289:5:18",
																"nodeType": "YulIdentifier",
																"src": "289:5:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "279:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "14:286:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "49:9:18",
														"nodeType": "YulTypedName",
														"src": "49:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "60:7:18",
														"nodeType": "YulTypedName",
														"src": "60:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "72:6:18",
														"nodeType": "YulTypedName",
														"src": "72:6:18",
														"type": ""
													}
												],
												"src": "14:286:18"
											},
											{
												"body": {
													"nativeSrc": "400:92:18",
													"nodeType": "YulBlock",
													"src": "400:92:18",
													"statements": [
														{
															"nativeSrc": "410:26:18",
															"nodeType": "YulAssignment",
															"src": "410:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "422:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "422:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "433:2:18",
																		"nodeType": "YulLiteral",
																		"src": "433:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "418:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "418:3:18"
																},
																"nativeSrc": "418:18:18",
																"nodeType": "YulFunctionCall",
																"src": "418:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "410:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "410:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "452:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "452:9:18"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "477:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "477:6:18"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "470:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "470:6:18"
																				},
																				"nativeSrc": "470:14:18",
																				"nodeType": "YulFunctionCall",
																				"src": "470:14:18"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "463:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "463:6:18"
																		},
																		"nativeSrc": "463:22:18",
																		"nodeType": "YulFunctionCall",
																		"src": "463:22:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "445:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "445:6:18"
																},
																"nativeSrc": "445:41:18",
																"nodeType": "YulFunctionCall",
																"src": "445:41:18"
															},
															"nativeSrc": "445:41:18",
															"nodeType": "YulExpressionStatement",
															"src": "445:41:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "305:187:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "369:9:18",
														"nodeType": "YulTypedName",
														"src": "369:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "380:6:18",
														"nodeType": "YulTypedName",
														"src": "380:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "391:4:18",
														"nodeType": "YulTypedName",
														"src": "391:4:18",
														"type": ""
													}
												],
												"src": "305:187:18"
											},
											{
												"body": {
													"nativeSrc": "546:124:18",
													"nodeType": "YulBlock",
													"src": "546:124:18",
													"statements": [
														{
															"nativeSrc": "556:29:18",
															"nodeType": "YulAssignment",
															"src": "556:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "578:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "578:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "565:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "565:12:18"
																},
																"nativeSrc": "565:20:18",
																"nodeType": "YulFunctionCall",
																"src": "565:20:18"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "556:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "556:5:18"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "648:16:18",
																"nodeType": "YulBlock",
																"src": "648:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "657:1:18",
																					"nodeType": "YulLiteral",
																					"src": "657:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "660:1:18",
																					"nodeType": "YulLiteral",
																					"src": "660:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "650:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "650:6:18"
																			},
																			"nativeSrc": "650:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "650:12:18"
																		},
																		"nativeSrc": "650:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "650:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "607:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "607:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "618:5:18",
																						"nodeType": "YulIdentifier",
																						"src": "618:5:18"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "633:3:18",
																										"nodeType": "YulLiteral",
																										"src": "633:3:18",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "638:1:18",
																										"nodeType": "YulLiteral",
																										"src": "638:1:18",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "629:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "629:3:18"
																								},
																								"nativeSrc": "629:11:18",
																								"nodeType": "YulFunctionCall",
																								"src": "629:11:18"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "642:1:18",
																								"nodeType": "YulLiteral",
																								"src": "642:1:18",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "625:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "625:3:18"
																						},
																						"nativeSrc": "625:19:18",
																						"nodeType": "YulFunctionCall",
																						"src": "625:19:18"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "614:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "614:3:18"
																				},
																				"nativeSrc": "614:31:18",
																				"nodeType": "YulFunctionCall",
																				"src": "614:31:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "604:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "604:2:18"
																		},
																		"nativeSrc": "604:42:18",
																		"nodeType": "YulFunctionCall",
																		"src": "604:42:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "597:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "597:6:18"
																},
																"nativeSrc": "597:50:18",
																"nodeType": "YulFunctionCall",
																"src": "597:50:18"
															},
															"nativeSrc": "594:70:18",
															"nodeType": "YulIf",
															"src": "594:70:18"
														}
													]
												},
												"name": "abi_decode_address",
												"nativeSrc": "497:173:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "525:6:18",
														"nodeType": "YulTypedName",
														"src": "525:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "536:5:18",
														"nodeType": "YulTypedName",
														"src": "536:5:18",
														"type": ""
													}
												],
												"src": "497:173:18"
											},
											{
												"body": {
													"nativeSrc": "745:116:18",
													"nodeType": "YulBlock",
													"src": "745:116:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "791:16:18",
																"nodeType": "YulBlock",
																"src": "791:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "800:1:18",
																					"nodeType": "YulLiteral",
																					"src": "800:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "803:1:18",
																					"nodeType": "YulLiteral",
																					"src": "803:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "793:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "793:6:18"
																			},
																			"nativeSrc": "793:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "793:12:18"
																		},
																		"nativeSrc": "793:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "793:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "766:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "766:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "775:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "775:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "762:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "762:3:18"
																		},
																		"nativeSrc": "762:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "762:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "787:2:18",
																		"nodeType": "YulLiteral",
																		"src": "787:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "758:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "758:3:18"
																},
																"nativeSrc": "758:32:18",
																"nodeType": "YulFunctionCall",
																"src": "758:32:18"
															},
															"nativeSrc": "755:52:18",
															"nodeType": "YulIf",
															"src": "755:52:18"
														},
														{
															"nativeSrc": "816:39:18",
															"nodeType": "YulAssignment",
															"src": "816:39:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "845:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "845:9:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "826:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "826:18:18"
																},
																"nativeSrc": "826:29:18",
																"nodeType": "YulFunctionCall",
																"src": "826:29:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "816:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "816:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "675:186:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "711:9:18",
														"nodeType": "YulTypedName",
														"src": "711:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "722:7:18",
														"nodeType": "YulTypedName",
														"src": "722:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "734:6:18",
														"nodeType": "YulTypedName",
														"src": "734:6:18",
														"type": ""
													}
												],
												"src": "675:186:18"
											},
											{
												"body": {
													"nativeSrc": "995:119:18",
													"nodeType": "YulBlock",
													"src": "995:119:18",
													"statements": [
														{
															"nativeSrc": "1005:26:18",
															"nodeType": "YulAssignment",
															"src": "1005:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1017:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "1017:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1028:2:18",
																		"nodeType": "YulLiteral",
																		"src": "1028:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1013:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1013:3:18"
																},
																"nativeSrc": "1013:18:18",
																"nodeType": "YulFunctionCall",
																"src": "1013:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1005:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "1005:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1047:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "1047:9:18"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1058:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "1058:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1040:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1040:6:18"
																},
																"nativeSrc": "1040:25:18",
																"nodeType": "YulFunctionCall",
																"src": "1040:25:18"
															},
															"nativeSrc": "1040:25:18",
															"nodeType": "YulExpressionStatement",
															"src": "1040:25:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1085:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "1085:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1096:2:18",
																				"nodeType": "YulLiteral",
																				"src": "1096:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1081:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "1081:3:18"
																		},
																		"nativeSrc": "1081:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1081:18:18"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "1101:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "1101:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1074:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1074:6:18"
																},
																"nativeSrc": "1074:34:18",
																"nodeType": "YulFunctionCall",
																"src": "1074:34:18"
															},
															"nativeSrc": "1074:34:18",
															"nodeType": "YulExpressionStatement",
															"src": "1074:34:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "866:248:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "956:9:18",
														"nodeType": "YulTypedName",
														"src": "956:9:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "967:6:18",
														"nodeType": "YulTypedName",
														"src": "967:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "975:6:18",
														"nodeType": "YulTypedName",
														"src": "975:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "986:4:18",
														"nodeType": "YulTypedName",
														"src": "986:4:18",
														"type": ""
													}
												],
												"src": "866:248:18"
											},
											{
												"body": {
													"nativeSrc": "1189:110:18",
													"nodeType": "YulBlock",
													"src": "1189:110:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "1235:16:18",
																"nodeType": "YulBlock",
																"src": "1235:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1244:1:18",
																					"nodeType": "YulLiteral",
																					"src": "1244:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1247:1:18",
																					"nodeType": "YulLiteral",
																					"src": "1247:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1237:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "1237:6:18"
																			},
																			"nativeSrc": "1237:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "1237:12:18"
																		},
																		"nativeSrc": "1237:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "1237:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1210:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "1210:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1219:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "1219:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1206:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "1206:3:18"
																		},
																		"nativeSrc": "1206:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1206:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1231:2:18",
																		"nodeType": "YulLiteral",
																		"src": "1231:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1202:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1202:3:18"
																},
																"nativeSrc": "1202:32:18",
																"nodeType": "YulFunctionCall",
																"src": "1202:32:18"
															},
															"nativeSrc": "1199:52:18",
															"nodeType": "YulIf",
															"src": "1199:52:18"
														},
														{
															"nativeSrc": "1260:33:18",
															"nodeType": "YulAssignment",
															"src": "1260:33:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1283:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "1283:9:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1270:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "1270:12:18"
																},
																"nativeSrc": "1270:23:18",
																"nodeType": "YulFunctionCall",
																"src": "1270:23:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1260:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1260:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "1119:180:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1155:9:18",
														"nodeType": "YulTypedName",
														"src": "1155:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1166:7:18",
														"nodeType": "YulTypedName",
														"src": "1166:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1178:6:18",
														"nodeType": "YulTypedName",
														"src": "1178:6:18",
														"type": ""
													}
												],
												"src": "1119:180:18"
											},
											{
												"body": {
													"nativeSrc": "1374:110:18",
													"nodeType": "YulBlock",
													"src": "1374:110:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "1420:16:18",
																"nodeType": "YulBlock",
																"src": "1420:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1429:1:18",
																					"nodeType": "YulLiteral",
																					"src": "1429:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1432:1:18",
																					"nodeType": "YulLiteral",
																					"src": "1432:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1422:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "1422:6:18"
																			},
																			"nativeSrc": "1422:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "1422:12:18"
																		},
																		"nativeSrc": "1422:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "1422:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1395:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "1395:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1404:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "1404:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1391:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "1391:3:18"
																		},
																		"nativeSrc": "1391:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1391:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1416:2:18",
																		"nodeType": "YulLiteral",
																		"src": "1416:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1387:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1387:3:18"
																},
																"nativeSrc": "1387:32:18",
																"nodeType": "YulFunctionCall",
																"src": "1387:32:18"
															},
															"nativeSrc": "1384:52:18",
															"nodeType": "YulIf",
															"src": "1384:52:18"
														},
														{
															"nativeSrc": "1445:33:18",
															"nodeType": "YulAssignment",
															"src": "1445:33:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1468:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "1468:9:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1455:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "1455:12:18"
																},
																"nativeSrc": "1455:23:18",
																"nodeType": "YulFunctionCall",
																"src": "1455:23:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1445:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1445:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "1304:180:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1340:9:18",
														"nodeType": "YulTypedName",
														"src": "1340:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1351:7:18",
														"nodeType": "YulTypedName",
														"src": "1351:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1363:6:18",
														"nodeType": "YulTypedName",
														"src": "1363:6:18",
														"type": ""
													}
												],
												"src": "1304:180:18"
											},
											{
												"body": {
													"nativeSrc": "1590:76:18",
													"nodeType": "YulBlock",
													"src": "1590:76:18",
													"statements": [
														{
															"nativeSrc": "1600:26:18",
															"nodeType": "YulAssignment",
															"src": "1600:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1612:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "1612:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1623:2:18",
																		"nodeType": "YulLiteral",
																		"src": "1623:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1608:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1608:3:18"
																},
																"nativeSrc": "1608:18:18",
																"nodeType": "YulFunctionCall",
																"src": "1608:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1600:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "1600:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1642:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "1642:9:18"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1653:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "1653:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1635:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1635:6:18"
																},
																"nativeSrc": "1635:25:18",
																"nodeType": "YulFunctionCall",
																"src": "1635:25:18"
															},
															"nativeSrc": "1635:25:18",
															"nodeType": "YulExpressionStatement",
															"src": "1635:25:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "1489:177:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1559:9:18",
														"nodeType": "YulTypedName",
														"src": "1559:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1570:6:18",
														"nodeType": "YulTypedName",
														"src": "1570:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1581:4:18",
														"nodeType": "YulTypedName",
														"src": "1581:4:18",
														"type": ""
													}
												],
												"src": "1489:177:18"
											},
											{
												"body": {
													"nativeSrc": "1758:167:18",
													"nodeType": "YulBlock",
													"src": "1758:167:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "1804:16:18",
																"nodeType": "YulBlock",
																"src": "1804:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1813:1:18",
																					"nodeType": "YulLiteral",
																					"src": "1813:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1816:1:18",
																					"nodeType": "YulLiteral",
																					"src": "1816:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1806:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "1806:6:18"
																			},
																			"nativeSrc": "1806:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "1806:12:18"
																		},
																		"nativeSrc": "1806:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "1806:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1779:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "1779:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1788:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "1788:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1775:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "1775:3:18"
																		},
																		"nativeSrc": "1775:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1775:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1800:2:18",
																		"nodeType": "YulLiteral",
																		"src": "1800:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1771:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "1771:3:18"
																},
																"nativeSrc": "1771:32:18",
																"nodeType": "YulFunctionCall",
																"src": "1771:32:18"
															},
															"nativeSrc": "1768:52:18",
															"nodeType": "YulIf",
															"src": "1768:52:18"
														},
														{
															"nativeSrc": "1829:33:18",
															"nodeType": "YulAssignment",
															"src": "1829:33:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1852:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "1852:9:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1839:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "1839:12:18"
																},
																"nativeSrc": "1839:23:18",
																"nodeType": "YulFunctionCall",
																"src": "1839:23:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1829:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1829:6:18"
																}
															]
														},
														{
															"nativeSrc": "1871:48:18",
															"nodeType": "YulAssignment",
															"src": "1871:48:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1904:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "1904:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1915:2:18",
																				"nodeType": "YulLiteral",
																				"src": "1915:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1900:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "1900:3:18"
																		},
																		"nativeSrc": "1900:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1900:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "1881:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "1881:18:18"
																},
																"nativeSrc": "1881:38:18",
																"nodeType": "YulFunctionCall",
																"src": "1881:38:18"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1871:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1871:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "1671:254:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1716:9:18",
														"nodeType": "YulTypedName",
														"src": "1716:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1727:7:18",
														"nodeType": "YulTypedName",
														"src": "1727:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1739:6:18",
														"nodeType": "YulTypedName",
														"src": "1739:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1747:6:18",
														"nodeType": "YulTypedName",
														"src": "1747:6:18",
														"type": ""
													}
												],
												"src": "1671:254:18"
											},
											{
												"body": {
													"nativeSrc": "1962:95:18",
													"nodeType": "YulBlock",
													"src": "1962:95:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "1979:1:18",
																		"nodeType": "YulLiteral",
																		"src": "1979:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "1986:3:18",
																				"nodeType": "YulLiteral",
																				"src": "1986:3:18",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1991:10:18",
																				"nodeType": "YulLiteral",
																				"src": "1991:10:18",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "1982:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "1982:3:18"
																		},
																		"nativeSrc": "1982:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "1982:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1972:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "1972:6:18"
																},
																"nativeSrc": "1972:31:18",
																"nodeType": "YulFunctionCall",
																"src": "1972:31:18"
															},
															"nativeSrc": "1972:31:18",
															"nodeType": "YulExpressionStatement",
															"src": "1972:31:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2019:1:18",
																		"nodeType": "YulLiteral",
																		"src": "2019:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2022:4:18",
																		"nodeType": "YulLiteral",
																		"src": "2022:4:18",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2012:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2012:6:18"
																},
																"nativeSrc": "2012:15:18",
																"nodeType": "YulFunctionCall",
																"src": "2012:15:18"
															},
															"nativeSrc": "2012:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "2012:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2043:1:18",
																		"nodeType": "YulLiteral",
																		"src": "2043:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2046:4:18",
																		"nodeType": "YulLiteral",
																		"src": "2046:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "2036:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2036:6:18"
																},
																"nativeSrc": "2036:15:18",
																"nodeType": "YulFunctionCall",
																"src": "2036:15:18"
															},
															"nativeSrc": "2036:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "2036:15:18"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "1930:127:18",
												"nodeType": "YulFunctionDefinition",
												"src": "1930:127:18"
											},
											{
												"body": {
													"nativeSrc": "2114:666:18",
													"nodeType": "YulBlock",
													"src": "2114:666:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "2163:16:18",
																"nodeType": "YulBlock",
																"src": "2163:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2172:1:18",
																					"nodeType": "YulLiteral",
																					"src": "2172:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2175:1:18",
																					"nodeType": "YulLiteral",
																					"src": "2175:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2165:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "2165:6:18"
																			},
																			"nativeSrc": "2165:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "2165:12:18"
																		},
																		"nativeSrc": "2165:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "2165:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2142:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "2142:6:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2150:4:18",
																						"nodeType": "YulLiteral",
																						"src": "2150:4:18",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2138:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "2138:3:18"
																				},
																				"nativeSrc": "2138:17:18",
																				"nodeType": "YulFunctionCall",
																				"src": "2138:17:18"
																			},
																			{
																				"name": "end",
																				"nativeSrc": "2157:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "2157:3:18"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "2134:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2134:3:18"
																		},
																		"nativeSrc": "2134:27:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2134:27:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2127:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2127:6:18"
																},
																"nativeSrc": "2127:35:18",
																"nodeType": "YulFunctionCall",
																"src": "2127:35:18"
															},
															"nativeSrc": "2124:55:18",
															"nodeType": "YulIf",
															"src": "2124:55:18"
														},
														{
															"nativeSrc": "2188:30:18",
															"nodeType": "YulVariableDeclaration",
															"src": "2188:30:18",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2211:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "2211:6:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2198:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "2198:12:18"
																},
																"nativeSrc": "2198:20:18",
																"nodeType": "YulFunctionCall",
																"src": "2198:20:18"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "2192:2:18",
																	"nodeType": "YulTypedName",
																	"src": "2192:2:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2227:28:18",
															"nodeType": "YulVariableDeclaration",
															"src": "2227:28:18",
															"value": {
																"kind": "number",
																"nativeSrc": "2237:18:18",
																"nodeType": "YulLiteral",
																"src": "2237:18:18",
																"type": "",
																"value": "0xffffffffffffffff"
															},
															"variables": [
																{
																	"name": "_2",
																	"nativeSrc": "2231:2:18",
																	"nodeType": "YulTypedName",
																	"src": "2231:2:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2278:22:18",
																"nodeType": "YulBlock",
																"src": "2278:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2280:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "2280:16:18"
																			},
																			"nativeSrc": "2280:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "2280:18:18"
																		},
																		"nativeSrc": "2280:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "2280:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "2270:2:18",
																		"nodeType": "YulIdentifier",
																		"src": "2270:2:18"
																	},
																	{
																		"name": "_2",
																		"nativeSrc": "2274:2:18",
																		"nodeType": "YulIdentifier",
																		"src": "2274:2:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2267:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "2267:2:18"
																},
																"nativeSrc": "2267:10:18",
																"nodeType": "YulFunctionCall",
																"src": "2267:10:18"
															},
															"nativeSrc": "2264:36:18",
															"nodeType": "YulIf",
															"src": "2264:36:18"
														},
														{
															"nativeSrc": "2309:17:18",
															"nodeType": "YulVariableDeclaration",
															"src": "2309:17:18",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2323:2:18",
																		"nodeType": "YulLiteral",
																		"src": "2323:2:18",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "not",
																	"nativeSrc": "2319:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2319:3:18"
																},
																"nativeSrc": "2319:7:18",
																"nodeType": "YulFunctionCall",
																"src": "2319:7:18"
															},
															"variables": [
																{
																	"name": "_3",
																	"nativeSrc": "2313:2:18",
																	"nodeType": "YulTypedName",
																	"src": "2313:2:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2335:23:18",
															"nodeType": "YulVariableDeclaration",
															"src": "2335:23:18",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2355:2:18",
																		"nodeType": "YulLiteral",
																		"src": "2355:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2349:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "2349:5:18"
																},
																"nativeSrc": "2349:9:18",
																"nodeType": "YulFunctionCall",
																"src": "2349:9:18"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "2339:6:18",
																	"nodeType": "YulTypedName",
																	"src": "2339:6:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2367:71:18",
															"nodeType": "YulVariableDeclaration",
															"src": "2367:71:18",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "2389:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "2389:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "_1",
																										"nativeSrc": "2413:2:18",
																										"nodeType": "YulIdentifier",
																										"src": "2413:2:18"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "2417:4:18",
																										"nodeType": "YulLiteral",
																										"src": "2417:4:18",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "2409:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "2409:3:18"
																								},
																								"nativeSrc": "2409:13:18",
																								"nodeType": "YulFunctionCall",
																								"src": "2409:13:18"
																							},
																							{
																								"name": "_3",
																								"nativeSrc": "2424:2:18",
																								"nodeType": "YulIdentifier",
																								"src": "2424:2:18"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "2405:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "2405:3:18"
																						},
																						"nativeSrc": "2405:22:18",
																						"nodeType": "YulFunctionCall",
																						"src": "2405:22:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2429:2:18",
																						"nodeType": "YulLiteral",
																						"src": "2429:2:18",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2401:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "2401:3:18"
																				},
																				"nativeSrc": "2401:31:18",
																				"nodeType": "YulFunctionCall",
																				"src": "2401:31:18"
																			},
																			{
																				"name": "_3",
																				"nativeSrc": "2434:2:18",
																				"nodeType": "YulIdentifier",
																				"src": "2434:2:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2397:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2397:3:18"
																		},
																		"nativeSrc": "2397:40:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2397:40:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2385:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2385:3:18"
																},
																"nativeSrc": "2385:53:18",
																"nodeType": "YulFunctionCall",
																"src": "2385:53:18"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "2371:10:18",
																	"nodeType": "YulTypedName",
																	"src": "2371:10:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "2497:22:18",
																"nodeType": "YulBlock",
																"src": "2497:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "2499:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "2499:16:18"
																			},
																			"nativeSrc": "2499:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "2499:18:18"
																		},
																		"nativeSrc": "2499:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "2499:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "2456:10:18",
																				"nodeType": "YulIdentifier",
																				"src": "2456:10:18"
																			},
																			{
																				"name": "_2",
																				"nativeSrc": "2468:2:18",
																				"nodeType": "YulIdentifier",
																				"src": "2468:2:18"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "2453:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "2453:2:18"
																		},
																		"nativeSrc": "2453:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2453:18:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "2476:10:18",
																				"nodeType": "YulIdentifier",
																				"src": "2476:10:18"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "2488:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "2488:6:18"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "2473:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "2473:2:18"
																		},
																		"nativeSrc": "2473:22:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2473:22:18"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "2450:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "2450:2:18"
																},
																"nativeSrc": "2450:46:18",
																"nodeType": "YulFunctionCall",
																"src": "2450:46:18"
															},
															"nativeSrc": "2447:72:18",
															"nodeType": "YulIf",
															"src": "2447:72:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "2535:2:18",
																		"nodeType": "YulLiteral",
																		"src": "2535:2:18",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "2539:10:18",
																		"nodeType": "YulIdentifier",
																		"src": "2539:10:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2528:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2528:6:18"
																},
																"nativeSrc": "2528:22:18",
																"nodeType": "YulFunctionCall",
																"src": "2528:22:18"
															},
															"nativeSrc": "2528:22:18",
															"nodeType": "YulExpressionStatement",
															"src": "2528:22:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "2566:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "2566:6:18"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "2574:2:18",
																		"nodeType": "YulIdentifier",
																		"src": "2574:2:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2559:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2559:6:18"
																},
																"nativeSrc": "2559:18:18",
																"nodeType": "YulFunctionCall",
																"src": "2559:18:18"
															},
															"nativeSrc": "2559:18:18",
															"nodeType": "YulExpressionStatement",
															"src": "2559:18:18"
														},
														{
															"body": {
																"nativeSrc": "2625:16:18",
																"nodeType": "YulBlock",
																"src": "2625:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2634:1:18",
																					"nodeType": "YulLiteral",
																					"src": "2634:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2637:1:18",
																					"nodeType": "YulLiteral",
																					"src": "2637:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2627:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "2627:6:18"
																			},
																			"nativeSrc": "2627:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "2627:12:18"
																		},
																		"nativeSrc": "2627:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "2627:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "offset",
																						"nativeSrc": "2600:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "2600:6:18"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "2608:2:18",
																						"nodeType": "YulIdentifier",
																						"src": "2608:2:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2596:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "2596:3:18"
																				},
																				"nativeSrc": "2596:15:18",
																				"nodeType": "YulFunctionCall",
																				"src": "2596:15:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2613:4:18",
																				"nodeType": "YulLiteral",
																				"src": "2613:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2592:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2592:3:18"
																		},
																		"nativeSrc": "2592:26:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2592:26:18"
																	},
																	{
																		"name": "end",
																		"nativeSrc": "2620:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "2620:3:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "2589:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "2589:2:18"
																},
																"nativeSrc": "2589:35:18",
																"nodeType": "YulFunctionCall",
																"src": "2589:35:18"
															},
															"nativeSrc": "2586:55:18",
															"nodeType": "YulIf",
															"src": "2586:55:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "2667:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "2667:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2675:4:18",
																				"nodeType": "YulLiteral",
																				"src": "2675:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2663:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2663:3:18"
																		},
																		"nativeSrc": "2663:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2663:17:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "offset",
																				"nativeSrc": "2686:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "2686:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2694:4:18",
																				"nodeType": "YulLiteral",
																				"src": "2694:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2682:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2682:3:18"
																		},
																		"nativeSrc": "2682:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2682:17:18"
																	},
																	{
																		"name": "_1",
																		"nativeSrc": "2701:2:18",
																		"nodeType": "YulIdentifier",
																		"src": "2701:2:18"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "2650:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "2650:12:18"
																},
																"nativeSrc": "2650:54:18",
																"nodeType": "YulFunctionCall",
																"src": "2650:54:18"
															},
															"nativeSrc": "2650:54:18",
															"nodeType": "YulExpressionStatement",
															"src": "2650:54:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "2728:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "2728:6:18"
																					},
																					{
																						"name": "_1",
																						"nativeSrc": "2736:2:18",
																						"nodeType": "YulIdentifier",
																						"src": "2736:2:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2724:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "2724:3:18"
																				},
																				"nativeSrc": "2724:15:18",
																				"nodeType": "YulFunctionCall",
																				"src": "2724:15:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2741:4:18",
																				"nodeType": "YulLiteral",
																				"src": "2741:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2720:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2720:3:18"
																		},
																		"nativeSrc": "2720:26:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2720:26:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2748:1:18",
																		"nodeType": "YulLiteral",
																		"src": "2748:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2713:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2713:6:18"
																},
																"nativeSrc": "2713:37:18",
																"nodeType": "YulFunctionCall",
																"src": "2713:37:18"
															},
															"nativeSrc": "2713:37:18",
															"nodeType": "YulExpressionStatement",
															"src": "2713:37:18"
														},
														{
															"nativeSrc": "2759:15:18",
															"nodeType": "YulAssignment",
															"src": "2759:15:18",
															"value": {
																"name": "memPtr",
																"nativeSrc": "2768:6:18",
																"nodeType": "YulIdentifier",
																"src": "2768:6:18"
															},
															"variableNames": [
																{
																	"name": "array",
																	"nativeSrc": "2759:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "2759:5:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_bytes",
												"nativeSrc": "2062:718:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2088:6:18",
														"nodeType": "YulTypedName",
														"src": "2088:6:18",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2096:3:18",
														"nodeType": "YulTypedName",
														"src": "2096:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "array",
														"nativeSrc": "2104:5:18",
														"nodeType": "YulTypedName",
														"src": "2104:5:18",
														"type": ""
													}
												],
												"src": "2062:718:18"
											},
											{
												"body": {
													"nativeSrc": "2881:298:18",
													"nodeType": "YulBlock",
													"src": "2881:298:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "2927:16:18",
																"nodeType": "YulBlock",
																"src": "2927:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2936:1:18",
																					"nodeType": "YulLiteral",
																					"src": "2936:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2939:1:18",
																					"nodeType": "YulLiteral",
																					"src": "2939:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2929:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "2929:6:18"
																			},
																			"nativeSrc": "2929:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "2929:12:18"
																		},
																		"nativeSrc": "2929:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "2929:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2902:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "2902:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2911:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "2911:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2898:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "2898:3:18"
																		},
																		"nativeSrc": "2898:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "2898:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2923:2:18",
																		"nodeType": "YulLiteral",
																		"src": "2923:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2894:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "2894:3:18"
																},
																"nativeSrc": "2894:32:18",
																"nodeType": "YulFunctionCall",
																"src": "2894:32:18"
															},
															"nativeSrc": "2891:52:18",
															"nodeType": "YulIf",
															"src": "2891:52:18"
														},
														{
															"nativeSrc": "2952:39:18",
															"nodeType": "YulAssignment",
															"src": "2952:39:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2981:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "2981:9:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "2962:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "2962:18:18"
																},
																"nativeSrc": "2962:29:18",
																"nodeType": "YulFunctionCall",
																"src": "2962:29:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2952:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "2952:6:18"
																}
															]
														},
														{
															"nativeSrc": "3000:46:18",
															"nodeType": "YulVariableDeclaration",
															"src": "3000:46:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3031:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "3031:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3042:2:18",
																				"nodeType": "YulLiteral",
																				"src": "3042:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3027:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "3027:3:18"
																		},
																		"nativeSrc": "3027:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3027:18:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3014:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "3014:12:18"
																},
																"nativeSrc": "3014:32:18",
																"nodeType": "YulFunctionCall",
																"src": "3014:32:18"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "3004:6:18",
																	"nodeType": "YulTypedName",
																	"src": "3004:6:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3089:16:18",
																"nodeType": "YulBlock",
																"src": "3089:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3098:1:18",
																					"nodeType": "YulLiteral",
																					"src": "3098:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3101:1:18",
																					"nodeType": "YulLiteral",
																					"src": "3101:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3091:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "3091:6:18"
																			},
																			"nativeSrc": "3091:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "3091:12:18"
																		},
																		"nativeSrc": "3091:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "3091:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3061:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "3061:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3069:18:18",
																		"nodeType": "YulLiteral",
																		"src": "3069:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3058:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "3058:2:18"
																},
																"nativeSrc": "3058:30:18",
																"nodeType": "YulFunctionCall",
																"src": "3058:30:18"
															},
															"nativeSrc": "3055:50:18",
															"nodeType": "YulIf",
															"src": "3055:50:18"
														},
														{
															"nativeSrc": "3114:59:18",
															"nodeType": "YulAssignment",
															"src": "3114:59:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3145:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "3145:9:18"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "3156:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "3156:6:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3141:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "3141:3:18"
																		},
																		"nativeSrc": "3141:22:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3141:22:18"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "3165:7:18",
																		"nodeType": "YulIdentifier",
																		"src": "3165:7:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nativeSrc": "3124:16:18",
																	"nodeType": "YulIdentifier",
																	"src": "3124:16:18"
																},
																"nativeSrc": "3124:49:18",
																"nodeType": "YulFunctionCall",
																"src": "3124:49:18"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3114:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3114:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_memory_ptr",
												"nativeSrc": "2785:394:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2839:9:18",
														"nodeType": "YulTypedName",
														"src": "2839:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2850:7:18",
														"nodeType": "YulTypedName",
														"src": "2850:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2862:6:18",
														"nodeType": "YulTypedName",
														"src": "2862:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2870:6:18",
														"nodeType": "YulTypedName",
														"src": "2870:6:18",
														"type": ""
													}
												],
												"src": "2785:394:18"
											},
											{
												"body": {
													"nativeSrc": "3288:218:18",
													"nodeType": "YulBlock",
													"src": "3288:218:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "3334:16:18",
																"nodeType": "YulBlock",
																"src": "3334:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3343:1:18",
																					"nodeType": "YulLiteral",
																					"src": "3343:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3346:1:18",
																					"nodeType": "YulLiteral",
																					"src": "3346:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3336:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "3336:6:18"
																			},
																			"nativeSrc": "3336:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "3336:12:18"
																		},
																		"nativeSrc": "3336:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "3336:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3309:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "3309:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3318:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "3318:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3305:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "3305:3:18"
																		},
																		"nativeSrc": "3305:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3305:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3330:2:18",
																		"nodeType": "YulLiteral",
																		"src": "3330:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3301:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "3301:3:18"
																},
																"nativeSrc": "3301:32:18",
																"nodeType": "YulFunctionCall",
																"src": "3301:32:18"
															},
															"nativeSrc": "3298:52:18",
															"nodeType": "YulIf",
															"src": "3298:52:18"
														},
														{
															"nativeSrc": "3359:39:18",
															"nodeType": "YulAssignment",
															"src": "3359:39:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3388:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "3388:9:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3369:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "3369:18:18"
																},
																"nativeSrc": "3369:29:18",
																"nodeType": "YulFunctionCall",
																"src": "3369:29:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3359:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3359:6:18"
																}
															]
														},
														{
															"nativeSrc": "3407:42:18",
															"nodeType": "YulAssignment",
															"src": "3407:42:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3434:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "3434:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3445:2:18",
																				"nodeType": "YulLiteral",
																				"src": "3445:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3430:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "3430:3:18"
																		},
																		"nativeSrc": "3430:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3430:18:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3417:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "3417:12:18"
																},
																"nativeSrc": "3417:32:18",
																"nodeType": "YulFunctionCall",
																"src": "3417:32:18"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3407:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3407:6:18"
																}
															]
														},
														{
															"nativeSrc": "3458:42:18",
															"nodeType": "YulAssignment",
															"src": "3458:42:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3485:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "3485:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3496:2:18",
																				"nodeType": "YulLiteral",
																				"src": "3496:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3481:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "3481:3:18"
																		},
																		"nativeSrc": "3481:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3481:18:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3468:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "3468:12:18"
																},
																"nativeSrc": "3468:32:18",
																"nodeType": "YulFunctionCall",
																"src": "3468:32:18"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "3458:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3458:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256",
												"nativeSrc": "3184:322:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3238:9:18",
														"nodeType": "YulTypedName",
														"src": "3238:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3249:7:18",
														"nodeType": "YulTypedName",
														"src": "3249:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3261:6:18",
														"nodeType": "YulTypedName",
														"src": "3261:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3269:6:18",
														"nodeType": "YulTypedName",
														"src": "3269:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "3277:6:18",
														"nodeType": "YulTypedName",
														"src": "3277:6:18",
														"type": ""
													}
												],
												"src": "3184:322:18"
											},
											{
												"body": {
													"nativeSrc": "3598:167:18",
													"nodeType": "YulBlock",
													"src": "3598:167:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "3644:16:18",
																"nodeType": "YulBlock",
																"src": "3644:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3653:1:18",
																					"nodeType": "YulLiteral",
																					"src": "3653:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3656:1:18",
																					"nodeType": "YulLiteral",
																					"src": "3656:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3646:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "3646:6:18"
																			},
																			"nativeSrc": "3646:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "3646:12:18"
																		},
																		"nativeSrc": "3646:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "3646:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3619:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "3619:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3628:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "3628:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3615:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "3615:3:18"
																		},
																		"nativeSrc": "3615:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3615:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3640:2:18",
																		"nodeType": "YulLiteral",
																		"src": "3640:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3611:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "3611:3:18"
																},
																"nativeSrc": "3611:32:18",
																"nodeType": "YulFunctionCall",
																"src": "3611:32:18"
															},
															"nativeSrc": "3608:52:18",
															"nodeType": "YulIf",
															"src": "3608:52:18"
														},
														{
															"nativeSrc": "3669:33:18",
															"nodeType": "YulAssignment",
															"src": "3669:33:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3692:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "3692:9:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3679:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "3679:12:18"
																},
																"nativeSrc": "3679:23:18",
																"nodeType": "YulFunctionCall",
																"src": "3679:23:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3669:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3669:6:18"
																}
															]
														},
														{
															"nativeSrc": "3711:48:18",
															"nodeType": "YulAssignment",
															"src": "3711:48:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3744:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "3744:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3755:2:18",
																				"nodeType": "YulLiteral",
																				"src": "3755:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3740:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "3740:3:18"
																		},
																		"nativeSrc": "3740:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "3740:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "3721:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "3721:18:18"
																},
																"nativeSrc": "3721:38:18",
																"nodeType": "YulFunctionCall",
																"src": "3721:38:18"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3711:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3711:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_address",
												"nativeSrc": "3511:254:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3556:9:18",
														"nodeType": "YulTypedName",
														"src": "3556:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3567:7:18",
														"nodeType": "YulTypedName",
														"src": "3567:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3579:6:18",
														"nodeType": "YulTypedName",
														"src": "3579:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3587:6:18",
														"nodeType": "YulTypedName",
														"src": "3587:6:18",
														"type": ""
													}
												],
												"src": "3511:254:18"
											},
											{
												"body": {
													"nativeSrc": "3871:76:18",
													"nodeType": "YulBlock",
													"src": "3871:76:18",
													"statements": [
														{
															"nativeSrc": "3881:26:18",
															"nodeType": "YulAssignment",
															"src": "3881:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3893:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "3893:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3904:2:18",
																		"nodeType": "YulLiteral",
																		"src": "3904:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3889:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "3889:3:18"
																},
																"nativeSrc": "3889:18:18",
																"nodeType": "YulFunctionCall",
																"src": "3889:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "3881:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "3881:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3923:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "3923:9:18"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "3934:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "3934:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3916:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "3916:6:18"
																},
																"nativeSrc": "3916:25:18",
																"nodeType": "YulFunctionCall",
																"src": "3916:25:18"
															},
															"nativeSrc": "3916:25:18",
															"nodeType": "YulExpressionStatement",
															"src": "3916:25:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "3770:177:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3840:9:18",
														"nodeType": "YulTypedName",
														"src": "3840:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "3851:6:18",
														"nodeType": "YulTypedName",
														"src": "3851:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "3862:4:18",
														"nodeType": "YulTypedName",
														"src": "3862:4:18",
														"type": ""
													}
												],
												"src": "3770:177:18"
											},
											{
												"body": {
													"nativeSrc": "4001:239:18",
													"nodeType": "YulBlock",
													"src": "4001:239:18",
													"statements": [
														{
															"nativeSrc": "4011:26:18",
															"nodeType": "YulVariableDeclaration",
															"src": "4011:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "4031:5:18",
																		"nodeType": "YulIdentifier",
																		"src": "4031:5:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4025:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "4025:5:18"
																},
																"nativeSrc": "4025:12:18",
																"nodeType": "YulFunctionCall",
																"src": "4025:12:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "4015:6:18",
																	"nodeType": "YulTypedName",
																	"src": "4015:6:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "4053:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "4053:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4058:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "4058:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4046:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4046:6:18"
																},
																"nativeSrc": "4046:19:18",
																"nodeType": "YulFunctionCall",
																"src": "4046:19:18"
															},
															"nativeSrc": "4046:19:18",
															"nodeType": "YulExpressionStatement",
															"src": "4046:19:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "4084:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "4084:3:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4089:4:18",
																				"nodeType": "YulLiteral",
																				"src": "4089:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4080:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4080:3:18"
																		},
																		"nativeSrc": "4080:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4080:14:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "4100:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "4100:5:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4107:4:18",
																				"nodeType": "YulLiteral",
																				"src": "4107:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4096:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4096:3:18"
																		},
																		"nativeSrc": "4096:16:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4096:16:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4114:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "4114:6:18"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "4074:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "4074:5:18"
																},
																"nativeSrc": "4074:47:18",
																"nodeType": "YulFunctionCall",
																"src": "4074:47:18"
															},
															"nativeSrc": "4074:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "4074:47:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "pos",
																						"nativeSrc": "4145:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "4145:3:18"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "4150:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "4150:6:18"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4141:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "4141:3:18"
																				},
																				"nativeSrc": "4141:16:18",
																				"nodeType": "YulFunctionCall",
																				"src": "4141:16:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4159:4:18",
																				"nodeType": "YulLiteral",
																				"src": "4159:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4137:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4137:3:18"
																		},
																		"nativeSrc": "4137:27:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4137:27:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4166:1:18",
																		"nodeType": "YulLiteral",
																		"src": "4166:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4130:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4130:6:18"
																},
																"nativeSrc": "4130:38:18",
																"nodeType": "YulFunctionCall",
																"src": "4130:38:18"
															},
															"nativeSrc": "4130:38:18",
															"nodeType": "YulExpressionStatement",
															"src": "4130:38:18"
														},
														{
															"nativeSrc": "4177:57:18",
															"nodeType": "YulAssignment",
															"src": "4177:57:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "pos",
																				"nativeSrc": "4192:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "4192:3:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "4205:6:18",
																								"nodeType": "YulIdentifier",
																								"src": "4205:6:18"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4213:2:18",
																								"nodeType": "YulLiteral",
																								"src": "4213:2:18",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "4201:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "4201:3:18"
																						},
																						"nativeSrc": "4201:15:18",
																						"nodeType": "YulFunctionCall",
																						"src": "4201:15:18"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4222:2:18",
																								"nodeType": "YulLiteral",
																								"src": "4222:2:18",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "4218:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "4218:3:18"
																						},
																						"nativeSrc": "4218:7:18",
																						"nodeType": "YulFunctionCall",
																						"src": "4218:7:18"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "4197:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "4197:3:18"
																				},
																				"nativeSrc": "4197:29:18",
																				"nodeType": "YulFunctionCall",
																				"src": "4197:29:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4188:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4188:3:18"
																		},
																		"nativeSrc": "4188:39:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4188:39:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4229:4:18",
																		"nodeType": "YulLiteral",
																		"src": "4229:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4184:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "4184:3:18"
																},
																"nativeSrc": "4184:50:18",
																"nodeType": "YulFunctionCall",
																"src": "4184:50:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "4177:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "4177:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_bytes",
												"nativeSrc": "3952:288:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "3978:5:18",
														"nodeType": "YulTypedName",
														"src": "3978:5:18",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "3985:3:18",
														"nodeType": "YulTypedName",
														"src": "3985:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "3993:3:18",
														"nodeType": "YulTypedName",
														"src": "3993:3:18",
														"type": ""
													}
												],
												"src": "3952:288:18"
											},
											{
												"body": {
													"nativeSrc": "4470:315:18",
													"nodeType": "YulBlock",
													"src": "4470:315:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4487:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "4487:9:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "4502:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "4502:6:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "4518:3:18",
																								"nodeType": "YulLiteral",
																								"src": "4518:3:18",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "4523:1:18",
																								"nodeType": "YulLiteral",
																								"src": "4523:1:18",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "4514:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "4514:3:18"
																						},
																						"nativeSrc": "4514:11:18",
																						"nodeType": "YulFunctionCall",
																						"src": "4514:11:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4527:1:18",
																						"nodeType": "YulLiteral",
																						"src": "4527:1:18",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "4510:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "4510:3:18"
																				},
																				"nativeSrc": "4510:19:18",
																				"nodeType": "YulFunctionCall",
																				"src": "4510:19:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4498:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4498:3:18"
																		},
																		"nativeSrc": "4498:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4498:32:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4480:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4480:6:18"
																},
																"nativeSrc": "4480:51:18",
																"nodeType": "YulFunctionCall",
																"src": "4480:51:18"
															},
															"nativeSrc": "4480:51:18",
															"nodeType": "YulExpressionStatement",
															"src": "4480:51:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4551:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "4551:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4562:2:18",
																				"nodeType": "YulLiteral",
																				"src": "4562:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4547:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4547:3:18"
																		},
																		"nativeSrc": "4547:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4547:18:18"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "4567:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "4567:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4540:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4540:6:18"
																},
																"nativeSrc": "4540:34:18",
																"nodeType": "YulFunctionCall",
																"src": "4540:34:18"
															},
															"nativeSrc": "4540:34:18",
															"nodeType": "YulExpressionStatement",
															"src": "4540:34:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4594:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "4594:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4605:2:18",
																				"nodeType": "YulLiteral",
																				"src": "4605:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4590:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4590:3:18"
																		},
																		"nativeSrc": "4590:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4590:18:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4610:3:18",
																		"nodeType": "YulLiteral",
																		"src": "4610:3:18",
																		"type": "",
																		"value": "160"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4583:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4583:6:18"
																},
																"nativeSrc": "4583:31:18",
																"nodeType": "YulFunctionCall",
																"src": "4583:31:18"
															},
															"nativeSrc": "4583:31:18",
															"nodeType": "YulExpressionStatement",
															"src": "4583:31:18"
														},
														{
															"nativeSrc": "4623:53:18",
															"nodeType": "YulAssignment",
															"src": "4623:53:18",
															"value": {
																"arguments": [
																	{
																		"name": "value2",
																		"nativeSrc": "4648:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "4648:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4660:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "4660:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4671:3:18",
																				"nodeType": "YulLiteral",
																				"src": "4671:3:18",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4656:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4656:3:18"
																		},
																		"nativeSrc": "4656:19:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4656:19:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nativeSrc": "4631:16:18",
																	"nodeType": "YulIdentifier",
																	"src": "4631:16:18"
																},
																"nativeSrc": "4631:45:18",
																"nodeType": "YulFunctionCall",
																"src": "4631:45:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4623:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "4623:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4696:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "4696:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4707:2:18",
																				"nodeType": "YulLiteral",
																				"src": "4707:2:18",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4692:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4692:3:18"
																		},
																		"nativeSrc": "4692:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4692:18:18"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value3",
																						"nativeSrc": "4726:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "4726:6:18"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "4719:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "4719:6:18"
																				},
																				"nativeSrc": "4719:14:18",
																				"nodeType": "YulFunctionCall",
																				"src": "4719:14:18"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "4712:6:18",
																			"nodeType": "YulIdentifier",
																			"src": "4712:6:18"
																		},
																		"nativeSrc": "4712:22:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4712:22:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4685:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4685:6:18"
																},
																"nativeSrc": "4685:50:18",
																"nodeType": "YulFunctionCall",
																"src": "4685:50:18"
															},
															"nativeSrc": "4685:50:18",
															"nodeType": "YulExpressionStatement",
															"src": "4685:50:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4755:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "4755:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4766:3:18",
																				"nodeType": "YulLiteral",
																				"src": "4766:3:18",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4751:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4751:3:18"
																		},
																		"nativeSrc": "4751:19:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4751:19:18"
																	},
																	{
																		"name": "value4",
																		"nativeSrc": "4772:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "4772:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4744:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4744:6:18"
																},
																"nativeSrc": "4744:35:18",
																"nodeType": "YulFunctionCall",
																"src": "4744:35:18"
															},
															"nativeSrc": "4744:35:18",
															"nodeType": "YulExpressionStatement",
															"src": "4744:35:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256_t_bytes_memory_ptr_t_bool_t_uint256__to_t_address_t_uint256_t_bytes_memory_ptr_t_bool_t_uint256__fromStack_reversed",
												"nativeSrc": "4245:540:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4407:9:18",
														"nodeType": "YulTypedName",
														"src": "4407:9:18",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "4418:6:18",
														"nodeType": "YulTypedName",
														"src": "4418:6:18",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "4426:6:18",
														"nodeType": "YulTypedName",
														"src": "4426:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "4434:6:18",
														"nodeType": "YulTypedName",
														"src": "4434:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4442:6:18",
														"nodeType": "YulTypedName",
														"src": "4442:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4450:6:18",
														"nodeType": "YulTypedName",
														"src": "4450:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4461:4:18",
														"nodeType": "YulTypedName",
														"src": "4461:4:18",
														"type": ""
													}
												],
												"src": "4245:540:18"
											},
											{
												"body": {
													"nativeSrc": "4911:98:18",
													"nodeType": "YulBlock",
													"src": "4911:98:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4928:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "4928:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4939:2:18",
																		"nodeType": "YulLiteral",
																		"src": "4939:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4921:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "4921:6:18"
																},
																"nativeSrc": "4921:21:18",
																"nodeType": "YulFunctionCall",
																"src": "4921:21:18"
															},
															"nativeSrc": "4921:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "4921:21:18"
														},
														{
															"nativeSrc": "4951:52:18",
															"nodeType": "YulAssignment",
															"src": "4951:52:18",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "4976:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "4976:6:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4988:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "4988:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4999:2:18",
																				"nodeType": "YulLiteral",
																				"src": "4999:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4984:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "4984:3:18"
																		},
																		"nativeSrc": "4984:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "4984:18:18"
																	}
																],
																"functionName": {
																	"name": "abi_encode_bytes",
																	"nativeSrc": "4959:16:18",
																	"nodeType": "YulIdentifier",
																	"src": "4959:16:18"
																},
																"nativeSrc": "4959:44:18",
																"nodeType": "YulFunctionCall",
																"src": "4959:44:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4951:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "4951:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4790:219:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4880:9:18",
														"nodeType": "YulTypedName",
														"src": "4880:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4891:6:18",
														"nodeType": "YulTypedName",
														"src": "4891:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4902:4:18",
														"nodeType": "YulTypedName",
														"src": "4902:4:18",
														"type": ""
													}
												],
												"src": "4790:219:18"
											},
											{
												"body": {
													"nativeSrc": "5127:349:18",
													"nodeType": "YulBlock",
													"src": "5127:349:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "5173:16:18",
																"nodeType": "YulBlock",
																"src": "5173:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5182:1:18",
																					"nodeType": "YulLiteral",
																					"src": "5182:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5185:1:18",
																					"nodeType": "YulLiteral",
																					"src": "5185:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5175:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "5175:6:18"
																			},
																			"nativeSrc": "5175:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "5175:12:18"
																		},
																		"nativeSrc": "5175:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "5175:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5148:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "5148:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5157:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "5157:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5144:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5144:3:18"
																		},
																		"nativeSrc": "5144:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5144:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5169:2:18",
																		"nodeType": "YulLiteral",
																		"src": "5169:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5140:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "5140:3:18"
																},
																"nativeSrc": "5140:32:18",
																"nodeType": "YulFunctionCall",
																"src": "5140:32:18"
															},
															"nativeSrc": "5137:52:18",
															"nodeType": "YulIf",
															"src": "5137:52:18"
														},
														{
															"nativeSrc": "5198:39:18",
															"nodeType": "YulAssignment",
															"src": "5198:39:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5227:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "5227:9:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_address",
																	"nativeSrc": "5208:18:18",
																	"nodeType": "YulIdentifier",
																	"src": "5208:18:18"
																},
																"nativeSrc": "5208:29:18",
																"nodeType": "YulFunctionCall",
																"src": "5208:29:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5198:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5198:6:18"
																}
															]
														},
														{
															"nativeSrc": "5246:42:18",
															"nodeType": "YulAssignment",
															"src": "5246:42:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5273:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "5273:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5284:2:18",
																				"nodeType": "YulLiteral",
																				"src": "5284:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5269:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5269:3:18"
																		},
																		"nativeSrc": "5269:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5269:18:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5256:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "5256:12:18"
																},
																"nativeSrc": "5256:32:18",
																"nodeType": "YulFunctionCall",
																"src": "5256:32:18"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "5246:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5246:6:18"
																}
															]
														},
														{
															"nativeSrc": "5297:46:18",
															"nodeType": "YulVariableDeclaration",
															"src": "5297:46:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5328:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "5328:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5339:2:18",
																				"nodeType": "YulLiteral",
																				"src": "5339:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5324:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5324:3:18"
																		},
																		"nativeSrc": "5324:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5324:18:18"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5311:12:18",
																	"nodeType": "YulIdentifier",
																	"src": "5311:12:18"
																},
																"nativeSrc": "5311:32:18",
																"nodeType": "YulFunctionCall",
																"src": "5311:32:18"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "5301:6:18",
																	"nodeType": "YulTypedName",
																	"src": "5301:6:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "5386:16:18",
																"nodeType": "YulBlock",
																"src": "5386:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5395:1:18",
																					"nodeType": "YulLiteral",
																					"src": "5395:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5398:1:18",
																					"nodeType": "YulLiteral",
																					"src": "5398:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5388:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "5388:6:18"
																			},
																			"nativeSrc": "5388:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "5388:12:18"
																		},
																		"nativeSrc": "5388:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "5388:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "5358:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "5358:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5366:18:18",
																		"nodeType": "YulLiteral",
																		"src": "5366:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "5355:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "5355:2:18"
																},
																"nativeSrc": "5355:30:18",
																"nodeType": "YulFunctionCall",
																"src": "5355:30:18"
															},
															"nativeSrc": "5352:50:18",
															"nodeType": "YulIf",
															"src": "5352:50:18"
														},
														{
															"nativeSrc": "5411:59:18",
															"nodeType": "YulAssignment",
															"src": "5411:59:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5442:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "5442:9:18"
																			},
																			{
																				"name": "offset",
																				"nativeSrc": "5453:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "5453:6:18"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5438:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5438:3:18"
																		},
																		"nativeSrc": "5438:22:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5438:22:18"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "5462:7:18",
																		"nodeType": "YulIdentifier",
																		"src": "5462:7:18"
																	}
																],
																"functionName": {
																	"name": "abi_decode_bytes",
																	"nativeSrc": "5421:16:18",
																	"nodeType": "YulIdentifier",
																	"src": "5421:16:18"
																},
																"nativeSrc": "5421:49:18",
																"nodeType": "YulFunctionCall",
																"src": "5421:49:18"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "5411:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5411:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptr",
												"nativeSrc": "5014:462:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5077:9:18",
														"nodeType": "YulTypedName",
														"src": "5077:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5088:7:18",
														"nodeType": "YulTypedName",
														"src": "5088:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5100:6:18",
														"nodeType": "YulTypedName",
														"src": "5100:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5108:6:18",
														"nodeType": "YulTypedName",
														"src": "5108:6:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5116:6:18",
														"nodeType": "YulTypedName",
														"src": "5116:6:18",
														"type": ""
													}
												],
												"src": "5014:462:18"
											},
											{
												"body": {
													"nativeSrc": "5655:162:18",
													"nodeType": "YulBlock",
													"src": "5655:162:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5672:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "5672:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5683:2:18",
																		"nodeType": "YulLiteral",
																		"src": "5683:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5665:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5665:6:18"
																},
																"nativeSrc": "5665:21:18",
																"nodeType": "YulFunctionCall",
																"src": "5665:21:18"
															},
															"nativeSrc": "5665:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "5665:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5706:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "5706:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5717:2:18",
																				"nodeType": "YulLiteral",
																				"src": "5717:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5702:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5702:3:18"
																		},
																		"nativeSrc": "5702:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5702:18:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5722:2:18",
																		"nodeType": "YulLiteral",
																		"src": "5722:2:18",
																		"type": "",
																		"value": "12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5695:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5695:6:18"
																},
																"nativeSrc": "5695:30:18",
																"nodeType": "YulFunctionCall",
																"src": "5695:30:18"
															},
															"nativeSrc": "5695:30:18",
															"nodeType": "YulExpressionStatement",
															"src": "5695:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5745:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "5745:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5756:2:18",
																				"nodeType": "YulLiteral",
																				"src": "5756:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5741:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "5741:3:18"
																		},
																		"nativeSrc": "5741:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "5741:18:18"
																	},
																	{
																		"hexValue": "4e6f7420616e2061646d696e",
																		"kind": "string",
																		"nativeSrc": "5761:14:18",
																		"nodeType": "YulLiteral",
																		"src": "5761:14:18",
																		"type": "",
																		"value": "Not an admin"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5734:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "5734:6:18"
																},
																"nativeSrc": "5734:42:18",
																"nodeType": "YulFunctionCall",
																"src": "5734:42:18"
															},
															"nativeSrc": "5734:42:18",
															"nodeType": "YulExpressionStatement",
															"src": "5734:42:18"
														},
														{
															"nativeSrc": "5785:26:18",
															"nodeType": "YulAssignment",
															"src": "5785:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5797:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "5797:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5808:2:18",
																		"nodeType": "YulLiteral",
																		"src": "5808:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5793:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "5793:3:18"
																},
																"nativeSrc": "5793:18:18",
																"nodeType": "YulFunctionCall",
																"src": "5793:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5785:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "5785:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_5f53099e044b88c99cc014ede5713cfdba96d95b088c34d5fa4406866af6c250__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5481:336:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5632:9:18",
														"nodeType": "YulTypedName",
														"src": "5632:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5646:4:18",
														"nodeType": "YulTypedName",
														"src": "5646:4:18",
														"type": ""
													}
												],
												"src": "5481:336:18"
											},
											{
												"body": {
													"nativeSrc": "5996:176:18",
													"nodeType": "YulBlock",
													"src": "5996:176:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6013:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "6013:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6024:2:18",
																		"nodeType": "YulLiteral",
																		"src": "6024:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6006:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6006:6:18"
																},
																"nativeSrc": "6006:21:18",
																"nodeType": "YulFunctionCall",
																"src": "6006:21:18"
															},
															"nativeSrc": "6006:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "6006:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6047:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "6047:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6058:2:18",
																				"nodeType": "YulLiteral",
																				"src": "6058:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6043:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "6043:3:18"
																		},
																		"nativeSrc": "6043:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6043:18:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6063:2:18",
																		"nodeType": "YulLiteral",
																		"src": "6063:2:18",
																		"type": "",
																		"value": "26"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6036:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6036:6:18"
																},
																"nativeSrc": "6036:30:18",
																"nodeType": "YulFunctionCall",
																"src": "6036:30:18"
															},
															"nativeSrc": "6036:30:18",
															"nodeType": "YulExpressionStatement",
															"src": "6036:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6086:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "6086:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6097:2:18",
																				"nodeType": "YulLiteral",
																				"src": "6097:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6082:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "6082:3:18"
																		},
																		"nativeSrc": "6082:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6082:18:18"
																	},
																	{
																		"hexValue": "5472616e73616374696f6e20646f6573206e6f74206578697374",
																		"kind": "string",
																		"nativeSrc": "6102:28:18",
																		"nodeType": "YulLiteral",
																		"src": "6102:28:18",
																		"type": "",
																		"value": "Transaction does not exist"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6075:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6075:6:18"
																},
																"nativeSrc": "6075:56:18",
																"nodeType": "YulFunctionCall",
																"src": "6075:56:18"
															},
															"nativeSrc": "6075:56:18",
															"nodeType": "YulExpressionStatement",
															"src": "6075:56:18"
														},
														{
															"nativeSrc": "6140:26:18",
															"nodeType": "YulAssignment",
															"src": "6140:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6152:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "6152:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6163:2:18",
																		"nodeType": "YulLiteral",
																		"src": "6163:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6148:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "6148:3:18"
																},
																"nativeSrc": "6148:18:18",
																"nodeType": "YulFunctionCall",
																"src": "6148:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6140:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "6140:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_cb323e46bbcca91e157c2b50ad4ce2acbe1153338b838c84372d5723b8995ef0__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "5822:350:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5973:9:18",
														"nodeType": "YulTypedName",
														"src": "5973:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "5987:4:18",
														"nodeType": "YulTypedName",
														"src": "5987:4:18",
														"type": ""
													}
												],
												"src": "5822:350:18"
											},
											{
												"body": {
													"nativeSrc": "6209:95:18",
													"nodeType": "YulBlock",
													"src": "6209:95:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6226:1:18",
																		"nodeType": "YulLiteral",
																		"src": "6226:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "6233:3:18",
																				"nodeType": "YulLiteral",
																				"src": "6233:3:18",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6238:10:18",
																				"nodeType": "YulLiteral",
																				"src": "6238:10:18",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "6229:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "6229:3:18"
																		},
																		"nativeSrc": "6229:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6229:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6219:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6219:6:18"
																},
																"nativeSrc": "6219:31:18",
																"nodeType": "YulFunctionCall",
																"src": "6219:31:18"
															},
															"nativeSrc": "6219:31:18",
															"nodeType": "YulExpressionStatement",
															"src": "6219:31:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6266:1:18",
																		"nodeType": "YulLiteral",
																		"src": "6266:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6269:4:18",
																		"nodeType": "YulLiteral",
																		"src": "6269:4:18",
																		"type": "",
																		"value": "0x32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6259:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6259:6:18"
																},
																"nativeSrc": "6259:15:18",
																"nodeType": "YulFunctionCall",
																"src": "6259:15:18"
															},
															"nativeSrc": "6259:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "6259:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "6290:1:18",
																		"nodeType": "YulLiteral",
																		"src": "6290:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6293:4:18",
																		"nodeType": "YulLiteral",
																		"src": "6293:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "6283:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6283:6:18"
																},
																"nativeSrc": "6283:15:18",
																"nodeType": "YulFunctionCall",
																"src": "6283:15:18"
															},
															"nativeSrc": "6283:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "6283:15:18"
														}
													]
												},
												"name": "panic_error_0x32",
												"nativeSrc": "6177:127:18",
												"nodeType": "YulFunctionDefinition",
												"src": "6177:127:18"
											},
											{
												"body": {
													"nativeSrc": "6483:178:18",
													"nodeType": "YulBlock",
													"src": "6483:178:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6500:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "6500:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6511:2:18",
																		"nodeType": "YulLiteral",
																		"src": "6511:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6493:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6493:6:18"
																},
																"nativeSrc": "6493:21:18",
																"nodeType": "YulFunctionCall",
																"src": "6493:21:18"
															},
															"nativeSrc": "6493:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "6493:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6534:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "6534:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6545:2:18",
																				"nodeType": "YulLiteral",
																				"src": "6545:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6530:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "6530:3:18"
																		},
																		"nativeSrc": "6530:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6530:18:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6550:2:18",
																		"nodeType": "YulLiteral",
																		"src": "6550:2:18",
																		"type": "",
																		"value": "28"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6523:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6523:6:18"
																},
																"nativeSrc": "6523:30:18",
																"nodeType": "YulFunctionCall",
																"src": "6523:30:18"
															},
															"nativeSrc": "6523:30:18",
															"nodeType": "YulExpressionStatement",
															"src": "6523:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6573:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "6573:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6584:2:18",
																				"nodeType": "YulLiteral",
																				"src": "6584:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6569:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "6569:3:18"
																		},
																		"nativeSrc": "6569:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6569:18:18"
																	},
																	{
																		"hexValue": "5472616e73616374696f6e20616c7265616479206578656375746564",
																		"kind": "string",
																		"nativeSrc": "6589:30:18",
																		"nodeType": "YulLiteral",
																		"src": "6589:30:18",
																		"type": "",
																		"value": "Transaction already executed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6562:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6562:6:18"
																},
																"nativeSrc": "6562:58:18",
																"nodeType": "YulFunctionCall",
																"src": "6562:58:18"
															},
															"nativeSrc": "6562:58:18",
															"nodeType": "YulExpressionStatement",
															"src": "6562:58:18"
														},
														{
															"nativeSrc": "6629:26:18",
															"nodeType": "YulAssignment",
															"src": "6629:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6641:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "6641:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6652:2:18",
																		"nodeType": "YulLiteral",
																		"src": "6652:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6637:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "6637:3:18"
																},
																"nativeSrc": "6637:18:18",
																"nodeType": "YulFunctionCall",
																"src": "6637:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6629:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "6629:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_3c3f7cf602281cf7a98efd78d98ba46309975dadee18bcb57e640145699bd800__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6309:352:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6460:9:18",
														"nodeType": "YulTypedName",
														"src": "6460:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6474:4:18",
														"nodeType": "YulTypedName",
														"src": "6474:4:18",
														"type": ""
													}
												],
												"src": "6309:352:18"
											},
											{
												"body": {
													"nativeSrc": "6840:175:18",
													"nodeType": "YulBlock",
													"src": "6840:175:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6857:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "6857:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6868:2:18",
																		"nodeType": "YulLiteral",
																		"src": "6868:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6850:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6850:6:18"
																},
																"nativeSrc": "6850:21:18",
																"nodeType": "YulFunctionCall",
																"src": "6850:21:18"
															},
															"nativeSrc": "6850:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "6850:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6891:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "6891:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6902:2:18",
																				"nodeType": "YulLiteral",
																				"src": "6902:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6887:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "6887:3:18"
																		},
																		"nativeSrc": "6887:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6887:18:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6907:2:18",
																		"nodeType": "YulLiteral",
																		"src": "6907:2:18",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6880:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6880:6:18"
																},
																"nativeSrc": "6880:30:18",
																"nodeType": "YulFunctionCall",
																"src": "6880:30:18"
															},
															"nativeSrc": "6880:30:18",
															"nodeType": "YulExpressionStatement",
															"src": "6880:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6930:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "6930:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6941:2:18",
																				"nodeType": "YulLiteral",
																				"src": "6941:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6926:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "6926:3:18"
																		},
																		"nativeSrc": "6926:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "6926:18:18"
																	},
																	{
																		"hexValue": "5472616e73616374696f6e206e6f7420636f6e6669726d6564",
																		"kind": "string",
																		"nativeSrc": "6946:27:18",
																		"nodeType": "YulLiteral",
																		"src": "6946:27:18",
																		"type": "",
																		"value": "Transaction not confirmed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6919:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "6919:6:18"
																},
																"nativeSrc": "6919:55:18",
																"nodeType": "YulFunctionCall",
																"src": "6919:55:18"
															},
															"nativeSrc": "6919:55:18",
															"nodeType": "YulExpressionStatement",
															"src": "6919:55:18"
														},
														{
															"nativeSrc": "6983:26:18",
															"nodeType": "YulAssignment",
															"src": "6983:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6995:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "6995:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7006:2:18",
																		"nodeType": "YulLiteral",
																		"src": "7006:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6991:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "6991:3:18"
																},
																"nativeSrc": "6991:18:18",
																"nodeType": "YulFunctionCall",
																"src": "6991:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6983:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "6983:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e3d0a597e455a5df21f74650a7518ab8d226371e3763bb9c00413fb3af8193f2__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "6666:349:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6817:9:18",
														"nodeType": "YulTypedName",
														"src": "6817:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6831:4:18",
														"nodeType": "YulTypedName",
														"src": "6831:4:18",
														"type": ""
													}
												],
												"src": "6666:349:18"
											},
											{
												"body": {
													"nativeSrc": "7052:95:18",
													"nodeType": "YulBlock",
													"src": "7052:95:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7069:1:18",
																		"nodeType": "YulLiteral",
																		"src": "7069:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7076:3:18",
																				"nodeType": "YulLiteral",
																				"src": "7076:3:18",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7081:10:18",
																				"nodeType": "YulLiteral",
																				"src": "7081:10:18",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "7072:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "7072:3:18"
																		},
																		"nativeSrc": "7072:20:18",
																		"nodeType": "YulFunctionCall",
																		"src": "7072:20:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7062:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "7062:6:18"
																},
																"nativeSrc": "7062:31:18",
																"nodeType": "YulFunctionCall",
																"src": "7062:31:18"
															},
															"nativeSrc": "7062:31:18",
															"nodeType": "YulExpressionStatement",
															"src": "7062:31:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7109:1:18",
																		"nodeType": "YulLiteral",
																		"src": "7109:1:18",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7112:4:18",
																		"nodeType": "YulLiteral",
																		"src": "7112:4:18",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7102:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "7102:6:18"
																},
																"nativeSrc": "7102:15:18",
																"nodeType": "YulFunctionCall",
																"src": "7102:15:18"
															},
															"nativeSrc": "7102:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "7102:15:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "7133:1:18",
																		"nodeType": "YulLiteral",
																		"src": "7133:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7136:4:18",
																		"nodeType": "YulLiteral",
																		"src": "7136:4:18",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "7126:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "7126:6:18"
																},
																"nativeSrc": "7126:15:18",
																"nodeType": "YulFunctionCall",
																"src": "7126:15:18"
															},
															"nativeSrc": "7126:15:18",
															"nodeType": "YulExpressionStatement",
															"src": "7126:15:18"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "7020:127:18",
												"nodeType": "YulFunctionDefinition",
												"src": "7020:127:18"
											},
											{
												"body": {
													"nativeSrc": "7201:79:18",
													"nodeType": "YulBlock",
													"src": "7201:79:18",
													"statements": [
														{
															"nativeSrc": "7211:17:18",
															"nodeType": "YulAssignment",
															"src": "7211:17:18",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "7223:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "7223:1:18"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "7226:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "7226:1:18"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "7219:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "7219:3:18"
																},
																"nativeSrc": "7219:9:18",
																"nodeType": "YulFunctionCall",
																"src": "7219:9:18"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "7211:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "7211:4:18"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7252:22:18",
																"nodeType": "YulBlock",
																"src": "7252:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "7254:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "7254:16:18"
																			},
																			"nativeSrc": "7254:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "7254:18:18"
																		},
																		"nativeSrc": "7254:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "7254:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "7243:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "7243:4:18"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "7249:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "7249:1:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "7240:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "7240:2:18"
																},
																"nativeSrc": "7240:11:18",
																"nodeType": "YulFunctionCall",
																"src": "7240:11:18"
															},
															"nativeSrc": "7237:37:18",
															"nodeType": "YulIf",
															"src": "7237:37:18"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "7152:128:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "7183:1:18",
														"nodeType": "YulTypedName",
														"src": "7183:1:18",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "7186:1:18",
														"nodeType": "YulTypedName",
														"src": "7186:1:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "7192:4:18",
														"nodeType": "YulTypedName",
														"src": "7192:4:18",
														"type": ""
													}
												],
												"src": "7152:128:18"
											},
											{
												"body": {
													"nativeSrc": "7442:218:18",
													"nodeType": "YulBlock",
													"src": "7442:218:18",
													"statements": [
														{
															"nativeSrc": "7452:26:18",
															"nodeType": "YulAssignment",
															"src": "7452:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7464:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "7464:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7475:2:18",
																		"nodeType": "YulLiteral",
																		"src": "7475:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7460:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "7460:3:18"
																},
																"nativeSrc": "7460:18:18",
																"nodeType": "YulFunctionCall",
																"src": "7460:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7452:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "7452:4:18"
																}
															]
														},
														{
															"nativeSrc": "7487:29:18",
															"nodeType": "YulVariableDeclaration",
															"src": "7487:29:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "7505:3:18",
																				"nodeType": "YulLiteral",
																				"src": "7505:3:18",
																				"type": "",
																				"value": "160"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7510:1:18",
																				"nodeType": "YulLiteral",
																				"src": "7510:1:18",
																				"type": "",
																				"value": "1"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "7501:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "7501:3:18"
																		},
																		"nativeSrc": "7501:11:18",
																		"nodeType": "YulFunctionCall",
																		"src": "7501:11:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7514:1:18",
																		"nodeType": "YulLiteral",
																		"src": "7514:1:18",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "7497:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "7497:3:18"
																},
																"nativeSrc": "7497:19:18",
																"nodeType": "YulFunctionCall",
																"src": "7497:19:18"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "7491:2:18",
																	"nodeType": "YulTypedName",
																	"src": "7491:2:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7532:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "7532:9:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "7547:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "7547:6:18"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "7555:2:18",
																				"nodeType": "YulIdentifier",
																				"src": "7555:2:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7543:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "7543:3:18"
																		},
																		"nativeSrc": "7543:15:18",
																		"nodeType": "YulFunctionCall",
																		"src": "7543:15:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7525:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "7525:6:18"
																},
																"nativeSrc": "7525:34:18",
																"nodeType": "YulFunctionCall",
																"src": "7525:34:18"
															},
															"nativeSrc": "7525:34:18",
															"nodeType": "YulExpressionStatement",
															"src": "7525:34:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7579:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "7579:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7590:2:18",
																				"nodeType": "YulLiteral",
																				"src": "7590:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7575:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "7575:3:18"
																		},
																		"nativeSrc": "7575:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "7575:18:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "7599:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "7599:6:18"
																			},
																			{
																				"name": "_1",
																				"nativeSrc": "7607:2:18",
																				"nodeType": "YulIdentifier",
																				"src": "7607:2:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7595:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "7595:3:18"
																		},
																		"nativeSrc": "7595:15:18",
																		"nodeType": "YulFunctionCall",
																		"src": "7595:15:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7568:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "7568:6:18"
																},
																"nativeSrc": "7568:43:18",
																"nodeType": "YulFunctionCall",
																"src": "7568:43:18"
															},
															"nativeSrc": "7568:43:18",
															"nodeType": "YulExpressionStatement",
															"src": "7568:43:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7631:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "7631:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7642:2:18",
																				"nodeType": "YulLiteral",
																				"src": "7642:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7627:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "7627:3:18"
																		},
																		"nativeSrc": "7627:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "7627:18:18"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "7647:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "7647:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7620:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "7620:6:18"
																},
																"nativeSrc": "7620:34:18",
																"nodeType": "YulFunctionCall",
																"src": "7620:34:18"
															},
															"nativeSrc": "7620:34:18",
															"nodeType": "YulExpressionStatement",
															"src": "7620:34:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "7285:375:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7395:9:18",
														"nodeType": "YulTypedName",
														"src": "7395:9:18",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7406:6:18",
														"nodeType": "YulTypedName",
														"src": "7406:6:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7414:6:18",
														"nodeType": "YulTypedName",
														"src": "7414:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7422:6:18",
														"nodeType": "YulTypedName",
														"src": "7422:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7433:4:18",
														"nodeType": "YulTypedName",
														"src": "7433:4:18",
														"type": ""
													}
												],
												"src": "7285:375:18"
											},
											{
												"body": {
													"nativeSrc": "7743:199:18",
													"nodeType": "YulBlock",
													"src": "7743:199:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "7789:16:18",
																"nodeType": "YulBlock",
																"src": "7789:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7798:1:18",
																					"nodeType": "YulLiteral",
																					"src": "7798:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7801:1:18",
																					"nodeType": "YulLiteral",
																					"src": "7801:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7791:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "7791:6:18"
																			},
																			"nativeSrc": "7791:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "7791:12:18"
																		},
																		"nativeSrc": "7791:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "7791:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7764:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "7764:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7773:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "7773:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7760:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "7760:3:18"
																		},
																		"nativeSrc": "7760:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "7760:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7785:2:18",
																		"nodeType": "YulLiteral",
																		"src": "7785:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7756:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "7756:3:18"
																},
																"nativeSrc": "7756:32:18",
																"nodeType": "YulFunctionCall",
																"src": "7756:32:18"
															},
															"nativeSrc": "7753:52:18",
															"nodeType": "YulIf",
															"src": "7753:52:18"
														},
														{
															"nativeSrc": "7814:29:18",
															"nodeType": "YulVariableDeclaration",
															"src": "7814:29:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7833:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "7833:9:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7827:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "7827:5:18"
																},
																"nativeSrc": "7827:16:18",
																"nodeType": "YulFunctionCall",
																"src": "7827:16:18"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "7818:5:18",
																	"nodeType": "YulTypedName",
																	"src": "7818:5:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7896:16:18",
																"nodeType": "YulBlock",
																"src": "7896:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7905:1:18",
																					"nodeType": "YulLiteral",
																					"src": "7905:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7908:1:18",
																					"nodeType": "YulLiteral",
																					"src": "7908:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7898:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "7898:6:18"
																			},
																			"nativeSrc": "7898:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "7898:12:18"
																		},
																		"nativeSrc": "7898:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "7898:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7865:5:18",
																				"nodeType": "YulIdentifier",
																				"src": "7865:5:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "7886:5:18",
																								"nodeType": "YulIdentifier",
																								"src": "7886:5:18"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "7879:6:18",
																							"nodeType": "YulIdentifier",
																							"src": "7879:6:18"
																						},
																						"nativeSrc": "7879:13:18",
																						"nodeType": "YulFunctionCall",
																						"src": "7879:13:18"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "7872:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "7872:6:18"
																				},
																				"nativeSrc": "7872:21:18",
																				"nodeType": "YulFunctionCall",
																				"src": "7872:21:18"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "7862:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "7862:2:18"
																		},
																		"nativeSrc": "7862:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "7862:32:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7855:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "7855:6:18"
																},
																"nativeSrc": "7855:40:18",
																"nodeType": "YulFunctionCall",
																"src": "7855:40:18"
															},
															"nativeSrc": "7852:60:18",
															"nodeType": "YulIf",
															"src": "7852:60:18"
														},
														{
															"nativeSrc": "7921:15:18",
															"nodeType": "YulAssignment",
															"src": "7921:15:18",
															"value": {
																"name": "value",
																"nativeSrc": "7931:5:18",
																"nodeType": "YulIdentifier",
																"src": "7931:5:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "7921:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "7921:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "7665:277:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7709:9:18",
														"nodeType": "YulTypedName",
														"src": "7709:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7720:7:18",
														"nodeType": "YulTypedName",
														"src": "7720:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7732:6:18",
														"nodeType": "YulTypedName",
														"src": "7732:6:18",
														"type": ""
													}
												],
												"src": "7665:277:18"
											},
											{
												"body": {
													"nativeSrc": "8121:171:18",
													"nodeType": "YulBlock",
													"src": "8121:171:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8138:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "8138:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8149:2:18",
																		"nodeType": "YulLiteral",
																		"src": "8149:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8131:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "8131:6:18"
																},
																"nativeSrc": "8131:21:18",
																"nodeType": "YulFunctionCall",
																"src": "8131:21:18"
															},
															"nativeSrc": "8131:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "8131:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8172:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "8172:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8183:2:18",
																				"nodeType": "YulLiteral",
																				"src": "8183:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8168:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8168:3:18"
																		},
																		"nativeSrc": "8168:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8168:18:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8188:2:18",
																		"nodeType": "YulLiteral",
																		"src": "8188:2:18",
																		"type": "",
																		"value": "21"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8161:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "8161:6:18"
																},
																"nativeSrc": "8161:30:18",
																"nodeType": "YulFunctionCall",
																"src": "8161:30:18"
															},
															"nativeSrc": "8161:30:18",
															"nodeType": "YulExpressionStatement",
															"src": "8161:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8211:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "8211:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8222:2:18",
																				"nodeType": "YulLiteral",
																				"src": "8222:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8207:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8207:3:18"
																		},
																		"nativeSrc": "8207:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8207:18:18"
																	},
																	{
																		"hexValue": "546f6b656e207472616e73666572206661696c6564",
																		"kind": "string",
																		"nativeSrc": "8227:23:18",
																		"nodeType": "YulLiteral",
																		"src": "8227:23:18",
																		"type": "",
																		"value": "Token transfer failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8200:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "8200:6:18"
																},
																"nativeSrc": "8200:51:18",
																"nodeType": "YulFunctionCall",
																"src": "8200:51:18"
															},
															"nativeSrc": "8200:51:18",
															"nodeType": "YulExpressionStatement",
															"src": "8200:51:18"
														},
														{
															"nativeSrc": "8260:26:18",
															"nodeType": "YulAssignment",
															"src": "8260:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8272:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "8272:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8283:2:18",
																		"nodeType": "YulLiteral",
																		"src": "8283:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8268:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "8268:3:18"
																},
																"nativeSrc": "8268:18:18",
																"nodeType": "YulFunctionCall",
																"src": "8268:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8260:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "8260:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7947:345:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8098:9:18",
														"nodeType": "YulTypedName",
														"src": "8098:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8112:4:18",
														"nodeType": "YulTypedName",
														"src": "8112:4:18",
														"type": ""
													}
												],
												"src": "7947:345:18"
											},
											{
												"body": {
													"nativeSrc": "8405:101:18",
													"nodeType": "YulBlock",
													"src": "8405:101:18",
													"statements": [
														{
															"nativeSrc": "8415:26:18",
															"nodeType": "YulAssignment",
															"src": "8415:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8427:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "8427:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8438:2:18",
																		"nodeType": "YulLiteral",
																		"src": "8438:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8423:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "8423:3:18"
																},
																"nativeSrc": "8423:18:18",
																"nodeType": "YulFunctionCall",
																"src": "8423:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8415:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "8415:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8457:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "8457:9:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "8472:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "8472:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8480:18:18",
																				"nodeType": "YulLiteral",
																				"src": "8480:18:18",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "8468:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "8468:3:18"
																		},
																		"nativeSrc": "8468:31:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8468:31:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8450:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "8450:6:18"
																},
																"nativeSrc": "8450:50:18",
																"nodeType": "YulFunctionCall",
																"src": "8450:50:18"
															},
															"nativeSrc": "8450:50:18",
															"nodeType": "YulExpressionStatement",
															"src": "8450:50:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nativeSrc": "8297:209:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8374:9:18",
														"nodeType": "YulTypedName",
														"src": "8374:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "8385:6:18",
														"nodeType": "YulTypedName",
														"src": "8385:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8396:4:18",
														"nodeType": "YulTypedName",
														"src": "8396:4:18",
														"type": ""
													}
												],
												"src": "8297:209:18"
											},
											{
												"body": {
													"nativeSrc": "8566:325:18",
													"nodeType": "YulBlock",
													"src": "8566:325:18",
													"statements": [
														{
															"nativeSrc": "8576:22:18",
															"nodeType": "YulAssignment",
															"src": "8576:22:18",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8590:1:18",
																		"nodeType": "YulLiteral",
																		"src": "8590:1:18",
																		"type": "",
																		"value": "1"
																	},
																	{
																		"name": "data",
																		"nativeSrc": "8593:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "8593:4:18"
																	}
																],
																"functionName": {
																	"name": "shr",
																	"nativeSrc": "8586:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "8586:3:18"
																},
																"nativeSrc": "8586:12:18",
																"nodeType": "YulFunctionCall",
																"src": "8586:12:18"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "8576:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "8576:6:18"
																}
															]
														},
														{
															"nativeSrc": "8607:38:18",
															"nodeType": "YulVariableDeclaration",
															"src": "8607:38:18",
															"value": {
																"arguments": [
																	{
																		"name": "data",
																		"nativeSrc": "8637:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "8637:4:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8643:1:18",
																		"nodeType": "YulLiteral",
																		"src": "8643:1:18",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "8633:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "8633:3:18"
																},
																"nativeSrc": "8633:12:18",
																"nodeType": "YulFunctionCall",
																"src": "8633:12:18"
															},
															"variables": [
																{
																	"name": "outOfPlaceEncoding",
																	"nativeSrc": "8611:18:18",
																	"nodeType": "YulTypedName",
																	"src": "8611:18:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "8684:31:18",
																"nodeType": "YulBlock",
																"src": "8684:31:18",
																"statements": [
																	{
																		"nativeSrc": "8686:27:18",
																		"nodeType": "YulAssignment",
																		"src": "8686:27:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "length",
																					"nativeSrc": "8700:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "8700:6:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8708:4:18",
																					"nodeType": "YulLiteral",
																					"src": "8708:4:18",
																					"type": "",
																					"value": "0x7f"
																				}
																			],
																			"functionName": {
																				"name": "and",
																				"nativeSrc": "8696:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "8696:3:18"
																			},
																			"nativeSrc": "8696:17:18",
																			"nodeType": "YulFunctionCall",
																			"src": "8696:17:18"
																		},
																		"variableNames": [
																			{
																				"name": "length",
																				"nativeSrc": "8686:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "8686:6:18"
																			}
																		]
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8664:18:18",
																		"nodeType": "YulIdentifier",
																		"src": "8664:18:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "8657:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "8657:6:18"
																},
																"nativeSrc": "8657:26:18",
																"nodeType": "YulFunctionCall",
																"src": "8657:26:18"
															},
															"nativeSrc": "8654:61:18",
															"nodeType": "YulIf",
															"src": "8654:61:18"
														},
														{
															"body": {
																"nativeSrc": "8774:111:18",
																"nodeType": "YulBlock",
																"src": "8774:111:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8795:1:18",
																					"nodeType": "YulLiteral",
																					"src": "8795:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "8802:3:18",
																							"nodeType": "YulLiteral",
																							"src": "8802:3:18",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "8807:10:18",
																							"nodeType": "YulLiteral",
																							"src": "8807:10:18",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "8798:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "8798:3:18"
																					},
																					"nativeSrc": "8798:20:18",
																					"nodeType": "YulFunctionCall",
																					"src": "8798:20:18"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "8788:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "8788:6:18"
																			},
																			"nativeSrc": "8788:31:18",
																			"nodeType": "YulFunctionCall",
																			"src": "8788:31:18"
																		},
																		"nativeSrc": "8788:31:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "8788:31:18"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8839:1:18",
																					"nodeType": "YulLiteral",
																					"src": "8839:1:18",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8842:4:18",
																					"nodeType": "YulLiteral",
																					"src": "8842:4:18",
																					"type": "",
																					"value": "0x22"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "8832:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "8832:6:18"
																			},
																			"nativeSrc": "8832:15:18",
																			"nodeType": "YulFunctionCall",
																			"src": "8832:15:18"
																		},
																		"nativeSrc": "8832:15:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "8832:15:18"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8867:1:18",
																					"nodeType": "YulLiteral",
																					"src": "8867:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8870:4:18",
																					"nodeType": "YulLiteral",
																					"src": "8870:4:18",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8860:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "8860:6:18"
																			},
																			"nativeSrc": "8860:15:18",
																			"nodeType": "YulFunctionCall",
																			"src": "8860:15:18"
																		},
																		"nativeSrc": "8860:15:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "8860:15:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "outOfPlaceEncoding",
																		"nativeSrc": "8730:18:18",
																		"nodeType": "YulIdentifier",
																		"src": "8730:18:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "length",
																				"nativeSrc": "8753:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "8753:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8761:2:18",
																				"nodeType": "YulLiteral",
																				"src": "8761:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "8750:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "8750:2:18"
																		},
																		"nativeSrc": "8750:14:18",
																		"nodeType": "YulFunctionCall",
																		"src": "8750:14:18"
																	}
																],
																"functionName": {
																	"name": "eq",
																	"nativeSrc": "8727:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "8727:2:18"
																},
																"nativeSrc": "8727:38:18",
																"nodeType": "YulFunctionCall",
																"src": "8727:38:18"
															},
															"nativeSrc": "8724:161:18",
															"nodeType": "YulIf",
															"src": "8724:161:18"
														}
													]
												},
												"name": "extract_byte_array_length",
												"nativeSrc": "8511:380:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "8546:4:18",
														"nodeType": "YulTypedName",
														"src": "8546:4:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "8555:6:18",
														"nodeType": "YulTypedName",
														"src": "8555:6:18",
														"type": ""
													}
												],
												"src": "8511:380:18"
											},
											{
												"body": {
													"nativeSrc": "9070:166:18",
													"nodeType": "YulBlock",
													"src": "9070:166:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9087:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "9087:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9098:2:18",
																		"nodeType": "YulLiteral",
																		"src": "9098:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9080:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9080:6:18"
																},
																"nativeSrc": "9080:21:18",
																"nodeType": "YulFunctionCall",
																"src": "9080:21:18"
															},
															"nativeSrc": "9080:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "9080:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9121:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "9121:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9132:2:18",
																				"nodeType": "YulLiteral",
																				"src": "9132:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9117:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "9117:3:18"
																		},
																		"nativeSrc": "9117:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9117:18:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9137:2:18",
																		"nodeType": "YulLiteral",
																		"src": "9137:2:18",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9110:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9110:6:18"
																},
																"nativeSrc": "9110:30:18",
																"nodeType": "YulFunctionCall",
																"src": "9110:30:18"
															},
															"nativeSrc": "9110:30:18",
															"nodeType": "YulExpressionStatement",
															"src": "9110:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9160:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "9160:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9171:2:18",
																				"nodeType": "YulLiteral",
																				"src": "9171:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9156:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "9156:3:18"
																		},
																		"nativeSrc": "9156:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9156:18:18"
																	},
																	{
																		"hexValue": "4e6f20746f6b656e73207374616b6564",
																		"kind": "string",
																		"nativeSrc": "9176:18:18",
																		"nodeType": "YulLiteral",
																		"src": "9176:18:18",
																		"type": "",
																		"value": "No tokens staked"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9149:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9149:6:18"
																},
																"nativeSrc": "9149:46:18",
																"nodeType": "YulFunctionCall",
																"src": "9149:46:18"
															},
															"nativeSrc": "9149:46:18",
															"nodeType": "YulExpressionStatement",
															"src": "9149:46:18"
														},
														{
															"nativeSrc": "9204:26:18",
															"nodeType": "YulAssignment",
															"src": "9204:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9216:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "9216:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9227:2:18",
																		"nodeType": "YulLiteral",
																		"src": "9227:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9212:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "9212:3:18"
																},
																"nativeSrc": "9212:18:18",
																"nodeType": "YulFunctionCall",
																"src": "9212:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9204:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "9204:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1f983d08a8c5ff4ffa11b495317acc03b08c5d01aeba8602c5a3a648ea98755b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8896:340:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9047:9:18",
														"nodeType": "YulTypedName",
														"src": "9047:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9061:4:18",
														"nodeType": "YulTypedName",
														"src": "9061:4:18",
														"type": ""
													}
												],
												"src": "8896:340:18"
											},
											{
												"body": {
													"nativeSrc": "9293:116:18",
													"nodeType": "YulBlock",
													"src": "9293:116:18",
													"statements": [
														{
															"nativeSrc": "9303:20:18",
															"nodeType": "YulAssignment",
															"src": "9303:20:18",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9318:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "9318:1:18"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9321:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "9321:1:18"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "9314:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "9314:3:18"
																},
																"nativeSrc": "9314:9:18",
																"nodeType": "YulFunctionCall",
																"src": "9314:9:18"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "9303:7:18",
																	"nodeType": "YulIdentifier",
																	"src": "9303:7:18"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9381:22:18",
																"nodeType": "YulBlock",
																"src": "9381:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9383:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "9383:16:18"
																			},
																			"nativeSrc": "9383:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "9383:18:18"
																		},
																		"nativeSrc": "9383:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "9383:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "9352:1:18",
																						"nodeType": "YulIdentifier",
																						"src": "9352:1:18"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "9345:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "9345:6:18"
																				},
																				"nativeSrc": "9345:9:18",
																				"nodeType": "YulFunctionCall",
																				"src": "9345:9:18"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "9359:1:18",
																						"nodeType": "YulIdentifier",
																						"src": "9359:1:18"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "9366:7:18",
																								"nodeType": "YulIdentifier",
																								"src": "9366:7:18"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "9375:1:18",
																								"nodeType": "YulIdentifier",
																								"src": "9375:1:18"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "9362:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "9362:3:18"
																						},
																						"nativeSrc": "9362:15:18",
																						"nodeType": "YulFunctionCall",
																						"src": "9362:15:18"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "9356:2:18",
																					"nodeType": "YulIdentifier",
																					"src": "9356:2:18"
																				},
																				"nativeSrc": "9356:22:18",
																				"nodeType": "YulFunctionCall",
																				"src": "9356:22:18"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "9342:2:18",
																			"nodeType": "YulIdentifier",
																			"src": "9342:2:18"
																		},
																		"nativeSrc": "9342:37:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9342:37:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9335:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9335:6:18"
																},
																"nativeSrc": "9335:45:18",
																"nodeType": "YulFunctionCall",
																"src": "9335:45:18"
															},
															"nativeSrc": "9332:71:18",
															"nodeType": "YulIf",
															"src": "9332:71:18"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "9241:168:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9272:1:18",
														"nodeType": "YulTypedName",
														"src": "9272:1:18",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9275:1:18",
														"nodeType": "YulTypedName",
														"src": "9275:1:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "9281:7:18",
														"nodeType": "YulTypedName",
														"src": "9281:7:18",
														"type": ""
													}
												],
												"src": "9241:168:18"
											},
											{
												"body": {
													"nativeSrc": "9460:171:18",
													"nodeType": "YulBlock",
													"src": "9460:171:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "9491:111:18",
																"nodeType": "YulBlock",
																"src": "9491:111:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9512:1:18",
																					"nodeType": "YulLiteral",
																					"src": "9512:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "9519:3:18",
																							"nodeType": "YulLiteral",
																							"src": "9519:3:18",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "9524:10:18",
																							"nodeType": "YulLiteral",
																							"src": "9524:10:18",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "9515:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "9515:3:18"
																					},
																					"nativeSrc": "9515:20:18",
																					"nodeType": "YulFunctionCall",
																					"src": "9515:20:18"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "9505:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "9505:6:18"
																			},
																			"nativeSrc": "9505:31:18",
																			"nodeType": "YulFunctionCall",
																			"src": "9505:31:18"
																		},
																		"nativeSrc": "9505:31:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "9505:31:18"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9556:1:18",
																					"nodeType": "YulLiteral",
																					"src": "9556:1:18",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9559:4:18",
																					"nodeType": "YulLiteral",
																					"src": "9559:4:18",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "9549:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "9549:6:18"
																			},
																			"nativeSrc": "9549:15:18",
																			"nodeType": "YulFunctionCall",
																			"src": "9549:15:18"
																		},
																		"nativeSrc": "9549:15:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "9549:15:18"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "9584:1:18",
																					"nodeType": "YulLiteral",
																					"src": "9584:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "9587:4:18",
																					"nodeType": "YulLiteral",
																					"src": "9587:4:18",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "9577:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "9577:6:18"
																			},
																			"nativeSrc": "9577:15:18",
																			"nodeType": "YulFunctionCall",
																			"src": "9577:15:18"
																		},
																		"nativeSrc": "9577:15:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "9577:15:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "9480:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "9480:1:18"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "9473:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9473:6:18"
																},
																"nativeSrc": "9473:9:18",
																"nodeType": "YulFunctionCall",
																"src": "9473:9:18"
															},
															"nativeSrc": "9470:132:18",
															"nodeType": "YulIf",
															"src": "9470:132:18"
														},
														{
															"nativeSrc": "9611:14:18",
															"nodeType": "YulAssignment",
															"src": "9611:14:18",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9620:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "9620:1:18"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9623:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "9623:1:18"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "9616:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "9616:3:18"
																},
																"nativeSrc": "9616:9:18",
																"nodeType": "YulFunctionCall",
																"src": "9616:9:18"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "9611:1:18",
																	"nodeType": "YulIdentifier",
																	"src": "9611:1:18"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "9414:217:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9445:1:18",
														"nodeType": "YulTypedName",
														"src": "9445:1:18",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9448:1:18",
														"nodeType": "YulTypedName",
														"src": "9448:1:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "9454:1:18",
														"nodeType": "YulTypedName",
														"src": "9454:1:18",
														"type": ""
													}
												],
												"src": "9414:217:18"
											},
											{
												"body": {
													"nativeSrc": "9684:77:18",
													"nodeType": "YulBlock",
													"src": "9684:77:18",
													"statements": [
														{
															"nativeSrc": "9694:16:18",
															"nodeType": "YulAssignment",
															"src": "9694:16:18",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9705:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "9705:1:18"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9708:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "9708:1:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9701:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "9701:3:18"
																},
																"nativeSrc": "9701:9:18",
																"nodeType": "YulFunctionCall",
																"src": "9701:9:18"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9694:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "9694:3:18"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9733:22:18",
																"nodeType": "YulBlock",
																"src": "9733:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9735:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "9735:16:18"
																			},
																			"nativeSrc": "9735:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "9735:18:18"
																		},
																		"nativeSrc": "9735:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "9735:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9725:1:18",
																		"nodeType": "YulIdentifier",
																		"src": "9725:1:18"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9728:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "9728:3:18"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9722:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "9722:2:18"
																},
																"nativeSrc": "9722:10:18",
																"nodeType": "YulFunctionCall",
																"src": "9722:10:18"
															},
															"nativeSrc": "9719:36:18",
															"nodeType": "YulIf",
															"src": "9719:36:18"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9636:125:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9667:1:18",
														"nodeType": "YulTypedName",
														"src": "9667:1:18",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9670:1:18",
														"nodeType": "YulTypedName",
														"src": "9670:1:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9676:3:18",
														"nodeType": "YulTypedName",
														"src": "9676:3:18",
														"type": ""
													}
												],
												"src": "9636:125:18"
											},
											{
												"body": {
													"nativeSrc": "9895:145:18",
													"nodeType": "YulBlock",
													"src": "9895:145:18",
													"statements": [
														{
															"nativeSrc": "9905:26:18",
															"nodeType": "YulAssignment",
															"src": "9905:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9917:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "9917:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9928:2:18",
																		"nodeType": "YulLiteral",
																		"src": "9928:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9913:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "9913:3:18"
																},
																"nativeSrc": "9913:18:18",
																"nodeType": "YulFunctionCall",
																"src": "9913:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9905:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "9905:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9947:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "9947:9:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "9962:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "9962:6:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "9978:3:18",
																								"nodeType": "YulLiteral",
																								"src": "9978:3:18",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "9983:1:18",
																								"nodeType": "YulLiteral",
																								"src": "9983:1:18",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "9974:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "9974:3:18"
																						},
																						"nativeSrc": "9974:11:18",
																						"nodeType": "YulFunctionCall",
																						"src": "9974:11:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "9987:1:18",
																						"nodeType": "YulLiteral",
																						"src": "9987:1:18",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "9970:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "9970:3:18"
																				},
																				"nativeSrc": "9970:19:18",
																				"nodeType": "YulFunctionCall",
																				"src": "9970:19:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "9958:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "9958:3:18"
																		},
																		"nativeSrc": "9958:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "9958:32:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9940:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "9940:6:18"
																},
																"nativeSrc": "9940:51:18",
																"nodeType": "YulFunctionCall",
																"src": "9940:51:18"
															},
															"nativeSrc": "9940:51:18",
															"nodeType": "YulExpressionStatement",
															"src": "9940:51:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10011:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "10011:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10022:2:18",
																				"nodeType": "YulLiteral",
																				"src": "10022:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10007:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "10007:3:18"
																		},
																		"nativeSrc": "10007:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10007:18:18"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "10027:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "10027:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10000:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "10000:6:18"
																},
																"nativeSrc": "10000:34:18",
																"nodeType": "YulFunctionCall",
																"src": "10000:34:18"
															},
															"nativeSrc": "10000:34:18",
															"nodeType": "YulExpressionStatement",
															"src": "10000:34:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "9766:274:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9856:9:18",
														"nodeType": "YulTypedName",
														"src": "9856:9:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "9867:6:18",
														"nodeType": "YulTypedName",
														"src": "9867:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "9875:6:18",
														"nodeType": "YulTypedName",
														"src": "9875:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9886:4:18",
														"nodeType": "YulTypedName",
														"src": "9886:4:18",
														"type": ""
													}
												],
												"src": "9766:274:18"
											},
											{
												"body": {
													"nativeSrc": "10219:179:18",
													"nodeType": "YulBlock",
													"src": "10219:179:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10236:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "10236:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10247:2:18",
																		"nodeType": "YulLiteral",
																		"src": "10247:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10229:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "10229:6:18"
																},
																"nativeSrc": "10229:21:18",
																"nodeType": "YulFunctionCall",
																"src": "10229:21:18"
															},
															"nativeSrc": "10229:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "10229:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10270:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "10270:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10281:2:18",
																				"nodeType": "YulLiteral",
																				"src": "10281:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10266:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "10266:3:18"
																		},
																		"nativeSrc": "10266:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10266:18:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10286:2:18",
																		"nodeType": "YulLiteral",
																		"src": "10286:2:18",
																		"type": "",
																		"value": "29"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10259:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "10259:6:18"
																},
																"nativeSrc": "10259:30:18",
																"nodeType": "YulFunctionCall",
																"src": "10259:30:18"
															},
															"nativeSrc": "10259:30:18",
															"nodeType": "YulExpressionStatement",
															"src": "10259:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10309:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "10309:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10320:2:18",
																				"nodeType": "YulLiteral",
																				"src": "10320:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10305:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "10305:3:18"
																		},
																		"nativeSrc": "10305:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "10305:18:18"
																	},
																	{
																		"hexValue": "5472616e73616374696f6e20616c726561647920636f6e6669726d6564",
																		"kind": "string",
																		"nativeSrc": "10325:31:18",
																		"nodeType": "YulLiteral",
																		"src": "10325:31:18",
																		"type": "",
																		"value": "Transaction already confirmed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10298:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "10298:6:18"
																},
																"nativeSrc": "10298:59:18",
																"nodeType": "YulFunctionCall",
																"src": "10298:59:18"
															},
															"nativeSrc": "10298:59:18",
															"nodeType": "YulExpressionStatement",
															"src": "10298:59:18"
														},
														{
															"nativeSrc": "10366:26:18",
															"nodeType": "YulAssignment",
															"src": "10366:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10378:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "10378:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10389:2:18",
																		"nodeType": "YulLiteral",
																		"src": "10389:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10374:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "10374:3:18"
																},
																"nativeSrc": "10374:18:18",
																"nodeType": "YulFunctionCall",
																"src": "10374:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10366:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "10366:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c00ff6506fc53457ae4202871882703dada01c533275bb259e2cd12acaf31a69__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10045:353:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10196:9:18",
														"nodeType": "YulTypedName",
														"src": "10196:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10210:4:18",
														"nodeType": "YulTypedName",
														"src": "10210:4:18",
														"type": ""
													}
												],
												"src": "10045:353:18"
											},
											{
												"body": {
													"nativeSrc": "10458:65:18",
													"nodeType": "YulBlock",
													"src": "10458:65:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10475:1:18",
																		"nodeType": "YulLiteral",
																		"src": "10475:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"name": "ptr",
																		"nativeSrc": "10478:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "10478:3:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10468:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "10468:6:18"
																},
																"nativeSrc": "10468:14:18",
																"nodeType": "YulFunctionCall",
																"src": "10468:14:18"
															},
															"nativeSrc": "10468:14:18",
															"nodeType": "YulExpressionStatement",
															"src": "10468:14:18"
														},
														{
															"nativeSrc": "10491:26:18",
															"nodeType": "YulAssignment",
															"src": "10491:26:18",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "10509:1:18",
																		"nodeType": "YulLiteral",
																		"src": "10509:1:18",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10512:4:18",
																		"nodeType": "YulLiteral",
																		"src": "10512:4:18",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "keccak256",
																	"nativeSrc": "10499:9:18",
																	"nodeType": "YulIdentifier",
																	"src": "10499:9:18"
																},
																"nativeSrc": "10499:18:18",
																"nodeType": "YulFunctionCall",
																"src": "10499:18:18"
															},
															"variableNames": [
																{
																	"name": "data",
																	"nativeSrc": "10491:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "10491:4:18"
																}
															]
														}
													]
												},
												"name": "array_dataslot_bytes_storage",
												"nativeSrc": "10403:120:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "ptr",
														"nativeSrc": "10441:3:18",
														"nodeType": "YulTypedName",
														"src": "10441:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "data",
														"nativeSrc": "10449:4:18",
														"nodeType": "YulTypedName",
														"src": "10449:4:18",
														"type": ""
													}
												],
												"src": "10403:120:18"
											},
											{
												"body": {
													"nativeSrc": "10608:437:18",
													"nodeType": "YulBlock",
													"src": "10608:437:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "10641:398:18",
																"nodeType": "YulBlock",
																"src": "10641:398:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10662:1:18",
																					"nodeType": "YulLiteral",
																					"src": "10662:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"name": "array",
																					"nativeSrc": "10665:5:18",
																					"nodeType": "YulIdentifier",
																					"src": "10665:5:18"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "10655:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "10655:6:18"
																			},
																			"nativeSrc": "10655:16:18",
																			"nodeType": "YulFunctionCall",
																			"src": "10655:16:18"
																		},
																		"nativeSrc": "10655:16:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "10655:16:18"
																	},
																	{
																		"nativeSrc": "10684:30:18",
																		"nodeType": "YulVariableDeclaration",
																		"src": "10684:30:18",
																		"value": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "10706:1:18",
																					"nodeType": "YulLiteral",
																					"src": "10706:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10709:4:18",
																					"nodeType": "YulLiteral",
																					"src": "10709:4:18",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "keccak256",
																				"nativeSrc": "10696:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "10696:9:18"
																			},
																			"nativeSrc": "10696:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "10696:18:18"
																		},
																		"variables": [
																			{
																				"name": "data",
																				"nativeSrc": "10688:4:18",
																				"nodeType": "YulTypedName",
																				"src": "10688:4:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "10727:57:18",
																		"nodeType": "YulVariableDeclaration",
																		"src": "10727:57:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "10750:4:18",
																					"nodeType": "YulIdentifier",
																					"src": "10750:4:18"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "10760:1:18",
																							"nodeType": "YulLiteral",
																							"src": "10760:1:18",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "startIndex",
																									"nativeSrc": "10767:10:18",
																									"nodeType": "YulIdentifier",
																									"src": "10767:10:18"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "10779:2:18",
																									"nodeType": "YulLiteral",
																									"src": "10779:2:18",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "10763:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "10763:3:18"
																							},
																							"nativeSrc": "10763:19:18",
																							"nodeType": "YulFunctionCall",
																							"src": "10763:19:18"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "10756:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "10756:3:18"
																					},
																					"nativeSrc": "10756:27:18",
																					"nodeType": "YulFunctionCall",
																					"src": "10756:27:18"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "10746:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "10746:3:18"
																			},
																			"nativeSrc": "10746:38:18",
																			"nodeType": "YulFunctionCall",
																			"src": "10746:38:18"
																		},
																		"variables": [
																			{
																				"name": "deleteStart",
																				"nativeSrc": "10731:11:18",
																				"nodeType": "YulTypedName",
																				"src": "10731:11:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "10821:23:18",
																			"nodeType": "YulBlock",
																			"src": "10821:23:18",
																			"statements": [
																				{
																					"nativeSrc": "10823:19:18",
																					"nodeType": "YulAssignment",
																					"src": "10823:19:18",
																					"value": {
																						"name": "data",
																						"nativeSrc": "10838:4:18",
																						"nodeType": "YulIdentifier",
																						"src": "10838:4:18"
																					},
																					"variableNames": [
																						{
																							"name": "deleteStart",
																							"nativeSrc": "10823:11:18",
																							"nodeType": "YulIdentifier",
																							"src": "10823:11:18"
																						}
																					]
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "startIndex",
																					"nativeSrc": "10803:10:18",
																					"nodeType": "YulIdentifier",
																					"src": "10803:10:18"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "10815:4:18",
																					"nodeType": "YulLiteral",
																					"src": "10815:4:18",
																					"type": "",
																					"value": "0x20"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "10800:2:18",
																				"nodeType": "YulIdentifier",
																				"src": "10800:2:18"
																			},
																			"nativeSrc": "10800:20:18",
																			"nodeType": "YulFunctionCall",
																			"src": "10800:20:18"
																		},
																		"nativeSrc": "10797:47:18",
																		"nodeType": "YulIf",
																		"src": "10797:47:18"
																	},
																	{
																		"nativeSrc": "10857:41:18",
																		"nodeType": "YulVariableDeclaration",
																		"src": "10857:41:18",
																		"value": {
																			"arguments": [
																				{
																					"name": "data",
																					"nativeSrc": "10871:4:18",
																					"nodeType": "YulIdentifier",
																					"src": "10871:4:18"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "10881:1:18",
																							"nodeType": "YulLiteral",
																							"src": "10881:1:18",
																							"type": "",
																							"value": "5"
																						},
																						{
																							"arguments": [
																								{
																									"name": "len",
																									"nativeSrc": "10888:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "10888:3:18"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "10893:2:18",
																									"nodeType": "YulLiteral",
																									"src": "10893:2:18",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "10884:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "10884:3:18"
																							},
																							"nativeSrc": "10884:12:18",
																							"nodeType": "YulFunctionCall",
																							"src": "10884:12:18"
																						}
																					],
																					"functionName": {
																						"name": "shr",
																						"nativeSrc": "10877:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "10877:3:18"
																					},
																					"nativeSrc": "10877:20:18",
																					"nodeType": "YulFunctionCall",
																					"src": "10877:20:18"
																				}
																			],
																			"functionName": {
																				"name": "add",
																				"nativeSrc": "10867:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "10867:3:18"
																			},
																			"nativeSrc": "10867:31:18",
																			"nodeType": "YulFunctionCall",
																			"src": "10867:31:18"
																		},
																		"variables": [
																			{
																				"name": "_1",
																				"nativeSrc": "10861:2:18",
																				"nodeType": "YulTypedName",
																				"src": "10861:2:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"nativeSrc": "10911:24:18",
																		"nodeType": "YulVariableDeclaration",
																		"src": "10911:24:18",
																		"value": {
																			"name": "deleteStart",
																			"nativeSrc": "10924:11:18",
																			"nodeType": "YulIdentifier",
																			"src": "10924:11:18"
																		},
																		"variables": [
																			{
																				"name": "start",
																				"nativeSrc": "10915:5:18",
																				"nodeType": "YulTypedName",
																				"src": "10915:5:18",
																				"type": ""
																			}
																		]
																	},
																	{
																		"body": {
																			"nativeSrc": "11009:20:18",
																			"nodeType": "YulBlock",
																			"src": "11009:20:18",
																			"statements": [
																				{
																					"expression": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "11018:5:18",
																								"nodeType": "YulIdentifier",
																								"src": "11018:5:18"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "11025:1:18",
																								"nodeType": "YulLiteral",
																								"src": "11025:1:18",
																								"type": "",
																								"value": "0"
																							}
																						],
																						"functionName": {
																							"name": "sstore",
																							"nativeSrc": "11011:6:18",
																							"nodeType": "YulIdentifier",
																							"src": "11011:6:18"
																						},
																						"nativeSrc": "11011:16:18",
																						"nodeType": "YulFunctionCall",
																						"src": "11011:16:18"
																					},
																					"nativeSrc": "11011:16:18",
																					"nodeType": "YulExpressionStatement",
																					"src": "11011:16:18"
																				}
																			]
																		},
																		"condition": {
																			"arguments": [
																				{
																					"name": "start",
																					"nativeSrc": "10959:5:18",
																					"nodeType": "YulIdentifier",
																					"src": "10959:5:18"
																				},
																				{
																					"name": "_1",
																					"nativeSrc": "10966:2:18",
																					"nodeType": "YulIdentifier",
																					"src": "10966:2:18"
																				}
																			],
																			"functionName": {
																				"name": "lt",
																				"nativeSrc": "10956:2:18",
																				"nodeType": "YulIdentifier",
																				"src": "10956:2:18"
																			},
																			"nativeSrc": "10956:13:18",
																			"nodeType": "YulFunctionCall",
																			"src": "10956:13:18"
																		},
																		"nativeSrc": "10948:81:18",
																		"nodeType": "YulForLoop",
																		"post": {
																			"nativeSrc": "10970:26:18",
																			"nodeType": "YulBlock",
																			"src": "10970:26:18",
																			"statements": [
																				{
																					"nativeSrc": "10972:22:18",
																					"nodeType": "YulAssignment",
																					"src": "10972:22:18",
																					"value": {
																						"arguments": [
																							{
																								"name": "start",
																								"nativeSrc": "10985:5:18",
																								"nodeType": "YulIdentifier",
																								"src": "10985:5:18"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "10992:1:18",
																								"nodeType": "YulLiteral",
																								"src": "10992:1:18",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "10981:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "10981:3:18"
																						},
																						"nativeSrc": "10981:13:18",
																						"nodeType": "YulFunctionCall",
																						"src": "10981:13:18"
																					},
																					"variableNames": [
																						{
																							"name": "start",
																							"nativeSrc": "10972:5:18",
																							"nodeType": "YulIdentifier",
																							"src": "10972:5:18"
																						}
																					]
																				}
																			]
																		},
																		"pre": {
																			"nativeSrc": "10952:3:18",
																			"nodeType": "YulBlock",
																			"src": "10952:3:18",
																			"statements": []
																		},
																		"src": "10948:81:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "len",
																		"nativeSrc": "10624:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "10624:3:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10629:2:18",
																		"nodeType": "YulLiteral",
																		"src": "10629:2:18",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "10621:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "10621:2:18"
																},
																"nativeSrc": "10621:11:18",
																"nodeType": "YulFunctionCall",
																"src": "10621:11:18"
															},
															"nativeSrc": "10618:421:18",
															"nodeType": "YulIf",
															"src": "10618:421:18"
														}
													]
												},
												"name": "clean_up_bytearray_end_slots_bytes_storage",
												"nativeSrc": "10528:517:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "array",
														"nativeSrc": "10580:5:18",
														"nodeType": "YulTypedName",
														"src": "10580:5:18",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "10587:3:18",
														"nodeType": "YulTypedName",
														"src": "10587:3:18",
														"type": ""
													},
													{
														"name": "startIndex",
														"nativeSrc": "10592:10:18",
														"nodeType": "YulTypedName",
														"src": "10592:10:18",
														"type": ""
													}
												],
												"src": "10528:517:18"
											},
											{
												"body": {
													"nativeSrc": "11135:81:18",
													"nodeType": "YulBlock",
													"src": "11135:81:18",
													"statements": [
														{
															"nativeSrc": "11145:65:18",
															"nodeType": "YulAssignment",
															"src": "11145:65:18",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "data",
																				"nativeSrc": "11160:4:18",
																				"nodeType": "YulIdentifier",
																				"src": "11160:4:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "11178:1:18",
																										"nodeType": "YulLiteral",
																										"src": "11178:1:18",
																										"type": "",
																										"value": "3"
																									},
																									{
																										"name": "len",
																										"nativeSrc": "11181:3:18",
																										"nodeType": "YulIdentifier",
																										"src": "11181:3:18"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "11174:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "11174:3:18"
																								},
																								"nativeSrc": "11174:11:18",
																								"nodeType": "YulFunctionCall",
																								"src": "11174:11:18"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "11191:1:18",
																										"nodeType": "YulLiteral",
																										"src": "11191:1:18",
																										"type": "",
																										"value": "0"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "11187:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "11187:3:18"
																								},
																								"nativeSrc": "11187:6:18",
																								"nodeType": "YulFunctionCall",
																								"src": "11187:6:18"
																							}
																						],
																						"functionName": {
																							"name": "shr",
																							"nativeSrc": "11170:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "11170:3:18"
																						},
																						"nativeSrc": "11170:24:18",
																						"nodeType": "YulFunctionCall",
																						"src": "11170:24:18"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "11166:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "11166:3:18"
																				},
																				"nativeSrc": "11166:29:18",
																				"nodeType": "YulFunctionCall",
																				"src": "11166:29:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11156:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "11156:3:18"
																		},
																		"nativeSrc": "11156:40:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11156:40:18"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "11202:1:18",
																				"nodeType": "YulLiteral",
																				"src": "11202:1:18",
																				"type": "",
																				"value": "1"
																			},
																			{
																				"name": "len",
																				"nativeSrc": "11205:3:18",
																				"nodeType": "YulIdentifier",
																				"src": "11205:3:18"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "11198:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "11198:3:18"
																		},
																		"nativeSrc": "11198:11:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11198:11:18"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "11153:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "11153:2:18"
																},
																"nativeSrc": "11153:57:18",
																"nodeType": "YulFunctionCall",
																"src": "11153:57:18"
															},
															"variableNames": [
																{
																	"name": "used",
																	"nativeSrc": "11145:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "11145:4:18"
																}
															]
														}
													]
												},
												"name": "extract_used_part_and_set_length_of_short_byte_array",
												"nativeSrc": "11050:166:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "data",
														"nativeSrc": "11112:4:18",
														"nodeType": "YulTypedName",
														"src": "11112:4:18",
														"type": ""
													},
													{
														"name": "len",
														"nativeSrc": "11118:3:18",
														"nodeType": "YulTypedName",
														"src": "11118:3:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "used",
														"nativeSrc": "11126:4:18",
														"nodeType": "YulTypedName",
														"src": "11126:4:18",
														"type": ""
													}
												],
												"src": "11050:166:18"
											},
											{
												"body": {
													"nativeSrc": "11315:1247:18",
													"nodeType": "YulBlock",
													"src": "11315:1247:18",
													"statements": [
														{
															"nativeSrc": "11325:24:18",
															"nodeType": "YulVariableDeclaration",
															"src": "11325:24:18",
															"value": {
																"arguments": [
																	{
																		"name": "src",
																		"nativeSrc": "11345:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "11345:3:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "11339:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "11339:5:18"
																},
																"nativeSrc": "11339:10:18",
																"nodeType": "YulFunctionCall",
																"src": "11339:10:18"
															},
															"variables": [
																{
																	"name": "newLen",
																	"nativeSrc": "11329:6:18",
																	"nodeType": "YulTypedName",
																	"src": "11329:6:18",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "11392:22:18",
																"nodeType": "YulBlock",
																"src": "11392:22:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "11394:16:18",
																				"nodeType": "YulIdentifier",
																				"src": "11394:16:18"
																			},
																			"nativeSrc": "11394:18:18",
																			"nodeType": "YulFunctionCall",
																			"src": "11394:18:18"
																		},
																		"nativeSrc": "11394:18:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "11394:18:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "11364:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "11364:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11372:18:18",
																		"nodeType": "YulLiteral",
																		"src": "11372:18:18",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11361:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "11361:2:18"
																},
																"nativeSrc": "11361:30:18",
																"nodeType": "YulFunctionCall",
																"src": "11361:30:18"
															},
															"nativeSrc": "11358:56:18",
															"nodeType": "YulIf",
															"src": "11358:56:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "slot",
																		"nativeSrc": "11466:4:18",
																		"nodeType": "YulIdentifier",
																		"src": "11466:4:18"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "slot",
																						"nativeSrc": "11504:4:18",
																						"nodeType": "YulIdentifier",
																						"src": "11504:4:18"
																					}
																				],
																				"functionName": {
																					"name": "sload",
																					"nativeSrc": "11498:5:18",
																					"nodeType": "YulIdentifier",
																					"src": "11498:5:18"
																				},
																				"nativeSrc": "11498:11:18",
																				"nodeType": "YulFunctionCall",
																				"src": "11498:11:18"
																			}
																		],
																		"functionName": {
																			"name": "extract_byte_array_length",
																			"nativeSrc": "11472:25:18",
																			"nodeType": "YulIdentifier",
																			"src": "11472:25:18"
																		},
																		"nativeSrc": "11472:38:18",
																		"nodeType": "YulFunctionCall",
																		"src": "11472:38:18"
																	},
																	{
																		"name": "newLen",
																		"nativeSrc": "11512:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "11512:6:18"
																	}
																],
																"functionName": {
																	"name": "clean_up_bytearray_end_slots_bytes_storage",
																	"nativeSrc": "11423:42:18",
																	"nodeType": "YulIdentifier",
																	"src": "11423:42:18"
																},
																"nativeSrc": "11423:96:18",
																"nodeType": "YulFunctionCall",
																"src": "11423:96:18"
															},
															"nativeSrc": "11423:96:18",
															"nodeType": "YulExpressionStatement",
															"src": "11423:96:18"
														},
														{
															"nativeSrc": "11528:18:18",
															"nodeType": "YulVariableDeclaration",
															"src": "11528:18:18",
															"value": {
																"kind": "number",
																"nativeSrc": "11545:1:18",
																"nodeType": "YulLiteral",
																"src": "11545:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "11532:9:18",
																	"nodeType": "YulTypedName",
																	"src": "11532:9:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11555:23:18",
															"nodeType": "YulVariableDeclaration",
															"src": "11555:23:18",
															"value": {
																"kind": "number",
																"nativeSrc": "11574:4:18",
																"nodeType": "YulLiteral",
																"src": "11574:4:18",
																"type": "",
																"value": "0x20"
															},
															"variables": [
																{
																	"name": "srcOffset_1",
																	"nativeSrc": "11559:11:18",
																	"nodeType": "YulTypedName",
																	"src": "11559:11:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "11587:17:18",
															"nodeType": "YulAssignment",
															"src": "11587:17:18",
															"value": {
																"kind": "number",
																"nativeSrc": "11600:4:18",
																"nodeType": "YulLiteral",
																"src": "11600:4:18",
																"type": "",
																"value": "0x20"
															},
															"variableNames": [
																{
																	"name": "srcOffset",
																	"nativeSrc": "11587:9:18",
																	"nodeType": "YulIdentifier",
																	"src": "11587:9:18"
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "11650:655:18",
																		"nodeType": "YulBlock",
																		"src": "11650:655:18",
																		"statements": [
																			{
																				"nativeSrc": "11664:35:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "11664:35:18",
																				"value": {
																					"arguments": [
																						{
																							"name": "newLen",
																							"nativeSrc": "11683:6:18",
																							"nodeType": "YulIdentifier",
																							"src": "11683:6:18"
																						},
																						{
																							"arguments": [
																								{
																									"kind": "number",
																									"nativeSrc": "11695:2:18",
																									"nodeType": "YulLiteral",
																									"src": "11695:2:18",
																									"type": "",
																									"value": "31"
																								}
																							],
																							"functionName": {
																								"name": "not",
																								"nativeSrc": "11691:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "11691:3:18"
																							},
																							"nativeSrc": "11691:7:18",
																							"nodeType": "YulFunctionCall",
																							"src": "11691:7:18"
																						}
																					],
																					"functionName": {
																						"name": "and",
																						"nativeSrc": "11679:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "11679:3:18"
																					},
																					"nativeSrc": "11679:20:18",
																					"nodeType": "YulFunctionCall",
																					"src": "11679:20:18"
																				},
																				"variables": [
																					{
																						"name": "loopEnd",
																						"nativeSrc": "11668:7:18",
																						"nodeType": "YulTypedName",
																						"src": "11668:7:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "11712:48:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "11712:48:18",
																				"value": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "11755:4:18",
																							"nodeType": "YulIdentifier",
																							"src": "11755:4:18"
																						}
																					],
																					"functionName": {
																						"name": "array_dataslot_bytes_storage",
																						"nativeSrc": "11726:28:18",
																						"nodeType": "YulIdentifier",
																						"src": "11726:28:18"
																					},
																					"nativeSrc": "11726:34:18",
																					"nodeType": "YulFunctionCall",
																					"src": "11726:34:18"
																				},
																				"variables": [
																					{
																						"name": "dstPtr",
																						"nativeSrc": "11716:6:18",
																						"nodeType": "YulTypedName",
																						"src": "11716:6:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "11773:10:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "11773:10:18",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "11782:1:18",
																					"nodeType": "YulLiteral",
																					"src": "11782:1:18",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "11777:1:18",
																						"nodeType": "YulTypedName",
																						"src": "11777:1:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "11860:172:18",
																					"nodeType": "YulBlock",
																					"src": "11860:172:18",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "11885:6:18",
																										"nodeType": "YulIdentifier",
																										"src": "11885:6:18"
																									},
																									{
																										"arguments": [
																											{
																												"arguments": [
																													{
																														"name": "src",
																														"nativeSrc": "11903:3:18",
																														"nodeType": "YulIdentifier",
																														"src": "11903:3:18"
																													},
																													{
																														"name": "srcOffset",
																														"nativeSrc": "11908:9:18",
																														"nodeType": "YulIdentifier",
																														"src": "11908:9:18"
																													}
																												],
																												"functionName": {
																													"name": "add",
																													"nativeSrc": "11899:3:18",
																													"nodeType": "YulIdentifier",
																													"src": "11899:3:18"
																												},
																												"nativeSrc": "11899:19:18",
																												"nodeType": "YulFunctionCall",
																												"src": "11899:19:18"
																											}
																										],
																										"functionName": {
																											"name": "mload",
																											"nativeSrc": "11893:5:18",
																											"nodeType": "YulIdentifier",
																											"src": "11893:5:18"
																										},
																										"nativeSrc": "11893:26:18",
																										"nodeType": "YulFunctionCall",
																										"src": "11893:26:18"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "11878:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "11878:6:18"
																								},
																								"nativeSrc": "11878:42:18",
																								"nodeType": "YulFunctionCall",
																								"src": "11878:42:18"
																							},
																							"nativeSrc": "11878:42:18",
																							"nodeType": "YulExpressionStatement",
																							"src": "11878:42:18"
																						},
																						{
																							"nativeSrc": "11937:24:18",
																							"nodeType": "YulAssignment",
																							"src": "11937:24:18",
																							"value": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "11951:6:18",
																										"nodeType": "YulIdentifier",
																										"src": "11951:6:18"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "11959:1:18",
																										"nodeType": "YulLiteral",
																										"src": "11959:1:18",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "11947:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "11947:3:18"
																								},
																								"nativeSrc": "11947:14:18",
																								"nodeType": "YulFunctionCall",
																								"src": "11947:14:18"
																							},
																							"variableNames": [
																								{
																									"name": "dstPtr",
																									"nativeSrc": "11937:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "11937:6:18"
																								}
																							]
																						},
																						{
																							"nativeSrc": "11978:40:18",
																							"nodeType": "YulAssignment",
																							"src": "11978:40:18",
																							"value": {
																								"arguments": [
																									{
																										"name": "srcOffset",
																										"nativeSrc": "11995:9:18",
																										"nodeType": "YulIdentifier",
																										"src": "11995:9:18"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "12006:11:18",
																										"nodeType": "YulIdentifier",
																										"src": "12006:11:18"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "11991:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "11991:3:18"
																								},
																								"nativeSrc": "11991:27:18",
																								"nodeType": "YulFunctionCall",
																								"src": "11991:27:18"
																							},
																							"variableNames": [
																								{
																									"name": "srcOffset",
																									"nativeSrc": "11978:9:18",
																									"nodeType": "YulIdentifier",
																									"src": "11978:9:18"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "11807:1:18",
																							"nodeType": "YulIdentifier",
																							"src": "11807:1:18"
																						},
																						{
																							"name": "loopEnd",
																							"nativeSrc": "11810:7:18",
																							"nodeType": "YulIdentifier",
																							"src": "11810:7:18"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "11804:2:18",
																						"nodeType": "YulIdentifier",
																						"src": "11804:2:18"
																					},
																					"nativeSrc": "11804:14:18",
																					"nodeType": "YulFunctionCall",
																					"src": "11804:14:18"
																				},
																				"nativeSrc": "11796:236:18",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "11819:28:18",
																					"nodeType": "YulBlock",
																					"src": "11819:28:18",
																					"statements": [
																						{
																							"nativeSrc": "11821:24:18",
																							"nodeType": "YulAssignment",
																							"src": "11821:24:18",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "11830:1:18",
																										"nodeType": "YulIdentifier",
																										"src": "11830:1:18"
																									},
																									{
																										"name": "srcOffset_1",
																										"nativeSrc": "11833:11:18",
																										"nodeType": "YulIdentifier",
																										"src": "11833:11:18"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "11826:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "11826:3:18"
																								},
																								"nativeSrc": "11826:19:18",
																								"nodeType": "YulFunctionCall",
																								"src": "11826:19:18"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "11821:1:18",
																									"nodeType": "YulIdentifier",
																									"src": "11821:1:18"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "11800:3:18",
																					"nodeType": "YulBlock",
																					"src": "11800:3:18",
																					"statements": []
																				},
																				"src": "11796:236:18"
																			},
																			{
																				"body": {
																					"nativeSrc": "12080:166:18",
																					"nodeType": "YulBlock",
																					"src": "12080:166:18",
																					"statements": [
																						{
																							"nativeSrc": "12098:43:18",
																							"nodeType": "YulVariableDeclaration",
																							"src": "12098:43:18",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "12125:3:18",
																												"nodeType": "YulIdentifier",
																												"src": "12125:3:18"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "12130:9:18",
																												"nodeType": "YulIdentifier",
																												"src": "12130:9:18"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "12121:3:18",
																											"nodeType": "YulIdentifier",
																											"src": "12121:3:18"
																										},
																										"nativeSrc": "12121:19:18",
																										"nodeType": "YulFunctionCall",
																										"src": "12121:19:18"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "12115:5:18",
																									"nodeType": "YulIdentifier",
																									"src": "12115:5:18"
																								},
																								"nativeSrc": "12115:26:18",
																								"nodeType": "YulFunctionCall",
																								"src": "12115:26:18"
																							},
																							"variables": [
																								{
																									"name": "lastValue",
																									"nativeSrc": "12102:9:18",
																									"nodeType": "YulTypedName",
																									"src": "12102:9:18",
																									"type": ""
																								}
																							]
																						},
																						{
																							"expression": {
																								"arguments": [
																									{
																										"name": "dstPtr",
																										"nativeSrc": "12165:6:18",
																										"nodeType": "YulIdentifier",
																										"src": "12165:6:18"
																									},
																									{
																										"arguments": [
																											{
																												"name": "lastValue",
																												"nativeSrc": "12177:9:18",
																												"nodeType": "YulIdentifier",
																												"src": "12177:9:18"
																											},
																											{
																												"arguments": [
																													{
																														"arguments": [
																															{
																																"arguments": [
																																	{
																																		"arguments": [
																																			{
																																				"kind": "number",
																																				"nativeSrc": "12204:1:18",
																																				"nodeType": "YulLiteral",
																																				"src": "12204:1:18",
																																				"type": "",
																																				"value": "3"
																																			},
																																			{
																																				"name": "newLen",
																																				"nativeSrc": "12207:6:18",
																																				"nodeType": "YulIdentifier",
																																				"src": "12207:6:18"
																																			}
																																		],
																																		"functionName": {
																																			"name": "shl",
																																			"nativeSrc": "12200:3:18",
																																			"nodeType": "YulIdentifier",
																																			"src": "12200:3:18"
																																		},
																																		"nativeSrc": "12200:14:18",
																																		"nodeType": "YulFunctionCall",
																																		"src": "12200:14:18"
																																	},
																																	{
																																		"kind": "number",
																																		"nativeSrc": "12216:3:18",
																																		"nodeType": "YulLiteral",
																																		"src": "12216:3:18",
																																		"type": "",
																																		"value": "248"
																																	}
																																],
																																"functionName": {
																																	"name": "and",
																																	"nativeSrc": "12196:3:18",
																																	"nodeType": "YulIdentifier",
																																	"src": "12196:3:18"
																																},
																																"nativeSrc": "12196:24:18",
																																"nodeType": "YulFunctionCall",
																																"src": "12196:24:18"
																															},
																															{
																																"arguments": [
																																	{
																																		"kind": "number",
																																		"nativeSrc": "12226:1:18",
																																		"nodeType": "YulLiteral",
																																		"src": "12226:1:18",
																																		"type": "",
																																		"value": "0"
																																	}
																																],
																																"functionName": {
																																	"name": "not",
																																	"nativeSrc": "12222:3:18",
																																	"nodeType": "YulIdentifier",
																																	"src": "12222:3:18"
																																},
																																"nativeSrc": "12222:6:18",
																																"nodeType": "YulFunctionCall",
																																"src": "12222:6:18"
																															}
																														],
																														"functionName": {
																															"name": "shr",
																															"nativeSrc": "12192:3:18",
																															"nodeType": "YulIdentifier",
																															"src": "12192:3:18"
																														},
																														"nativeSrc": "12192:37:18",
																														"nodeType": "YulFunctionCall",
																														"src": "12192:37:18"
																													}
																												],
																												"functionName": {
																													"name": "not",
																													"nativeSrc": "12188:3:18",
																													"nodeType": "YulIdentifier",
																													"src": "12188:3:18"
																												},
																												"nativeSrc": "12188:42:18",
																												"nodeType": "YulFunctionCall",
																												"src": "12188:42:18"
																											}
																										],
																										"functionName": {
																											"name": "and",
																											"nativeSrc": "12173:3:18",
																											"nodeType": "YulIdentifier",
																											"src": "12173:3:18"
																										},
																										"nativeSrc": "12173:58:18",
																										"nodeType": "YulFunctionCall",
																										"src": "12173:58:18"
																									}
																								],
																								"functionName": {
																									"name": "sstore",
																									"nativeSrc": "12158:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "12158:6:18"
																								},
																								"nativeSrc": "12158:74:18",
																								"nodeType": "YulFunctionCall",
																								"src": "12158:74:18"
																							},
																							"nativeSrc": "12158:74:18",
																							"nodeType": "YulExpressionStatement",
																							"src": "12158:74:18"
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "loopEnd",
																							"nativeSrc": "12051:7:18",
																							"nodeType": "YulIdentifier",
																							"src": "12051:7:18"
																						},
																						{
																							"name": "newLen",
																							"nativeSrc": "12060:6:18",
																							"nodeType": "YulIdentifier",
																							"src": "12060:6:18"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "12048:2:18",
																						"nodeType": "YulIdentifier",
																						"src": "12048:2:18"
																					},
																					"nativeSrc": "12048:19:18",
																					"nodeType": "YulFunctionCall",
																					"src": "12048:19:18"
																				},
																				"nativeSrc": "12045:201:18",
																				"nodeType": "YulIf",
																				"src": "12045:201:18"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "12266:4:18",
																							"nodeType": "YulIdentifier",
																							"src": "12266:4:18"
																						},
																						{
																							"arguments": [
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "12280:1:18",
																											"nodeType": "YulLiteral",
																											"src": "12280:1:18",
																											"type": "",
																											"value": "1"
																										},
																										{
																											"name": "newLen",
																											"nativeSrc": "12283:6:18",
																											"nodeType": "YulIdentifier",
																											"src": "12283:6:18"
																										}
																									],
																									"functionName": {
																										"name": "shl",
																										"nativeSrc": "12276:3:18",
																										"nodeType": "YulIdentifier",
																										"src": "12276:3:18"
																									},
																									"nativeSrc": "12276:14:18",
																									"nodeType": "YulFunctionCall",
																									"src": "12276:14:18"
																								},
																								{
																									"kind": "number",
																									"nativeSrc": "12292:1:18",
																									"nodeType": "YulLiteral",
																									"src": "12292:1:18",
																									"type": "",
																									"value": "1"
																								}
																							],
																							"functionName": {
																								"name": "add",
																								"nativeSrc": "12272:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "12272:3:18"
																							},
																							"nativeSrc": "12272:22:18",
																							"nodeType": "YulFunctionCall",
																							"src": "12272:22:18"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "12259:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "12259:6:18"
																					},
																					"nativeSrc": "12259:36:18",
																					"nodeType": "YulFunctionCall",
																					"src": "12259:36:18"
																				},
																				"nativeSrc": "12259:36:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "12259:36:18"
																			}
																		]
																	},
																	"nativeSrc": "11643:662:18",
																	"nodeType": "YulCase",
																	"src": "11643:662:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "11648:1:18",
																		"nodeType": "YulLiteral",
																		"src": "11648:1:18",
																		"type": "",
																		"value": "1"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "12322:234:18",
																		"nodeType": "YulBlock",
																		"src": "12322:234:18",
																		"statements": [
																			{
																				"nativeSrc": "12336:14:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "12336:14:18",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "12349:1:18",
																					"nodeType": "YulLiteral",
																					"src": "12349:1:18",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "value",
																						"nativeSrc": "12340:5:18",
																						"nodeType": "YulTypedName",
																						"src": "12340:5:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "12385:67:18",
																					"nodeType": "YulBlock",
																					"src": "12385:67:18",
																					"statements": [
																						{
																							"nativeSrc": "12403:35:18",
																							"nodeType": "YulAssignment",
																							"src": "12403:35:18",
																							"value": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "src",
																												"nativeSrc": "12422:3:18",
																												"nodeType": "YulIdentifier",
																												"src": "12422:3:18"
																											},
																											{
																												"name": "srcOffset",
																												"nativeSrc": "12427:9:18",
																												"nodeType": "YulIdentifier",
																												"src": "12427:9:18"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "12418:3:18",
																											"nodeType": "YulIdentifier",
																											"src": "12418:3:18"
																										},
																										"nativeSrc": "12418:19:18",
																										"nodeType": "YulFunctionCall",
																										"src": "12418:19:18"
																									}
																								],
																								"functionName": {
																									"name": "mload",
																									"nativeSrc": "12412:5:18",
																									"nodeType": "YulIdentifier",
																									"src": "12412:5:18"
																								},
																								"nativeSrc": "12412:26:18",
																								"nodeType": "YulFunctionCall",
																								"src": "12412:26:18"
																							},
																							"variableNames": [
																								{
																									"name": "value",
																									"nativeSrc": "12403:5:18",
																									"nodeType": "YulIdentifier",
																									"src": "12403:5:18"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"name": "newLen",
																					"nativeSrc": "12366:6:18",
																					"nodeType": "YulIdentifier",
																					"src": "12366:6:18"
																				},
																				"nativeSrc": "12363:89:18",
																				"nodeType": "YulIf",
																				"src": "12363:89:18"
																			},
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "slot",
																							"nativeSrc": "12472:4:18",
																							"nodeType": "YulIdentifier",
																							"src": "12472:4:18"
																						},
																						{
																							"arguments": [
																								{
																									"name": "value",
																									"nativeSrc": "12531:5:18",
																									"nodeType": "YulIdentifier",
																									"src": "12531:5:18"
																								},
																								{
																									"name": "newLen",
																									"nativeSrc": "12538:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "12538:6:18"
																								}
																							],
																							"functionName": {
																								"name": "extract_used_part_and_set_length_of_short_byte_array",
																								"nativeSrc": "12478:52:18",
																								"nodeType": "YulIdentifier",
																								"src": "12478:52:18"
																							},
																							"nativeSrc": "12478:67:18",
																							"nodeType": "YulFunctionCall",
																							"src": "12478:67:18"
																						}
																					],
																					"functionName": {
																						"name": "sstore",
																						"nativeSrc": "12465:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "12465:6:18"
																					},
																					"nativeSrc": "12465:81:18",
																					"nodeType": "YulFunctionCall",
																					"src": "12465:81:18"
																				},
																				"nativeSrc": "12465:81:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "12465:81:18"
																			}
																		]
																	},
																	"nativeSrc": "12314:242:18",
																	"nodeType": "YulCase",
																	"src": "12314:242:18",
																	"value": "default"
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "newLen",
																		"nativeSrc": "11623:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "11623:6:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11631:2:18",
																		"nodeType": "YulLiteral",
																		"src": "11631:2:18",
																		"type": "",
																		"value": "31"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "11620:2:18",
																	"nodeType": "YulIdentifier",
																	"src": "11620:2:18"
																},
																"nativeSrc": "11620:14:18",
																"nodeType": "YulFunctionCall",
																"src": "11620:14:18"
															},
															"nativeSrc": "11613:943:18",
															"nodeType": "YulSwitch",
															"src": "11613:943:18"
														}
													]
												},
												"name": "copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage",
												"nativeSrc": "11221:1341:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "slot",
														"nativeSrc": "11300:4:18",
														"nodeType": "YulTypedName",
														"src": "11300:4:18",
														"type": ""
													},
													{
														"name": "src",
														"nativeSrc": "11306:3:18",
														"nodeType": "YulTypedName",
														"src": "11306:3:18",
														"type": ""
													}
												],
												"src": "11221:1341:18"
											},
											{
												"body": {
													"nativeSrc": "12741:167:18",
													"nodeType": "YulBlock",
													"src": "12741:167:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12758:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "12758:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12769:2:18",
																		"nodeType": "YulLiteral",
																		"src": "12769:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12751:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "12751:6:18"
																},
																"nativeSrc": "12751:21:18",
																"nodeType": "YulFunctionCall",
																"src": "12751:21:18"
															},
															"nativeSrc": "12751:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "12751:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12792:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "12792:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12803:2:18",
																				"nodeType": "YulLiteral",
																				"src": "12803:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12788:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "12788:3:18"
																		},
																		"nativeSrc": "12788:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12788:18:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12808:2:18",
																		"nodeType": "YulLiteral",
																		"src": "12808:2:18",
																		"type": "",
																		"value": "17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12781:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "12781:6:18"
																},
																"nativeSrc": "12781:30:18",
																"nodeType": "YulFunctionCall",
																"src": "12781:30:18"
															},
															"nativeSrc": "12781:30:18",
															"nodeType": "YulExpressionStatement",
															"src": "12781:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12831:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "12831:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12842:2:18",
																				"nodeType": "YulLiteral",
																				"src": "12842:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12827:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "12827:3:18"
																		},
																		"nativeSrc": "12827:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "12827:18:18"
																	},
																	{
																		"hexValue": "43616e6e6f742065786563757465207478",
																		"kind": "string",
																		"nativeSrc": "12847:19:18",
																		"nodeType": "YulLiteral",
																		"src": "12847:19:18",
																		"type": "",
																		"value": "Cannot execute tx"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12820:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "12820:6:18"
																},
																"nativeSrc": "12820:47:18",
																"nodeType": "YulFunctionCall",
																"src": "12820:47:18"
															},
															"nativeSrc": "12820:47:18",
															"nodeType": "YulExpressionStatement",
															"src": "12820:47:18"
														},
														{
															"nativeSrc": "12876:26:18",
															"nodeType": "YulAssignment",
															"src": "12876:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12888:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "12888:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12899:2:18",
																		"nodeType": "YulLiteral",
																		"src": "12899:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12884:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "12884:3:18"
																},
																"nativeSrc": "12884:18:18",
																"nodeType": "YulFunctionCall",
																"src": "12884:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12876:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "12876:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_7e54dddc19fe041cd2ab5a676b9022929cd57fae1ef2ef044dff489da7dfdd60__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12567:341:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12718:9:18",
														"nodeType": "YulTypedName",
														"src": "12718:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12732:4:18",
														"nodeType": "YulTypedName",
														"src": "12732:4:18",
														"type": ""
													}
												],
												"src": "12567:341:18"
											},
											{
												"body": {
													"nativeSrc": "13047:707:18",
													"nodeType": "YulBlock",
													"src": "13047:707:18",
													"statements": [
														{
															"nativeSrc": "13057:12:18",
															"nodeType": "YulVariableDeclaration",
															"src": "13057:12:18",
															"value": {
																"kind": "number",
																"nativeSrc": "13068:1:18",
																"nodeType": "YulLiteral",
																"src": "13068:1:18",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "ret",
																	"nativeSrc": "13061:3:18",
																	"nodeType": "YulTypedName",
																	"src": "13061:3:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13078:30:18",
															"nodeType": "YulVariableDeclaration",
															"src": "13078:30:18",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13101:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "13101:6:18"
																	}
																],
																"functionName": {
																	"name": "sload",
																	"nativeSrc": "13095:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "13095:5:18"
																},
																"nativeSrc": "13095:13:18",
																"nodeType": "YulFunctionCall",
																"src": "13095:13:18"
															},
															"variables": [
																{
																	"name": "slotValue",
																	"nativeSrc": "13082:9:18",
																	"nodeType": "YulTypedName",
																	"src": "13082:9:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13117:50:18",
															"nodeType": "YulVariableDeclaration",
															"src": "13117:50:18",
															"value": {
																"arguments": [
																	{
																		"name": "slotValue",
																		"nativeSrc": "13157:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "13157:9:18"
																	}
																],
																"functionName": {
																	"name": "extract_byte_array_length",
																	"nativeSrc": "13131:25:18",
																	"nodeType": "YulIdentifier",
																	"src": "13131:25:18"
																},
																"nativeSrc": "13131:36:18",
																"nodeType": "YulFunctionCall",
																"src": "13131:36:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "13121:6:18",
																	"nodeType": "YulTypedName",
																	"src": "13121:6:18",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "13176:11:18",
															"nodeType": "YulVariableDeclaration",
															"src": "13176:11:18",
															"value": {
																"kind": "number",
																"nativeSrc": "13186:1:18",
																"nodeType": "YulLiteral",
																"src": "13186:1:18",
																"type": "",
																"value": "1"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "13180:2:18",
																	"nodeType": "YulTypedName",
																	"src": "13180:2:18",
																	"type": ""
																}
															]
														},
														{
															"cases": [
																{
																	"body": {
																		"nativeSrc": "13236:126:18",
																		"nodeType": "YulBlock",
																		"src": "13236:126:18",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "13257:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "13257:3:18"
																						},
																						{
																							"arguments": [
																								{
																									"name": "slotValue",
																									"nativeSrc": "13266:9:18",
																									"nodeType": "YulIdentifier",
																									"src": "13266:9:18"
																								},
																								{
																									"arguments": [
																										{
																											"kind": "number",
																											"nativeSrc": "13281:3:18",
																											"nodeType": "YulLiteral",
																											"src": "13281:3:18",
																											"type": "",
																											"value": "255"
																										}
																									],
																									"functionName": {
																										"name": "not",
																										"nativeSrc": "13277:3:18",
																										"nodeType": "YulIdentifier",
																										"src": "13277:3:18"
																									},
																									"nativeSrc": "13277:8:18",
																									"nodeType": "YulFunctionCall",
																									"src": "13277:8:18"
																								}
																							],
																							"functionName": {
																								"name": "and",
																								"nativeSrc": "13262:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "13262:3:18"
																							},
																							"nativeSrc": "13262:24:18",
																							"nodeType": "YulFunctionCall",
																							"src": "13262:24:18"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nativeSrc": "13250:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "13250:6:18"
																					},
																					"nativeSrc": "13250:37:18",
																					"nodeType": "YulFunctionCall",
																					"src": "13250:37:18"
																				},
																				"nativeSrc": "13250:37:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "13250:37:18"
																			},
																			{
																				"nativeSrc": "13300:52:18",
																				"nodeType": "YulAssignment",
																				"src": "13300:52:18",
																				"value": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "13311:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "13311:3:18"
																						},
																						{
																							"arguments": [
																								{
																									"name": "length",
																									"nativeSrc": "13320:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "13320:6:18"
																								},
																								{
																									"arguments": [
																										{
																											"arguments": [
																												{
																													"name": "length",
																													"nativeSrc": "13342:6:18",
																													"nodeType": "YulIdentifier",
																													"src": "13342:6:18"
																												}
																											],
																											"functionName": {
																												"name": "iszero",
																												"nativeSrc": "13335:6:18",
																												"nodeType": "YulIdentifier",
																												"src": "13335:6:18"
																											},
																											"nativeSrc": "13335:14:18",
																											"nodeType": "YulFunctionCall",
																											"src": "13335:14:18"
																										}
																									],
																									"functionName": {
																										"name": "iszero",
																										"nativeSrc": "13328:6:18",
																										"nodeType": "YulIdentifier",
																										"src": "13328:6:18"
																									},
																									"nativeSrc": "13328:22:18",
																									"nodeType": "YulFunctionCall",
																									"src": "13328:22:18"
																								}
																							],
																							"functionName": {
																								"name": "mul",
																								"nativeSrc": "13316:3:18",
																								"nodeType": "YulIdentifier",
																								"src": "13316:3:18"
																							},
																							"nativeSrc": "13316:35:18",
																							"nodeType": "YulFunctionCall",
																							"src": "13316:35:18"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "13307:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "13307:3:18"
																					},
																					"nativeSrc": "13307:45:18",
																					"nodeType": "YulFunctionCall",
																					"src": "13307:45:18"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nativeSrc": "13300:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "13300:3:18"
																					}
																				]
																			}
																		]
																	},
																	"nativeSrc": "13229:133:18",
																	"nodeType": "YulCase",
																	"src": "13229:133:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13234:1:18",
																		"nodeType": "YulLiteral",
																		"src": "13234:1:18",
																		"type": "",
																		"value": "0"
																	}
																},
																{
																	"body": {
																		"nativeSrc": "13378:351:18",
																		"nodeType": "YulBlock",
																		"src": "13378:351:18",
																		"statements": [
																			{
																				"expression": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "13399:1:18",
																							"nodeType": "YulLiteral",
																							"src": "13399:1:18",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"name": "value0",
																							"nativeSrc": "13402:6:18",
																							"nodeType": "YulIdentifier",
																							"src": "13402:6:18"
																						}
																					],
																					"functionName": {
																						"name": "mstore",
																						"nativeSrc": "13392:6:18",
																						"nodeType": "YulIdentifier",
																						"src": "13392:6:18"
																					},
																					"nativeSrc": "13392:17:18",
																					"nodeType": "YulFunctionCall",
																					"src": "13392:17:18"
																				},
																				"nativeSrc": "13392:17:18",
																				"nodeType": "YulExpressionStatement",
																				"src": "13392:17:18"
																			},
																			{
																				"nativeSrc": "13422:14:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "13422:14:18",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "13432:4:18",
																					"nodeType": "YulLiteral",
																					"src": "13432:4:18",
																					"type": "",
																					"value": "0x20"
																				},
																				"variables": [
																					{
																						"name": "_2",
																						"nativeSrc": "13426:2:18",
																						"nodeType": "YulTypedName",
																						"src": "13426:2:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "13449:33:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "13449:33:18",
																				"value": {
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "13474:1:18",
																							"nodeType": "YulLiteral",
																							"src": "13474:1:18",
																							"type": "",
																							"value": "0"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "13477:4:18",
																							"nodeType": "YulLiteral",
																							"src": "13477:4:18",
																							"type": "",
																							"value": "0x20"
																						}
																					],
																					"functionName": {
																						"name": "keccak256",
																						"nativeSrc": "13464:9:18",
																						"nodeType": "YulIdentifier",
																						"src": "13464:9:18"
																					},
																					"nativeSrc": "13464:18:18",
																					"nodeType": "YulFunctionCall",
																					"src": "13464:18:18"
																				},
																				"variables": [
																					{
																						"name": "dataPos",
																						"nativeSrc": "13453:7:18",
																						"nodeType": "YulTypedName",
																						"src": "13453:7:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"nativeSrc": "13495:10:18",
																				"nodeType": "YulVariableDeclaration",
																				"src": "13495:10:18",
																				"value": {
																					"kind": "number",
																					"nativeSrc": "13504:1:18",
																					"nodeType": "YulLiteral",
																					"src": "13504:1:18",
																					"type": "",
																					"value": "0"
																				},
																				"variables": [
																					{
																						"name": "i",
																						"nativeSrc": "13499:1:18",
																						"nodeType": "YulTypedName",
																						"src": "13499:1:18",
																						"type": ""
																					}
																				]
																			},
																			{
																				"body": {
																					"nativeSrc": "13572:111:18",
																					"nodeType": "YulBlock",
																					"src": "13572:111:18",
																					"statements": [
																						{
																							"expression": {
																								"arguments": [
																									{
																										"arguments": [
																											{
																												"name": "pos",
																												"nativeSrc": "13601:3:18",
																												"nodeType": "YulIdentifier",
																												"src": "13601:3:18"
																											},
																											{
																												"name": "i",
																												"nativeSrc": "13606:1:18",
																												"nodeType": "YulIdentifier",
																												"src": "13606:1:18"
																											}
																										],
																										"functionName": {
																											"name": "add",
																											"nativeSrc": "13597:3:18",
																											"nodeType": "YulIdentifier",
																											"src": "13597:3:18"
																										},
																										"nativeSrc": "13597:11:18",
																										"nodeType": "YulFunctionCall",
																										"src": "13597:11:18"
																									},
																									{
																										"arguments": [
																											{
																												"name": "dataPos",
																												"nativeSrc": "13616:7:18",
																												"nodeType": "YulIdentifier",
																												"src": "13616:7:18"
																											}
																										],
																										"functionName": {
																											"name": "sload",
																											"nativeSrc": "13610:5:18",
																											"nodeType": "YulIdentifier",
																											"src": "13610:5:18"
																										},
																										"nativeSrc": "13610:14:18",
																										"nodeType": "YulFunctionCall",
																										"src": "13610:14:18"
																									}
																								],
																								"functionName": {
																									"name": "mstore",
																									"nativeSrc": "13590:6:18",
																									"nodeType": "YulIdentifier",
																									"src": "13590:6:18"
																								},
																								"nativeSrc": "13590:35:18",
																								"nodeType": "YulFunctionCall",
																								"src": "13590:35:18"
																							},
																							"nativeSrc": "13590:35:18",
																							"nodeType": "YulExpressionStatement",
																							"src": "13590:35:18"
																						},
																						{
																							"nativeSrc": "13642:27:18",
																							"nodeType": "YulAssignment",
																							"src": "13642:27:18",
																							"value": {
																								"arguments": [
																									{
																										"name": "dataPos",
																										"nativeSrc": "13657:7:18",
																										"nodeType": "YulIdentifier",
																										"src": "13657:7:18"
																									},
																									{
																										"name": "_1",
																										"nativeSrc": "13666:2:18",
																										"nodeType": "YulIdentifier",
																										"src": "13666:2:18"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "13653:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "13653:3:18"
																								},
																								"nativeSrc": "13653:16:18",
																								"nodeType": "YulFunctionCall",
																								"src": "13653:16:18"
																							},
																							"variableNames": [
																								{
																									"name": "dataPos",
																									"nativeSrc": "13642:7:18",
																									"nodeType": "YulIdentifier",
																									"src": "13642:7:18"
																								}
																							]
																						}
																					]
																				},
																				"condition": {
																					"arguments": [
																						{
																							"name": "i",
																							"nativeSrc": "13529:1:18",
																							"nodeType": "YulIdentifier",
																							"src": "13529:1:18"
																						},
																						{
																							"name": "length",
																							"nativeSrc": "13532:6:18",
																							"nodeType": "YulIdentifier",
																							"src": "13532:6:18"
																						}
																					],
																					"functionName": {
																						"name": "lt",
																						"nativeSrc": "13526:2:18",
																						"nodeType": "YulIdentifier",
																						"src": "13526:2:18"
																					},
																					"nativeSrc": "13526:13:18",
																					"nodeType": "YulFunctionCall",
																					"src": "13526:13:18"
																				},
																				"nativeSrc": "13518:165:18",
																				"nodeType": "YulForLoop",
																				"post": {
																					"nativeSrc": "13540:19:18",
																					"nodeType": "YulBlock",
																					"src": "13540:19:18",
																					"statements": [
																						{
																							"nativeSrc": "13542:15:18",
																							"nodeType": "YulAssignment",
																							"src": "13542:15:18",
																							"value": {
																								"arguments": [
																									{
																										"name": "i",
																										"nativeSrc": "13551:1:18",
																										"nodeType": "YulIdentifier",
																										"src": "13551:1:18"
																									},
																									{
																										"name": "_2",
																										"nativeSrc": "13554:2:18",
																										"nodeType": "YulIdentifier",
																										"src": "13554:2:18"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "13547:3:18",
																									"nodeType": "YulIdentifier",
																									"src": "13547:3:18"
																								},
																								"nativeSrc": "13547:10:18",
																								"nodeType": "YulFunctionCall",
																								"src": "13547:10:18"
																							},
																							"variableNames": [
																								{
																									"name": "i",
																									"nativeSrc": "13542:1:18",
																									"nodeType": "YulIdentifier",
																									"src": "13542:1:18"
																								}
																							]
																						}
																					]
																				},
																				"pre": {
																					"nativeSrc": "13522:3:18",
																					"nodeType": "YulBlock",
																					"src": "13522:3:18",
																					"statements": []
																				},
																				"src": "13518:165:18"
																			},
																			{
																				"nativeSrc": "13696:23:18",
																				"nodeType": "YulAssignment",
																				"src": "13696:23:18",
																				"value": {
																					"arguments": [
																						{
																							"name": "pos",
																							"nativeSrc": "13707:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "13707:3:18"
																						},
																						{
																							"name": "length",
																							"nativeSrc": "13712:6:18",
																							"nodeType": "YulIdentifier",
																							"src": "13712:6:18"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "13703:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "13703:3:18"
																					},
																					"nativeSrc": "13703:16:18",
																					"nodeType": "YulFunctionCall",
																					"src": "13703:16:18"
																				},
																				"variableNames": [
																					{
																						"name": "ret",
																						"nativeSrc": "13696:3:18",
																						"nodeType": "YulIdentifier",
																						"src": "13696:3:18"
																					}
																				]
																			}
																		]
																	},
																	"nativeSrc": "13371:358:18",
																	"nodeType": "YulCase",
																	"src": "13371:358:18",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "13376:1:18",
																		"nodeType": "YulLiteral",
																		"src": "13376:1:18",
																		"type": "",
																		"value": "1"
																	}
																}
															],
															"expression": {
																"arguments": [
																	{
																		"name": "slotValue",
																		"nativeSrc": "13207:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "13207:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13218:1:18",
																		"nodeType": "YulLiteral",
																		"src": "13218:1:18",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "13203:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "13203:3:18"
																},
																"nativeSrc": "13203:17:18",
																"nodeType": "YulFunctionCall",
																"src": "13203:17:18"
															},
															"nativeSrc": "13196:533:18",
															"nodeType": "YulSwitch",
															"src": "13196:533:18"
														},
														{
															"nativeSrc": "13738:10:18",
															"nodeType": "YulAssignment",
															"src": "13738:10:18",
															"value": {
																"name": "ret",
																"nativeSrc": "13745:3:18",
																"nodeType": "YulIdentifier",
																"src": "13745:3:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13738:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "13738:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_storage__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "12913:841:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13023:3:18",
														"nodeType": "YulTypedName",
														"src": "13023:3:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13028:6:18",
														"nodeType": "YulTypedName",
														"src": "13028:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13039:3:18",
														"nodeType": "YulTypedName",
														"src": "13039:3:18",
														"type": ""
													}
												],
												"src": "12913:841:18"
											},
											{
												"body": {
													"nativeSrc": "13933:168:18",
													"nodeType": "YulBlock",
													"src": "13933:168:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "13950:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "13950:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13961:2:18",
																		"nodeType": "YulLiteral",
																		"src": "13961:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13943:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "13943:6:18"
																},
																"nativeSrc": "13943:21:18",
																"nodeType": "YulFunctionCall",
																"src": "13943:21:18"
															},
															"nativeSrc": "13943:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "13943:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13984:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "13984:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13995:2:18",
																				"nodeType": "YulLiteral",
																				"src": "13995:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13980:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "13980:3:18"
																		},
																		"nativeSrc": "13980:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "13980:18:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14000:2:18",
																		"nodeType": "YulLiteral",
																		"src": "14000:2:18",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13973:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "13973:6:18"
																},
																"nativeSrc": "13973:30:18",
																"nodeType": "YulFunctionCall",
																"src": "13973:30:18"
															},
															"nativeSrc": "13973:30:18",
															"nodeType": "YulExpressionStatement",
															"src": "13973:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14023:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "14023:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14034:2:18",
																				"nodeType": "YulLiteral",
																				"src": "14034:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14019:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "14019:3:18"
																		},
																		"nativeSrc": "14019:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "14019:18:18"
																	},
																	{
																		"hexValue": "5472616e73616374696f6e206661696c6564",
																		"kind": "string",
																		"nativeSrc": "14039:20:18",
																		"nodeType": "YulLiteral",
																		"src": "14039:20:18",
																		"type": "",
																		"value": "Transaction failed"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14012:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "14012:6:18"
																},
																"nativeSrc": "14012:48:18",
																"nodeType": "YulFunctionCall",
																"src": "14012:48:18"
															},
															"nativeSrc": "14012:48:18",
															"nodeType": "YulExpressionStatement",
															"src": "14012:48:18"
														},
														{
															"nativeSrc": "14069:26:18",
															"nodeType": "YulAssignment",
															"src": "14069:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14081:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "14081:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14092:2:18",
																		"nodeType": "YulLiteral",
																		"src": "14092:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14077:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "14077:3:18"
																},
																"nativeSrc": "14077:18:18",
																"nodeType": "YulFunctionCall",
																"src": "14077:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14069:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "14069:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c49f60e918d4d07c4337a420c2afcf7054eea7f9d81d8862809229abad6c8588__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "13759:342:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "13910:9:18",
														"nodeType": "YulTypedName",
														"src": "13910:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "13924:4:18",
														"nodeType": "YulTypedName",
														"src": "13924:4:18",
														"type": ""
													}
												],
												"src": "13759:342:18"
											},
											{
												"body": {
													"nativeSrc": "14207:102:18",
													"nodeType": "YulBlock",
													"src": "14207:102:18",
													"statements": [
														{
															"nativeSrc": "14217:26:18",
															"nodeType": "YulAssignment",
															"src": "14217:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14229:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "14229:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14240:2:18",
																		"nodeType": "YulLiteral",
																		"src": "14240:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14225:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "14225:3:18"
																},
																"nativeSrc": "14225:18:18",
																"nodeType": "YulFunctionCall",
																"src": "14225:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14217:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "14217:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14259:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "14259:9:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "14274:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "14274:6:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "14290:3:18",
																								"nodeType": "YulLiteral",
																								"src": "14290:3:18",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "14295:1:18",
																								"nodeType": "YulLiteral",
																								"src": "14295:1:18",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "14286:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "14286:3:18"
																						},
																						"nativeSrc": "14286:11:18",
																						"nodeType": "YulFunctionCall",
																						"src": "14286:11:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "14299:1:18",
																						"nodeType": "YulLiteral",
																						"src": "14299:1:18",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "14282:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "14282:3:18"
																				},
																				"nativeSrc": "14282:19:18",
																				"nodeType": "YulFunctionCall",
																				"src": "14282:19:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "14270:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "14270:3:18"
																		},
																		"nativeSrc": "14270:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "14270:32:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14252:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "14252:6:18"
																},
																"nativeSrc": "14252:51:18",
																"nodeType": "YulFunctionCall",
																"src": "14252:51:18"
															},
															"nativeSrc": "14252:51:18",
															"nodeType": "YulExpressionStatement",
															"src": "14252:51:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "14106:203:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14176:9:18",
														"nodeType": "YulTypedName",
														"src": "14176:9:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14187:6:18",
														"nodeType": "YulTypedName",
														"src": "14187:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14198:4:18",
														"nodeType": "YulTypedName",
														"src": "14198:4:18",
														"type": ""
													}
												],
												"src": "14106:203:18"
											},
											{
												"body": {
													"nativeSrc": "14395:103:18",
													"nodeType": "YulBlock",
													"src": "14395:103:18",
													"statements": [
														{
															"body": {
																"nativeSrc": "14441:16:18",
																"nodeType": "YulBlock",
																"src": "14441:16:18",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "14450:1:18",
																					"nodeType": "YulLiteral",
																					"src": "14450:1:18",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "14453:1:18",
																					"nodeType": "YulLiteral",
																					"src": "14453:1:18",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "14443:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "14443:6:18"
																			},
																			"nativeSrc": "14443:12:18",
																			"nodeType": "YulFunctionCall",
																			"src": "14443:12:18"
																		},
																		"nativeSrc": "14443:12:18",
																		"nodeType": "YulExpressionStatement",
																		"src": "14443:12:18"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "14416:7:18",
																				"nodeType": "YulIdentifier",
																				"src": "14416:7:18"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "14425:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "14425:9:18"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "14412:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "14412:3:18"
																		},
																		"nativeSrc": "14412:23:18",
																		"nodeType": "YulFunctionCall",
																		"src": "14412:23:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14437:2:18",
																		"nodeType": "YulLiteral",
																		"src": "14437:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "14408:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "14408:3:18"
																},
																"nativeSrc": "14408:32:18",
																"nodeType": "YulFunctionCall",
																"src": "14408:32:18"
															},
															"nativeSrc": "14405:52:18",
															"nodeType": "YulIf",
															"src": "14405:52:18"
														},
														{
															"nativeSrc": "14466:26:18",
															"nodeType": "YulAssignment",
															"src": "14466:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14482:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "14482:9:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "14476:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "14476:5:18"
																},
																"nativeSrc": "14476:16:18",
																"nodeType": "YulFunctionCall",
																"src": "14476:16:18"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "14466:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "14466:6:18"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32_fromMemory",
												"nativeSrc": "14314:184:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14361:9:18",
														"nodeType": "YulTypedName",
														"src": "14361:9:18",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "14372:7:18",
														"nodeType": "YulTypedName",
														"src": "14372:7:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "14384:6:18",
														"nodeType": "YulTypedName",
														"src": "14384:6:18",
														"type": ""
													}
												],
												"src": "14314:184:18"
											},
											{
												"body": {
													"nativeSrc": "14677:166:18",
													"nodeType": "YulBlock",
													"src": "14677:166:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14694:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "14694:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14705:2:18",
																		"nodeType": "YulLiteral",
																		"src": "14705:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14687:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "14687:6:18"
																},
																"nativeSrc": "14687:21:18",
																"nodeType": "YulFunctionCall",
																"src": "14687:21:18"
															},
															"nativeSrc": "14687:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "14687:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14728:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "14728:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14739:2:18",
																				"nodeType": "YulLiteral",
																				"src": "14739:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14724:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "14724:3:18"
																		},
																		"nativeSrc": "14724:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "14724:18:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14744:2:18",
																		"nodeType": "YulLiteral",
																		"src": "14744:2:18",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14717:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "14717:6:18"
																},
																"nativeSrc": "14717:30:18",
																"nodeType": "YulFunctionCall",
																"src": "14717:30:18"
															},
															"nativeSrc": "14717:30:18",
															"nodeType": "YulExpressionStatement",
															"src": "14717:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "14767:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "14767:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "14778:2:18",
																				"nodeType": "YulLiteral",
																				"src": "14778:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "14763:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "14763:3:18"
																		},
																		"nativeSrc": "14763:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "14763:18:18"
																	},
																	{
																		"hexValue": "5061757361626c653a20706175736564",
																		"kind": "string",
																		"nativeSrc": "14783:18:18",
																		"nodeType": "YulLiteral",
																		"src": "14783:18:18",
																		"type": "",
																		"value": "Pausable: paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "14756:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "14756:6:18"
																},
																"nativeSrc": "14756:46:18",
																"nodeType": "YulFunctionCall",
																"src": "14756:46:18"
															},
															"nativeSrc": "14756:46:18",
															"nodeType": "YulExpressionStatement",
															"src": "14756:46:18"
														},
														{
															"nativeSrc": "14811:26:18",
															"nodeType": "YulAssignment",
															"src": "14811:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14823:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "14823:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "14834:2:18",
																		"nodeType": "YulLiteral",
																		"src": "14834:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14819:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "14819:3:18"
																},
																"nativeSrc": "14819:18:18",
																"nodeType": "YulFunctionCall",
																"src": "14819:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14811:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "14811:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "14503:340:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14654:9:18",
														"nodeType": "YulTypedName",
														"src": "14654:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14668:4:18",
														"nodeType": "YulTypedName",
														"src": "14668:4:18",
														"type": ""
													}
												],
												"src": "14503:340:18"
											},
											{
												"body": {
													"nativeSrc": "14977:145:18",
													"nodeType": "YulBlock",
													"src": "14977:145:18",
													"statements": [
														{
															"nativeSrc": "14987:26:18",
															"nodeType": "YulAssignment",
															"src": "14987:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "14999:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "14999:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15010:2:18",
																		"nodeType": "YulLiteral",
																		"src": "15010:2:18",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "14995:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "14995:3:18"
																},
																"nativeSrc": "14995:18:18",
																"nodeType": "YulFunctionCall",
																"src": "14995:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "14987:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "14987:4:18"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15029:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "15029:9:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "15044:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "15044:6:18"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "15060:3:18",
																								"nodeType": "YulLiteral",
																								"src": "15060:3:18",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "15065:1:18",
																								"nodeType": "YulLiteral",
																								"src": "15065:1:18",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "15056:3:18",
																							"nodeType": "YulIdentifier",
																							"src": "15056:3:18"
																						},
																						"nativeSrc": "15056:11:18",
																						"nodeType": "YulFunctionCall",
																						"src": "15056:11:18"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "15069:1:18",
																						"nodeType": "YulLiteral",
																						"src": "15069:1:18",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "15052:3:18",
																					"nodeType": "YulIdentifier",
																					"src": "15052:3:18"
																				},
																				"nativeSrc": "15052:19:18",
																				"nodeType": "YulFunctionCall",
																				"src": "15052:19:18"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "15040:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "15040:3:18"
																		},
																		"nativeSrc": "15040:32:18",
																		"nodeType": "YulFunctionCall",
																		"src": "15040:32:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15022:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "15022:6:18"
																},
																"nativeSrc": "15022:51:18",
																"nodeType": "YulFunctionCall",
																"src": "15022:51:18"
															},
															"nativeSrc": "15022:51:18",
															"nodeType": "YulExpressionStatement",
															"src": "15022:51:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15093:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "15093:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15104:2:18",
																				"nodeType": "YulLiteral",
																				"src": "15104:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15089:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "15089:3:18"
																		},
																		"nativeSrc": "15089:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "15089:18:18"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "15109:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "15109:6:18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15082:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "15082:6:18"
																},
																"nativeSrc": "15082:34:18",
																"nodeType": "YulFunctionCall",
																"src": "15082:34:18"
															},
															"nativeSrc": "15082:34:18",
															"nodeType": "YulExpressionStatement",
															"src": "15082:34:18"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "14848:274:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "14938:9:18",
														"nodeType": "YulTypedName",
														"src": "14938:9:18",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "14949:6:18",
														"nodeType": "YulTypedName",
														"src": "14949:6:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "14957:6:18",
														"nodeType": "YulTypedName",
														"src": "14957:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "14968:4:18",
														"nodeType": "YulTypedName",
														"src": "14968:4:18",
														"type": ""
													}
												],
												"src": "14848:274:18"
											},
											{
												"body": {
													"nativeSrc": "15301:170:18",
													"nodeType": "YulBlock",
													"src": "15301:170:18",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15318:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "15318:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15329:2:18",
																		"nodeType": "YulLiteral",
																		"src": "15329:2:18",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15311:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "15311:6:18"
																},
																"nativeSrc": "15311:21:18",
																"nodeType": "YulFunctionCall",
																"src": "15311:21:18"
															},
															"nativeSrc": "15311:21:18",
															"nodeType": "YulExpressionStatement",
															"src": "15311:21:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15352:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "15352:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15363:2:18",
																				"nodeType": "YulLiteral",
																				"src": "15363:2:18",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15348:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "15348:3:18"
																		},
																		"nativeSrc": "15348:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "15348:18:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15368:2:18",
																		"nodeType": "YulLiteral",
																		"src": "15368:2:18",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15341:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "15341:6:18"
																},
																"nativeSrc": "15341:30:18",
																"nodeType": "YulFunctionCall",
																"src": "15341:30:18"
															},
															"nativeSrc": "15341:30:18",
															"nodeType": "YulExpressionStatement",
															"src": "15341:30:18"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "15391:9:18",
																				"nodeType": "YulIdentifier",
																				"src": "15391:9:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15402:2:18",
																				"nodeType": "YulLiteral",
																				"src": "15402:2:18",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15387:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "15387:3:18"
																		},
																		"nativeSrc": "15387:18:18",
																		"nodeType": "YulFunctionCall",
																		"src": "15387:18:18"
																	},
																	{
																		"hexValue": "5061757361626c653a206e6f7420706175736564",
																		"kind": "string",
																		"nativeSrc": "15407:22:18",
																		"nodeType": "YulLiteral",
																		"src": "15407:22:18",
																		"type": "",
																		"value": "Pausable: not paused"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15380:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "15380:6:18"
																},
																"nativeSrc": "15380:50:18",
																"nodeType": "YulFunctionCall",
																"src": "15380:50:18"
															},
															"nativeSrc": "15380:50:18",
															"nodeType": "YulExpressionStatement",
															"src": "15380:50:18"
														},
														{
															"nativeSrc": "15439:26:18",
															"nodeType": "YulAssignment",
															"src": "15439:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "15451:9:18",
																		"nodeType": "YulIdentifier",
																		"src": "15451:9:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15462:2:18",
																		"nodeType": "YulLiteral",
																		"src": "15462:2:18",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15447:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "15447:3:18"
																},
																"nativeSrc": "15447:18:18",
																"nodeType": "YulFunctionCall",
																"src": "15447:18:18"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "15439:4:18",
																	"nodeType": "YulIdentifier",
																	"src": "15439:4:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "15127:344:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "15278:9:18",
														"nodeType": "YulTypedName",
														"src": "15278:9:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "15292:4:18",
														"nodeType": "YulTypedName",
														"src": "15292:4:18",
														"type": ""
													}
												],
												"src": "15127:344:18"
											},
											{
												"body": {
													"nativeSrc": "15613:164:18",
													"nodeType": "YulBlock",
													"src": "15613:164:18",
													"statements": [
														{
															"nativeSrc": "15623:27:18",
															"nodeType": "YulVariableDeclaration",
															"src": "15623:27:18",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "15643:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "15643:6:18"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "15637:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "15637:5:18"
																},
																"nativeSrc": "15637:13:18",
																"nodeType": "YulFunctionCall",
																"src": "15637:13:18"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "15627:6:18",
																	"nodeType": "YulTypedName",
																	"src": "15627:6:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15665:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "15665:3:18"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "15674:6:18",
																				"nodeType": "YulIdentifier",
																				"src": "15674:6:18"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "15682:4:18",
																				"nodeType": "YulLiteral",
																				"src": "15682:4:18",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "15670:3:18",
																			"nodeType": "YulIdentifier",
																			"src": "15670:3:18"
																		},
																		"nativeSrc": "15670:17:18",
																		"nodeType": "YulFunctionCall",
																		"src": "15670:17:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "15689:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "15689:6:18"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "15659:5:18",
																	"nodeType": "YulIdentifier",
																	"src": "15659:5:18"
																},
																"nativeSrc": "15659:37:18",
																"nodeType": "YulFunctionCall",
																"src": "15659:37:18"
															},
															"nativeSrc": "15659:37:18",
															"nodeType": "YulExpressionStatement",
															"src": "15659:37:18"
														},
														{
															"nativeSrc": "15705:26:18",
															"nodeType": "YulVariableDeclaration",
															"src": "15705:26:18",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "15719:3:18",
																		"nodeType": "YulIdentifier",
																		"src": "15719:3:18"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "15724:6:18",
																		"nodeType": "YulIdentifier",
																		"src": "15724:6:18"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "15715:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "15715:3:18"
																},
																"nativeSrc": "15715:16:18",
																"nodeType": "YulFunctionCall",
																"src": "15715:16:18"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "15709:2:18",
																	"nodeType": "YulTypedName",
																	"src": "15709:2:18",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "15747:2:18",
																		"nodeType": "YulIdentifier",
																		"src": "15747:2:18"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "15751:1:18",
																		"nodeType": "YulLiteral",
																		"src": "15751:1:18",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "15740:6:18",
																	"nodeType": "YulIdentifier",
																	"src": "15740:6:18"
																},
																"nativeSrc": "15740:13:18",
																"nodeType": "YulFunctionCall",
																"src": "15740:13:18"
															},
															"nativeSrc": "15740:13:18",
															"nodeType": "YulExpressionStatement",
															"src": "15740:13:18"
														},
														{
															"nativeSrc": "15762:9:18",
															"nodeType": "YulAssignment",
															"src": "15762:9:18",
															"value": {
																"name": "_1",
																"nativeSrc": "15769:2:18",
																"nodeType": "YulIdentifier",
																"src": "15769:2:18"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "15762:3:18",
																	"nodeType": "YulIdentifier",
																	"src": "15762:3:18"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "15476:301:18",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "15589:3:18",
														"nodeType": "YulTypedName",
														"src": "15589:3:18",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "15594:6:18",
														"nodeType": "YulTypedName",
														"src": "15594:6:18",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "15605:3:18",
														"nodeType": "YulTypedName",
														"src": "15605:3:18",
														"type": ""
													}
												],
												"src": "15476:301:18"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_bytes(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(0, 0) }\n        let _1 := calldataload(offset)\n        let _2 := 0xffffffffffffffff\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(0, 0) }\n        calldatacopy(add(memPtr, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(memPtr, _1), 0x20), 0)\n        array := memPtr\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value1 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        mcopy(add(pos, 0x20), add(value, 0x20), length)\n        mstore(add(add(pos, length), 0x20), 0)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_t_address_t_uint256_t_bytes_memory_ptr_t_bool_t_uint256__to_t_address_t_uint256_t_bytes_memory_ptr_t_bool_t_uint256__fromStack_reversed(headStart, value4, value3, value2, value1, value0) -> tail\n    {\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), 160)\n        tail := abi_encode_bytes(value2, add(headStart, 160))\n        mstore(add(headStart, 96), iszero(iszero(value3)))\n        mstore(add(headStart, 128), value4)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_bytes(value0, add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_uint256t_bytes_memory_ptr(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n        let offset := calldataload(add(headStart, 64))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        value2 := abi_decode_bytes(add(headStart, offset), dataEnd)\n    }\n    function abi_encode_tuple_t_stringliteral_5f53099e044b88c99cc014ede5713cfdba96d95b088c34d5fa4406866af6c250__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 12)\n        mstore(add(headStart, 64), \"Not an admin\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_cb323e46bbcca91e157c2b50ad4ce2acbe1153338b838c84372d5723b8995ef0__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 26)\n        mstore(add(headStart, 64), \"Transaction does not exist\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x32()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n    function abi_encode_tuple_t_stringliteral_3c3f7cf602281cf7a98efd78d98ba46309975dadee18bcb57e640145699bd800__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 28)\n        mstore(add(headStart, 64), \"Transaction already executed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_e3d0a597e455a5df21f74650a7518ab8d226371e3763bb9c00413fb3af8193f2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"Transaction not confirmed\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 21)\n        mstore(add(headStart, 64), \"Token transfer failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_1f983d08a8c5ff4ffa11b495317acc03b08c5d01aeba8602c5a3a648ea98755b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"No tokens staked\")\n        tail := add(headStart, 96)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_c00ff6506fc53457ae4202871882703dada01c533275bb259e2cd12acaf31a69__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"Transaction already confirmed\")\n        tail := add(headStart, 96)\n    }\n    function array_dataslot_bytes_storage(ptr) -> data\n    {\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n    }\n    function clean_up_bytearray_end_slots_bytes_storage(array, len, startIndex)\n    {\n        if gt(len, 31)\n        {\n            mstore(0, array)\n            let data := keccak256(0, 0x20)\n            let deleteStart := add(data, shr(5, add(startIndex, 31)))\n            if lt(startIndex, 0x20) { deleteStart := data }\n            let _1 := add(data, shr(5, add(len, 31)))\n            let start := deleteStart\n            for { } lt(start, _1) { start := add(start, 1) }\n            { sstore(start, 0) }\n        }\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used\n    {\n        used := or(and(data, not(shr(shl(3, len), not(0)))), shl(1, len))\n    }\n    function copy_byte_array_to_storage_from_t_bytes_memory_ptr_to_t_bytes_storage(slot, src)\n    {\n        let newLen := mload(src)\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n        clean_up_bytearray_end_slots_bytes_storage(slot, extract_byte_array_length(sload(slot)), newLen)\n        let srcOffset := 0\n        let srcOffset_1 := 0x20\n        srcOffset := 0x20\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(31))\n            let dstPtr := array_dataslot_bytes_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, srcOffset_1) }\n            {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, srcOffset_1)\n            }\n            if lt(loopEnd, newLen)\n            {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, and(lastValue, not(shr(and(shl(3, newLen), 248), not(0)))))\n            }\n            sstore(slot, add(shl(1, newLen), 1))\n        }\n        default {\n            let value := 0\n            if newLen\n            {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n    function abi_encode_tuple_t_stringliteral_7e54dddc19fe041cd2ab5a676b9022929cd57fae1ef2ef044dff489da7dfdd60__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Cannot execute tx\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_bytes_storage__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let ret := 0\n        let slotValue := sload(value0)\n        let length := extract_byte_array_length(slotValue)\n        let _1 := 1\n        switch and(slotValue, 1)\n        case 0 {\n            mstore(pos, and(slotValue, not(255)))\n            ret := add(pos, mul(length, iszero(iszero(length))))\n        }\n        case 1 {\n            mstore(0, value0)\n            let _2 := 0x20\n            let dataPos := keccak256(0, 0x20)\n            let i := 0\n            for { } lt(i, length) { i := add(i, _2) }\n            {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, _1)\n            }\n            ret := add(pos, length)\n        }\n        end := ret\n    }\n    function abi_encode_tuple_t_stringliteral_c49f60e918d4d07c4337a420c2afcf7054eea7f9d81d8862809229abad6c8588__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Transaction failed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Pausable: paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Pausable: not paused\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        mcopy(pos, add(value0, 0x20), length)\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n}",
									"id": 18,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"636": [
									{
										"length": 32,
										"start": 5199
									},
									{
										"length": 32,
										"start": 5240
									},
									{
										"length": 32,
										"start": 5595
									}
								]
							},
							"linkReferences": {},
							"object": "6080604052600436106101b2575f3560e01c806382e717f7116100e7578063c01a8c8411610087578063d547741f11610062578063d547741f146104db578063e63ab1e9146104fa578063ee22610b1461051a578063f72c0d8b14610539575f80fd5b8063c01a8c8414610488578063c63a6ad2146104a7578063c6427474146104bc575f80fd5b80639ace38c2116100c25780639ace38c2146103f4578063a217fddf14610424578063a5ce413b14610437578063ad3cb1cc1461044b575f80fd5b806382e717f7146103ac5780638456cb59146103c157806391d14854146103d5575f80fd5b80634f1ef286116101525780637547c7a31161012d5780637547c7a31461031557806375b238fc146103345780637a1ac61e1461035457806380f59a6514610373575f80fd5b80634f1ef286146102d857806352d1902d146102eb5780635c975abb146102ff575f80fd5b8063248a9ca31161018d578063248a9ca3146102595780632f2ff15d1461028657806336568abe146102a55780633f4ba83a146102c4575f80fd5b806301ffc9a7146101bd57806316934fc4146101f157806320ea8d8614610238575f80fd5b366101b957005b5f80fd5b3480156101c8575f80fd5b506101dc6101d7366004611960565b61056c565b60405190151581526020015b60405180910390f35b3480156101fc575f80fd5b5061022361020b3660046119a2565b60356020525f90815260409020805460019091015482565b604080519283526020830191909152016101e8565b348015610243575f80fd5b506102576102523660046119bb565b6105a2565b005b348015610264575f80fd5b506102786102733660046119bb565b610739565b6040519081526020016101e8565b348015610291575f80fd5b506102576102a03660046119d2565b610759565b3480156102b0575f80fd5b506102576102bf3660046119d2565b61077b565b3480156102cf575f80fd5b506102576107b3565b6102576102e6366004611a99565b6107d5565b3480156102f6575f80fd5b506102786107f4565b34801561030a575f80fd5b505f5460ff166101dc565b348015610320575f80fd5b5061025761032f3660046119bb565b61080f565b34801561033f575f80fd5b506102785f80516020611f5b83398151915281565b34801561035f575f80fd5b5061025761036e366004611ae4565b610936565b34801561037e575f80fd5b506101dc61038d3660046119d2565b603260209081525f928352604080842090915290825290205460ff1681565b3480156103b7575f80fd5b5061027860345481565b3480156103cc575f80fd5b50610257610ac5565b3480156103e0575f80fd5b506101dc6103ef3660046119d2565b610ae4565b3480156103ff575f80fd5b5061041361040e3660046119bb565b610b1a565b6040516101e8959493929190611b42565b34801561042f575f80fd5b506102785f81565b348015610442575f80fd5b50610257610bef565b348015610456575f80fd5b5061047b604051806040016040528060058152602001640352e302e360dc1b81525081565b6040516101e89190611b7c565b348015610493575f80fd5b506102576104a23660046119bb565b610dc6565b3480156104b2575f80fd5b5061027860365481565b3480156104c7575f80fd5b506102576104d6366004611b8e565b610f5a565b3480156104e6575f80fd5b506102576104f53660046119d2565b6110be565b348015610505575f80fd5b506102785f80516020611f1b83398151915281565b348015610525575f80fd5b506102576105343660046119bb565b6110da565b348015610544575f80fd5b506102787f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e381565b5f6001600160e01b03198216637965db0b60e01b148061059c57506301ffc9a760e01b6001600160e01b03198316145b92915050565b6105b95f80516020611f5b83398151915233610ae4565b6105de5760405162461bcd60e51b81526004016105d590611be1565b60405180910390fd5b603354819081106106015760405162461bcd60e51b81526004016105d590611c07565b816033818154811061061557610615611c3e565b5f91825260209091206003600590920201015460ff16156106485760405162461bcd60e51b81526004016105d590611c52565b5f6033848154811061065c5761065c611c3e565b5f91825260208083208784526032825260408085203386529092529220546005909102909101915060ff166106d35760405162461bcd60e51b815260206004820152601960248201527f5472616e73616374696f6e206e6f7420636f6e6669726d65640000000000000060448201526064016105d5565b6001816004015f8282546106e79190611c9d565b90915550505f848152603260209081526040808320338085529252808320805460ff191690555186927fe5c8875c5e14471f806f15f740cd9fd54937d151e9dcf8ad3ba988d6a285e67e91a350505050565b5f9081525f80516020611f3b833981519152602052604090206001015490565b61076282610739565b61076b816112cf565b61077583836112d9565b50505050565b6001600160a01b03811633146107a45760405163334bd91960e11b815260040160405180910390fd5b6107ae828261137a565b505050565b5f80516020611f1b8339815191526107ca816112cf565b6107d26113f3565b50565b6107dd611444565b6107e6826114ea565b6107f08282611514565b5050565b5f6107fd6115d0565b505f80516020611efb83398151915290565b610817611619565b6040516323b872dd60e01b81523360048201523060248201819052604482018390529081906323b872dd906064016020604051808303815f875af1158015610861573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108859190611cb0565b6108c95760405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b60448201526064016105d5565b604080518082018252838152426020808301828152335f8181526035845286902094518555905160019094019390935583518681529081019190915290917fdd2a19c3bdd089cbe77c04f5655f83de0504d6140d12c8667646f55d0557c4dc910160405180910390a25050565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff165f8115801561097b5750825b90505f8267ffffffffffffffff1660011480156109975750303b155b9050811580156109a5575080155b156109c35760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff1916600117855583156109ed57845460ff60401b1916600160401b1785555b6109f561165e565b6109fd611666565b610a0561165e565b610a0f5f896112d9565b50610a275f80516020611f1b833981519152896112d9565b50610a3f5f80516020611f5b833981519152896112d9565b50610a6a7f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3896112d9565b50603487905560368690558315610abb57845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b5050505050505050565b5f80516020611f1b833981519152610adc816112cf565b6107d2611676565b5f9182525f80516020611f3b833981519152602090815260408084206001600160a01b0393909316845291905290205460ff1690565b60338181548110610b29575f80fd5b5f9182526020909120600590910201805460018201546002830180546001600160a01b039093169450909291610b5e90611ccf565b80601f0160208091040260200160405190810160405280929190818152602001828054610b8a90611ccf565b8015610bd55780601f10610bac57610100808354040283529160200191610bd5565b820191905f5260205f20905b815481529060010190602001808311610bb857829003601f168201915b505050506003830154600490930154919260ff1691905085565b610bf7611619565b335f908152603560209081526040918290208251808401909352805480845260019091015491830191909152610c625760405162461bcd60e51b815260206004820152601060248201526f139bc81d1bdad95b9cc81cdd185ad95960821b60448201526064016105d5565b5f816020015142610c739190611c9d565b90505f6301e1338082603654855f0151610c8d9190611d07565b610c979190611d07565b610ca19190611d1e565b83519091503090819063a9059cbb903390610cbd908690611d3d565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015260248201526044016020604051808303815f875af1158015610d05573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610d299190611cb0565b610d6d5760405162461bcd60e51b8152602060048201526015602482015274151bdad95b881d1c985b9cd9995c8819985a5b1959605a1b60448201526064016105d5565b335f81815260356020908152604080832083815560010192909255865182519081529081018590527f6f2d3e000c89d37446b7c0374c0125068ff316d1e3ee302336478a8cd03c2336910160405180910390a250505050565b610ddd5f80516020611f5b83398151915233610ae4565b610df95760405162461bcd60e51b81526004016105d590611be1565b60335481908110610e1c5760405162461bcd60e51b81526004016105d590611c07565b8160338181548110610e3057610e30611c3e565b5f91825260209091206003600590920201015460ff1615610e635760405162461bcd60e51b81526004016105d590611c52565b5f838152603260209081526040808320338452909152902054839060ff1615610ece5760405162461bcd60e51b815260206004820152601d60248201527f5472616e73616374696f6e20616c726561647920636f6e6669726d656400000060448201526064016105d5565b5f60338581548110610ee257610ee2611c3e565b905f5260205f20906005020190506001816004015f828254610f049190611d3d565b90915550505f858152603260209081526040808320338085529252808320805460ff191660011790555187927ff8a17c9136a3ae33364fac05eb088a3cbafee10c1889c88593e20ee2d8e4eb8891a35050505050565b610f715f80516020611f5b83398151915233610ae4565b610f8d5760405162461bcd60e51b81526004016105d590611be1565b603380546040805160a0810182526001600160a01b038781168252602082018781529282018681525f60608401819052608084018190526001860187559590955281517f82a75bdeeae8604d839476ae9efd8b0e15aa447e21bfd7f41283bb54e22c9a826005860290810180546001600160a01b0319169290931691909117825592517f82a75bdeeae8604d839476ae9efd8b0e15aa447e21bfd7f41283bb54e22c9a8384015593519293909290917f82a75bdeeae8604d839476ae9efd8b0e15aa447e21bfd7f41283bb54e22c9a8401906110699082611d9b565b50606082015160038201805460ff191691151591909117905560809091015160049091015560405181907fd0b5d9eac097410294ec9f2cee7cd185cf31ab46babf3dfdbeac8b222b03f2d1905f90a250505050565b6110c782610739565b6110d0816112cf565b610775838361137a565b6110f15f80516020611f5b83398151915233610ae4565b61110d5760405162461bcd60e51b81526004016105d590611be1565b603354819081106111305760405162461bcd60e51b81526004016105d590611c07565b816033818154811061114457611144611c3e565b5f91825260209091206003600590920201015460ff16156111775760405162461bcd60e51b81526004016105d590611c52565b5f6033848154811061118b5761118b611c3e565b905f5260205f2090600502019050603454816004015410156111e35760405162461bcd60e51b8152602060048201526011602482015270086c2dcdcdee840caf0cac6eae8ca40e8f607b1b60448201526064016105d5565b60038101805460ff191660019081179091558154908201546040515f926001600160a01b03169190611219906002860190611e5b565b5f6040518083038185875af1925050503d805f8114611253576040519150601f19603f3d011682016040523d82523d5f602084013e611258565b606091505b505090508061129e5760405162461bcd60e51b8152602060048201526012602482015271151c985b9cd858dd1a5bdb8819985a5b195960721b60448201526064016105d5565b60405185907f15ed165a284872ea7017f03df402a0cadfbfab588320ffaf83f160c2f82781c7905f90a25050505050565b6107d281336116b2565b5f5f80516020611f3b8339815191526112f28484610ae4565b611371575f848152602082815260408083206001600160a01b03871684529091529020805460ff191660011790556113273390565b6001600160a01b0316836001600160a01b0316857f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4600191505061059c565b5f91505061059c565b5f5f80516020611f3b8339815191526113938484610ae4565b15611371575f848152602082815260408083206001600160a01b0387168085529252808320805460ff1916905551339287917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a4600191505061059c565b6113fb6116eb565b5f805460ff191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b306001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614806114ca57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166114be5f80516020611efb833981519152546001600160a01b031690565b6001600160a01b031614155b156114e85760405163703e46dd60e11b815260040160405180910390fd5b565b7f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e36107f0816112cf565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa92505050801561156e575060408051601f3d908101601f1916820190925261156b91810190611ecd565b60015b61159657604051634c9c8ce360e01b81526001600160a01b03831660048201526024016105d5565b5f80516020611efb83398151915281146115c657604051632a87526960e21b8152600481018290526024016105d5565b6107ae8383611733565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146114e85760405163703e46dd60e11b815260040160405180910390fd5b5f5460ff16156114e85760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b60448201526064016105d5565b6114e8611788565b61166e611788565b6114e86117d1565b61167e611619565b5f805460ff191660011790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a2586114273390565b6116bc8282610ae4565b6107f05760405163e2517d3f60e01b81526001600160a01b0382166004820152602481018390526044016105d5565b5f5460ff166114e85760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016105d5565b61173c826117e4565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a2805115611780576107ae8282611847565b6107f06118b9565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff166114e857604051631afcd79f60e31b815260040160405180910390fd5b6117d9611788565b5f805460ff19169055565b806001600160a01b03163b5f0361181957604051634c9c8ce360e01b81526001600160a01b03821660048201526024016105d5565b5f80516020611efb83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b60605f80846001600160a01b0316846040516118639190611ee4565b5f60405180830381855af49150503d805f811461189b576040519150601f19603f3d011682016040523d82523d5f602084013e6118a0565b606091505b50915091506118b08583836118d8565b95945050505050565b34156114e85760405163b398979f60e01b815260040160405180910390fd5b6060826118ed576118e882611937565b611930565b815115801561190457506001600160a01b0384163b155b1561192d57604051639996b31560e01b81526001600160a01b03851660048201526024016105d5565b50805b9392505050565b8051156119475780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b5f60208284031215611970575f80fd5b81356001600160e01b031981168114611930575f80fd5b80356001600160a01b038116811461199d575f80fd5b919050565b5f602082840312156119b2575f80fd5b61193082611987565b5f602082840312156119cb575f80fd5b5035919050565b5f80604083850312156119e3575f80fd5b823591506119f360208401611987565b90509250929050565b634e487b7160e01b5f52604160045260245ffd5b5f82601f830112611a1f575f80fd5b813567ffffffffffffffff80821115611a3a57611a3a6119fc565b604051601f8301601f19908116603f01168101908282118183101715611a6257611a626119fc565b81604052838152866020858801011115611a7a575f80fd5b836020870160208301375f602085830101528094505050505092915050565b5f8060408385031215611aaa575f80fd5b611ab383611987565b9150602083013567ffffffffffffffff811115611ace575f80fd5b611ada85828601611a10565b9150509250929050565b5f805f60608486031215611af6575f80fd5b611aff84611987565b95602085013595506040909401359392505050565b5f81518084528060208401602086015e5f602082860101526020601f19601f83011685010191505092915050565b60018060a01b038616815284602082015260a060408201525f611b6860a0830186611b14565b931515606083015250608001529392505050565b602081525f6119306020830184611b14565b5f805f60608486031215611ba0575f80fd5b611ba984611987565b925060208401359150604084013567ffffffffffffffff811115611bcb575f80fd5b611bd786828701611a10565b9150509250925092565b6020808252600c908201526b2737ba1030b71030b236b4b760a11b604082015260600190565b6020808252601a908201527f5472616e73616374696f6e20646f6573206e6f74206578697374000000000000604082015260600190565b634e487b7160e01b5f52603260045260245ffd5b6020808252601c908201527f5472616e73616374696f6e20616c726561647920657865637574656400000000604082015260600190565b634e487b7160e01b5f52601160045260245ffd5b8181038181111561059c5761059c611c89565b5f60208284031215611cc0575f80fd5b81518015158114611930575f80fd5b600181811c90821680611ce357607f821691505b602082108103611d0157634e487b7160e01b5f52602260045260245ffd5b50919050565b808202811582820484141761059c5761059c611c89565b5f82611d3857634e487b7160e01b5f52601260045260245ffd5b500490565b8082018082111561059c5761059c611c89565b601f8211156107ae57805f5260205f20601f840160051c81016020851015611d755750805b601f840160051c820191505b81811015611d94575f8155600101611d81565b5050505050565b815167ffffffffffffffff811115611db557611db56119fc565b611dc981611dc38454611ccf565b84611d50565b602080601f831160018114611dfc575f8415611de55750858301515b5f19600386901b1c1916600185901b178555611e53565b5f85815260208120601f198616915b82811015611e2a57888601518255948401946001909101908401611e0b565b5085821015611e4757878501515f19600388901b60f8161c191681555b505060018460011b0185555b505050505050565b5f808354611e6881611ccf565b60018281168015611e805760018114611e9557611ec1565b60ff1984168752821515830287019450611ec1565b875f526020805f205f5b85811015611eb85781548a820152908401908201611e9f565b50505082870194505b50929695505050505050565b5f60208284031215611edd575f80fd5b5051919050565b5f82518060208501845e5f92019182525091905056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775a2646970667358221220e641ad3c449ccb231cc153557173105ee11a6d50f55d942a6471de7513fbb93864736f6c63430008190033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1B2 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x82E717F7 GT PUSH2 0xE7 JUMPI DUP1 PUSH4 0xC01A8C84 GT PUSH2 0x87 JUMPI DUP1 PUSH4 0xD547741F GT PUSH2 0x62 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x4DB JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x4FA JUMPI DUP1 PUSH4 0xEE22610B EQ PUSH2 0x51A JUMPI DUP1 PUSH4 0xF72C0D8B EQ PUSH2 0x539 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC01A8C84 EQ PUSH2 0x488 JUMPI DUP1 PUSH4 0xC63A6AD2 EQ PUSH2 0x4A7 JUMPI DUP1 PUSH4 0xC6427474 EQ PUSH2 0x4BC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x9ACE38C2 GT PUSH2 0xC2 JUMPI DUP1 PUSH4 0x9ACE38C2 EQ PUSH2 0x3F4 JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x424 JUMPI DUP1 PUSH4 0xA5CE413B EQ PUSH2 0x437 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x44B JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x82E717F7 EQ PUSH2 0x3AC JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x3C1 JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x3D5 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4F1EF286 GT PUSH2 0x152 JUMPI DUP1 PUSH4 0x7547C7A3 GT PUSH2 0x12D JUMPI DUP1 PUSH4 0x7547C7A3 EQ PUSH2 0x315 JUMPI DUP1 PUSH4 0x75B238FC EQ PUSH2 0x334 JUMPI DUP1 PUSH4 0x7A1AC61E EQ PUSH2 0x354 JUMPI DUP1 PUSH4 0x80F59A65 EQ PUSH2 0x373 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x2D8 JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x2EB JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x2FF JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x248A9CA3 GT PUSH2 0x18D JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x259 JUMPI DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x286 JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x2A5 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x2C4 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1BD JUMPI DUP1 PUSH4 0x16934FC4 EQ PUSH2 0x1F1 JUMPI DUP1 PUSH4 0x20EA8D86 EQ PUSH2 0x238 JUMPI PUSH0 DUP1 REVERT JUMPDEST CALLDATASIZE PUSH2 0x1B9 JUMPI STOP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1C8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DC PUSH2 0x1D7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1960 JUMP JUMPDEST PUSH2 0x56C JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1FC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x223 PUSH2 0x20B CALLDATASIZE PUSH1 0x4 PUSH2 0x19A2 JUMP JUMPDEST PUSH1 0x35 PUSH1 0x20 MSTORE PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD DUP3 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x1E8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x243 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0x252 CALLDATASIZE PUSH1 0x4 PUSH2 0x19BB JUMP JUMPDEST PUSH2 0x5A2 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x264 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x278 PUSH2 0x273 CALLDATASIZE PUSH1 0x4 PUSH2 0x19BB JUMP JUMPDEST PUSH2 0x739 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1E8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x291 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0x2A0 CALLDATASIZE PUSH1 0x4 PUSH2 0x19D2 JUMP JUMPDEST PUSH2 0x759 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2B0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0x2BF CALLDATASIZE PUSH1 0x4 PUSH2 0x19D2 JUMP JUMPDEST PUSH2 0x77B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2CF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0x7B3 JUMP JUMPDEST PUSH2 0x257 PUSH2 0x2E6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1A99 JUMP JUMPDEST PUSH2 0x7D5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2F6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x278 PUSH2 0x7F4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH1 0xFF AND PUSH2 0x1DC JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x320 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0x32F CALLDATASIZE PUSH1 0x4 PUSH2 0x19BB JUMP JUMPDEST PUSH2 0x80F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x278 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F5B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x35F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0x36E CALLDATASIZE PUSH1 0x4 PUSH2 0x1AE4 JUMP JUMPDEST PUSH2 0x936 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37E JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DC PUSH2 0x38D CALLDATASIZE PUSH1 0x4 PUSH2 0x19D2 JUMP JUMPDEST PUSH1 0x32 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH0 SWAP3 DUP4 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 SWAP1 SWAP2 MSTORE SWAP1 DUP3 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x278 PUSH1 0x34 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3CC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0xAC5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3E0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1DC PUSH2 0x3EF CALLDATASIZE PUSH1 0x4 PUSH2 0x19D2 JUMP JUMPDEST PUSH2 0xAE4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3FF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x413 PUSH2 0x40E CALLDATASIZE PUSH1 0x4 PUSH2 0x19BB JUMP JUMPDEST PUSH2 0xB1A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E8 SWAP6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x1B42 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x278 PUSH0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x442 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0xBEF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x456 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x47B PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x352E302E3 PUSH1 0xDC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E8 SWAP2 SWAP1 PUSH2 0x1B7C JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x493 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0x4A2 CALLDATASIZE PUSH1 0x4 PUSH2 0x19BB JUMP JUMPDEST PUSH2 0xDC6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4B2 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x278 PUSH1 0x36 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0x4D6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1B8E JUMP JUMPDEST PUSH2 0xF5A JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4E6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0x4F5 CALLDATASIZE PUSH1 0x4 PUSH2 0x19D2 JUMP JUMPDEST PUSH2 0x10BE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x505 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x278 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F1B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x525 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x257 PUSH2 0x534 CALLDATASIZE PUSH1 0x4 PUSH2 0x19BB JUMP JUMPDEST PUSH2 0x10DA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x544 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x278 PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x59C JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x5B9 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F5B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xAE4 JUMP JUMPDEST PUSH2 0x5DE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D5 SWAP1 PUSH2 0x1BE1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x33 SLOAD DUP2 SWAP1 DUP2 LT PUSH2 0x601 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D5 SWAP1 PUSH2 0x1C07 JUMP JUMPDEST DUP2 PUSH1 0x33 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x615 JUMPI PUSH2 0x615 PUSH2 0x1C3E JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 PUSH1 0x5 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x648 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D5 SWAP1 PUSH2 0x1C52 JUMP JUMPDEST PUSH0 PUSH1 0x33 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x65C JUMPI PUSH2 0x65C PUSH2 0x1C3E JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 KECCAK256 DUP8 DUP5 MSTORE PUSH1 0x32 DUP3 MSTORE PUSH1 0x40 DUP1 DUP6 KECCAK256 CALLER DUP7 MSTORE SWAP1 SWAP3 MSTORE SWAP3 KECCAK256 SLOAD PUSH1 0x5 SWAP1 SWAP2 MUL SWAP1 SWAP2 ADD SWAP2 POP PUSH1 0xFF AND PUSH2 0x6D3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73616374696F6E206E6F7420636F6E6669726D656400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D5 JUMP JUMPDEST PUSH1 0x1 DUP2 PUSH1 0x4 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x6E7 SWAP2 SWAP1 PUSH2 0x1C9D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH0 DUP5 DUP2 MSTORE PUSH1 0x32 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD DUP7 SWAP3 PUSH32 0xE5C8875C5E14471F806F15F740CD9FD54937D151E9DCF8AD3BA988D6A285E67E SWAP2 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F3B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x762 DUP3 PUSH2 0x739 JUMP JUMPDEST PUSH2 0x76B DUP2 PUSH2 0x12CF JUMP JUMPDEST PUSH2 0x775 DUP4 DUP4 PUSH2 0x12D9 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x7A4 JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x7AE DUP3 DUP3 PUSH2 0x137A JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F1B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x7CA DUP2 PUSH2 0x12CF JUMP JUMPDEST PUSH2 0x7D2 PUSH2 0x13F3 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x7DD PUSH2 0x1444 JUMP JUMPDEST PUSH2 0x7E6 DUP3 PUSH2 0x14EA JUMP JUMPDEST PUSH2 0x7F0 DUP3 DUP3 PUSH2 0x1514 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH0 PUSH2 0x7FD PUSH2 0x15D0 JUMP JUMPDEST POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1EFB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH2 0x817 PUSH2 0x1619 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE ADDRESS PUSH1 0x24 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x44 DUP3 ADD DUP4 SWAP1 MSTORE SWAP1 DUP2 SWAP1 PUSH4 0x23B872DD SWAP1 PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x861 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x885 SWAP2 SWAP1 PUSH2 0x1CB0 JUMP JUMPDEST PUSH2 0x8C9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x151BDAD95B881D1C985B9CD9995C8819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D5 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE DUP4 DUP2 MSTORE TIMESTAMP PUSH1 0x20 DUP1 DUP4 ADD DUP3 DUP2 MSTORE CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x35 DUP5 MSTORE DUP7 SWAP1 KECCAK256 SWAP5 MLOAD DUP6 SSTORE SWAP1 MLOAD PUSH1 0x1 SWAP1 SWAP5 ADD SWAP4 SWAP1 SWAP4 SSTORE DUP4 MLOAD DUP7 DUP2 MSTORE SWAP1 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP1 SWAP2 PUSH32 0xDD2A19C3BDD089CBE77C04F5655F83DE0504D6140D12C8667646F55D0557C4DC SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x97B JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x997 JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x9A5 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x9C3 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x9ED JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0x9F5 PUSH2 0x165E JUMP JUMPDEST PUSH2 0x9FD PUSH2 0x1666 JUMP JUMPDEST PUSH2 0xA05 PUSH2 0x165E JUMP JUMPDEST PUSH2 0xA0F PUSH0 DUP10 PUSH2 0x12D9 JUMP JUMPDEST POP PUSH2 0xA27 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F1B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP10 PUSH2 0x12D9 JUMP JUMPDEST POP PUSH2 0xA3F PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F5B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP10 PUSH2 0x12D9 JUMP JUMPDEST POP PUSH2 0xA6A PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 DUP10 PUSH2 0x12D9 JUMP JUMPDEST POP PUSH1 0x34 DUP8 SWAP1 SSTORE PUSH1 0x36 DUP7 SWAP1 SSTORE DUP4 ISZERO PUSH2 0xABB JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F1B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xADC DUP2 PUSH2 0x12CF JUMP JUMPDEST PUSH2 0x7D2 PUSH2 0x1676 JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F3B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH1 0x33 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xB29 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x5 SWAP1 SWAP2 MUL ADD DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD PUSH1 0x2 DUP4 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP4 AND SWAP5 POP SWAP1 SWAP3 SWAP2 PUSH2 0xB5E SWAP1 PUSH2 0x1CCF JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xB8A SWAP1 PUSH2 0x1CCF JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBD5 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBAC JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBD5 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBB8 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP PUSH1 0x3 DUP4 ADD SLOAD PUSH1 0x4 SWAP1 SWAP4 ADD SLOAD SWAP2 SWAP3 PUSH1 0xFF AND SWAP2 SWAP1 POP DUP6 JUMP JUMPDEST PUSH2 0xBF7 PUSH2 0x1619 JUMP JUMPDEST CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x35 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP2 DUP3 SWAP1 KECCAK256 DUP3 MLOAD DUP1 DUP5 ADD SWAP1 SWAP4 MSTORE DUP1 SLOAD DUP1 DUP5 MSTORE PUSH1 0x1 SWAP1 SWAP2 ADD SLOAD SWAP2 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH2 0xC62 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x139BC81D1BDAD95B9CC81CDD185AD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D5 JUMP JUMPDEST PUSH0 DUP2 PUSH1 0x20 ADD MLOAD TIMESTAMP PUSH2 0xC73 SWAP2 SWAP1 PUSH2 0x1C9D JUMP JUMPDEST SWAP1 POP PUSH0 PUSH4 0x1E13380 DUP3 PUSH1 0x36 SLOAD DUP6 PUSH0 ADD MLOAD PUSH2 0xC8D SWAP2 SWAP1 PUSH2 0x1D07 JUMP JUMPDEST PUSH2 0xC97 SWAP2 SWAP1 PUSH2 0x1D07 JUMP JUMPDEST PUSH2 0xCA1 SWAP2 SWAP1 PUSH2 0x1D1E JUMP JUMPDEST DUP4 MLOAD SWAP1 SWAP2 POP ADDRESS SWAP1 DUP2 SWAP1 PUSH4 0xA9059CBB SWAP1 CALLER SWAP1 PUSH2 0xCBD SWAP1 DUP7 SWAP1 PUSH2 0x1D3D JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xD05 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xD29 SWAP2 SWAP1 PUSH2 0x1CB0 JUMP JUMPDEST PUSH2 0xD6D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x15 PUSH1 0x24 DUP3 ADD MSTORE PUSH21 0x151BDAD95B881D1C985B9CD9995C8819985A5B1959 PUSH1 0x5A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D5 JUMP JUMPDEST CALLER PUSH0 DUP2 DUP2 MSTORE PUSH1 0x35 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 DUP4 DUP2 SSTORE PUSH1 0x1 ADD SWAP3 SWAP1 SWAP3 SSTORE DUP7 MLOAD DUP3 MLOAD SWAP1 DUP2 MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE PUSH32 0x6F2D3E000C89D37446B7C0374C0125068FF316D1E3EE302336478A8CD03C2336 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH2 0xDDD PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F5B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xAE4 JUMP JUMPDEST PUSH2 0xDF9 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D5 SWAP1 PUSH2 0x1BE1 JUMP JUMPDEST PUSH1 0x33 SLOAD DUP2 SWAP1 DUP2 LT PUSH2 0xE1C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D5 SWAP1 PUSH2 0x1C07 JUMP JUMPDEST DUP2 PUSH1 0x33 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xE30 JUMPI PUSH2 0xE30 PUSH2 0x1C3E JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 PUSH1 0x5 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0xE63 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D5 SWAP1 PUSH2 0x1C52 JUMP JUMPDEST PUSH0 DUP4 DUP2 MSTORE PUSH1 0x32 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 SLOAD DUP4 SWAP1 PUSH1 0xFF AND ISZERO PUSH2 0xECE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x5472616E73616374696F6E20616C726561647920636F6E6669726D6564000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D5 JUMP JUMPDEST PUSH0 PUSH1 0x33 DUP6 DUP2 SLOAD DUP2 LT PUSH2 0xEE2 JUMPI PUSH2 0xEE2 PUSH2 0x1C3E JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH1 0x1 DUP2 PUSH1 0x4 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xF04 SWAP2 SWAP1 PUSH2 0x1D3D JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH0 DUP6 DUP2 MSTORE PUSH1 0x32 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE MLOAD DUP8 SWAP3 PUSH32 0xF8A17C9136A3AE33364FAC05EB088A3CBAFEE10C1889C88593E20EE2D8E4EB88 SWAP2 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH2 0xF71 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F5B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xAE4 JUMP JUMPDEST PUSH2 0xF8D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D5 SWAP1 PUSH2 0x1BE1 JUMP JUMPDEST PUSH1 0x33 DUP1 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 DUP2 AND DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP8 DUP2 MSTORE SWAP3 DUP3 ADD DUP7 DUP2 MSTORE PUSH0 PUSH1 0x60 DUP5 ADD DUP2 SWAP1 MSTORE PUSH1 0x80 DUP5 ADD DUP2 SWAP1 MSTORE PUSH1 0x1 DUP7 ADD DUP8 SSTORE SWAP6 SWAP1 SWAP6 MSTORE DUP2 MLOAD PUSH32 0x82A75BDEEAE8604D839476AE9EFD8B0E15AA447E21BFD7F41283BB54E22C9A82 PUSH1 0x5 DUP7 MUL SWAP1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP3 SWAP1 SWAP4 AND SWAP2 SWAP1 SWAP2 OR DUP3 SSTORE SWAP3 MLOAD PUSH32 0x82A75BDEEAE8604D839476AE9EFD8B0E15AA447E21BFD7F41283BB54E22C9A83 DUP5 ADD SSTORE SWAP4 MLOAD SWAP3 SWAP4 SWAP1 SWAP3 SWAP1 SWAP2 PUSH32 0x82A75BDEEAE8604D839476AE9EFD8B0E15AA447E21BFD7F41283BB54E22C9A84 ADD SWAP1 PUSH2 0x1069 SWAP1 DUP3 PUSH2 0x1D9B JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH1 0x80 SWAP1 SWAP2 ADD MLOAD PUSH1 0x4 SWAP1 SWAP2 ADD SSTORE PUSH1 0x40 MLOAD DUP2 SWAP1 PUSH32 0xD0B5D9EAC097410294EC9F2CEE7CD185CF31AB46BABF3DFDBEAC8B222B03F2D1 SWAP1 PUSH0 SWAP1 LOG2 POP POP POP POP JUMP JUMPDEST PUSH2 0x10C7 DUP3 PUSH2 0x739 JUMP JUMPDEST PUSH2 0x10D0 DUP2 PUSH2 0x12CF JUMP JUMPDEST PUSH2 0x775 DUP4 DUP4 PUSH2 0x137A JUMP JUMPDEST PUSH2 0x10F1 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F5B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE CALLER PUSH2 0xAE4 JUMP JUMPDEST PUSH2 0x110D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D5 SWAP1 PUSH2 0x1BE1 JUMP JUMPDEST PUSH1 0x33 SLOAD DUP2 SWAP1 DUP2 LT PUSH2 0x1130 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D5 SWAP1 PUSH2 0x1C07 JUMP JUMPDEST DUP2 PUSH1 0x33 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0x1144 JUMPI PUSH2 0x1144 PUSH2 0x1C3E JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x3 PUSH1 0x5 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x1177 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x5D5 SWAP1 PUSH2 0x1C52 JUMP JUMPDEST PUSH0 PUSH1 0x33 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x118B JUMPI PUSH2 0x118B PUSH2 0x1C3E JUMP JUMPDEST SWAP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 SWAP1 PUSH1 0x5 MUL ADD SWAP1 POP PUSH1 0x34 SLOAD DUP2 PUSH1 0x4 ADD SLOAD LT ISZERO PUSH2 0x11E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x86C2DCDCDEE840CAF0CAC6EAE8CA40E8F PUSH1 0x7B SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D5 JUMP JUMPDEST PUSH1 0x3 DUP2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 SWAP1 DUP2 OR SWAP1 SWAP2 SSTORE DUP2 SLOAD SWAP1 DUP3 ADD SLOAD PUSH1 0x40 MLOAD PUSH0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 SWAP1 PUSH2 0x1219 SWAP1 PUSH1 0x2 DUP7 ADD SWAP1 PUSH2 0x1E5B JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 DUP8 GAS CALL SWAP3 POP POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1253 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1258 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP SWAP1 POP DUP1 PUSH2 0x129E JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x151C985B9CD858DD1A5BDB8819985A5B1959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D5 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP6 SWAP1 PUSH32 0x15ED165A284872EA7017F03DF402A0CADFBFAB588320FFAF83F160C2F82781C7 SWAP1 PUSH0 SWAP1 LOG2 POP POP POP POP POP JUMP JUMPDEST PUSH2 0x7D2 DUP2 CALLER PUSH2 0x16B2 JUMP JUMPDEST PUSH0 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F3B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x12F2 DUP5 DUP5 PUSH2 0xAE4 JUMP JUMPDEST PUSH2 0x1371 JUMPI PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x1327 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x59C JUMP JUMPDEST PUSH0 SWAP2 POP POP PUSH2 0x59C JUMP JUMPDEST PUSH0 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1F3B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x1393 DUP5 DUP5 PUSH2 0xAE4 JUMP JUMPDEST ISZERO PUSH2 0x1371 JUMPI PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP8 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x59C JUMP JUMPDEST PUSH2 0x13FB PUSH2 0x16EB JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0x14CA JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x14BE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1EFB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x14E8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 PUSH2 0x7F0 DUP2 PUSH2 0x12CF JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x156E JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x156B SWAP2 DUP2 ADD SWAP1 PUSH2 0x1ECD JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x1596 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5D5 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1EFB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0x15C6 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x5D5 JUMP JUMPDEST PUSH2 0x7AE DUP4 DUP4 PUSH2 0x1733 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x14E8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x14E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x14185D5CD8589B194E881C185D5CD959 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D5 JUMP JUMPDEST PUSH2 0x14E8 PUSH2 0x1788 JUMP JUMPDEST PUSH2 0x166E PUSH2 0x1788 JUMP JUMPDEST PUSH2 0x14E8 PUSH2 0x17D1 JUMP JUMPDEST PUSH2 0x167E PUSH2 0x1619 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 PUSH2 0x1427 CALLER SWAP1 JUMP JUMPDEST PUSH2 0x16BC DUP3 DUP3 PUSH2 0xAE4 JUMP JUMPDEST PUSH2 0x7F0 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x5D5 JUMP JUMPDEST PUSH0 SLOAD PUSH1 0xFF AND PUSH2 0x14E8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x14185D5CD8589B194E881B9BDD081C185D5CD959 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x5D5 JUMP JUMPDEST PUSH2 0x173C DUP3 PUSH2 0x17E4 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x1780 JUMPI PUSH2 0x7AE DUP3 DUP3 PUSH2 0x1847 JUMP JUMPDEST PUSH2 0x7F0 PUSH2 0x18B9 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x14E8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x17D9 PUSH2 0x1788 JUMP JUMPDEST PUSH0 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH0 SUB PUSH2 0x1819 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5D5 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x1EFB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x1863 SWAP2 SWAP1 PUSH2 0x1EE4 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x189B JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x18A0 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x18B0 DUP6 DUP4 DUP4 PUSH2 0x18D8 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x14E8 JUMPI PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x18ED JUMPI PUSH2 0x18E8 DUP3 PUSH2 0x1937 JUMP JUMPDEST PUSH2 0x1930 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x1904 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x192D JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x5D5 JUMP JUMPDEST POP DUP1 JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x1947 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1970 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1930 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x199D JUMPI PUSH0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19B2 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1930 DUP3 PUSH2 0x1987 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x19CB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x19E3 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x19F3 PUSH1 0x20 DUP5 ADD PUSH2 0x1987 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x1A1F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x1A3A JUMPI PUSH2 0x1A3A PUSH2 0x19FC JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH2 0x1A62 JUMPI PUSH2 0x1A62 PUSH2 0x19FC JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE DUP7 PUSH1 0x20 DUP6 DUP9 ADD ADD GT ISZERO PUSH2 0x1A7A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 PUSH1 0x20 DUP8 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP6 DUP4 ADD ADD MSTORE DUP1 SWAP5 POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1AAA JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1AB3 DUP4 PUSH2 0x1987 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1ACE JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1ADA DUP6 DUP3 DUP7 ADD PUSH2 0x1A10 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1AF6 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1AFF DUP5 PUSH2 0x1987 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD DUP1 DUP5 MSTORE DUP1 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP7 ADD MCOPY PUSH0 PUSH1 0x20 DUP3 DUP7 ADD ADD MSTORE PUSH1 0x20 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP6 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x1 DUP1 PUSH1 0xA0 SHL SUB DUP7 AND DUP2 MSTORE DUP5 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0xA0 PUSH1 0x40 DUP3 ADD MSTORE PUSH0 PUSH2 0x1B68 PUSH1 0xA0 DUP4 ADD DUP7 PUSH2 0x1B14 JUMP JUMPDEST SWAP4 ISZERO ISZERO PUSH1 0x60 DUP4 ADD MSTORE POP PUSH1 0x80 ADD MSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 PUSH2 0x1930 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x1B14 JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1BA0 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1BA9 DUP5 PUSH2 0x1987 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP5 ADD CALLDATALOAD SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1BCB JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1BD7 DUP7 DUP3 DUP8 ADD PUSH2 0x1A10 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0xC SWAP1 DUP3 ADD MSTORE PUSH12 0x2737BA1030B71030B236B4B7 PUSH1 0xA1 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1A SWAP1 DUP3 ADD MSTORE PUSH32 0x5472616E73616374696F6E20646F6573206E6F74206578697374000000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1C SWAP1 DUP3 ADD MSTORE PUSH32 0x5472616E73616374696F6E20616C726561647920657865637574656400000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x59C JUMPI PUSH2 0x59C PUSH2 0x1C89 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1CC0 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1930 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x1CE3 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x1D01 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x59C JUMPI PUSH2 0x59C PUSH2 0x1C89 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x1D38 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x59C JUMPI PUSH2 0x59C PUSH2 0x1C89 JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x7AE JUMPI DUP1 PUSH0 MSTORE PUSH1 0x20 PUSH0 KECCAK256 PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x1D75 JUMPI POP DUP1 JUMPDEST PUSH1 0x1F DUP5 ADD PUSH1 0x5 SHR DUP3 ADD SWAP2 POP JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x1D94 JUMPI PUSH0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x1D81 JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST DUP2 MLOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1DB5 JUMPI PUSH2 0x1DB5 PUSH2 0x19FC JUMP JUMPDEST PUSH2 0x1DC9 DUP2 PUSH2 0x1DC3 DUP5 SLOAD PUSH2 0x1CCF JUMP JUMPDEST DUP5 PUSH2 0x1D50 JUMP JUMPDEST PUSH1 0x20 DUP1 PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x1DFC JUMPI PUSH0 DUP5 ISZERO PUSH2 0x1DE5 JUMPI POP DUP6 DUP4 ADD MLOAD JUMPDEST PUSH0 NOT PUSH1 0x3 DUP7 SWAP1 SHL SHR NOT AND PUSH1 0x1 DUP6 SWAP1 SHL OR DUP6 SSTORE PUSH2 0x1E53 JUMP JUMPDEST PUSH0 DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 KECCAK256 PUSH1 0x1F NOT DUP7 AND SWAP2 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x1E2A JUMPI DUP9 DUP7 ADD MLOAD DUP3 SSTORE SWAP5 DUP5 ADD SWAP5 PUSH1 0x1 SWAP1 SWAP2 ADD SWAP1 DUP5 ADD PUSH2 0x1E0B JUMP JUMPDEST POP DUP6 DUP3 LT ISZERO PUSH2 0x1E47 JUMPI DUP8 DUP6 ADD MLOAD PUSH0 NOT PUSH1 0x3 DUP9 SWAP1 SHL PUSH1 0xF8 AND SHR NOT AND DUP2 SSTORE JUMPDEST POP POP PUSH1 0x1 DUP5 PUSH1 0x1 SHL ADD DUP6 SSTORE JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 DUP4 SLOAD PUSH2 0x1E68 DUP2 PUSH2 0x1CCF JUMP JUMPDEST PUSH1 0x1 DUP3 DUP2 AND DUP1 ISZERO PUSH2 0x1E80 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x1E95 JUMPI PUSH2 0x1EC1 JUMP JUMPDEST PUSH1 0xFF NOT DUP5 AND DUP8 MSTORE DUP3 ISZERO ISZERO DUP4 MUL DUP8 ADD SWAP5 POP PUSH2 0x1EC1 JUMP JUMPDEST DUP8 PUSH0 MSTORE PUSH1 0x20 DUP1 PUSH0 KECCAK256 PUSH0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x1EB8 JUMPI DUP2 SLOAD DUP11 DUP3 ADD MSTORE SWAP1 DUP5 ADD SWAP1 DUP3 ADD PUSH2 0x1E9F JUMP JUMPDEST POP POP POP DUP3 DUP8 ADD SWAP5 POP JUMPDEST POP SWAP3 SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1EDD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP6 ADD DUP5 MCOPY PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP INVALID CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC65D7A28E3265B37A647492 SWAP16 CALLER PUSH6 0x21B332C1681B SWAP4 EXTCODEHASH PUSH13 0xB9F3376673440D862A02DD7BC7 0xDE 0xC4 0xDC 0xEE 0xDD 0xA7 PUSH22 0xE58DD541E08A116C6C53815C0BD028192F7B626800A4 SWAP9 SMOD KECCAK256 TLOAD 0xE4 0xD3 SSTORE MULMOD 0x2E CREATE2 0xA8 LOG1 DUP16 JUMP 0xE8 SWAP2 EXTCODECOPY DELEGATECALL LOG2 ADD 0xFB 0xE2 DUP8 DUP3 JUMPDEST MULMOD JUMP SWAP4 0xC2 OR PUSH22 0xA2646970667358221220E641AD3C449CCB231CC15355 PUSH18 0x73105EE11A6D50F55D942A6471DE7513FBB9 CODESIZE PUSH5 0x736F6C6343 STOP ADDMOD NOT STOP CALLER ",
							"sourceMap": "620:5501:17:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3443:202:0;;;;;;;;;;-1:-1:-1;3443:202:0;;;;;:::i;:::-;;:::i;:::-;;;470:14:18;;463:22;445:41;;433:2;418:18;3443:202:0;;;;;;;;1411:39:17;;;;;;;;;;-1:-1:-1;1411:39:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;1040:25:18;;;1096:2;1081:18;;1074:34;;;;1013:18;1411:39:17;866:248:18;4380:410:17;;;;;;;;;;-1:-1:-1;4380:410:17;;;;;:::i;:::-;;:::i;:::-;;4759:191:0;;;;;;;;;;-1:-1:-1;4759:191:0;;;;;:::i;:::-;;:::i;:::-;;;1635:25:18;;;1623:2;1608:18;4759:191:0;1489:177:18;5246:136:0;;;;;;;;;;-1:-1:-1;5246:136:0;;;;;:::i;:::-;;:::i;6348:245::-;;;;;;;;;;-1:-1:-1;6348:245:0;;;;;:::i;:::-;;:::i;5905:75:17:-;;;;;;;;;;;;;:::i;4158:214:2:-;;;;;;:::i;:::-;;:::i;3705:134::-;;;;;;;;;;;;;:::i;1879:84:3:-;;;;;;;;;;-1:-1:-1;1926:4:3;1949:7;;;1879:84;;4825:416:17;;;;;;;;;;-1:-1:-1;4825:416:17;;;;;:::i;:::-;;:::i;820:60::-;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;820:60:17;;2070:470;;;;;;;;;;-1:-1:-1;2070:470:17;;;;;:::i;:::-;;:::i;1157:63::-;;;;;;;;;;-1:-1:-1;1157:63:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;1265:36;;;;;;;;;;;;;;;;5828:71;;;;;;;;;;;;;:::i;3732:207:0:-;;;;;;;;;;-1:-1:-1;3732:207:0;;;;;:::i;:::-;;:::i;1226:33:17:-;;;;;;;;;;-1:-1:-1;1226:33:17;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;:::i;2317:49:0:-;;;;;;;;;;-1:-1:-1;2317:49:0;2362:4;2317:49;;5247:575:17;;;;;;;;;;;;;:::i;1819:58:2:-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1819:58:2;;;;;;;;;;;;:::i;3478:395:17:-;;;;;;;;;;-1:-1:-1;3478:395:17;;;;;:::i;:::-;;:::i;1456:26::-;;;;;;;;;;;;;;;;3092:380;;;;;;;;;;-1:-1:-1;3092:380:17;;;;;:::i;:::-;;:::i;5662:138:0:-;;;;;;;;;;-1:-1:-1;5662:138:0;;;;;:::i;:::-;;:::i;752:62:17:-;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;752:62:17;;3879:495;;;;;;;;;;-1:-1:-1;3879:495:17;;;;;:::i;:::-;;:::i;886:66::-;;;;;;;;;;;;926:26;886:66;;3443:202:0;3528:4;-1:-1:-1;;;;;;3551:47:0;;-1:-1:-1;;;3551:47:0;;:87;;-1:-1:-1;;;;;;;;;;1133:40:8;;;3602:36:0;3544:94;3443:202;-1:-1:-1;;3443:202:0:o;4380:410:17:-;2585:31;-1:-1:-1;;;;;;;;;;;2605:10:17;2585:7;:31::i;:::-;2577:56;;;;-1:-1:-1;;;2577:56:17;;;;;;;:::i;:::-;;;;;;;;;2722:12:::1;:19:::0;4452:8;;2711:30;::::1;2703:69;;;;-1:-1:-1::0;;;2703:69:17::1;;;;;;;:::i;:::-;4474:8:::2;2854:12;2867:8;2854:22;;;;;;;;:::i;:::-;;::::0;;;::::2;::::0;;;:31:::2;:22;::::0;;::::2;;:31;::::0;::::2;;2853:32;2845:73;;;;-1:-1:-1::0;;;2845:73:17::2;;;;;;;:::i;:::-;4494:31:::3;4528:12;4541:8;4528:22;;;;;;;;:::i;:::-;;::::0;;;::::3;::::0;;;4569:21;;;:11:::3;:21:::0;;;;;;4591:10:::3;4569:33:::0;;;;;;;;4528:22:::3;::::0;;::::3;::::0;;::::3;::::0;-1:-1:-1;4569:33:17::3;;4561:71;;;::::0;-1:-1:-1;;;4561:71:17;;6868:2:18;4561:71:17::3;::::0;::::3;6850:21:18::0;6907:2;6887:18;;;6880:30;6946:27;6926:18;;;6919:55;6991:18;;4561:71:17::3;6666:349:18::0;4561:71:17::3;4675:1;4643:11;:28;;;:33;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;4722:5:17::3;4686:21:::0;;;:11:::3;:21;::::0;;;;;;;4708:10:::3;4686:33:::0;;;;;;;;:41;;-1:-1:-1;;4686:41:17::3;::::0;;4743:40;4698:8;;4743:40:::3;::::0;::::3;4484:306;2782:1:::2;2643::::1;4380:410:::0;:::o;4759:191:0:-;4824:7;4919:14;;;-1:-1:-1;;;;;;;;;;;4919:14:0;;;;;:24;;;;4759:191::o;5246:136::-;5320:18;5333:4;5320:12;:18::i;:::-;3191:16;3202:4;3191:10;:16::i;:::-;5350:25:::1;5361:4;5367:7;5350:10;:25::i;:::-;;5246:136:::0;;;:::o;6348:245::-;-1:-1:-1;;;;;6441:34:0;;966:10:7;6441:34:0;6437:102;;6498:30;;-1:-1:-1;;;6498:30:0;;;;;;;;;;;6437:102;6549:37;6561:4;6567:18;6549:11;:37::i;:::-;;6348:245;;:::o;5905:75:17:-;-1:-1:-1;;;;;;;;;;;3191:16:0;3202:4;3191:10;:16::i;:::-;5963:10:17::1;:8;:10::i;:::-;5905:75:::0;:::o;4158:214:2:-;2653:13;:11;:13::i;:::-;4273:36:::1;4291:17;4273;:36::i;:::-;4319:46;4341:17;4360:4;4319:21;:46::i;:::-;4158:214:::0;;:::o;3705:134::-;3774:7;2924:20;:18;:20::i;:::-;-1:-1:-1;;;;;;;;;;;;3705:134:2;:::o;4825:416:17:-;1503:19:3;:17;:19::i;:::-;4970:54:17::1;::::0;-1:-1:-1;;;4970:54:17;;4989:10:::1;4970:54;::::0;::::1;7525:34:18::0;4946:4:17::1;7575:18:18::0;;;7568:43;;;7627:18;;;7620:34;;;4946:4:17;;;4970:18:::1;::::0;7460::18;;4970:54:17::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4962:88;;;::::0;-1:-1:-1;;;4962:88:17;;8149:2:18;4962:88:17::1;::::0;::::1;8131:21:18::0;8188:2;8168:18;;;8161:30;-1:-1:-1;;;8207:18:18;;;8200:51;8268:18;;4962:88:17::1;7947:345:18::0;4962:88:17::1;5082:86;::::0;;;;::::1;::::0;;;;;5142:15:::1;5082:86;::::0;;::::1;::::0;;;5068:10:::1;-1:-1:-1::0;5061:18:17;;;:6:::1;:18:::0;;;;;:107;;;;;;::::1;::::0;;::::1;::::0;;;;5184:50;;1040:25:18;;;1081:18;;;1074:34;;;;5068:10:17;;5184:50:::1;::::0;1013:18:18;5184:50:17::1;;;;;;;4884:357;4825:416:::0;:::o;2070:470::-;8870:21:1;4302:15;;-1:-1:-1;;;4302:15:1;;;;4301:16;;4348:14;;4158:30;4726:16;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4790:11;:16;;4805:1;4790:16;:50;;;;-1:-1:-1;4818:4:1;4810:25;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;-1:-1:-1;;;4908:23:1;;;;;;;;;;;4851:91;4951:18;;-1:-1:-1;;4951:18:1;4968:1;4951:18;;;4979:67;;;;5013:22;;-1:-1:-1;;;;5013:22:1;-1:-1:-1;;;5013:22:1;;;4979:67;2188:22:17::1;:20;:22::i;:::-;2220:17;:15;:17::i;:::-;2247:24;:22;:24::i;:::-;2282:37;2362:4:0;2313:5:17::0;2282:10:::1;:37::i;:::-;;2329:30;-1:-1:-1::0;;;;;;;;;;;2353:5:17::1;2329:10;:30::i;:::-;;2369:29;-1:-1:-1::0;;;;;;;;;;;2392:5:17::1;2369:10;:29::i;:::-;;2408:32;926:26;2434:5;2408:10;:32::i;:::-;-1:-1:-1::0;2451:21:17::1;:46:::0;;;2507:11:::1;:26:::0;;;5066:101:1;;;;5100:23;;-1:-1:-1;;;;5100:23:1;;;5142:14;;-1:-1:-1;8450:50:18;;5142:14:1;;8438:2:18;8423:18;5142:14:1;;;;;;;5066:101;4092:1081;;;;;2070:470:17;;;:::o;5828:71::-;-1:-1:-1;;;;;;;;;;;3191:16:0;3202:4;3191:10;:16::i;:::-;5884:8:17::1;:6;:8::i;3732:207:0:-:0;3809:4;3901:14;;;-1:-1:-1;;;;;;;;;;;3901:14:0;;;;;;;;-1:-1:-1;;;;;3901:31:0;;;;;;;;;;;;;;;3732:207::o;1226:33:17:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;1226:33:17;;;;-1:-1:-1;1226:33:17;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;1226:33:17;;;;;;;;;;;;;;;-1:-1:-1;1226:33:17;:::o;5247:575::-;1503:19:3;:17;:19::i;:::-;5331:10:17::1;5303:18;5324::::0;;;:6:::1;:18;::::0;;;;;;;;5303:39;;;;::::1;::::0;;;;;;;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;;5352:45:::1;;;::::0;-1:-1:-1;;;5352:45:17;;9098:2:18;5352:45:17::1;::::0;::::1;9080:21:18::0;9137:2;9117:18;;;9110:30;-1:-1:-1;;;9156:18:18;;;9149:46;9212:18;;5352:45:17::1;8896:340:18::0;5352:45:17::1;5408:23;5452:5;:15;;;5434;:33;;;;:::i;:::-;5408:59;;5477:14;5544:8;5524:15;5510:11;;5495:5;:12;;;:26;;;;:::i;:::-;:44;;;;:::i;:::-;5494:59;;;;:::i;:::-;5667:12:::0;;5477:76;;-1:-1:-1;5616:4:17::1;::::0;;;5640:14:::1;::::0;5655:10:::1;::::0;5667:21:::1;::::0;5477:76;;5667:21:::1;:::i;:::-;5640:49;::::0;-1:-1:-1;;;;;;5640:49:17::1;::::0;;;;;;-1:-1:-1;;;;;9958:32:18;;;5640:49:17::1;::::0;::::1;9940:51:18::0;10007:18;;;10000:34;9913:18;;5640:49:17::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5632:83;;;::::0;-1:-1:-1;;;5632:83:17;;8149:2:18;5632:83:17::1;::::0;::::1;8131:21:18::0;8188:2;8168:18;;;8161:30;-1:-1:-1;;;8207:18:18;;;8200:51;8268:18;;5632:83:17::1;7947:345:18::0;5632:83:17::1;5740:10;5733:18;::::0;;;:6:::1;:18;::::0;;;;;;;5726:25;;;::::1;;::::0;;;;5794:12;;5767:48;;1040:25:18;;;1081:18;;;1074:34;;;5767:48:17::1;::::0;1013:18:18;5767:48:17::1;;;;;;;5293:529;;;;5247:575::o:0;3478:395::-;2585:31;-1:-1:-1;;;;;;;;;;;2605:10:17;2585:7;:31::i;:::-;2577:56;;;;-1:-1:-1;;;2577:56:17;;;;;;;:::i;:::-;2722:12:::1;:19:::0;3574:8;;2711:30;::::1;2703:69;;;;-1:-1:-1::0;;;2703:69:17::1;;;;;;;:::i;:::-;3604:8:::2;2854:12;2867:8;2854:22;;;;;;;;:::i;:::-;;::::0;;;::::2;::::0;;;:31:::2;:22;::::0;;::::2;;:31;::::0;::::2;;2853:32;2845:73;;;;-1:-1:-1::0;;;2845:73:17::2;;;;;;;:::i;:::-;3001:21:::3;::::0;;;:11:::3;:21;::::0;;;;;;;3023:10:::3;3001:33:::0;;;;;;;;3635:8;;3001:33:::3;;3000:34;2992:76;;;::::0;-1:-1:-1;;;2992:76:17;;10247:2:18;2992:76:17::3;::::0;::::3;10229:21:18::0;10286:2;10266:18;;;10259:30;10325:31;10305:18;;;10298:59;10374:18;;2992:76:17::3;10045:353:18::0;2992:76:17::3;3659:31:::4;3693:12;3706:8;3693:22;;;;;;;;:::i;:::-;;;;;;;;;;;3659:56;;3757:1;3725:11;:28;;;:33;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;3768:21:17::4;::::0;;;:11:::4;:21;::::0;;;;;;;3790:10:::4;3768:33:::0;;;;;;;;:40;;-1:-1:-1;;3768:40:17::4;3804:4;3768:40;::::0;;3824:42;3780:8;;3824:42:::4;::::0;::::4;3649:224;2928:1:::3;2782::::2;2643::::1;3478:395:::0;:::o;3092:380::-;2585:31;-1:-1:-1;;;;;;;;;;;2605:10:17;2585:7;:31::i;:::-;2577:56;;;;-1:-1:-1;;;2577:56:17;;;;;;;:::i;:::-;3213:12:::1;:19:::0;;3261:158:::1;::::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;;;;;3261:158:17;;::::1;::::0;;::::1;::::0;::::1;::::0;;;;;;;;;-1:-1:-1;3261:158:17;;;;;;;;;;;;;3243:177;::::1;::::0;;;;;;;;;::::1;::::0;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;;;;3243:177:17::1;::::0;;;::::1;::::0;;;::::1;::::0;;;;;;;;;;3213:19;;3261:158;;3243:177;;;;;::::1;::::0;;::::1;:::i;:::-;-1:-1:-1::0;3243:177:17::1;::::0;::::1;::::0;::::1;::::0;::::1;::::0;;-1:-1:-1;;3243:177:17::1;::::0;::::1;;::::0;;;::::1;::::0;;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;3436:29:::1;::::0;3457:7;;3436:29:::1;::::0;-1:-1:-1;;3436:29:17::1;3185:287;3092:380:::0;;;:::o;5662:138:0:-;5737:18;5750:4;5737:12;:18::i;:::-;3191:16;3202:4;3191:10;:16::i;:::-;5767:26:::1;5779:4;5785:7;5767:11;:26::i;3879:495:17:-:0;2585:31;-1:-1:-1;;;;;;;;;;;2605:10:17;2585:7;:31::i;:::-;2577:56;;;;-1:-1:-1;;;2577:56:17;;;;;;;:::i;:::-;2722:12:::1;:19:::0;3951:8;;2711:30;::::1;2703:69;;;;-1:-1:-1::0;;;2703:69:17::1;;;;;;;:::i;:::-;3973:8:::2;2854:12;2867:8;2854:22;;;;;;;;:::i;:::-;;::::0;;;::::2;::::0;;;:31:::2;:22;::::0;;::::2;;:31;::::0;::::2;;2853:32;2845:73;;;;-1:-1:-1::0;;;2845:73:17::2;;;;;;;:::i;:::-;3993:31:::3;4027:12;4040:8;4027:22;;;;;;;;:::i;:::-;;;;;;;;;;;3993:56;;4100:21;;4068:11;:28;;;:53;;4060:83;;;::::0;-1:-1:-1;;;4060:83:17;;12769:2:18;4060:83:17::3;::::0;::::3;12751:21:18::0;12808:2;12788:18;;;12781:30;-1:-1:-1;;;12827:18:18;;;12820:47;12884:18;;4060:83:17::3;12567:341:18::0;4060:83:17::3;4154:20;::::0;::::3;:27:::0;;-1:-1:-1;;4154:27:17::3;4177:4;4154:27:::0;;::::3;::::0;;;4211:14;;4238:17;;::::3;::::0;4211:63:::3;::::0;4154:20:::3;::::0;-1:-1:-1;;;;;4211:14:17::3;::::0;4238:17;4211:63:::3;::::0;4257:16:::3;::::0;::::3;::::0;4211:63:::3;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4192:82;;;4292:7;4284:38;;;::::0;-1:-1:-1;;;4284:38:17;;13961:2:18;4284:38:17::3;::::0;::::3;13943:21:18::0;14000:2;13980:18;;;13973:30;-1:-1:-1;;;14019:18:18;;;14012:48;14077:18;;4284:38:17::3;13759:342:18::0;4284:38:17::3;4338:29;::::0;4358:8;;4338:29:::3;::::0;;;::::3;3983:391;;2782:1:::2;2643::::1;3879:495:::0;:::o;4148:103:0:-;4214:30;4225:4;966:10:7;4214::0;:30::i;7270:387::-;7347:4;-1:-1:-1;;;;;;;;;;;7437:22:0;7445:4;7451:7;7437;:22::i;:::-;7432:219;;7475:8;:14;;;;;;;;;;;-1:-1:-1;;;;;7475:31:0;;;;;;;;;:38;;-1:-1:-1;;7475:38:0;7509:4;7475:38;;;7559:12;966:10:7;;887:96;7559:12:0;-1:-1:-1;;;;;7532:40:0;7550:7;-1:-1:-1;;;;;7532:40:0;7544:4;7532:40;;;;;;;;;;7593:4;7586:11;;;;;7432:219;7635:5;7628:12;;;;;7892:388;7970:4;-1:-1:-1;;;;;;;;;;;8059:22:0;8067:4;8073:7;8059;:22::i;:::-;8055:219;;;8131:5;8097:14;;;;;;;;;;;-1:-1:-1;;;;;8097:31:0;;;;;;;;;;:39;;-1:-1:-1;;8097:39:0;;;8155:40;966:10:7;;8097:14:0;;8155:40;;8131:5;8155:40;8216:4;8209:11;;;;;2697:117:3;1750:16;:14;:16::i;:::-;2765:5:::1;2755:15:::0;;-1:-1:-1;;2755:15:3::1;::::0;;2785:22:::1;966:10:7::0;2794:12:3::1;2785:22;::::0;-1:-1:-1;;;;;14270:32:18;;;14252:51;;14240:2;14225:18;2785:22:3::1;;;;;;;2697:117::o:0;4599:312:2:-;4679:4;-1:-1:-1;;;;;4688:6:2;4671:23;;;:120;;;4785:6;-1:-1:-1;;;;;4749:42:2;:32;-1:-1:-1;;;;;;;;;;;2035:53:12;-1:-1:-1;;;;;2035:53:12;;1957:138;4749:32:2;-1:-1:-1;;;;;4749:42:2;;;4671:120;4654:251;;;4865:29;;-1:-1:-1;;;4865:29:2;;;;;;;;;;;4654:251;4599:312::o;5986:98:17:-;926:26;3191:16:0;3202:4;3191:10;:16::i;6052:538:2:-;6169:17;-1:-1:-1;;;;;6151:50:2;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6151:52:2;;;;;;;;-1:-1:-1;;6151:52:2;;;;;;;;;;;;:::i;:::-;;;6147:437;;6513:60;;-1:-1:-1;;;6513:60:2;;-1:-1:-1;;;;;14270:32:18;;6513:60:2;;;14252:51:18;14225:18;;6513:60:2;14106:203:18;6147:437:2;-1:-1:-1;;;;;;;;;;;6245:40:2;;6241:120;;6312:34;;-1:-1:-1;;;6312:34:2;;;;;1635:25:18;;;1608:18;;6312:34:2;1489:177:18;6241:120:2;6374:54;6404:17;6423:4;6374:29;:54::i;5028:213::-;5102:4;-1:-1:-1;;;;;5111:6:2;5094:23;;5090:145;;5195:29;;-1:-1:-1;;;5195:29:2;;;;;;;;;;;2031:106:3;1926:4;1949:7;;;2100:9;2092:38;;;;-1:-1:-1;;;2092:38:3;;14705:2:18;2092:38:3;;;14687:21:18;14744:2;14724:18;;;14717:30;-1:-1:-1;;;14763:18:18;;;14756:46;14819:18;;2092:38:3;14503:340:18;3231:65:0;6931:20:1;:18;:20::i;1084:97:3:-;6931:20:1;:18;:20::i;:::-;1147:27:3::1;:25;:27::i;2450:115::-:0;1503:19;:17;:19::i;:::-;2509:7:::1;:14:::0;;-1:-1:-1;;2509:14:3::1;2519:4;2509:14;::::0;;2538:20:::1;2545:12;966:10:7::0;;887:96;4381:197:0;4469:22;4477:4;4483:7;4469;:22::i;:::-;4464:108;;4514:47;;-1:-1:-1;;;4514:47:0;;-1:-1:-1;;;;;9958:32:18;;4514:47:0;;;9940:51:18;10007:18;;;10000:34;;;9913:18;;4514:47:0;9766:274:18;2209:106:3;1926:4;1949:7;;;2267:41;;;;-1:-1:-1;;;2267:41:3;;15329:2:18;2267:41:3;;;15311:21:18;15368:2;15348:18;;;15341:30;-1:-1:-1;;;15387:18:18;;;15380:50;15447:18;;2267:41:3;15127:344:18;2779:335:12;2870:37;2889:17;2870:18;:37::i;:::-;2922:27;;-1:-1:-1;;;;;2922:27:12;;;;;;;;2964:11;;:15;2960:148;;2995:53;3024:17;3043:4;2995:28;:53::i;2960:148::-;3079:18;:16;:18::i;7084:141:1:-;8870:21;8560:40;-1:-1:-1;;;8560:40:1;;;;7146:73;;7191:17;;-1:-1:-1;;;7191:17:1;;;;;;;;;;;1187:95:3;6931:20:1;:18;:20::i;:::-;1270:5:3::1;1260:15:::0;;-1:-1:-1;;1260:15:3::1;::::0;;1187:95::o;2186:281:12:-;2263:17;-1:-1:-1;;;;;2263:29:12;;2296:1;2263:34;2259:119;;2320:47;;-1:-1:-1;;;2320:47:12;;-1:-1:-1;;;;;14270:32:18;;2320:47:12;;;14252:51:18;14225:18;;2320:47:12;14106:203:18;2259:119:12;-1:-1:-1;;;;;;;;;;;2387:73:12;;-1:-1:-1;;;;;;2387:73:12;-1:-1:-1;;;;;2387:73:12;;;;;;;;;;2186:281::o;4106:253:14:-;4189:12;4214;4228:23;4255:6;-1:-1:-1;;;;;4255:19:14;4275:4;4255:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4213:67;;;;4297:55;4324:6;4332:7;4341:10;4297:26;:55::i;:::-;4290:62;4106:253;-1:-1:-1;;;;;4106:253:14:o;6598:122:12:-;6648:9;:13;6644:70;;6684:19;;-1:-1:-1;;;6684:19:12;;;;;;;;;;;4625:582:14;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5045:17;;:22;:49;;;;-1:-1:-1;;;;;;5071:18:14;;;:23;5045:49;5041:119;;;5121:24;;-1:-1:-1;;;5121:24:14;;-1:-1:-1;;;;;14270:32:18;;5121:24:14;;;14252:51:18;14225:18;;5121:24:14;14106:203:18;5041:119:14;-1:-1:-1;5180:10:14;4793:408;4625:582;;;;;:::o;5743:516::-;5874:17;;:21;5870:383;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;-1:-1:-1;;;6225:17:14;;;;;;;;;;;14:286:18;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:18;;209:43;;199:71;;266:1;263;256:12;497:173;565:20;;-1:-1:-1;;;;;614:31:18;;604:42;;594:70;;660:1;657;650:12;594:70;497:173;;;:::o;675:186::-;734:6;787:2;775:9;766:7;762:23;758:32;755:52;;;803:1;800;793:12;755:52;826:29;845:9;826:29;:::i;1119:180::-;1178:6;1231:2;1219:9;1210:7;1206:23;1202:32;1199:52;;;1247:1;1244;1237:12;1199:52;-1:-1:-1;1270:23:18;;1119:180;-1:-1:-1;1119:180:18:o;1671:254::-;1739:6;1747;1800:2;1788:9;1779:7;1775:23;1771:32;1768:52;;;1816:1;1813;1806:12;1768:52;1852:9;1839:23;1829:33;;1881:38;1915:2;1904:9;1900:18;1881:38;:::i;:::-;1871:48;;1671:254;;;;;:::o;1930:127::-;1991:10;1986:3;1982:20;1979:1;1972:31;2022:4;2019:1;2012:15;2046:4;2043:1;2036:15;2062:718;2104:5;2157:3;2150:4;2142:6;2138:17;2134:27;2124:55;;2175:1;2172;2165:12;2124:55;2211:6;2198:20;2237:18;2274:2;2270;2267:10;2264:36;;;2280:18;;:::i;:::-;2355:2;2349:9;2323:2;2409:13;;-1:-1:-1;;2405:22:18;;;2429:2;2401:31;2397:40;2385:53;;;2453:18;;;2473:22;;;2450:46;2447:72;;;2499:18;;:::i;:::-;2539:10;2535:2;2528:22;2574:2;2566:6;2559:18;2620:3;2613:4;2608:2;2600:6;2596:15;2592:26;2589:35;2586:55;;;2637:1;2634;2627:12;2586:55;2701:2;2694:4;2686:6;2682:17;2675:4;2667:6;2663:17;2650:54;2748:1;2741:4;2736:2;2728:6;2724:15;2720:26;2713:37;2768:6;2759:15;;;;;;2062:718;;;;:::o;2785:394::-;2862:6;2870;2923:2;2911:9;2902:7;2898:23;2894:32;2891:52;;;2939:1;2936;2929:12;2891:52;2962:29;2981:9;2962:29;:::i;:::-;2952:39;;3042:2;3031:9;3027:18;3014:32;3069:18;3061:6;3058:30;3055:50;;;3101:1;3098;3091:12;3055:50;3124:49;3165:7;3156:6;3145:9;3141:22;3124:49;:::i;:::-;3114:59;;;2785:394;;;;;:::o;3184:322::-;3261:6;3269;3277;3330:2;3318:9;3309:7;3305:23;3301:32;3298:52;;;3346:1;3343;3336:12;3298:52;3369:29;3388:9;3369:29;:::i;:::-;3359:39;3445:2;3430:18;;3417:32;;-1:-1:-1;3496:2:18;3481:18;;;3468:32;;3184:322;-1:-1:-1;;;3184:322:18:o;3952:288::-;3993:3;4031:5;4025:12;4058:6;4053:3;4046:19;4114:6;4107:4;4100:5;4096:16;4089:4;4084:3;4080:14;4074:47;4166:1;4159:4;4150:6;4145:3;4141:16;4137:27;4130:38;4229:4;4222:2;4218:7;4213:2;4205:6;4201:15;4197:29;4192:3;4188:39;4184:50;4177:57;;;3952:288;;;;:::o;4245:540::-;4527:1;4523;4518:3;4514:11;4510:19;4502:6;4498:32;4487:9;4480:51;4567:6;4562:2;4551:9;4547:18;4540:34;4610:3;4605:2;4594:9;4590:18;4583:31;4461:4;4631:45;4671:3;4660:9;4656:19;4648:6;4631:45;:::i;:::-;4719:14;;4712:22;4707:2;4692:18;;4685:50;-1:-1:-1;4766:3:18;4751:19;4744:35;4623:53;4245:540;-1:-1:-1;;;4245:540:18:o;4790:219::-;4939:2;4928:9;4921:21;4902:4;4959:44;4999:2;4988:9;4984:18;4976:6;4959:44;:::i;5014:462::-;5100:6;5108;5116;5169:2;5157:9;5148:7;5144:23;5140:32;5137:52;;;5185:1;5182;5175:12;5137:52;5208:29;5227:9;5208:29;:::i;:::-;5198:39;;5284:2;5273:9;5269:18;5256:32;5246:42;;5339:2;5328:9;5324:18;5311:32;5366:18;5358:6;5355:30;5352:50;;;5398:1;5395;5388:12;5352:50;5421:49;5462:7;5453:6;5442:9;5438:22;5421:49;:::i;:::-;5411:59;;;5014:462;;;;;:::o;5481:336::-;5683:2;5665:21;;;5722:2;5702:18;;;5695:30;-1:-1:-1;;;5756:2:18;5741:18;;5734:42;5808:2;5793:18;;5481:336::o;5822:350::-;6024:2;6006:21;;;6063:2;6043:18;;;6036:30;6102:28;6097:2;6082:18;;6075:56;6163:2;6148:18;;5822:350::o;6177:127::-;6238:10;6233:3;6229:20;6226:1;6219:31;6269:4;6266:1;6259:15;6293:4;6290:1;6283:15;6309:352;6511:2;6493:21;;;6550:2;6530:18;;;6523:30;6589;6584:2;6569:18;;6562:58;6652:2;6637:18;;6309:352::o;7020:127::-;7081:10;7076:3;7072:20;7069:1;7062:31;7112:4;7109:1;7102:15;7136:4;7133:1;7126:15;7152:128;7219:9;;;7240:11;;;7237:37;;;7254:18;;:::i;7665:277::-;7732:6;7785:2;7773:9;7764:7;7760:23;7756:32;7753:52;;;7801:1;7798;7791:12;7753:52;7833:9;7827:16;7886:5;7879:13;7872:21;7865:5;7862:32;7852:60;;7908:1;7905;7898:12;8511:380;8590:1;8586:12;;;;8633;;;8654:61;;8708:4;8700:6;8696:17;8686:27;;8654:61;8761:2;8753:6;8750:14;8730:18;8727:38;8724:161;;8807:10;8802:3;8798:20;8795:1;8788:31;8842:4;8839:1;8832:15;8870:4;8867:1;8860:15;8724:161;;8511:380;;;:::o;9241:168::-;9314:9;;;9345;;9362:15;;;9356:22;;9342:37;9332:71;;9383:18;;:::i;9414:217::-;9454:1;9480;9470:132;;9524:10;9519:3;9515:20;9512:1;9505:31;9559:4;9556:1;9549:15;9587:4;9584:1;9577:15;9470:132;-1:-1:-1;9616:9:18;;9414:217::o;9636:125::-;9701:9;;;9722:10;;;9719:36;;;9735:18;;:::i;10528:517::-;10629:2;10624:3;10621:11;10618:421;;;10665:5;10662:1;10655:16;10709:4;10706:1;10696:18;10779:2;10767:10;10763:19;10760:1;10756:27;10750:4;10746:38;10815:4;10803:10;10800:20;10797:47;;;-1:-1:-1;10838:4:18;10797:47;10893:2;10888:3;10884:12;10881:1;10877:20;10871:4;10867:31;10857:41;;10948:81;10966:2;10959:5;10956:13;10948:81;;;11025:1;11011:16;;10992:1;10981:13;10948:81;;;10952:3;;10528:517;;;:::o;11221:1341::-;11345:3;11339:10;11372:18;11364:6;11361:30;11358:56;;;11394:18;;:::i;:::-;11423:96;11512:6;11472:38;11504:4;11498:11;11472:38;:::i;:::-;11466:4;11423:96;:::i;:::-;11574:4;;11631:2;11620:14;;11648:1;11643:662;;;;12349:1;12366:6;12363:89;;;-1:-1:-1;12418:19:18;;;12412:26;12363:89;-1:-1:-1;;11178:1:18;11174:11;;;11170:24;11166:29;11156:40;11202:1;11198:11;;;11153:57;12465:81;;11613:943;;11643:662;10475:1;10468:14;;;10512:4;10499:18;;-1:-1:-1;;11679:20:18;;;11796:236;11810:7;11807:1;11804:14;11796:236;;;11899:19;;;11893:26;11878:42;;11991:27;;;;11959:1;11947:14;;;;11826:19;;11796:236;;;11800:3;12060:6;12051:7;12048:19;12045:201;;;12121:19;;;12115:26;-1:-1:-1;;12204:1:18;12200:14;;;12216:3;12196:24;12192:37;12188:42;12173:58;12158:74;;12045:201;;;12292:1;12283:6;12280:1;12276:14;12272:22;12266:4;12259:36;11613:943;;;;;11221:1341;;:::o;12913:841::-;13039:3;13068:1;13101:6;13095:13;13131:36;13157:9;13131:36;:::i;:::-;13186:1;13203:17;;;13229:133;;;;13376:1;13371:358;;;;13196:533;;13229:133;-1:-1:-1;;13262:24:18;;13250:37;;13335:14;;13328:22;13316:35;;13307:45;;;-1:-1:-1;13229:133:18;;13371:358;13402:6;13399:1;13392:17;13432:4;13477;13474:1;13464:18;13504:1;13518:165;13532:6;13529:1;13526:13;13518:165;;;13610:14;;13597:11;;;13590:35;13653:16;;;;13547:10;;13518:165;;;13522:3;;;13712:6;13707:3;13703:16;13696:23;;13196:533;-1:-1:-1;13745:3:18;;12913:841;-1:-1:-1;;;;;;12913:841:18:o;14314:184::-;14384:6;14437:2;14425:9;14416:7;14412:23;14408:32;14405:52;;;14453:1;14450;14443:12;14405:52;-1:-1:-1;14476:16:18;;14314:184;-1:-1:-1;14314:184:18:o;15476:301::-;15605:3;15643:6;15637:13;15689:6;15682:4;15674:6;15670:17;15665:3;15659:37;15751:1;15715:16;;15740:13;;;-1:-1:-1;15715:16:18;15476:301;-1:-1:-1;15476:301:18:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1622400",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"ADMIN_ROLE()": "infinite",
								"DEFAULT_ADMIN_ROLE()": "260",
								"PAUSER_ROLE()": "infinite",
								"UPGRADER_ROLE()": "304",
								"UPGRADE_INTERFACE_VERSION()": "infinite",
								"confirmTransaction(uint256)": "infinite",
								"executeTransaction(uint256)": "infinite",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "infinite",
								"initialize(address,uint256,uint256)": "infinite",
								"isConfirmed(uint256,address)": "2726",
								"pause()": "infinite",
								"paused()": "2381",
								"proxiableUUID()": "infinite",
								"renounceRole(bytes32,address)": "29183",
								"requiredConfirmations()": "2340",
								"revokeConfirmation(uint256)": "infinite",
								"revokeRole(bytes32,address)": "infinite",
								"stakeTokens(uint256)": "infinite",
								"stakes(address)": "4724",
								"stakingRate()": "2361",
								"submitTransaction(address,uint256,bytes)": "infinite",
								"supportsInterface(bytes4)": "470",
								"transactions(uint256)": "infinite",
								"unpause()": "infinite",
								"unstakeTokens()": "infinite",
								"upgradeToAndCall(address,bytes)": "infinite"
							},
							"internal": {
								"_authorizeUpgrade(address)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 620,
									"end": 6121,
									"name": "PUSH",
									"source": 17,
									"value": "A0"
								},
								{
									"begin": 620,
									"end": 6121,
									"name": "PUSH",
									"source": 17,
									"value": "40"
								},
								{
									"begin": 620,
									"end": 6121,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 1171,
									"end": 1175,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 2011,
									"end": 2064,
									"name": "CALLVALUE",
									"source": 17
								},
								{
									"begin": 2011,
									"end": 2064,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 2011,
									"end": 2064,
									"name": "ISZERO",
									"source": 17
								},
								{
									"begin": 2011,
									"end": 2064,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 2011,
									"end": 2064,
									"name": "JUMPI",
									"source": 17
								},
								{
									"begin": 2011,
									"end": 2064,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 2011,
									"end": 2064,
									"name": "DUP1",
									"source": 17
								},
								{
									"begin": 2011,
									"end": 2064,
									"name": "REVERT",
									"source": 17
								},
								{
									"begin": 2011,
									"end": 2064,
									"name": "tag",
									"source": 17,
									"value": "1"
								},
								{
									"begin": 2011,
									"end": 2064,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 2035,
									"end": 2057,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 2035,
									"end": 2055,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "5"
								},
								{
									"begin": 2035,
									"end": 2057,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 2035,
									"end": 2057,
									"name": "tag",
									"source": 17,
									"value": "4"
								},
								{
									"begin": 2035,
									"end": 2057,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 620,
									"end": 6121,
									"name": "PUSH [tag]",
									"source": 17,
									"value": "15"
								},
								{
									"begin": 620,
									"end": 6121,
									"name": "JUMP",
									"source": 17
								},
								{
									"begin": 7711,
									"end": 8133,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 7711,
									"end": 8133,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8870,
									"end": 8891,
									"name": "PUSH",
									"source": 1,
									"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "PUSH",
									"source": 1,
									"value": "10000000000000000"
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F92EE8A9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 8019,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 7981,
									"end": 8127,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 7981,
									"end": 8127,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "AND",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 158,
									"end": 208,
									"name": "SWAP1",
									"source": 18
								},
								{
									"begin": 158,
									"end": 208,
									"name": "DUP2",
									"source": 18
								},
								{
									"begin": 158,
									"end": 208,
									"name": "MSTORE",
									"source": 18
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "PUSH",
									"source": 1,
									"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 146,
									"end": 148,
									"name": "PUSH",
									"source": 18,
									"value": "20"
								},
								{
									"begin": 131,
									"end": 149,
									"name": "ADD",
									"source": 18
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "LOG1",
									"source": 1
								},
								{
									"begin": 7981,
									"end": 8127,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 7981,
									"end": 8127,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7760,
									"end": 8133,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7711,
									"end": 8133,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 214,
									"name": "tag",
									"source": 18,
									"value": "15"
								},
								{
									"begin": 14,
									"end": 214,
									"name": "JUMPDEST",
									"source": 18
								},
								{
									"begin": 620,
									"end": 6121,
									"name": "PUSH",
									"source": 17,
									"value": "80"
								},
								{
									"begin": 620,
									"end": 6121,
									"name": "MLOAD",
									"source": 17
								},
								{
									"begin": 620,
									"end": 6121,
									"name": "PUSH #[$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 620,
									"end": 6121,
									"name": "PUSH [$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 620,
									"end": 6121,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 620,
									"end": 6121,
									"name": "CODECOPY",
									"source": 17
								},
								{
									"begin": 620,
									"end": 6121,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 620,
									"end": 6121,
									"name": "ASSIGNIMMUTABLE",
									"source": 17,
									"value": "636"
								},
								{
									"begin": 620,
									"end": 6121,
									"name": "PUSH #[$]",
									"source": 17,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 620,
									"end": 6121,
									"name": "PUSH",
									"source": 17,
									"value": "0"
								},
								{
									"begin": 620,
									"end": 6121,
									"name": "RETURN",
									"source": 17
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220e641ad3c449ccb231cc153557173105ee11a6d50f55d942a6471de7513fbb93864736f6c63430008190033",
									".code": [
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "SHR",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH",
											"source": 17,
											"value": "82E717F7"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "31"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH",
											"source": 17,
											"value": "C01A8C84"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH",
											"source": 17,
											"value": "D547741F"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "33"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH",
											"source": 17,
											"value": "D547741F"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "27"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH",
											"source": 17,
											"value": "E63AB1E9"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "28"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH",
											"source": 17,
											"value": "EE22610B"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "29"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH",
											"source": 17,
											"value": "F72C0D8B"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "30"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "tag",
											"source": 17,
											"value": "33"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH",
											"source": 17,
											"value": "C01A8C84"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH",
											"source": 17,
											"value": "C63A6AD2"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "25"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH",
											"source": 17,
											"value": "C6427474"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "26"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "tag",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH",
											"source": 17,
											"value": "9ACE38C2"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "34"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH",
											"source": 17,
											"value": "9ACE38C2"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH",
											"source": 17,
											"value": "A217FDDF"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "21"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH",
											"source": 17,
											"value": "A5CE413B"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "22"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH",
											"source": 17,
											"value": "AD3CB1CC"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "23"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "tag",
											"source": 17,
											"value": "34"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH",
											"source": 17,
											"value": "82E717F7"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "17"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH",
											"source": 17,
											"value": "8456CB59"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "18"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH",
											"source": 17,
											"value": "91D14854"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "19"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "tag",
											"source": 17,
											"value": "31"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH",
											"source": 17,
											"value": "4F1EF286"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "35"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH",
											"source": 17,
											"value": "7547C7A3"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "36"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH",
											"source": 17,
											"value": "7547C7A3"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "13"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH",
											"source": 17,
											"value": "75B238FC"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "14"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH",
											"source": 17,
											"value": "7A1AC61E"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "15"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH",
											"source": 17,
											"value": "80F59A65"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "16"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "tag",
											"source": 17,
											"value": "36"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH",
											"source": 17,
											"value": "4F1EF286"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "10"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH",
											"source": 17,
											"value": "52D1902D"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "11"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH",
											"source": 17,
											"value": "5C975ABB"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "12"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "tag",
											"source": 17,
											"value": "35"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH",
											"source": 17,
											"value": "248A9CA3"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "37"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH",
											"source": 17,
											"value": "248A9CA3"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "6"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH",
											"source": 17,
											"value": "2F2FF15D"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "7"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH",
											"source": 17,
											"value": "36568ABE"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "8"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH",
											"source": 17,
											"value": "3F4BA83A"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "9"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "tag",
											"source": 17,
											"value": "37"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH",
											"source": 17,
											"value": "1FFC9A7"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH",
											"source": 17,
											"value": "16934FC4"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH",
											"source": 17,
											"value": "20EA8D86"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "tag",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "STOP",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "tag",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 620,
											"end": 6121,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3443,
											"end": 3645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3443,
											"end": 3645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 470,
											"end": 484,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 470,
											"end": 484,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 463,
											"end": 485,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 445,
											"end": 486,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 445,
											"end": 486,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 433,
											"end": 435,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 418,
											"end": 436,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1411,
											"end": 1450,
											"name": "tag",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1411,
											"end": 1450,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1411,
											"end": 1450,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 1411,
											"end": 1450,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1411,
											"end": 1450,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1411,
											"end": 1450,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "47"
										},
										{
											"begin": 1411,
											"end": 1450,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1411,
											"end": 1450,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1411,
											"end": 1450,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1411,
											"end": 1450,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1411,
											"end": 1450,
											"name": "tag",
											"source": 17,
											"value": "47"
										},
										{
											"begin": 1411,
											"end": 1450,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1411,
											"end": 1450,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "48"
										},
										{
											"begin": 1411,
											"end": 1450,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "49"
										},
										{
											"begin": 1411,
											"end": 1450,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 1411,
											"end": 1450,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1411,
											"end": 1450,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "50"
										},
										{
											"begin": 1411,
											"end": 1450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1411,
											"end": 1450,
											"name": "tag",
											"source": 17,
											"value": "49"
										},
										{
											"begin": 1411,
											"end": 1450,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1411,
											"end": 1450,
											"name": "PUSH",
											"source": 17,
											"value": "35"
										},
										{
											"begin": 1411,
											"end": 1450,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1411,
											"end": 1450,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1411,
											"end": 1450,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1411,
											"end": 1450,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1411,
											"end": 1450,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1411,
											"end": 1450,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1411,
											"end": 1450,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1411,
											"end": 1450,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1411,
											"end": 1450,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 1411,
											"end": 1450,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1411,
											"end": 1450,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1411,
											"end": 1450,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 1411,
											"end": 1450,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1411,
											"end": 1450,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1411,
											"end": 1450,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1411,
											"end": 1450,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1411,
											"end": 1450,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1411,
											"end": 1450,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1411,
											"end": 1450,
											"name": "tag",
											"source": 17,
											"value": "48"
										},
										{
											"begin": 1411,
											"end": 1450,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1411,
											"end": 1450,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1411,
											"end": 1450,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1411,
											"end": 1450,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1040,
											"end": 1065,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1040,
											"end": 1065,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1040,
											"end": 1065,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1096,
											"end": 1098,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1081,
											"end": 1099,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1081,
											"end": 1099,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1074,
											"end": 1108,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1074,
											"end": 1108,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1074,
											"end": 1108,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1074,
											"end": 1108,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1013,
											"end": 1031,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1411,
											"end": 1450,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "45"
										},
										{
											"begin": 866,
											"end": 1114,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4380,
											"end": 4790,
											"name": "tag",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 4380,
											"end": 4790,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4380,
											"end": 4790,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 4380,
											"end": 4790,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4380,
											"end": 4790,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4380,
											"end": 4790,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "54"
										},
										{
											"begin": 4380,
											"end": 4790,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4380,
											"end": 4790,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4380,
											"end": 4790,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4380,
											"end": 4790,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4380,
											"end": 4790,
											"name": "tag",
											"source": 17,
											"value": "54"
										},
										{
											"begin": 4380,
											"end": 4790,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4380,
											"end": 4790,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "55"
										},
										{
											"begin": 4380,
											"end": 4790,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "56"
										},
										{
											"begin": 4380,
											"end": 4790,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 4380,
											"end": 4790,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 4380,
											"end": 4790,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "57"
										},
										{
											"begin": 4380,
											"end": 4790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4380,
											"end": 4790,
											"name": "tag",
											"source": 17,
											"value": "56"
										},
										{
											"begin": 4380,
											"end": 4790,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4380,
											"end": 4790,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "58"
										},
										{
											"begin": 4380,
											"end": 4790,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4380,
											"end": 4790,
											"name": "tag",
											"source": 17,
											"value": "55"
										},
										{
											"begin": 4380,
											"end": 4790,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4380,
											"end": 4790,
											"name": "STOP",
											"source": 17
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "tag",
											"source": 0,
											"value": "59"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "57"
										},
										{
											"begin": 4759,
											"end": 4950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "tag",
											"source": 0,
											"value": "61"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 4759,
											"end": 4950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "tag",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1623,
											"end": 1625,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1608,
											"end": 1626,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 1489,
											"end": 1666,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "tag",
											"source": 0,
											"value": "66"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 5246,
											"end": 5382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "tag",
											"source": 0,
											"value": "68"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 5246,
											"end": 5382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 6348,
											"end": 6593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 6348,
											"end": 6593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5905,
											"end": 5980,
											"name": "tag",
											"source": 17,
											"value": "9"
										},
										{
											"begin": 5905,
											"end": 5980,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5905,
											"end": 5980,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 5905,
											"end": 5980,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5905,
											"end": 5980,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5905,
											"end": 5980,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "75"
										},
										{
											"begin": 5905,
											"end": 5980,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5905,
											"end": 5980,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5905,
											"end": 5980,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5905,
											"end": 5980,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 5905,
											"end": 5980,
											"name": "tag",
											"source": 17,
											"value": "75"
										},
										{
											"begin": 5905,
											"end": 5980,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5905,
											"end": 5980,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5905,
											"end": 5980,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "55"
										},
										{
											"begin": 5905,
											"end": 5980,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "77"
										},
										{
											"begin": 5905,
											"end": 5980,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "55"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 4158,
											"end": 4372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "tag",
											"source": 2,
											"value": "79"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 4158,
											"end": 4372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "tag",
											"source": 2,
											"value": "82"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "60"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3705,
											"end": 3839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "tag",
											"source": 3,
											"value": "86"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1926,
											"end": 1930,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "41"
										},
										{
											"begin": 1879,
											"end": 1963,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4825,
											"end": 5241,
											"name": "tag",
											"source": 17,
											"value": "13"
										},
										{
											"begin": 4825,
											"end": 5241,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4825,
											"end": 5241,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 4825,
											"end": 5241,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4825,
											"end": 5241,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4825,
											"end": 5241,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "90"
										},
										{
											"begin": 4825,
											"end": 5241,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4825,
											"end": 5241,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4825,
											"end": 5241,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4825,
											"end": 5241,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4825,
											"end": 5241,
											"name": "tag",
											"source": 17,
											"value": "90"
										},
										{
											"begin": 4825,
											"end": 5241,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4825,
											"end": 5241,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "55"
										},
										{
											"begin": 4825,
											"end": 5241,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "92"
										},
										{
											"begin": 4825,
											"end": 5241,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 4825,
											"end": 5241,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 4825,
											"end": 5241,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "57"
										},
										{
											"begin": 4825,
											"end": 5241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4825,
											"end": 5241,
											"name": "tag",
											"source": 17,
											"value": "92"
										},
										{
											"begin": 4825,
											"end": 5241,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4825,
											"end": 5241,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "93"
										},
										{
											"begin": 4825,
											"end": 5241,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 820,
											"end": 880,
											"name": "tag",
											"source": 17,
											"value": "14"
										},
										{
											"begin": 820,
											"end": 880,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 820,
											"end": 880,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 820,
											"end": 880,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 820,
											"end": 880,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 820,
											"end": 880,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "94"
										},
										{
											"begin": 820,
											"end": 880,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 820,
											"end": 880,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 820,
											"end": 880,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 820,
											"end": 880,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 820,
											"end": 880,
											"name": "tag",
											"source": 17,
											"value": "94"
										},
										{
											"begin": 820,
											"end": 880,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 820,
											"end": 880,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 820,
											"end": 880,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 820,
											"end": 880,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 820,
											"end": 880,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2070,
											"end": 2540,
											"name": "tag",
											"source": 17,
											"value": "15"
										},
										{
											"begin": 2070,
											"end": 2540,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2070,
											"end": 2540,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 2070,
											"end": 2540,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2070,
											"end": 2540,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2070,
											"end": 2540,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "98"
										},
										{
											"begin": 2070,
											"end": 2540,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2070,
											"end": 2540,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2070,
											"end": 2540,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2070,
											"end": 2540,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2070,
											"end": 2540,
											"name": "tag",
											"source": 17,
											"value": "98"
										},
										{
											"begin": 2070,
											"end": 2540,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2070,
											"end": 2540,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "55"
										},
										{
											"begin": 2070,
											"end": 2540,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 2070,
											"end": 2540,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 2070,
											"end": 2540,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2070,
											"end": 2540,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "101"
										},
										{
											"begin": 2070,
											"end": 2540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2070,
											"end": 2540,
											"name": "tag",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 2070,
											"end": 2540,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2070,
											"end": 2540,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "102"
										},
										{
											"begin": 2070,
											"end": 2540,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1157,
											"end": 1220,
											"name": "tag",
											"source": 17,
											"value": "16"
										},
										{
											"begin": 1157,
											"end": 1220,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1157,
											"end": 1220,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 1157,
											"end": 1220,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1157,
											"end": 1220,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1157,
											"end": 1220,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "103"
										},
										{
											"begin": 1157,
											"end": 1220,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1157,
											"end": 1220,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1157,
											"end": 1220,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1157,
											"end": 1220,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1157,
											"end": 1220,
											"name": "tag",
											"source": 17,
											"value": "103"
										},
										{
											"begin": 1157,
											"end": 1220,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1157,
											"end": 1220,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "41"
										},
										{
											"begin": 1157,
											"end": 1220,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "105"
										},
										{
											"begin": 1157,
											"end": 1220,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 1157,
											"end": 1220,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1157,
											"end": 1220,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "69"
										},
										{
											"begin": 1157,
											"end": 1220,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1157,
											"end": 1220,
											"name": "tag",
											"source": 17,
											"value": "105"
										},
										{
											"begin": 1157,
											"end": 1220,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1157,
											"end": 1220,
											"name": "PUSH",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 1157,
											"end": 1220,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1157,
											"end": 1220,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1157,
											"end": 1220,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1157,
											"end": 1220,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1157,
											"end": 1220,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1157,
											"end": 1220,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1157,
											"end": 1220,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1157,
											"end": 1220,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1157,
											"end": 1220,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1157,
											"end": 1220,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1157,
											"end": 1220,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1157,
											"end": 1220,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 1157,
											"end": 1220,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1157,
											"end": 1220,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1157,
											"end": 1220,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1157,
											"end": 1220,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1157,
											"end": 1220,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1157,
											"end": 1220,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1157,
											"end": 1220,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1157,
											"end": 1220,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 1157,
											"end": 1220,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1157,
											"end": 1220,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 1157,
											"end": 1220,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1157,
											"end": 1220,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1157,
											"end": 1220,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1265,
											"end": 1301,
											"name": "tag",
											"source": 17,
											"value": "17"
										},
										{
											"begin": 1265,
											"end": 1301,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1265,
											"end": 1301,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 1265,
											"end": 1301,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1265,
											"end": 1301,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1265,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "109"
										},
										{
											"begin": 1265,
											"end": 1301,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1265,
											"end": 1301,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1265,
											"end": 1301,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1265,
											"end": 1301,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1265,
											"end": 1301,
											"name": "tag",
											"source": 17,
											"value": "109"
										},
										{
											"begin": 1265,
											"end": 1301,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1265,
											"end": 1301,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1265,
											"end": 1301,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 1265,
											"end": 1301,
											"name": "PUSH",
											"source": 17,
											"value": "34"
										},
										{
											"begin": 1265,
											"end": 1301,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1265,
											"end": 1301,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1265,
											"end": 1301,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5828,
											"end": 5899,
											"name": "tag",
											"source": 17,
											"value": "18"
										},
										{
											"begin": 5828,
											"end": 5899,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5828,
											"end": 5899,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 5828,
											"end": 5899,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5828,
											"end": 5899,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5828,
											"end": 5899,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "114"
										},
										{
											"begin": 5828,
											"end": 5899,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5828,
											"end": 5899,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5828,
											"end": 5899,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5828,
											"end": 5899,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 5828,
											"end": 5899,
											"name": "tag",
											"source": 17,
											"value": "114"
										},
										{
											"begin": 5828,
											"end": 5899,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5828,
											"end": 5899,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5828,
											"end": 5899,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "55"
										},
										{
											"begin": 5828,
											"end": 5899,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "116"
										},
										{
											"begin": 5828,
											"end": 5899,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "tag",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "tag",
											"source": 0,
											"value": "117"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 3732,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "tag",
											"source": 0,
											"value": "119"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 3732,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "tag",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "122"
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "tag",
											"source": 17,
											"value": "122"
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "123"
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "124"
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "57"
										},
										{
											"begin": 1226,
											"end": 1259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "tag",
											"source": 17,
											"value": "124"
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "125"
										},
										{
											"begin": 1226,
											"end": 1259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "tag",
											"source": 17,
											"value": "123"
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "45"
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "127"
										},
										{
											"begin": 1226,
											"end": 1259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "tag",
											"source": 0,
											"value": "21"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "tag",
											"source": 0,
											"value": "128"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 2362,
											"end": 2366,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5247,
											"end": 5822,
											"name": "tag",
											"source": 17,
											"value": "22"
										},
										{
											"begin": 5247,
											"end": 5822,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5247,
											"end": 5822,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 5247,
											"end": 5822,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5247,
											"end": 5822,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5247,
											"end": 5822,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "132"
										},
										{
											"begin": 5247,
											"end": 5822,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5247,
											"end": 5822,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5247,
											"end": 5822,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5247,
											"end": 5822,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 5247,
											"end": 5822,
											"name": "tag",
											"source": 17,
											"value": "132"
										},
										{
											"begin": 5247,
											"end": 5822,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5247,
											"end": 5822,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5247,
											"end": 5822,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "55"
										},
										{
											"begin": 5247,
											"end": 5822,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "134"
										},
										{
											"begin": 5247,
											"end": 5822,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "135"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "352E302E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "136"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 1819,
											"end": 1877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3478,
											"end": 3873,
											"name": "tag",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 3478,
											"end": 3873,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3478,
											"end": 3873,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 3478,
											"end": 3873,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3478,
											"end": 3873,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3478,
											"end": 3873,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "140"
										},
										{
											"begin": 3478,
											"end": 3873,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3478,
											"end": 3873,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3478,
											"end": 3873,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3478,
											"end": 3873,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3478,
											"end": 3873,
											"name": "tag",
											"source": 17,
											"value": "140"
										},
										{
											"begin": 3478,
											"end": 3873,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3478,
											"end": 3873,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "55"
										},
										{
											"begin": 3478,
											"end": 3873,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "142"
										},
										{
											"begin": 3478,
											"end": 3873,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 3478,
											"end": 3873,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3478,
											"end": 3873,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "57"
										},
										{
											"begin": 3478,
											"end": 3873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3478,
											"end": 3873,
											"name": "tag",
											"source": 17,
											"value": "142"
										},
										{
											"begin": 3478,
											"end": 3873,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3478,
											"end": 3873,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "143"
										},
										{
											"begin": 3478,
											"end": 3873,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1456,
											"end": 1482,
											"name": "tag",
											"source": 17,
											"value": "25"
										},
										{
											"begin": 1456,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1456,
											"end": 1482,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 1456,
											"end": 1482,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1456,
											"end": 1482,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1456,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "144"
										},
										{
											"begin": 1456,
											"end": 1482,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1456,
											"end": 1482,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1456,
											"end": 1482,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1456,
											"end": 1482,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1456,
											"end": 1482,
											"name": "tag",
											"source": 17,
											"value": "144"
										},
										{
											"begin": 1456,
											"end": 1482,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1456,
											"end": 1482,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 1456,
											"end": 1482,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 1456,
											"end": 1482,
											"name": "PUSH",
											"source": 17,
											"value": "36"
										},
										{
											"begin": 1456,
											"end": 1482,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1456,
											"end": 1482,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1456,
											"end": 1482,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3092,
											"end": 3472,
											"name": "tag",
											"source": 17,
											"value": "26"
										},
										{
											"begin": 3092,
											"end": 3472,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3092,
											"end": 3472,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 3092,
											"end": 3472,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3092,
											"end": 3472,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3092,
											"end": 3472,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "148"
										},
										{
											"begin": 3092,
											"end": 3472,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3092,
											"end": 3472,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3092,
											"end": 3472,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3092,
											"end": 3472,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3092,
											"end": 3472,
											"name": "tag",
											"source": 17,
											"value": "148"
										},
										{
											"begin": 3092,
											"end": 3472,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3092,
											"end": 3472,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "55"
										},
										{
											"begin": 3092,
											"end": 3472,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "150"
										},
										{
											"begin": 3092,
											"end": 3472,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 3092,
											"end": 3472,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3092,
											"end": 3472,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "151"
										},
										{
											"begin": 3092,
											"end": 3472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3092,
											"end": 3472,
											"name": "tag",
											"source": 17,
											"value": "150"
										},
										{
											"begin": 3092,
											"end": 3472,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3092,
											"end": 3472,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "152"
										},
										{
											"begin": 3092,
											"end": 3472,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "tag",
											"source": 0,
											"value": "27"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "55"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 5662,
											"end": 5800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 5662,
											"end": 5800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 752,
											"end": 814,
											"name": "tag",
											"source": 17,
											"value": "28"
										},
										{
											"begin": 752,
											"end": 814,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 752,
											"end": 814,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 752,
											"end": 814,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 752,
											"end": 814,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 752,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "157"
										},
										{
											"begin": 752,
											"end": 814,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 752,
											"end": 814,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 752,
											"end": 814,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 752,
											"end": 814,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 752,
											"end": 814,
											"name": "tag",
											"source": 17,
											"value": "157"
										},
										{
											"begin": 752,
											"end": 814,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 752,
											"end": 814,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 752,
											"end": 814,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9B87106A812D214D41AD9B68A21119E2948EAAF1040375C939EC808B8862455C"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 752,
											"end": 814,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 752,
											"end": 814,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3879,
											"end": 4374,
											"name": "tag",
											"source": 17,
											"value": "29"
										},
										{
											"begin": 3879,
											"end": 4374,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3879,
											"end": 4374,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 3879,
											"end": 4374,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3879,
											"end": 4374,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3879,
											"end": 4374,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "161"
										},
										{
											"begin": 3879,
											"end": 4374,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3879,
											"end": 4374,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3879,
											"end": 4374,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3879,
											"end": 4374,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3879,
											"end": 4374,
											"name": "tag",
											"source": 17,
											"value": "161"
										},
										{
											"begin": 3879,
											"end": 4374,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3879,
											"end": 4374,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "55"
										},
										{
											"begin": 3879,
											"end": 4374,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "163"
										},
										{
											"begin": 3879,
											"end": 4374,
											"name": "CALLDATASIZE",
											"source": 17
										},
										{
											"begin": 3879,
											"end": 4374,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3879,
											"end": 4374,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "57"
										},
										{
											"begin": 3879,
											"end": 4374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3879,
											"end": 4374,
											"name": "tag",
											"source": 17,
											"value": "163"
										},
										{
											"begin": 3879,
											"end": 4374,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3879,
											"end": 4374,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "164"
										},
										{
											"begin": 3879,
											"end": 4374,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 886,
											"end": 952,
											"name": "tag",
											"source": 17,
											"value": "30"
										},
										{
											"begin": 886,
											"end": 952,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 886,
											"end": 952,
											"name": "CALLVALUE",
											"source": 17
										},
										{
											"begin": 886,
											"end": 952,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 886,
											"end": 952,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 886,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "165"
										},
										{
											"begin": 886,
											"end": 952,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 886,
											"end": 952,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 886,
											"end": 952,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 886,
											"end": 952,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 886,
											"end": 952,
											"name": "tag",
											"source": 17,
											"value": "165"
										},
										{
											"begin": 886,
											"end": 952,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 886,
											"end": 952,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 886,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 926,
											"end": 952,
											"name": "PUSH",
											"source": 17,
											"value": "189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3"
										},
										{
											"begin": 886,
											"end": 952,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 886,
											"end": 952,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3528,
											"end": 3532,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3551,
											"end": 3598,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3598,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7965DB0B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3551,
											"end": 3598,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3598,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 3551,
											"end": 3638,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1133,
											"end": 1173,
											"name": "DUP4",
											"source": 8
										},
										{
											"begin": 1133,
											"end": 1173,
											"name": "AND",
											"source": 8
										},
										{
											"begin": 1133,
											"end": 1173,
											"name": "EQ",
											"source": 8
										},
										{
											"begin": 3602,
											"end": 3638,
											"name": "tag",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 3602,
											"end": 3638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3544,
											"end": 3638,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3443,
											"end": 3645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4380,
											"end": 4790,
											"name": "tag",
											"source": 17,
											"value": "58"
										},
										{
											"begin": 4380,
											"end": 4790,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2585,
											"end": 2616,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "174"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2605,
											"end": 2615,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 2585,
											"end": 2592,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "120"
										},
										{
											"begin": 2585,
											"end": 2616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2585,
											"end": 2616,
											"name": "tag",
											"source": 17,
											"value": "174"
										},
										{
											"begin": 2585,
											"end": 2616,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2577,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "175"
										},
										{
											"begin": 2577,
											"end": 2633,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2577,
											"end": 2633,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2577,
											"end": 2633,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2577,
											"end": 2633,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2577,
											"end": 2633,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2577,
											"end": 2633,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2577,
											"end": 2633,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2577,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "176"
										},
										{
											"begin": 2577,
											"end": 2633,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2577,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "177"
										},
										{
											"begin": 2577,
											"end": 2633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2577,
											"end": 2633,
											"name": "tag",
											"source": 17,
											"value": "176"
										},
										{
											"begin": 2577,
											"end": 2633,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2577,
											"end": 2633,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2577,
											"end": 2633,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 2577,
											"end": 2633,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2577,
											"end": 2633,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2577,
											"end": 2633,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2577,
											"end": 2633,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2577,
											"end": 2633,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2577,
											"end": 2633,
											"name": "tag",
											"source": 17,
											"value": "175"
										},
										{
											"begin": 2577,
											"end": 2633,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2722,
											"end": 2734,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "33"
										},
										{
											"begin": 2722,
											"end": 2741,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 4452,
											"end": 4460,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4452,
											"end": 4460,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2711,
											"end": 2741,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2711,
											"end": 2741,
											"modifierDepth": 1,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 2703,
											"end": 2772,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "179"
										},
										{
											"begin": 2703,
											"end": 2772,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2703,
											"end": 2772,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2703,
											"end": 2772,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2703,
											"end": 2772,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2703,
											"end": 2772,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2703,
											"end": 2772,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2703,
											"end": 2772,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2703,
											"end": 2772,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "176"
										},
										{
											"begin": 2703,
											"end": 2772,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2703,
											"end": 2772,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "181"
										},
										{
											"begin": 2703,
											"end": 2772,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2703,
											"end": 2772,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "179"
										},
										{
											"begin": 2703,
											"end": 2772,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4474,
											"end": 4482,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2854,
											"end": 2866,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "33"
										},
										{
											"begin": 2867,
											"end": 2875,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2854,
											"end": 2876,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2854,
											"end": 2876,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 2854,
											"end": 2876,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2854,
											"end": 2876,
											"modifierDepth": 2,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 2854,
											"end": 2876,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "184"
										},
										{
											"begin": 2854,
											"end": 2876,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2854,
											"end": 2876,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "184"
										},
										{
											"begin": 2854,
											"end": 2876,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "185"
										},
										{
											"begin": 2854,
											"end": 2876,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2854,
											"end": 2876,
											"modifierDepth": 2,
											"name": "tag",
											"source": 17,
											"value": "184"
										},
										{
											"begin": 2854,
											"end": 2876,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2854,
											"end": 2876,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2854,
											"end": 2876,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2854,
											"end": 2876,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2854,
											"end": 2876,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2854,
											"end": 2876,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2854,
											"end": 2876,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2854,
											"end": 2876,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2854,
											"end": 2876,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 2854,
											"end": 2885,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 2854,
											"end": 2876,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 2854,
											"end": 2876,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2854,
											"end": 2876,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2854,
											"end": 2876,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 2854,
											"end": 2876,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2854,
											"end": 2885,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2854,
											"end": 2885,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 2854,
											"end": 2885,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 2854,
											"end": 2885,
											"modifierDepth": 2,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2853,
											"end": 2885,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2845,
											"end": 2918,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "187"
										},
										{
											"begin": 2845,
											"end": 2918,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2845,
											"end": 2918,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2845,
											"end": 2918,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2845,
											"end": 2918,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2845,
											"end": 2918,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2845,
											"end": 2918,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2845,
											"end": 2918,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2845,
											"end": 2918,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "176"
										},
										{
											"begin": 2845,
											"end": 2918,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2845,
											"end": 2918,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "189"
										},
										{
											"begin": 2845,
											"end": 2918,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2845,
											"end": 2918,
											"modifierDepth": 2,
											"name": "tag",
											"source": 17,
											"value": "187"
										},
										{
											"begin": 2845,
											"end": 2918,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4494,
											"end": 4525,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4528,
											"end": 4540,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "33"
										},
										{
											"begin": 4541,
											"end": 4549,
											"modifierDepth": 3,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 4528,
											"end": 4550,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4528,
											"end": 4550,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 4528,
											"end": 4550,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4528,
											"end": 4550,
											"modifierDepth": 3,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 4528,
											"end": 4550,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "192"
										},
										{
											"begin": 4528,
											"end": 4550,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4528,
											"end": 4550,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "192"
										},
										{
											"begin": 4528,
											"end": 4550,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "185"
										},
										{
											"begin": 4528,
											"end": 4550,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4528,
											"end": 4550,
											"modifierDepth": 3,
											"name": "tag",
											"source": 17,
											"value": "192"
										},
										{
											"begin": 4528,
											"end": 4550,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4528,
											"end": 4550,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4528,
											"end": 4550,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4528,
											"end": 4550,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4528,
											"end": 4550,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4528,
											"end": 4550,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4528,
											"end": 4550,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4528,
											"end": 4550,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4528,
											"end": 4550,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 4569,
											"end": 4590,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 4569,
											"end": 4590,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 4569,
											"end": 4590,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4569,
											"end": 4580,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 4569,
											"end": 4590,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4569,
											"end": 4590,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4569,
											"end": 4590,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4569,
											"end": 4590,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4569,
											"end": 4590,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 4569,
											"end": 4590,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 4591,
											"end": 4601,
											"modifierDepth": 3,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 4569,
											"end": 4602,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 4569,
											"end": 4602,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4569,
											"end": 4602,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4569,
											"end": 4602,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4569,
											"end": 4602,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4569,
											"end": 4602,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4569,
											"end": 4602,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 4569,
											"end": 4602,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 4528,
											"end": 4550,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 4528,
											"end": 4550,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4528,
											"end": 4550,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4528,
											"end": 4550,
											"modifierDepth": 3,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 4528,
											"end": 4550,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4528,
											"end": 4550,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4528,
											"end": 4550,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4528,
											"end": 4550,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4569,
											"end": 4602,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 4569,
											"end": 4602,
											"modifierDepth": 3,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4561,
											"end": 4632,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "194"
										},
										{
											"begin": 4561,
											"end": 4632,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4561,
											"end": 4632,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4561,
											"end": 4632,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4561,
											"end": 4632,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4561,
											"end": 4632,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6868,
											"end": 6870,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4561,
											"end": 4632,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 4561,
											"end": 4632,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4561,
											"end": 4632,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6850,
											"end": 6871,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6907,
											"end": 6909,
											"name": "PUSH",
											"source": 18,
											"value": "19"
										},
										{
											"begin": 6887,
											"end": 6905,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 6887,
											"end": 6905,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6887,
											"end": 6905,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6880,
											"end": 6910,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6946,
											"end": 6973,
											"name": "PUSH",
											"source": 18,
											"value": "5472616E73616374696F6E206E6F7420636F6E6669726D656400000000000000"
										},
										{
											"begin": 6926,
											"end": 6944,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 6926,
											"end": 6944,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6926,
											"end": 6944,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6919,
											"end": 6974,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6991,
											"end": 7009,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 6991,
											"end": 7009,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4561,
											"end": 4632,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "176"
										},
										{
											"begin": 6666,
											"end": 7015,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4561,
											"end": 4632,
											"modifierDepth": 3,
											"name": "tag",
											"source": 17,
											"value": "194"
										},
										{
											"begin": 4561,
											"end": 4632,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4675,
											"end": 4676,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 4643,
											"end": 4654,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4643,
											"end": 4671,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 4643,
											"end": 4671,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4643,
											"end": 4671,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4643,
											"end": 4676,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4643,
											"end": 4676,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4643,
											"end": 4676,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 4643,
											"end": 4676,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "197"
										},
										{
											"begin": 4643,
											"end": 4676,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4643,
											"end": 4676,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4643,
											"end": 4676,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "198"
										},
										{
											"begin": 4643,
											"end": 4676,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4643,
											"end": 4676,
											"modifierDepth": 3,
											"name": "tag",
											"source": 17,
											"value": "197"
										},
										{
											"begin": 4643,
											"end": 4676,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4643,
											"end": 4676,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4643,
											"end": 4676,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4643,
											"end": 4676,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4722,
											"end": 4727,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4686,
											"end": 4707,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 4686,
											"end": 4707,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4686,
											"end": 4707,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4686,
											"end": 4697,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 4686,
											"end": 4707,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4686,
											"end": 4707,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4686,
											"end": 4707,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4686,
											"end": 4707,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4686,
											"end": 4707,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4686,
											"end": 4707,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4686,
											"end": 4707,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4686,
											"end": 4707,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 4708,
											"end": 4718,
											"modifierDepth": 3,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 4686,
											"end": 4719,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4686,
											"end": 4719,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 4686,
											"end": 4719,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4686,
											"end": 4719,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4686,
											"end": 4719,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4686,
											"end": 4719,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4686,
											"end": 4719,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4686,
											"end": 4719,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 4686,
											"end": 4727,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4686,
											"end": 4727,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4686,
											"end": 4727,
											"modifierDepth": 3,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4686,
											"end": 4727,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4686,
											"end": 4727,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 4743,
											"end": 4783,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4698,
											"end": 4706,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 4698,
											"end": 4706,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4743,
											"end": 4783,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "E5C8875C5E14471F806F15F740CD9FD54937D151E9DCF8AD3BA988D6A285E67E"
										},
										{
											"begin": 4743,
											"end": 4783,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4743,
											"end": 4783,
											"modifierDepth": 3,
											"name": "LOG3",
											"source": 17
										},
										{
											"begin": 4484,
											"end": 4790,
											"modifierDepth": 3,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2782,
											"end": 2783,
											"modifierDepth": 2,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2643,
											"end": 2644,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4380,
											"end": 4790,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4380,
											"end": 4790,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "tag",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4824,
											"end": 4831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "B3DA67D1B252AEAB7C8063542D95E75F82A5307A82535949BC38F7CF7BA8897F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4943,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4919,
											"end": 4943,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4943,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4943,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "tag",
											"source": 0,
											"value": "70"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 5333,
											"end": 5337,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 5320,
											"end": 5338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5338,
											"name": "tag",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 5320,
											"end": 5338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "204"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5350,
											"end": 5375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 5361,
											"end": 5365,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5367,
											"end": 5374,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5350,
											"end": 5360,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 5350,
											"end": 5375,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5350,
											"end": 5375,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 5350,
											"end": 5375,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5350,
											"end": 5375,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "tag",
											"source": 0,
											"value": "74"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6441,
											"end": 6475,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6441,
											"end": 6475,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 6441,
											"end": 6475,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6437,
											"end": 6539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 6437,
											"end": 6539,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "334BD919"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6437,
											"end": 6539,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 6437,
											"end": 6539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6549,
											"end": 6586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 6561,
											"end": 6565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6585,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6549,
											"end": 6560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 6549,
											"end": 6586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6549,
											"end": 6586,
											"name": "tag",
											"source": 0,
											"value": "213"
										},
										{
											"begin": 6549,
											"end": 6586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6549,
											"end": 6586,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5905,
											"end": 5980,
											"name": "tag",
											"source": 17,
											"value": "77"
										},
										{
											"begin": 5905,
											"end": 5980,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9B87106A812D214D41AD9B68A21119E2948EAAF1040375C939EC808B8862455C"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5963,
											"end": 5973,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "218"
										},
										{
											"begin": 5963,
											"end": 5971,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "219"
										},
										{
											"begin": 5963,
											"end": 5973,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5963,
											"end": 5973,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "218"
										},
										{
											"begin": 5963,
											"end": 5973,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5905,
											"end": 5980,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5905,
											"end": 5980,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "tag",
											"source": 2,
											"value": "81"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2653,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 2653,
											"end": 2664,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 2653,
											"end": 2666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2653,
											"end": 2666,
											"name": "tag",
											"source": 2,
											"value": "221"
										},
										{
											"begin": 2653,
											"end": 2666,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4309,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 4291,
											"end": 4308,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4290,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "225"
										},
										{
											"begin": 4273,
											"end": 4309,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4309,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "224"
										},
										{
											"begin": 4273,
											"end": 4309,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4319,
											"end": 4365,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 4341,
											"end": 4358,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4360,
											"end": 4364,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4319,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 4319,
											"end": 4365,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4319,
											"end": 4365,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "226"
										},
										{
											"begin": 4319,
											"end": 4365,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "tag",
											"source": 2,
											"value": "84"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3774,
											"end": 3781,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2924,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 2924,
											"end": 2942,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 2924,
											"end": 2944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2924,
											"end": 2944,
											"name": "tag",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 2924,
											"end": 2944,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4825,
											"end": 5241,
											"name": "tag",
											"source": 17,
											"value": "93"
										},
										{
											"begin": 4825,
											"end": 5241,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 1503,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 1503,
											"end": 1522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "tag",
											"source": 3,
											"value": "234"
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 4970,
											"end": 5024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4970,
											"end": 5024,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4970,
											"end": 5024,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4970,
											"end": 5024,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4989,
											"end": 4999,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 4970,
											"end": 5024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 4970,
											"end": 5024,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4970,
											"end": 5024,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7525,
											"end": 7559,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4946,
											"end": 4950,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 17
										},
										{
											"begin": 7575,
											"end": 7593,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 7575,
											"end": 7593,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7575,
											"end": 7593,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7568,
											"end": 7611,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7568,
											"end": 7611,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7568,
											"end": 7611,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7627,
											"end": 7645,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 7627,
											"end": 7645,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7627,
											"end": 7645,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 7620,
											"end": 7654,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 7620,
											"end": 7654,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 7620,
											"end": 7654,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4946,
											"end": 4950,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4946,
											"end": 4950,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4946,
											"end": 4950,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4970,
											"end": 4988,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "23B872DD"
										},
										{
											"begin": 4970,
											"end": 4988,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7460,
											"end": 7478,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 7460,
											"end": 7478,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4970,
											"end": 5024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4970,
											"end": 5024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4970,
											"end": 5024,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4970,
											"end": 5024,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4970,
											"end": 5024,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4970,
											"end": 5024,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 4970,
											"end": 5024,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4970,
											"end": 5024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4970,
											"end": 5024,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 4970,
											"end": 5024,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 17
										},
										{
											"begin": 4970,
											"end": 5024,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 17
										},
										{
											"begin": 4970,
											"end": 5024,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4970,
											"end": 5024,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4970,
											"end": 5024,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4970,
											"end": 5024,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "240"
										},
										{
											"begin": 4970,
											"end": 5024,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4970,
											"end": 5024,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 4970,
											"end": 5024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4970,
											"end": 5024,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4970,
											"end": 5024,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 17
										},
										{
											"begin": 4970,
											"end": 5024,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 4970,
											"end": 5024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4970,
											"end": 5024,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4970,
											"end": 5024,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "240"
										},
										{
											"begin": 4970,
											"end": 5024,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4970,
											"end": 5024,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4970,
											"end": 5024,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4970,
											"end": 5024,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4970,
											"end": 5024,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4970,
											"end": 5024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4970,
											"end": 5024,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4970,
											"end": 5024,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 4970,
											"end": 5024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 4970,
											"end": 5024,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 4970,
											"end": 5024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 4970,
											"end": 5024,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4970,
											"end": 5024,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4970,
											"end": 5024,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4970,
											"end": 5024,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4970,
											"end": 5024,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4970,
											"end": 5024,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4970,
											"end": 5024,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4970,
											"end": 5024,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4970,
											"end": 5024,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4970,
											"end": 5024,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4970,
											"end": 5024,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4970,
											"end": 5024,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4970,
											"end": 5024,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "241"
										},
										{
											"begin": 4970,
											"end": 5024,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4970,
											"end": 5024,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4970,
											"end": 5024,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "242"
										},
										{
											"begin": 4970,
											"end": 5024,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4970,
											"end": 5024,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "241"
										},
										{
											"begin": 4970,
											"end": 5024,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4962,
											"end": 5050,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "243"
										},
										{
											"begin": 4962,
											"end": 5050,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4962,
											"end": 5050,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4962,
											"end": 5050,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4962,
											"end": 5050,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4962,
											"end": 5050,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8149,
											"end": 8151,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4962,
											"end": 5050,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 4962,
											"end": 5050,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4962,
											"end": 5050,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8131,
											"end": 8152,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8188,
											"end": 8190,
											"name": "PUSH",
											"source": 18,
											"value": "15"
										},
										{
											"begin": 8168,
											"end": 8186,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 8168,
											"end": 8186,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8168,
											"end": 8186,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8161,
											"end": 8191,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "151BDAD95B881D1C985B9CD9995C8819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8207,
											"end": 8225,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 8207,
											"end": 8225,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8207,
											"end": 8225,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8200,
											"end": 8251,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8268,
											"end": 8286,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 8268,
											"end": 8286,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4962,
											"end": 5050,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "176"
										},
										{
											"begin": 7947,
											"end": 8292,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4962,
											"end": 5050,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "243"
										},
										{
											"begin": 4962,
											"end": 5050,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5082,
											"end": 5168,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5082,
											"end": 5168,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5082,
											"end": 5168,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 5082,
											"end": 5168,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5082,
											"end": 5168,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5082,
											"end": 5168,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5082,
											"end": 5168,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5082,
											"end": 5168,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5082,
											"end": 5168,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5082,
											"end": 5168,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5082,
											"end": 5168,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5142,
											"end": 5157,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 17
										},
										{
											"begin": 5082,
											"end": 5168,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5082,
											"end": 5168,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5082,
											"end": 5168,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5082,
											"end": 5168,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5082,
											"end": 5168,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5082,
											"end": 5168,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5082,
											"end": 5168,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5068,
											"end": 5078,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 5061,
											"end": 5079,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5061,
											"end": 5079,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5061,
											"end": 5079,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5061,
											"end": 5067,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "35"
										},
										{
											"begin": 5061,
											"end": 5079,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 5061,
											"end": 5079,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5061,
											"end": 5079,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 5061,
											"end": 5079,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5061,
											"end": 5079,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 5061,
											"end": 5168,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 5061,
											"end": 5168,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 5061,
											"end": 5168,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 5061,
											"end": 5168,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 5061,
											"end": 5168,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5061,
											"end": 5168,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 5061,
											"end": 5168,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 5061,
											"end": 5168,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5061,
											"end": 5168,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 5061,
											"end": 5168,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5061,
											"end": 5168,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 5061,
											"end": 5168,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5061,
											"end": 5168,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 5061,
											"end": 5168,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 5184,
											"end": 5234,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5184,
											"end": 5234,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1040,
											"end": 1065,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 1040,
											"end": 1065,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1040,
											"end": 1065,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1081,
											"end": 1099,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1081,
											"end": 1099,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1081,
											"end": 1099,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1074,
											"end": 1108,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1074,
											"end": 1108,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1074,
											"end": 1108,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1074,
											"end": 1108,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5068,
											"end": 5078,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5068,
											"end": 5078,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5184,
											"end": 5234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "DD2A19C3BDD089CBE77C04F5655F83DE0504D6140D12C8667646F55D0557C4DC"
										},
										{
											"begin": 5184,
											"end": 5234,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1013,
											"end": 1031,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5184,
											"end": 5234,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5184,
											"end": 5234,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 5184,
											"end": 5234,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5184,
											"end": 5234,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5184,
											"end": 5234,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 5184,
											"end": 5234,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5184,
											"end": 5234,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 17
										},
										{
											"begin": 4884,
											"end": 5241,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4825,
											"end": 5241,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4825,
											"end": 5241,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2070,
											"end": 2540,
											"name": "tag",
											"source": 17,
											"value": "102"
										},
										{
											"begin": 2070,
											"end": 2540,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "PUSH",
											"source": 1,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4760,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "tag",
											"source": 1,
											"value": "250"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4787,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4790,
											"end": 4801,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4805,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4818,
											"end": 4822,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4840,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "tag",
											"source": 1,
											"value": "251"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4856,
											"end": 4868,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4868,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4872,
											"end": 4885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "tag",
											"source": 1,
											"value": "252"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F92EE8A9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "tag",
											"source": 1,
											"value": "253"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4968,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "tag",
											"source": 1,
											"value": "254"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2188,
											"end": 2210,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "256"
										},
										{
											"begin": 2188,
											"end": 2208,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "257"
										},
										{
											"begin": 2188,
											"end": 2210,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2188,
											"end": 2210,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "256"
										},
										{
											"begin": 2188,
											"end": 2210,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2220,
											"end": 2237,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "258"
										},
										{
											"begin": 2220,
											"end": 2235,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "259"
										},
										{
											"begin": 2220,
											"end": 2237,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2220,
											"end": 2237,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "258"
										},
										{
											"begin": 2220,
											"end": 2237,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2247,
											"end": 2271,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "260"
										},
										{
											"begin": 2247,
											"end": 2269,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "257"
										},
										{
											"begin": 2247,
											"end": 2271,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2247,
											"end": 2271,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "260"
										},
										{
											"begin": 2247,
											"end": 2271,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2282,
											"end": 2319,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "262"
										},
										{
											"begin": 2362,
											"end": 2366,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2313,
											"end": 2318,
											"name": "DUP10",
											"source": 17
										},
										{
											"begin": 2282,
											"end": 2292,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "208"
										},
										{
											"begin": 2282,
											"end": 2319,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2282,
											"end": 2319,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "262"
										},
										{
											"begin": 2282,
											"end": 2319,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2282,
											"end": 2319,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2329,
											"end": 2359,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "263"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9B87106A812D214D41AD9B68A21119E2948EAAF1040375C939EC808B8862455C"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2353,
											"end": 2358,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 17
										},
										{
											"begin": 2329,
											"end": 2339,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "208"
										},
										{
											"begin": 2329,
											"end": 2359,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2329,
											"end": 2359,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "263"
										},
										{
											"begin": 2329,
											"end": 2359,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2329,
											"end": 2359,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2369,
											"end": 2398,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "264"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2392,
											"end": 2397,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 17
										},
										{
											"begin": 2369,
											"end": 2379,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "208"
										},
										{
											"begin": 2369,
											"end": 2398,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2369,
											"end": 2398,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "264"
										},
										{
											"begin": 2369,
											"end": 2398,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2369,
											"end": 2398,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2408,
											"end": 2440,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "265"
										},
										{
											"begin": 926,
											"end": 952,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3"
										},
										{
											"begin": 2434,
											"end": 2439,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 17
										},
										{
											"begin": 2408,
											"end": 2418,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "208"
										},
										{
											"begin": 2408,
											"end": 2440,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2408,
											"end": 2440,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "265"
										},
										{
											"begin": 2408,
											"end": 2440,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2451,
											"end": 2472,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "34"
										},
										{
											"begin": 2451,
											"end": 2497,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 2451,
											"end": 2497,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2451,
											"end": 2497,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 2507,
											"end": 2518,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "36"
										},
										{
											"begin": 2507,
											"end": 2533,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 2507,
											"end": 2533,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2507,
											"end": 2533,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 8450,
											"end": 8500,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8450,
											"end": 8500,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8438,
											"end": 8440,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8423,
											"end": 8441,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "tag",
											"source": 1,
											"value": "266"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2070,
											"end": 2540,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2070,
											"end": 2540,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2070,
											"end": 2540,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2070,
											"end": 2540,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5828,
											"end": 5899,
											"name": "tag",
											"source": 17,
											"value": "116"
										},
										{
											"begin": 5828,
											"end": 5899,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9B87106A812D214D41AD9B68A21119E2948EAAF1040375C939EC808B8862455C"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "270"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5884,
											"end": 5892,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "218"
										},
										{
											"begin": 5884,
											"end": 5890,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "273"
										},
										{
											"begin": 5884,
											"end": 5892,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "tag",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3809,
											"end": 3813,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "B3DA67D1B252AEAB7C8063542D95E75F82A5307A82535949BC38F7CF7BA8897F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "tag",
											"source": 17,
											"value": "125"
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "PUSH",
											"source": 17,
											"value": "33"
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "276"
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "tag",
											"source": 17,
											"value": "276"
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "PUSH",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "278"
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "279"
										},
										{
											"begin": 1226,
											"end": 1259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "tag",
											"source": 17,
											"value": "278"
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "280"
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "279"
										},
										{
											"begin": 1226,
											"end": 1259,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "tag",
											"source": 17,
											"value": "280"
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "281"
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "282"
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "PUSH",
											"source": 17,
											"value": "100"
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "281"
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "tag",
											"source": 17,
											"value": "282"
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "tag",
											"source": 17,
											"value": "283"
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "283"
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "tag",
											"source": 17,
											"value": "281"
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "PUSH",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1226,
											"end": 1259,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 1226,
											"end": 1259,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5247,
											"end": 5822,
											"name": "tag",
											"source": 17,
											"value": "134"
										},
										{
											"begin": 5247,
											"end": 5822,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 1503,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 1503,
											"end": 1522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "tag",
											"source": 3,
											"value": "285"
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 5331,
											"end": 5341,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 5303,
											"end": 5321,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5324,
											"end": 5342,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5324,
											"end": 5342,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5324,
											"end": 5342,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5324,
											"end": 5330,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "35"
										},
										{
											"begin": 5324,
											"end": 5342,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5324,
											"end": 5342,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5324,
											"end": 5342,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5324,
											"end": 5342,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5324,
											"end": 5342,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5324,
											"end": 5342,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5324,
											"end": 5342,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5324,
											"end": 5342,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5324,
											"end": 5342,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 5303,
											"end": 5342,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5303,
											"end": 5342,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 5303,
											"end": 5342,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5303,
											"end": 5342,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 5303,
											"end": 5342,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5303,
											"end": 5342,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5303,
											"end": 5342,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 5303,
											"end": 5342,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5303,
											"end": 5342,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5303,
											"end": 5342,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 5303,
											"end": 5342,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5303,
											"end": 5342,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 5303,
											"end": 5342,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5303,
											"end": 5342,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 5303,
											"end": 5342,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5303,
											"end": 5342,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5303,
											"end": 5342,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5303,
											"end": 5342,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 5303,
											"end": 5342,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5303,
											"end": 5342,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5303,
											"end": 5342,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5303,
											"end": 5342,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5303,
											"end": 5342,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5303,
											"end": 5342,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5303,
											"end": 5342,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5352,
											"end": 5397,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "287"
										},
										{
											"begin": 5352,
											"end": 5397,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5352,
											"end": 5397,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5352,
											"end": 5397,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5352,
											"end": 5397,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5352,
											"end": 5397,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9098,
											"end": 9100,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 5352,
											"end": 5397,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 5352,
											"end": 5397,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5352,
											"end": 5397,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9080,
											"end": 9101,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9137,
											"end": 9139,
											"name": "PUSH",
											"source": 18,
											"value": "10"
										},
										{
											"begin": 9117,
											"end": 9135,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 9117,
											"end": 9135,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9117,
											"end": 9135,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9110,
											"end": 9140,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "139BC81D1BDAD95B9CC81CDD185AD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9156,
											"end": 9174,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 9156,
											"end": 9174,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9156,
											"end": 9174,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9149,
											"end": 9195,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9212,
											"end": 9230,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 9212,
											"end": 9230,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5352,
											"end": 5397,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "176"
										},
										{
											"begin": 8896,
											"end": 9236,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5352,
											"end": 5397,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "287"
										},
										{
											"begin": 5352,
											"end": 5397,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5408,
											"end": 5431,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5452,
											"end": 5457,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5452,
											"end": 5467,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5452,
											"end": 5467,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5452,
											"end": 5467,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 5434,
											"end": 5449,
											"modifierDepth": 1,
											"name": "TIMESTAMP",
											"source": 17
										},
										{
											"begin": 5434,
											"end": 5467,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "290"
										},
										{
											"begin": 5434,
											"end": 5467,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5434,
											"end": 5467,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5434,
											"end": 5467,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "198"
										},
										{
											"begin": 5434,
											"end": 5467,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5434,
											"end": 5467,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "290"
										},
										{
											"begin": 5434,
											"end": 5467,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5408,
											"end": 5467,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5408,
											"end": 5467,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5477,
											"end": 5491,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5544,
											"end": 5552,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "1E13380"
										},
										{
											"begin": 5524,
											"end": 5539,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5510,
											"end": 5521,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "36"
										},
										{
											"begin": 5510,
											"end": 5521,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 5495,
											"end": 5500,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 5495,
											"end": 5507,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5495,
											"end": 5507,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5495,
											"end": 5507,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 5495,
											"end": 5521,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "291"
										},
										{
											"begin": 5495,
											"end": 5521,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5495,
											"end": 5521,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5495,
											"end": 5521,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "292"
										},
										{
											"begin": 5495,
											"end": 5521,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5495,
											"end": 5521,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "291"
										},
										{
											"begin": 5495,
											"end": 5521,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5495,
											"end": 5539,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "293"
										},
										{
											"begin": 5495,
											"end": 5539,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5495,
											"end": 5539,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5495,
											"end": 5539,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "292"
										},
										{
											"begin": 5495,
											"end": 5539,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5495,
											"end": 5539,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "293"
										},
										{
											"begin": 5495,
											"end": 5539,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5494,
											"end": 5553,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "294"
										},
										{
											"begin": 5494,
											"end": 5553,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5494,
											"end": 5553,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5494,
											"end": 5553,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "295"
										},
										{
											"begin": 5494,
											"end": 5553,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5494,
											"end": 5553,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "294"
										},
										{
											"begin": 5494,
											"end": 5553,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5667,
											"end": 5679,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5667,
											"end": 5679,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 5477,
											"end": 5553,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5477,
											"end": 5553,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5616,
											"end": 5620,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 17
										},
										{
											"begin": 5616,
											"end": 5620,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5616,
											"end": 5620,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5616,
											"end": 5620,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5640,
											"end": 5654,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "A9059CBB"
										},
										{
											"begin": 5640,
											"end": 5654,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5655,
											"end": 5665,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 5655,
											"end": 5665,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5667,
											"end": 5688,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "296"
										},
										{
											"begin": 5667,
											"end": 5688,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5477,
											"end": 5553,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 5477,
											"end": 5553,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5667,
											"end": 5688,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "297"
										},
										{
											"begin": 5667,
											"end": 5688,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5667,
											"end": 5688,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "296"
										},
										{
											"begin": 5667,
											"end": 5688,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5640,
											"end": 5689,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5640,
											"end": 5689,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5640,
											"end": 5689,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 5640,
											"end": 5689,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 5640,
											"end": 5689,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5640,
											"end": 5689,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 5640,
											"end": 5689,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5640,
											"end": 5689,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5640,
											"end": 5689,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9958,
											"end": 9990,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 9958,
											"end": 9990,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 9958,
											"end": 9990,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 5640,
											"end": 5689,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 5640,
											"end": 5689,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5640,
											"end": 5689,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9940,
											"end": 9991,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10007,
											"end": 10025,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 10007,
											"end": 10025,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10007,
											"end": 10025,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10000,
											"end": 10034,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9913,
											"end": 9931,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 9913,
											"end": 9931,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5640,
											"end": 5689,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5640,
											"end": 5689,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5640,
											"end": 5689,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 5640,
											"end": 5689,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5640,
											"end": 5689,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5640,
											"end": 5689,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 5640,
											"end": 5689,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5640,
											"end": 5689,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5640,
											"end": 5689,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 5640,
											"end": 5689,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 17
										},
										{
											"begin": 5640,
											"end": 5689,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 17
										},
										{
											"begin": 5640,
											"end": 5689,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5640,
											"end": 5689,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5640,
											"end": 5689,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5640,
											"end": 5689,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "301"
										},
										{
											"begin": 5640,
											"end": 5689,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5640,
											"end": 5689,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 5640,
											"end": 5689,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5640,
											"end": 5689,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5640,
											"end": 5689,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 17
										},
										{
											"begin": 5640,
											"end": 5689,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 5640,
											"end": 5689,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5640,
											"end": 5689,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 5640,
											"end": 5689,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "301"
										},
										{
											"begin": 5640,
											"end": 5689,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5640,
											"end": 5689,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5640,
											"end": 5689,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5640,
											"end": 5689,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5640,
											"end": 5689,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5640,
											"end": 5689,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5640,
											"end": 5689,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 5640,
											"end": 5689,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 5640,
											"end": 5689,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 5640,
											"end": 5689,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 5640,
											"end": 5689,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 5640,
											"end": 5689,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5640,
											"end": 5689,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5640,
											"end": 5689,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5640,
											"end": 5689,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5640,
											"end": 5689,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5640,
											"end": 5689,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5640,
											"end": 5689,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5640,
											"end": 5689,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5640,
											"end": 5689,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5640,
											"end": 5689,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5640,
											"end": 5689,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5640,
											"end": 5689,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5640,
											"end": 5689,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "302"
										},
										{
											"begin": 5640,
											"end": 5689,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5640,
											"end": 5689,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5640,
											"end": 5689,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "242"
										},
										{
											"begin": 5640,
											"end": 5689,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5640,
											"end": 5689,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "302"
										},
										{
											"begin": 5640,
											"end": 5689,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5632,
											"end": 5715,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "303"
										},
										{
											"begin": 5632,
											"end": 5715,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5632,
											"end": 5715,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5632,
											"end": 5715,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5632,
											"end": 5715,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5632,
											"end": 5715,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8149,
											"end": 8151,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 5632,
											"end": 5715,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 5632,
											"end": 5715,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5632,
											"end": 5715,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8131,
											"end": 8152,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8188,
											"end": 8190,
											"name": "PUSH",
											"source": 18,
											"value": "15"
										},
										{
											"begin": 8168,
											"end": 8186,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 8168,
											"end": 8186,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8168,
											"end": 8186,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8161,
											"end": 8191,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "151BDAD95B881D1C985B9CD9995C8819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "5A"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8207,
											"end": 8225,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 8207,
											"end": 8225,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8207,
											"end": 8225,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 8200,
											"end": 8251,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8268,
											"end": 8286,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 8268,
											"end": 8286,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5632,
											"end": 5715,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "176"
										},
										{
											"begin": 7947,
											"end": 8292,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5632,
											"end": 5715,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "303"
										},
										{
											"begin": 5632,
											"end": 5715,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5740,
											"end": 5750,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 5733,
											"end": 5751,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5733,
											"end": 5739,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "35"
										},
										{
											"begin": 5733,
											"end": 5751,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5733,
											"end": 5751,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 5726,
											"end": 5751,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 5726,
											"end": 5751,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5726,
											"end": 5751,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 5794,
											"end": 5806,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 5794,
											"end": 5806,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 5767,
											"end": 5815,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5767,
											"end": 5815,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 1040,
											"end": 1065,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1040,
											"end": 1065,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1040,
											"end": 1065,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1081,
											"end": 1099,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1081,
											"end": 1099,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 1081,
											"end": 1099,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1074,
											"end": 1108,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 1074,
											"end": 1108,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1074,
											"end": 1108,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5767,
											"end": 5815,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "6F2D3E000C89D37446B7C0374C0125068FF316D1E3EE302336478A8CD03C2336"
										},
										{
											"begin": 5767,
											"end": 5815,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 1013,
											"end": 1031,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5767,
											"end": 5815,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5767,
											"end": 5815,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 5767,
											"end": 5815,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5767,
											"end": 5815,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5767,
											"end": 5815,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 5767,
											"end": 5815,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5767,
											"end": 5815,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 17
										},
										{
											"begin": 5293,
											"end": 5822,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5293,
											"end": 5822,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5293,
											"end": 5822,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5293,
											"end": 5822,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5247,
											"end": 5822,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3478,
											"end": 3873,
											"name": "tag",
											"source": 17,
											"value": "143"
										},
										{
											"begin": 3478,
											"end": 3873,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2585,
											"end": 2616,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "307"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2605,
											"end": 2615,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 2585,
											"end": 2592,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "120"
										},
										{
											"begin": 2585,
											"end": 2616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2585,
											"end": 2616,
											"name": "tag",
											"source": 17,
											"value": "307"
										},
										{
											"begin": 2585,
											"end": 2616,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2577,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "308"
										},
										{
											"begin": 2577,
											"end": 2633,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2577,
											"end": 2633,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2577,
											"end": 2633,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2577,
											"end": 2633,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2577,
											"end": 2633,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2577,
											"end": 2633,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2577,
											"end": 2633,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2577,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "176"
										},
										{
											"begin": 2577,
											"end": 2633,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2577,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "177"
										},
										{
											"begin": 2577,
											"end": 2633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2577,
											"end": 2633,
											"name": "tag",
											"source": 17,
											"value": "308"
										},
										{
											"begin": 2577,
											"end": 2633,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2722,
											"end": 2734,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "33"
										},
										{
											"begin": 2722,
											"end": 2741,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 3574,
											"end": 3582,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3574,
											"end": 3582,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2711,
											"end": 2741,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2711,
											"end": 2741,
											"modifierDepth": 1,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 2703,
											"end": 2772,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "311"
										},
										{
											"begin": 2703,
											"end": 2772,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2703,
											"end": 2772,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2703,
											"end": 2772,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2703,
											"end": 2772,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2703,
											"end": 2772,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2703,
											"end": 2772,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2703,
											"end": 2772,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2703,
											"end": 2772,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "176"
										},
										{
											"begin": 2703,
											"end": 2772,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2703,
											"end": 2772,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "181"
										},
										{
											"begin": 2703,
											"end": 2772,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2703,
											"end": 2772,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "311"
										},
										{
											"begin": 2703,
											"end": 2772,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3604,
											"end": 3612,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2854,
											"end": 2866,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "33"
										},
										{
											"begin": 2867,
											"end": 2875,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2854,
											"end": 2876,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2854,
											"end": 2876,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 2854,
											"end": 2876,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2854,
											"end": 2876,
											"modifierDepth": 2,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 2854,
											"end": 2876,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "315"
										},
										{
											"begin": 2854,
											"end": 2876,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2854,
											"end": 2876,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "315"
										},
										{
											"begin": 2854,
											"end": 2876,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "185"
										},
										{
											"begin": 2854,
											"end": 2876,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2854,
											"end": 2876,
											"modifierDepth": 2,
											"name": "tag",
											"source": 17,
											"value": "315"
										},
										{
											"begin": 2854,
											"end": 2876,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2854,
											"end": 2876,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2854,
											"end": 2876,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2854,
											"end": 2876,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2854,
											"end": 2876,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2854,
											"end": 2876,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2854,
											"end": 2876,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2854,
											"end": 2876,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2854,
											"end": 2876,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 2854,
											"end": 2885,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 2854,
											"end": 2876,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 2854,
											"end": 2876,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2854,
											"end": 2876,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2854,
											"end": 2876,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 2854,
											"end": 2876,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2854,
											"end": 2885,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2854,
											"end": 2885,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 2854,
											"end": 2885,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 2854,
											"end": 2885,
											"modifierDepth": 2,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2853,
											"end": 2885,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2845,
											"end": 2918,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "317"
										},
										{
											"begin": 2845,
											"end": 2918,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2845,
											"end": 2918,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2845,
											"end": 2918,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2845,
											"end": 2918,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2845,
											"end": 2918,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2845,
											"end": 2918,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2845,
											"end": 2918,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2845,
											"end": 2918,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "176"
										},
										{
											"begin": 2845,
											"end": 2918,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2845,
											"end": 2918,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "189"
										},
										{
											"begin": 2845,
											"end": 2918,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2845,
											"end": 2918,
											"modifierDepth": 2,
											"name": "tag",
											"source": 17,
											"value": "317"
										},
										{
											"begin": 2845,
											"end": 2918,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3001,
											"end": 3022,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3001,
											"end": 3022,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3001,
											"end": 3022,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3001,
											"end": 3022,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3001,
											"end": 3012,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 3001,
											"end": 3022,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3001,
											"end": 3022,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3001,
											"end": 3022,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3001,
											"end": 3022,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3001,
											"end": 3022,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3001,
											"end": 3022,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3001,
											"end": 3022,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3001,
											"end": 3022,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 3023,
											"end": 3033,
											"modifierDepth": 3,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 3001,
											"end": 3034,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3001,
											"end": 3034,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3001,
											"end": 3034,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3001,
											"end": 3034,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3001,
											"end": 3034,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3001,
											"end": 3034,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3001,
											"end": 3034,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 3001,
											"end": 3034,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 3635,
											"end": 3643,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3635,
											"end": 3643,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3001,
											"end": 3034,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 3001,
											"end": 3034,
											"modifierDepth": 3,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3000,
											"end": 3034,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2992,
											"end": 3068,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "320"
										},
										{
											"begin": 2992,
											"end": 3068,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2992,
											"end": 3068,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2992,
											"end": 3068,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2992,
											"end": 3068,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2992,
											"end": 3068,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10247,
											"end": 10249,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2992,
											"end": 3068,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2992,
											"end": 3068,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2992,
											"end": 3068,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10229,
											"end": 10250,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10286,
											"end": 10288,
											"name": "PUSH",
											"source": 18,
											"value": "1D"
										},
										{
											"begin": 10266,
											"end": 10284,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 10266,
											"end": 10284,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10266,
											"end": 10284,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10259,
											"end": 10289,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10325,
											"end": 10356,
											"name": "PUSH",
											"source": 18,
											"value": "5472616E73616374696F6E20616C726561647920636F6E6669726D6564000000"
										},
										{
											"begin": 10305,
											"end": 10323,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 10305,
											"end": 10323,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10305,
											"end": 10323,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10298,
											"end": 10357,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10374,
											"end": 10392,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 10374,
											"end": 10392,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2992,
											"end": 3068,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "176"
										},
										{
											"begin": 10045,
											"end": 10398,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2992,
											"end": 3068,
											"modifierDepth": 3,
											"name": "tag",
											"source": 17,
											"value": "320"
										},
										{
											"begin": 2992,
											"end": 3068,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3659,
											"end": 3690,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3693,
											"end": 3705,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 17,
											"value": "33"
										},
										{
											"begin": 3706,
											"end": 3714,
											"modifierDepth": 4,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 3693,
											"end": 3715,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3693,
											"end": 3715,
											"modifierDepth": 4,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 3693,
											"end": 3715,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3693,
											"end": 3715,
											"modifierDepth": 4,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 3693,
											"end": 3715,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "325"
										},
										{
											"begin": 3693,
											"end": 3715,
											"modifierDepth": 4,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3693,
											"end": 3715,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "325"
										},
										{
											"begin": 3693,
											"end": 3715,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "185"
										},
										{
											"begin": 3693,
											"end": 3715,
											"jumpType": "[in]",
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3693,
											"end": 3715,
											"modifierDepth": 4,
											"name": "tag",
											"source": 17,
											"value": "325"
										},
										{
											"begin": 3693,
											"end": 3715,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3693,
											"end": 3715,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3693,
											"end": 3715,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3693,
											"end": 3715,
											"modifierDepth": 4,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3693,
											"end": 3715,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3693,
											"end": 3715,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3693,
											"end": 3715,
											"modifierDepth": 4,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 3693,
											"end": 3715,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3693,
											"end": 3715,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 3693,
											"end": 3715,
											"modifierDepth": 4,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 3693,
											"end": 3715,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3659,
											"end": 3715,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3659,
											"end": 3715,
											"modifierDepth": 4,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3757,
											"end": 3758,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 3725,
											"end": 3736,
											"modifierDepth": 4,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3725,
											"end": 3753,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3725,
											"end": 3753,
											"modifierDepth": 4,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3725,
											"end": 3753,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3725,
											"end": 3758,
											"modifierDepth": 4,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3725,
											"end": 3758,
											"modifierDepth": 4,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3725,
											"end": 3758,
											"modifierDepth": 4,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 3725,
											"end": 3758,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "327"
										},
										{
											"begin": 3725,
											"end": 3758,
											"modifierDepth": 4,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3725,
											"end": 3758,
											"modifierDepth": 4,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3725,
											"end": 3758,
											"modifierDepth": 4,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "297"
										},
										{
											"begin": 3725,
											"end": 3758,
											"jumpType": "[in]",
											"modifierDepth": 4,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3725,
											"end": 3758,
											"modifierDepth": 4,
											"name": "tag",
											"source": 17,
											"value": "327"
										},
										{
											"begin": 3725,
											"end": 3758,
											"modifierDepth": 4,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3725,
											"end": 3758,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3725,
											"end": 3758,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3725,
											"end": 3758,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3768,
											"end": 3789,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3768,
											"end": 3789,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 3768,
											"end": 3789,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3768,
											"end": 3789,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3768,
											"end": 3779,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 17,
											"value": "32"
										},
										{
											"begin": 3768,
											"end": 3789,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3768,
											"end": 3789,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3768,
											"end": 3789,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3768,
											"end": 3789,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3768,
											"end": 3789,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3768,
											"end": 3789,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3768,
											"end": 3789,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3768,
											"end": 3789,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 3790,
											"end": 3800,
											"modifierDepth": 4,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 3768,
											"end": 3801,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3768,
											"end": 3801,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 3768,
											"end": 3801,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3768,
											"end": 3801,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3768,
											"end": 3801,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3768,
											"end": 3801,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3768,
											"end": 3801,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3768,
											"end": 3801,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 3768,
											"end": 3808,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3768,
											"end": 3808,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3768,
											"end": 3808,
											"modifierDepth": 4,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3804,
											"end": 3808,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 3768,
											"end": 3808,
											"modifierDepth": 4,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 3768,
											"end": 3808,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3768,
											"end": 3808,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 3824,
											"end": 3866,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3780,
											"end": 3788,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 3780,
											"end": 3788,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3824,
											"end": 3866,
											"modifierDepth": 4,
											"name": "PUSH",
											"source": 17,
											"value": "F8A17C9136A3AE33364FAC05EB088A3CBAFEE10C1889C88593E20EE2D8E4EB88"
										},
										{
											"begin": 3824,
											"end": 3866,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3824,
											"end": 3866,
											"modifierDepth": 4,
											"name": "LOG3",
											"source": 17
										},
										{
											"begin": 3649,
											"end": 3873,
											"modifierDepth": 4,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2928,
											"end": 2929,
											"modifierDepth": 3,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2782,
											"end": 2783,
											"modifierDepth": 2,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2643,
											"end": 2644,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3478,
											"end": 3873,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3478,
											"end": 3873,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3092,
											"end": 3472,
											"name": "tag",
											"source": 17,
											"value": "152"
										},
										{
											"begin": 3092,
											"end": 3472,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2585,
											"end": 2616,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "329"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2605,
											"end": 2615,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 2585,
											"end": 2592,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "120"
										},
										{
											"begin": 2585,
											"end": 2616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2585,
											"end": 2616,
											"name": "tag",
											"source": 17,
											"value": "329"
										},
										{
											"begin": 2585,
											"end": 2616,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2577,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "330"
										},
										{
											"begin": 2577,
											"end": 2633,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2577,
											"end": 2633,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2577,
											"end": 2633,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2577,
											"end": 2633,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2577,
											"end": 2633,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2577,
											"end": 2633,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2577,
											"end": 2633,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2577,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "176"
										},
										{
											"begin": 2577,
											"end": 2633,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2577,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "177"
										},
										{
											"begin": 2577,
											"end": 2633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2577,
											"end": 2633,
											"name": "tag",
											"source": 17,
											"value": "330"
										},
										{
											"begin": 2577,
											"end": 2633,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3213,
											"end": 3225,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "33"
										},
										{
											"begin": 3213,
											"end": 3232,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3213,
											"end": 3232,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 3261,
											"end": 3419,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3261,
											"end": 3419,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3261,
											"end": 3419,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3261,
											"end": 3419,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "A0"
										},
										{
											"begin": 3261,
											"end": 3419,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3261,
											"end": 3419,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3261,
											"end": 3419,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3261,
											"end": 3419,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3261,
											"end": 3419,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 3261,
											"end": 3419,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3261,
											"end": 3419,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3261,
											"end": 3419,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3261,
											"end": 3419,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3261,
											"end": 3419,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3261,
											"end": 3419,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3261,
											"end": 3419,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3261,
											"end": 3419,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 3261,
											"end": 3419,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3261,
											"end": 3419,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3261,
											"end": 3419,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3261,
											"end": 3419,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3261,
											"end": 3419,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3261,
											"end": 3419,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 3261,
											"end": 3419,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3261,
											"end": 3419,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": 3261,
											"end": 3419,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 3261,
											"end": 3419,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3261,
											"end": 3419,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3261,
											"end": 3419,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3261,
											"end": 3419,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3261,
											"end": 3419,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3261,
											"end": 3419,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 3261,
											"end": 3419,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3261,
											"end": 3419,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3261,
											"end": 3419,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3261,
											"end": 3419,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3261,
											"end": 3419,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3261,
											"end": 3419,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 3243,
											"end": 3420,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 3243,
											"end": 3420,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3243,
											"end": 3420,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 3243,
											"end": 3420,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 3243,
											"end": 3420,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 3243,
											"end": 3420,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3243,
											"end": 3420,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 3243,
											"end": 3420,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3243,
											"end": 3420,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3243,
											"end": 3420,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3243,
											"end": 3420,
											"name": "PUSH",
											"source": 17,
											"value": "82A75BDEEAE8604D839476AE9EFD8B0E15AA447E21BFD7F41283BB54E22C9A82"
										},
										{
											"begin": 3243,
											"end": 3420,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 3243,
											"end": 3420,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 3243,
											"end": 3420,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 3243,
											"end": 3420,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3243,
											"end": 3420,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3243,
											"end": 3420,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3243,
											"end": 3420,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3243,
											"end": 3420,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3243,
											"end": 3420,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3243,
											"end": 3420,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3243,
											"end": 3420,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3243,
											"end": 3420,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 3243,
											"end": 3420,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3243,
											"end": 3420,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3243,
											"end": 3420,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3243,
											"end": 3420,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3243,
											"end": 3420,
											"modifierDepth": 1,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 3243,
											"end": 3420,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3243,
											"end": 3420,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 3243,
											"end": 3420,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3243,
											"end": 3420,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3243,
											"end": 3420,
											"name": "PUSH",
											"source": 17,
											"value": "82A75BDEEAE8604D839476AE9EFD8B0E15AA447E21BFD7F41283BB54E22C9A83"
										},
										{
											"begin": 3243,
											"end": 3420,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 3243,
											"end": 3420,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3243,
											"end": 3420,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 3243,
											"end": 3420,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 3243,
											"end": 3420,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3213,
											"end": 3232,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3213,
											"end": 3232,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 3261,
											"end": 3419,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3261,
											"end": 3419,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3243,
											"end": 3420,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3243,
											"end": 3420,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3243,
											"end": 3420,
											"name": "PUSH",
											"source": 17,
											"value": "82A75BDEEAE8604D839476AE9EFD8B0E15AA447E21BFD7F41283BB54E22C9A84"
										},
										{
											"begin": 3243,
											"end": 3420,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3243,
											"end": 3420,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3243,
											"end": 3420,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "334"
										},
										{
											"begin": 3243,
											"end": 3420,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3243,
											"end": 3420,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3243,
											"end": 3420,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "335"
										},
										{
											"begin": 3243,
											"end": 3420,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3243,
											"end": 3420,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "334"
										},
										{
											"begin": 3243,
											"end": 3420,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3243,
											"end": 3420,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 3243,
											"end": 3420,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3243,
											"end": 3420,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3243,
											"end": 3420,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3243,
											"end": 3420,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 3243,
											"end": 3420,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3243,
											"end": 3420,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3243,
											"end": 3420,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3243,
											"end": 3420,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3243,
											"end": 3420,
											"modifierDepth": 1,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 3243,
											"end": 3420,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3243,
											"end": 3420,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3243,
											"end": 3420,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3243,
											"end": 3420,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3243,
											"end": 3420,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3243,
											"end": 3420,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3243,
											"end": 3420,
											"modifierDepth": 1,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 3243,
											"end": 3420,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3243,
											"end": 3420,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 3243,
											"end": 3420,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 3243,
											"end": 3420,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3243,
											"end": 3420,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3243,
											"end": 3420,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3243,
											"end": 3420,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3243,
											"end": 3420,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3243,
											"end": 3420,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3243,
											"end": 3420,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3243,
											"end": 3420,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3243,
											"end": 3420,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 3436,
											"end": 3465,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3436,
											"end": 3465,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 3457,
											"end": 3464,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3457,
											"end": 3464,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3436,
											"end": 3465,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "D0B5D9EAC097410294EC9F2CEE7CD185CF31AB46BABF3DFDBEAC8B222B03F2D1"
										},
										{
											"begin": 3436,
											"end": 3465,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP1",
											"source": -1
										},
										{
											"begin": 3436,
											"end": 3465,
											"modifierDepth": 1,
											"name": "LOG2",
											"source": 17
										},
										{
											"begin": 3185,
											"end": 3472,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3092,
											"end": 3472,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3092,
											"end": 3472,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3092,
											"end": 3472,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3092,
											"end": 3472,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5737,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 5750,
											"end": 5754,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5737,
											"end": 5749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "63"
										},
										{
											"begin": 5737,
											"end": 5755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5737,
											"end": 5755,
											"name": "tag",
											"source": 0,
											"value": "336"
										},
										{
											"begin": 5737,
											"end": 5755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "338"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5767,
											"end": 5793,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 5779,
											"end": 5783,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5785,
											"end": 5792,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5767,
											"end": 5778,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 5767,
											"end": 5793,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3879,
											"end": 4374,
											"name": "tag",
											"source": 17,
											"value": "164"
										},
										{
											"begin": 3879,
											"end": 4374,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2585,
											"end": 2616,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "342"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2605,
											"end": 2615,
											"name": "CALLER",
											"source": 17
										},
										{
											"begin": 2585,
											"end": 2592,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "120"
										},
										{
											"begin": 2585,
											"end": 2616,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2585,
											"end": 2616,
											"name": "tag",
											"source": 17,
											"value": "342"
										},
										{
											"begin": 2585,
											"end": 2616,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2577,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "343"
										},
										{
											"begin": 2577,
											"end": 2633,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2577,
											"end": 2633,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2577,
											"end": 2633,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2577,
											"end": 2633,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2577,
											"end": 2633,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2577,
											"end": 2633,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2577,
											"end": 2633,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2577,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "176"
										},
										{
											"begin": 2577,
											"end": 2633,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2577,
											"end": 2633,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "177"
										},
										{
											"begin": 2577,
											"end": 2633,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2577,
											"end": 2633,
											"name": "tag",
											"source": 17,
											"value": "343"
										},
										{
											"begin": 2577,
											"end": 2633,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2722,
											"end": 2734,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "33"
										},
										{
											"begin": 2722,
											"end": 2741,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 3951,
											"end": 3959,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3951,
											"end": 3959,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2711,
											"end": 2741,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2711,
											"end": 2741,
											"modifierDepth": 1,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 2703,
											"end": 2772,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "346"
										},
										{
											"begin": 2703,
											"end": 2772,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2703,
											"end": 2772,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2703,
											"end": 2772,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2703,
											"end": 2772,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2703,
											"end": 2772,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2703,
											"end": 2772,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2703,
											"end": 2772,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2703,
											"end": 2772,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "176"
										},
										{
											"begin": 2703,
											"end": 2772,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2703,
											"end": 2772,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "181"
										},
										{
											"begin": 2703,
											"end": 2772,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2703,
											"end": 2772,
											"modifierDepth": 1,
											"name": "tag",
											"source": 17,
											"value": "346"
										},
										{
											"begin": 2703,
											"end": 2772,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3973,
											"end": 3981,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2854,
											"end": 2866,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "33"
										},
										{
											"begin": 2867,
											"end": 2875,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2854,
											"end": 2876,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2854,
											"end": 2876,
											"modifierDepth": 2,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 2854,
											"end": 2876,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2854,
											"end": 2876,
											"modifierDepth": 2,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 2854,
											"end": 2876,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "350"
										},
										{
											"begin": 2854,
											"end": 2876,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2854,
											"end": 2876,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "350"
										},
										{
											"begin": 2854,
											"end": 2876,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "185"
										},
										{
											"begin": 2854,
											"end": 2876,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2854,
											"end": 2876,
											"modifierDepth": 2,
											"name": "tag",
											"source": 17,
											"value": "350"
										},
										{
											"begin": 2854,
											"end": 2876,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2854,
											"end": 2876,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2854,
											"end": 2876,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2854,
											"end": 2876,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2854,
											"end": 2876,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2854,
											"end": 2876,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2854,
											"end": 2876,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2854,
											"end": 2876,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2854,
											"end": 2876,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 2854,
											"end": 2885,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 2854,
											"end": 2876,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 2854,
											"end": 2876,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2854,
											"end": 2876,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2854,
											"end": 2876,
											"modifierDepth": 2,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 2854,
											"end": 2876,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2854,
											"end": 2885,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2854,
											"end": 2885,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 2854,
											"end": 2885,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "FF"
										},
										{
											"begin": 2854,
											"end": 2885,
											"modifierDepth": 2,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2853,
											"end": 2885,
											"modifierDepth": 2,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2845,
											"end": 2918,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "352"
										},
										{
											"begin": 2845,
											"end": 2918,
											"modifierDepth": 2,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2845,
											"end": 2918,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2845,
											"end": 2918,
											"modifierDepth": 2,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2845,
											"end": 2918,
											"modifierDepth": 2,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2845,
											"end": 2918,
											"modifierDepth": 2,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2845,
											"end": 2918,
											"modifierDepth": 2,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 2845,
											"end": 2918,
											"modifierDepth": 2,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2845,
											"end": 2918,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "176"
										},
										{
											"begin": 2845,
											"end": 2918,
											"modifierDepth": 2,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2845,
											"end": 2918,
											"modifierDepth": 2,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "189"
										},
										{
											"begin": 2845,
											"end": 2918,
											"jumpType": "[in]",
											"modifierDepth": 2,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2845,
											"end": 2918,
											"modifierDepth": 2,
											"name": "tag",
											"source": 17,
											"value": "352"
										},
										{
											"begin": 2845,
											"end": 2918,
											"modifierDepth": 2,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3993,
											"end": 4024,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4027,
											"end": 4039,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "33"
										},
										{
											"begin": 4040,
											"end": 4048,
											"modifierDepth": 3,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 4027,
											"end": 4049,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4027,
											"end": 4049,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 4027,
											"end": 4049,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4027,
											"end": 4049,
											"modifierDepth": 3,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 4027,
											"end": 4049,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "356"
										},
										{
											"begin": 4027,
											"end": 4049,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4027,
											"end": 4049,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "356"
										},
										{
											"begin": 4027,
											"end": 4049,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "185"
										},
										{
											"begin": 4027,
											"end": 4049,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4027,
											"end": 4049,
											"modifierDepth": 3,
											"name": "tag",
											"source": 17,
											"value": "356"
										},
										{
											"begin": 4027,
											"end": 4049,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4027,
											"end": 4049,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4027,
											"end": 4049,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4027,
											"end": 4049,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4027,
											"end": 4049,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4027,
											"end": 4049,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4027,
											"end": 4049,
											"modifierDepth": 3,
											"name": "KECCAK256",
											"source": 17
										},
										{
											"begin": 4027,
											"end": 4049,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4027,
											"end": 4049,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "5"
										},
										{
											"begin": 4027,
											"end": 4049,
											"modifierDepth": 3,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 4027,
											"end": 4049,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3993,
											"end": 4049,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3993,
											"end": 4049,
											"modifierDepth": 3,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4100,
											"end": 4121,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "34"
										},
										{
											"begin": 4100,
											"end": 4121,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 4068,
											"end": 4079,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4068,
											"end": 4096,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 4068,
											"end": 4096,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4068,
											"end": 4096,
											"modifierDepth": 3,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 4068,
											"end": 4121,
											"modifierDepth": 3,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 4068,
											"end": 4121,
											"modifierDepth": 3,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4060,
											"end": 4143,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "358"
										},
										{
											"begin": 4060,
											"end": 4143,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4060,
											"end": 4143,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4060,
											"end": 4143,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4060,
											"end": 4143,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4060,
											"end": 4143,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 12769,
											"end": 12771,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4060,
											"end": 4143,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 4060,
											"end": 4143,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4060,
											"end": 4143,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12751,
											"end": 12772,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 12808,
											"end": 12810,
											"name": "PUSH",
											"source": 18,
											"value": "11"
										},
										{
											"begin": 12788,
											"end": 12806,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 12788,
											"end": 12806,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12788,
											"end": 12806,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12781,
											"end": 12811,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "86C2DCDCDEE840CAF0CAC6EAE8CA40E8F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12827,
											"end": 12845,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 12827,
											"end": 12845,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12827,
											"end": 12845,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12820,
											"end": 12867,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 12884,
											"end": 12902,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 12884,
											"end": 12902,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4060,
											"end": 4143,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "176"
										},
										{
											"begin": 12567,
											"end": 12908,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4060,
											"end": 4143,
											"modifierDepth": 3,
											"name": "tag",
											"source": 17,
											"value": "358"
										},
										{
											"begin": 4060,
											"end": 4143,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4154,
											"end": 4174,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "3"
										},
										{
											"begin": 4154,
											"end": 4174,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4154,
											"end": 4174,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4154,
											"end": 4181,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4154,
											"end": 4181,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4154,
											"end": 4181,
											"modifierDepth": 3,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4177,
											"end": 4181,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "1"
										},
										{
											"begin": 4154,
											"end": 4181,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4154,
											"end": 4181,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4154,
											"end": 4181,
											"modifierDepth": 3,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 4154,
											"end": 4181,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4154,
											"end": 4181,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4154,
											"end": 4181,
											"name": "SSTORE",
											"source": 17
										},
										{
											"begin": 4211,
											"end": 4225,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4211,
											"end": 4225,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 4238,
											"end": 4255,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4238,
											"end": 4255,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4238,
											"end": 4255,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4238,
											"end": 4255,
											"name": "SLOAD",
											"source": 17
										},
										{
											"begin": 4211,
											"end": 4274,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4211,
											"end": 4274,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4154,
											"end": 4174,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4154,
											"end": 4174,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4211,
											"end": 4225,
											"modifierDepth": 3,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4211,
											"end": 4225,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4238,
											"end": 4255,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4211,
											"end": 4274,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "361"
										},
										{
											"begin": 4211,
											"end": 4274,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4257,
											"end": 4273,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "2"
										},
										{
											"begin": 4257,
											"end": 4273,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 4257,
											"end": 4273,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4257,
											"end": 4273,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4211,
											"end": 4274,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "362"
										},
										{
											"begin": 4211,
											"end": 4274,
											"jumpType": "[in]",
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4211,
											"end": 4274,
											"modifierDepth": 3,
											"name": "tag",
											"source": 17,
											"value": "361"
										},
										{
											"begin": 4211,
											"end": 4274,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4211,
											"end": 4274,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4211,
											"end": 4274,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4211,
											"end": 4274,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4211,
											"end": 4274,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4211,
											"end": 4274,
											"modifierDepth": 3,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4211,
											"end": 4274,
											"modifierDepth": 3,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 4211,
											"end": 4274,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4211,
											"end": 4274,
											"modifierDepth": 3,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 4211,
											"end": 4274,
											"modifierDepth": 3,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 4211,
											"end": 4274,
											"modifierDepth": 3,
											"name": "GAS",
											"source": 17
										},
										{
											"begin": 4211,
											"end": 4274,
											"modifierDepth": 3,
											"name": "CALL",
											"source": 17
										},
										{
											"begin": 4211,
											"end": 4274,
											"modifierDepth": 3,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4211,
											"end": 4274,
											"modifierDepth": 3,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4211,
											"end": 4274,
											"modifierDepth": 3,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4211,
											"end": 4274,
											"modifierDepth": 3,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4211,
											"end": 4274,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 4211,
											"end": 4274,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4211,
											"end": 4274,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4211,
											"end": 4274,
											"modifierDepth": 3,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4211,
											"end": 4274,
											"modifierDepth": 3,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 4211,
											"end": 4274,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "365"
										},
										{
											"begin": 4211,
											"end": 4274,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4211,
											"end": 4274,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4211,
											"end": 4274,
											"modifierDepth": 3,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4211,
											"end": 4274,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4211,
											"end": 4274,
											"modifierDepth": 3,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4211,
											"end": 4274,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 4211,
											"end": 4274,
											"modifierDepth": 3,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 4211,
											"end": 4274,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "3F"
										},
										{
											"begin": 4211,
											"end": 4274,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 4211,
											"end": 4274,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4211,
											"end": 4274,
											"modifierDepth": 3,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4211,
											"end": 4274,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4211,
											"end": 4274,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4211,
											"end": 4274,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4211,
											"end": 4274,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4211,
											"end": 4274,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 4211,
											"end": 4274,
											"modifierDepth": 3,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4211,
											"end": 4274,
											"modifierDepth": 3,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4211,
											"end": 4274,
											"modifierDepth": 3,
											"name": "RETURNDATASIZE",
											"source": 17
										},
										{
											"begin": 4211,
											"end": 4274,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4211,
											"end": 4274,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4211,
											"end": 4274,
											"modifierDepth": 3,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 4211,
											"end": 4274,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4211,
											"end": 4274,
											"modifierDepth": 3,
											"name": "RETURNDATACOPY",
											"source": 17
										},
										{
											"begin": 4211,
											"end": 4274,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "364"
										},
										{
											"begin": 4211,
											"end": 4274,
											"modifierDepth": 3,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4211,
											"end": 4274,
											"modifierDepth": 3,
											"name": "tag",
											"source": 17,
											"value": "365"
										},
										{
											"begin": 4211,
											"end": 4274,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4211,
											"end": 4274,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 4211,
											"end": 4274,
											"modifierDepth": 3,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4211,
											"end": 4274,
											"modifierDepth": 3,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4211,
											"end": 4274,
											"modifierDepth": 3,
											"name": "tag",
											"source": 17,
											"value": "364"
										},
										{
											"begin": 4211,
											"end": 4274,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4211,
											"end": 4274,
											"modifierDepth": 3,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4192,
											"end": 4274,
											"modifierDepth": 3,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4192,
											"end": 4274,
											"modifierDepth": 3,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4192,
											"end": 4274,
											"modifierDepth": 3,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4292,
											"end": 4299,
											"modifierDepth": 3,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4284,
											"end": 4322,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "366"
										},
										{
											"begin": 4284,
											"end": 4322,
											"modifierDepth": 3,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4284,
											"end": 4322,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4284,
											"end": 4322,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4284,
											"end": 4322,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4284,
											"end": 4322,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 13961,
											"end": 13963,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4284,
											"end": 4322,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 4284,
											"end": 4322,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4284,
											"end": 4322,
											"modifierDepth": 3,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13943,
											"end": 13964,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 14000,
											"end": 14002,
											"name": "PUSH",
											"source": 18,
											"value": "12"
										},
										{
											"begin": 13980,
											"end": 13998,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 13980,
											"end": 13998,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 13980,
											"end": 13998,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13973,
											"end": 14003,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "151C985B9CD858DD1A5BDB8819985A5B1959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "72"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14019,
											"end": 14037,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 14019,
											"end": 14037,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 14019,
											"end": 14037,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 14012,
											"end": 14060,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 14077,
											"end": 14095,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 14077,
											"end": 14095,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4284,
											"end": 4322,
											"modifierDepth": 3,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "176"
										},
										{
											"begin": 13759,
											"end": 14101,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4284,
											"end": 4322,
											"modifierDepth": 3,
											"name": "tag",
											"source": 17,
											"value": "366"
										},
										{
											"begin": 4284,
											"end": 4322,
											"modifierDepth": 3,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4338,
											"end": 4367,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4338,
											"end": 4367,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4358,
											"end": 4366,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 4358,
											"end": 4366,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4338,
											"end": 4367,
											"modifierDepth": 3,
											"name": "PUSH",
											"source": 17,
											"value": "15ED165A284872EA7017F03DF402A0CADFBFAB588320FFAF83F160C2F82781C7"
										},
										{
											"begin": 4338,
											"end": 4367,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4338,
											"end": 4367,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4338,
											"end": 4367,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4338,
											"end": 4367,
											"modifierDepth": 3,
											"name": "LOG2",
											"source": 17
										},
										{
											"begin": 3983,
											"end": 4374,
											"modifierDepth": 3,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3983,
											"end": 4374,
											"modifierDepth": 3,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2782,
											"end": 2783,
											"modifierDepth": 2,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2643,
											"end": 2644,
											"modifierDepth": 1,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3879,
											"end": 4374,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3879,
											"end": 4374,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4148,
											"end": 4251,
											"name": "tag",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 4148,
											"end": 4251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 4225,
											"end": 4229,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 4214,
											"end": 4224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 4214,
											"end": 4244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7270,
											"end": 7657,
											"name": "tag",
											"source": 0,
											"value": "208"
										},
										{
											"begin": 7270,
											"end": 7657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7351,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "B3DA67D1B252AEAB7C8063542D95E75F82A5307A82535949BC38F7CF7BA8897F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 7437,
											"end": 7459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 7445,
											"end": 7449,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7451,
											"end": 7458,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7437,
											"end": 7444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 7437,
											"end": 7459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7437,
											"end": 7459,
											"name": "tag",
											"source": 0,
											"value": "377"
										},
										{
											"begin": 7437,
											"end": 7459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7432,
											"end": 7651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 7432,
											"end": 7651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7483,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7509,
											"end": 7513,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7559,
											"end": 7571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 966,
											"end": 976,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 887,
											"end": 983,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 7559,
											"end": 7571,
											"name": "tag",
											"source": 0,
											"value": "379"
										},
										{
											"begin": 7559,
											"end": 7571,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7557,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7544,
											"end": 7548,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7597,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7586,
											"end": 7597,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7586,
											"end": 7597,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7586,
											"end": 7597,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7586,
											"end": 7597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 7586,
											"end": 7597,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7432,
											"end": 7651,
											"name": "tag",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 7432,
											"end": 7651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7635,
											"end": 7640,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7628,
											"end": 7640,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7628,
											"end": 7640,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7628,
											"end": 7640,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7628,
											"end": 7640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 7628,
											"end": 7640,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7892,
											"end": 8280,
											"name": "tag",
											"source": 0,
											"value": "214"
										},
										{
											"begin": 7892,
											"end": 8280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7970,
											"end": 7974,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "B3DA67D1B252AEAB7C8063542D95E75F82A5307A82535949BC38F7CF7BA8897F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 8059,
											"end": 8081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "384"
										},
										{
											"begin": 8067,
											"end": 8071,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8073,
											"end": 8080,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 8059,
											"end": 8081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8081,
											"name": "tag",
											"source": 0,
											"value": "384"
										},
										{
											"begin": 8059,
											"end": 8081,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8055,
											"end": 8274,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8055,
											"end": 8274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "378"
										},
										{
											"begin": 8055,
											"end": 8274,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8131,
											"end": 8136,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8136,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8136,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8097,
											"end": 8136,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8136,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8136,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8155,
											"end": 8195,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 966,
											"end": 976,
											"name": "SWAP3",
											"source": 7
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8155,
											"end": 8195,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 8155,
											"end": 8195,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8131,
											"end": 8136,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8155,
											"end": 8195,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 8216,
											"end": 8220,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8209,
											"end": 8220,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8209,
											"end": 8220,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8209,
											"end": 8220,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8209,
											"end": 8220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "171"
										},
										{
											"begin": 8209,
											"end": 8220,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2697,
											"end": 2814,
											"name": "tag",
											"source": 3,
											"value": "219"
										},
										{
											"begin": 2697,
											"end": 2814,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1750,
											"end": 1766,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "389"
										},
										{
											"begin": 1750,
											"end": 1764,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "390"
										},
										{
											"begin": 1750,
											"end": 1766,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1750,
											"end": 1766,
											"name": "tag",
											"source": 3,
											"value": "389"
										},
										{
											"begin": 1750,
											"end": 1766,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2765,
											"end": 2770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2755,
											"end": 2770,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2755,
											"end": 2770,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2755,
											"end": 2770,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 2794,
											"end": 2806,
											"modifierDepth": 1,
											"name": "tag",
											"source": 3,
											"value": "392"
										},
										{
											"begin": 2794,
											"end": 2806,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2785,
											"end": 2807,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14270,
											"end": 14302,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 14270,
											"end": 14302,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 14270,
											"end": 14302,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 14252,
											"end": 14303,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 14252,
											"end": 14303,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 14240,
											"end": 14242,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 14225,
											"end": 14243,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2785,
											"end": 2807,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 3
										},
										{
											"begin": 2697,
											"end": 2814,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 4599,
											"end": 4911,
											"name": "tag",
											"source": 2,
											"value": "222"
										},
										{
											"begin": 4599,
											"end": 4911,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4679,
											"end": 4683,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4688,
											"end": 4694,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "636"
										},
										{
											"begin": 4671,
											"end": 4694,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4694,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4694,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "396"
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4785,
											"end": 4791,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "636"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4749,
											"end": 4791,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4749,
											"end": 4781,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "397"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 1957,
											"end": 2095,
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4749,
											"end": 4781,
											"name": "tag",
											"source": 2,
											"value": "397"
										},
										{
											"begin": 4749,
											"end": 4781,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4749,
											"end": 4791,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4749,
											"end": 4791,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4749,
											"end": 4791,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "tag",
											"source": 2,
											"value": "396"
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4905,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "399"
										},
										{
											"begin": 4654,
											"end": 4905,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "703E46DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4905,
											"name": "tag",
											"source": 2,
											"value": "399"
										},
										{
											"begin": 4654,
											"end": 4905,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4599,
											"end": 4911,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5986,
											"end": 6084,
											"name": "tag",
											"source": 17,
											"value": "225"
										},
										{
											"begin": 5986,
											"end": 6084,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 926,
											"end": 952,
											"name": "PUSH",
											"source": 17,
											"value": "189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "205"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6052,
											"end": 6590,
											"name": "tag",
											"source": 2,
											"value": "227"
										},
										{
											"begin": 6052,
											"end": 6590,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6169,
											"end": 6186,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6151,
											"end": 6201,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6201,
											"name": "PUSH",
											"source": 2,
											"value": "52D1902D"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "404"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "405"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "406"
										},
										{
											"begin": 6151,
											"end": 6203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "tag",
											"source": 2,
											"value": "405"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "tag",
											"source": 2,
											"value": "404"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6147,
											"end": 6584,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "407"
										},
										{
											"begin": 6147,
											"end": 6584,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4C9C8CE3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14270,
											"end": 14302,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 14270,
											"end": 14302,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 14252,
											"end": 14303,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 14225,
											"end": 14243,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 14225,
											"end": 14243,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 14106,
											"end": 14309,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6147,
											"end": 6584,
											"name": "tag",
											"source": 2,
											"value": "407"
										},
										{
											"begin": 6147,
											"end": 6584,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 6245,
											"end": 6285,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6245,
											"end": 6285,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6241,
											"end": 6361,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "413"
										},
										{
											"begin": 6241,
											"end": 6361,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2A875269"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1635,
											"end": 1660,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 1608,
											"end": 1626,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 1608,
											"end": 1626,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "176"
										},
										{
											"begin": 1489,
											"end": 1666,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6241,
											"end": 6361,
											"name": "tag",
											"source": 2,
											"value": "413"
										},
										{
											"begin": 6241,
											"end": 6361,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6374,
											"end": 6428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "213"
										},
										{
											"begin": 6404,
											"end": 6421,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6423,
											"end": 6427,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6374,
											"end": 6403,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "416"
										},
										{
											"begin": 6374,
											"end": 6428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5028,
											"end": 5241,
											"name": "tag",
											"source": 2,
											"value": "230"
										},
										{
											"begin": 5028,
											"end": 5241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5102,
											"end": 5106,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5111,
											"end": 5117,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "636"
										},
										{
											"begin": 5094,
											"end": 5117,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5094,
											"end": 5117,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5090,
											"end": 5235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "399"
										},
										{
											"begin": 5090,
											"end": 5235,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "703E46DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 2031,
											"end": 2137,
											"name": "tag",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 2031,
											"end": 2137,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1926,
											"end": 1930,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2100,
											"end": 2109,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "399"
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 14705,
											"end": 14707,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 14687,
											"end": 14708,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 14744,
											"end": 14746,
											"name": "PUSH",
											"source": 18,
											"value": "10"
										},
										{
											"begin": 14724,
											"end": 14742,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 14724,
											"end": 14742,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 14724,
											"end": 14742,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 14717,
											"end": 14747,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 14763,
											"end": 14781,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 14763,
											"end": 14781,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 14763,
											"end": 14781,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 14756,
											"end": 14802,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 14819,
											"end": 14837,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 14819,
											"end": 14837,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2092,
											"end": 2130,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 14503,
											"end": 14843,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3231,
											"end": 3296,
											"name": "tag",
											"source": 0,
											"value": "257"
										},
										{
											"begin": 3231,
											"end": 3296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "399"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1084,
											"end": 1181,
											"name": "tag",
											"source": 3,
											"value": "259"
										},
										{
											"begin": 1084,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "430"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1147,
											"end": 1174,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "399"
										},
										{
											"begin": 1147,
											"end": 1172,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "433"
										},
										{
											"begin": 1147,
											"end": 1174,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2450,
											"end": 2565,
											"name": "tag",
											"source": 3,
											"value": "273"
										},
										{
											"begin": 2450,
											"end": 2565,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "438"
										},
										{
											"begin": 1503,
											"end": 1520,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "235"
										},
										{
											"begin": 1503,
											"end": 1522,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "tag",
											"source": 3,
											"value": "438"
										},
										{
											"begin": 1503,
											"end": 1522,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2516,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 2509,
											"end": 2523,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2519,
											"end": 2523,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 2509,
											"end": 2523,
											"modifierDepth": 1,
											"name": "OR",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 2509,
											"end": 2523,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 2538,
											"end": 2558,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 2545,
											"end": 2557,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "392"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 7
										},
										{
											"begin": 966,
											"end": 976,
											"name": "SWAP1",
											"source": 7
										},
										{
											"begin": 887,
											"end": 983,
											"name": "JUMP",
											"source": 7
										},
										{
											"begin": 4381,
											"end": 4578,
											"name": "tag",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 4381,
											"end": 4578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "443"
										},
										{
											"begin": 4477,
											"end": 4481,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4483,
											"end": 4490,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "120"
										},
										{
											"begin": 4469,
											"end": 4491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4491,
											"name": "tag",
											"source": 0,
											"value": "443"
										},
										{
											"begin": 4469,
											"end": 4491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4464,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "226"
										},
										{
											"begin": 4464,
											"end": 4572,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2517D3F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 9958,
											"end": 9990,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9958,
											"end": 9990,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 9940,
											"end": 9991,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10007,
											"end": 10025,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 10007,
											"end": 10025,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10007,
											"end": 10025,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10000,
											"end": 10034,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 10000,
											"end": 10034,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 10000,
											"end": 10034,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9913,
											"end": 9931,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 9913,
											"end": 9931,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "176"
										},
										{
											"begin": 9766,
											"end": 10040,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2209,
											"end": 2315,
											"name": "tag",
											"source": 3,
											"value": "390"
										},
										{
											"begin": 2209,
											"end": 2315,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 1926,
											"end": 1930,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "PUSH",
											"source": 3,
											"value": "FF"
										},
										{
											"begin": 1949,
											"end": 1956,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "399"
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 15329,
											"end": 15331,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 15311,
											"end": 15332,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 15368,
											"end": 15370,
											"name": "PUSH",
											"source": 18,
											"value": "14"
										},
										{
											"begin": 15348,
											"end": 15366,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 15348,
											"end": 15366,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 15348,
											"end": 15366,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 15341,
											"end": 15371,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "14185D5CD8589B194E881B9BDD081C185D5CD959"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "62"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 15387,
											"end": 15405,
											"name": "PUSH",
											"source": 18,
											"value": "44"
										},
										{
											"begin": 15387,
											"end": 15405,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 15387,
											"end": 15405,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 15380,
											"end": 15430,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 15447,
											"end": 15465,
											"name": "PUSH",
											"source": 18,
											"value": "64"
										},
										{
											"begin": 15447,
											"end": 15465,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2267,
											"end": 2308,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "176"
										},
										{
											"begin": 15127,
											"end": 15471,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2779,
											"end": 3114,
											"name": "tag",
											"source": 12,
											"value": "416"
										},
										{
											"begin": 2779,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2870,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 2889,
											"end": 2906,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2870,
											"end": 2888,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "457"
										},
										{
											"begin": 2870,
											"end": 2907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2870,
											"end": 2907,
											"name": "tag",
											"source": 12,
											"value": "456"
										},
										{
											"begin": 2870,
											"end": 2907,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "DUP4",
											"source": 12
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "PUSH",
											"source": 12,
											"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "LOG2",
											"source": 12
										},
										{
											"begin": 2964,
											"end": 2975,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2964,
											"end": 2975,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 2964,
											"end": 2979,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "458"
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2995,
											"end": 3048,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "213"
										},
										{
											"begin": 3024,
											"end": 3041,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 3043,
											"end": 3047,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2995,
											"end": 3023,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "460"
										},
										{
											"begin": 2995,
											"end": 3048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "tag",
											"source": 12,
											"value": "458"
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 3079,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "226"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "463"
										},
										{
											"begin": 3079,
											"end": 3097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "tag",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "PUSH",
											"source": 1,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "399"
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1AFCD79F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1187,
											"end": 1282,
											"name": "tag",
											"source": 3,
											"value": "433"
										},
										{
											"begin": 1187,
											"end": 1282,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "427"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "469"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1270,
											"end": 1275,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 1260,
											"end": 1275,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"name": "SLOAD",
											"source": 3
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1260,
											"end": 1275,
											"modifierDepth": 1,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 1260,
											"end": 1275,
											"name": "SSTORE",
											"source": 3
										},
										{
											"begin": 1187,
											"end": 1282,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 2186,
											"end": 2467,
											"name": "tag",
											"source": 12,
											"value": "457"
										},
										{
											"begin": 2186,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 2263,
											"end": 2280,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2263,
											"end": 2292,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2263,
											"end": 2292,
											"name": "EXTCODESIZE",
											"source": 12
										},
										{
											"begin": 2296,
											"end": 2297,
											"name": "PUSH",
											"source": 12,
											"value": "0"
										},
										{
											"begin": 2263,
											"end": 2297,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4C9C8CE3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14270,
											"end": 14302,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 14270,
											"end": 14302,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "DUP3",
											"source": 12
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 14252,
											"end": 14303,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 14225,
											"end": 14243,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 14225,
											"end": 14243,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "176"
										},
										{
											"begin": 14106,
											"end": 14309,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "tag",
											"source": 12,
											"value": "473"
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "AND",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP3",
											"source": 12
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "AND",
											"source": 12
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "OR",
											"source": 12
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SSTORE",
											"source": 12
										},
										{
											"begin": 2186,
											"end": 2467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 12
										},
										{
											"begin": 4106,
											"end": 4359,
											"name": "tag",
											"source": 14,
											"value": "460"
										},
										{
											"begin": 4106,
											"end": 4359,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4189,
											"end": 4201,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 4214,
											"end": 4226,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4228,
											"end": 4251,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4255,
											"end": 4274,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4275,
											"end": 4279,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "477"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "478"
										},
										{
											"begin": 4255,
											"end": 4280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "tag",
											"source": 14,
											"value": "477"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "GAS",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DELEGATECALL",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "481"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 14,
											"value": "1F"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "NOT",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 14,
											"value": "3F"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATASIZE",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATACOPY",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "480"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "tag",
											"source": 14,
											"value": "481"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "tag",
											"source": 14,
											"value": "480"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4213,
											"end": 4280,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4213,
											"end": 4280,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4213,
											"end": 4280,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 4213,
											"end": 4280,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4297,
											"end": 4352,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "482"
										},
										{
											"begin": 4324,
											"end": 4330,
											"name": "DUP6",
											"source": 14
										},
										{
											"begin": 4332,
											"end": 4339,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4341,
											"end": 4351,
											"name": "DUP4",
											"source": 14
										},
										{
											"begin": 4297,
											"end": 4323,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "483"
										},
										{
											"begin": 4297,
											"end": 4352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4297,
											"end": 4352,
											"name": "tag",
											"source": 14,
											"value": "482"
										},
										{
											"begin": 4297,
											"end": 4352,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4290,
											"end": 4352,
											"name": "SWAP6",
											"source": 14
										},
										{
											"begin": 4106,
											"end": 4359,
											"name": "SWAP5",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4106,
											"end": 4359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 6598,
											"end": 6720,
											"name": "tag",
											"source": 12,
											"value": "463"
										},
										{
											"begin": 6598,
											"end": 6720,
											"name": "JUMPDEST",
											"source": 12
										},
										{
											"begin": 6648,
											"end": 6657,
											"name": "CALLVALUE",
											"source": 12
										},
										{
											"begin": 6648,
											"end": 6661,
											"name": "ISZERO",
											"source": 12
										},
										{
											"begin": 6644,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 12,
											"value": "399"
										},
										{
											"begin": 6644,
											"end": 6714,
											"name": "JUMPI",
											"source": 12
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B398979F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "DUP2",
											"source": 12
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "MSTORE",
											"source": 12
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "PUSH",
											"source": 12,
											"value": "4"
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "ADD",
											"source": 12
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "PUSH",
											"source": 12,
											"value": "40"
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "MLOAD",
											"source": 12
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "DUP1",
											"source": 12
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "SWAP2",
											"source": 12
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "SUB",
											"source": 12
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "SWAP1",
											"source": 12
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "REVERT",
											"source": 12
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 14,
											"value": "483"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4769,
											"end": 4781,
											"name": "PUSH",
											"source": 14,
											"value": "60"
										},
										{
											"begin": 4798,
											"end": 4805,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "489"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "490"
										},
										{
											"begin": 4829,
											"end": 4839,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 4821,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "491"
										},
										{
											"begin": 4821,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "tag",
											"source": 14,
											"value": "490"
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "492"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 14,
											"value": "489"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5045,
											"end": 5067,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "493"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "DUP5",
											"source": 14
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "AND",
											"source": 14
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "EXTCODESIZE",
											"source": 14
										},
										{
											"begin": 5071,
											"end": 5094,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "tag",
											"source": 14,
											"value": "493"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "494"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9996B315"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 14270,
											"end": 14302,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 14270,
											"end": 14302,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 14252,
											"end": 14303,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 14225,
											"end": 14243,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 14225,
											"end": 14243,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "176"
										},
										{
											"begin": 14106,
											"end": 14309,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "tag",
											"source": 14,
											"value": "494"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5180,
											"end": 5190,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 14,
											"value": "492"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP4",
											"source": 14
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "SWAP3",
											"source": 14
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "POP",
											"source": 14
										},
										{
											"begin": 4625,
											"end": 5207,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 14
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "tag",
											"source": 14,
											"value": "491"
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 5874,
											"end": 5895,
											"name": "ISZERO",
											"source": 14
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 14,
											"value": "497"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPI",
											"source": 14
										},
										{
											"begin": 6102,
											"end": 6112,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6096,
											"end": 6113,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 6158,
											"end": 6173,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6145,
											"end": 6155,
											"name": "DUP3",
											"source": 14
										},
										{
											"begin": 6141,
											"end": 6143,
											"name": "PUSH",
											"source": 14,
											"value": "20"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6130,
											"end": 6174,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "tag",
											"source": 14,
											"value": "497"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 14
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A12F521"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP2",
											"source": 14
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 14,
											"value": "4"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "ADD",
											"source": 14
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 14
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP2",
											"source": 14
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SUB",
											"source": 14
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP1",
											"source": 14
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "REVERT",
											"source": 14
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 18,
											"value": "43"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 72,
											"end": 78,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 127,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 113,
											"end": 122,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 104,
											"end": 111,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 100,
											"end": 123,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 96,
											"end": 128,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 93,
											"end": 145,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 93,
											"end": 145,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "509"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 141,
											"end": 142,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 138,
											"end": 139,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 131,
											"end": 143,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 93,
											"end": 145,
											"name": "tag",
											"source": 18,
											"value": "509"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 167,
											"end": 190,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 167,
											"end": 190,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 219,
											"end": 251,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 219,
											"end": 251,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 209,
											"end": 252,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 209,
											"end": 252,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 199,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "492"
										},
										{
											"begin": 199,
											"end": 270,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 497,
											"end": 670,
											"name": "tag",
											"source": 18,
											"value": "499"
										},
										{
											"begin": 497,
											"end": 670,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 565,
											"end": 585,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 565,
											"end": 585,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 614,
											"end": 645,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 614,
											"end": 645,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 604,
											"end": 646,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 604,
											"end": 646,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 594,
											"end": 664,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "513"
										},
										{
											"begin": 594,
											"end": 664,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 660,
											"end": 661,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 657,
											"end": 658,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 650,
											"end": 662,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 594,
											"end": 664,
											"name": "tag",
											"source": 18,
											"value": "513"
										},
										{
											"begin": 594,
											"end": 664,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 497,
											"end": 670,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 497,
											"end": 670,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 497,
											"end": 670,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 497,
											"end": 670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 675,
											"end": 861,
											"name": "tag",
											"source": 18,
											"value": "50"
										},
										{
											"begin": 675,
											"end": 861,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 734,
											"end": 740,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 787,
											"end": 789,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 775,
											"end": 784,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 766,
											"end": 773,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 762,
											"end": 785,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 758,
											"end": 790,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 755,
											"end": 807,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 755,
											"end": 807,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "515"
										},
										{
											"begin": 755,
											"end": 807,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 803,
											"end": 804,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 800,
											"end": 801,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 793,
											"end": 805,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 755,
											"end": 807,
											"name": "tag",
											"source": 18,
											"value": "515"
										},
										{
											"begin": 755,
											"end": 807,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 826,
											"end": 855,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "492"
										},
										{
											"begin": 845,
											"end": 854,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 826,
											"end": 855,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "499"
										},
										{
											"begin": 826,
											"end": 855,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1119,
											"end": 1299,
											"name": "tag",
											"source": 18,
											"value": "57"
										},
										{
											"begin": 1119,
											"end": 1299,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1178,
											"end": 1184,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1231,
											"end": 1233,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1219,
											"end": 1228,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1210,
											"end": 1217,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1206,
											"end": 1229,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1202,
											"end": 1234,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 1199,
											"end": 1251,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1199,
											"end": 1251,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "519"
										},
										{
											"begin": 1199,
											"end": 1251,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1247,
											"end": 1248,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1244,
											"end": 1245,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1237,
											"end": 1249,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1199,
											"end": 1251,
											"name": "tag",
											"source": 18,
											"value": "519"
										},
										{
											"begin": 1199,
											"end": 1251,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1270,
											"end": 1293,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 1270,
											"end": 1293,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1119,
											"end": 1299,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1119,
											"end": 1299,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1671,
											"end": 1925,
											"name": "tag",
											"source": 18,
											"value": "69"
										},
										{
											"begin": 1671,
											"end": 1925,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1739,
											"end": 1745,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1747,
											"end": 1753,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1800,
											"end": 1802,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 1788,
											"end": 1797,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 1779,
											"end": 1786,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 1775,
											"end": 1798,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 1771,
											"end": 1803,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 1768,
											"end": 1820,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 1768,
											"end": 1820,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "524"
										},
										{
											"begin": 1768,
											"end": 1820,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 1816,
											"end": 1817,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1813,
											"end": 1814,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 1806,
											"end": 1818,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 1768,
											"end": 1820,
											"name": "tag",
											"source": 18,
											"value": "524"
										},
										{
											"begin": 1768,
											"end": 1820,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1852,
											"end": 1861,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 1839,
											"end": 1862,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 1829,
											"end": 1862,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1881,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "525"
										},
										{
											"begin": 1915,
											"end": 1917,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 1904,
											"end": 1913,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 1900,
											"end": 1918,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 1881,
											"end": 1919,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "499"
										},
										{
											"begin": 1881,
											"end": 1919,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1881,
											"end": 1919,
											"name": "tag",
											"source": 18,
											"value": "525"
										},
										{
											"begin": 1881,
											"end": 1919,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1871,
											"end": 1919,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1871,
											"end": 1919,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1671,
											"end": 1925,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1671,
											"end": 1925,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1671,
											"end": 1925,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 1671,
											"end": 1925,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 1671,
											"end": 1925,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 1671,
											"end": 1925,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 1930,
											"end": 2057,
											"name": "tag",
											"source": 18,
											"value": "500"
										},
										{
											"begin": 1930,
											"end": 2057,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 1991,
											"end": 2001,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B71"
										},
										{
											"begin": 1986,
											"end": 1989,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 1982,
											"end": 2002,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 1979,
											"end": 1980,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 1972,
											"end": 2003,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2022,
											"end": 2026,
											"name": "PUSH",
											"source": 18,
											"value": "41"
										},
										{
											"begin": 2019,
											"end": 2020,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 2012,
											"end": 2027,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2046,
											"end": 2050,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 2043,
											"end": 2044,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2036,
											"end": 2051,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2062,
											"end": 2780,
											"name": "tag",
											"source": 18,
											"value": "501"
										},
										{
											"begin": 2062,
											"end": 2780,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2104,
											"end": 2109,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2157,
											"end": 2160,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2150,
											"end": 2154,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 2142,
											"end": 2148,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2138,
											"end": 2155,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2134,
											"end": 2161,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 2124,
											"end": 2179,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "528"
										},
										{
											"begin": 2124,
											"end": 2179,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2175,
											"end": 2176,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2172,
											"end": 2173,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2165,
											"end": 2177,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2124,
											"end": 2179,
											"name": "tag",
											"source": 18,
											"value": "528"
										},
										{
											"begin": 2124,
											"end": 2179,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2211,
											"end": 2217,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2198,
											"end": 2218,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 2237,
											"end": 2255,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 2274,
											"end": 2276,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2270,
											"end": 2272,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2267,
											"end": 2277,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 2264,
											"end": 2300,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2264,
											"end": 2300,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "530"
										},
										{
											"begin": 2264,
											"end": 2300,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2280,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "530"
										},
										{
											"begin": 2280,
											"end": 2298,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "500"
										},
										{
											"begin": 2280,
											"end": 2298,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2280,
											"end": 2298,
											"name": "tag",
											"source": 18,
											"value": "530"
										},
										{
											"begin": 2280,
											"end": 2298,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2355,
											"end": 2357,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2349,
											"end": 2358,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 2323,
											"end": 2325,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 2409,
											"end": 2422,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2409,
											"end": 2422,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2405,
											"end": 2427,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2405,
											"end": 2427,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2405,
											"end": 2427,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2429,
											"end": 2431,
											"name": "PUSH",
											"source": 18,
											"value": "3F"
										},
										{
											"begin": 2401,
											"end": 2432,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2397,
											"end": 2437,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 2385,
											"end": 2438,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2385,
											"end": 2438,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2385,
											"end": 2438,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2453,
											"end": 2471,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2453,
											"end": 2471,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 2453,
											"end": 2471,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 2473,
											"end": 2495,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2473,
											"end": 2495,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2473,
											"end": 2495,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 2450,
											"end": 2496,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 2447,
											"end": 2519,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2447,
											"end": 2519,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "532"
										},
										{
											"begin": 2447,
											"end": 2519,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2499,
											"end": 2517,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "532"
										},
										{
											"begin": 2499,
											"end": 2517,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "500"
										},
										{
											"begin": 2499,
											"end": 2517,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2499,
											"end": 2517,
											"name": "tag",
											"source": 18,
											"value": "532"
										},
										{
											"begin": 2499,
											"end": 2517,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2539,
											"end": 2549,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2535,
											"end": 2537,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2528,
											"end": 2550,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2574,
											"end": 2576,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2566,
											"end": 2572,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 2559,
											"end": 2577,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2620,
											"end": 2623,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 2613,
											"end": 2617,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2608,
											"end": 2610,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 2600,
											"end": 2606,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 2596,
											"end": 2611,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2592,
											"end": 2618,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2589,
											"end": 2624,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 2586,
											"end": 2641,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2586,
											"end": 2641,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "533"
										},
										{
											"begin": 2586,
											"end": 2641,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2637,
											"end": 2638,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2634,
											"end": 2635,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2627,
											"end": 2639,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2586,
											"end": 2641,
											"name": "tag",
											"source": 18,
											"value": "533"
										},
										{
											"begin": 2586,
											"end": 2641,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2701,
											"end": 2703,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2694,
											"end": 2698,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2686,
											"end": 2692,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 2682,
											"end": 2699,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2675,
											"end": 2679,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2667,
											"end": 2673,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2663,
											"end": 2680,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2650,
											"end": 2704,
											"name": "CALLDATACOPY",
											"source": 18
										},
										{
											"begin": 2748,
											"end": 2749,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2741,
											"end": 2745,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 2736,
											"end": 2738,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 2728,
											"end": 2734,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2724,
											"end": 2739,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2720,
											"end": 2746,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 2713,
											"end": 2750,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 2768,
											"end": 2774,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2759,
											"end": 2774,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 2759,
											"end": 2774,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2759,
											"end": 2774,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2759,
											"end": 2774,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2759,
											"end": 2774,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2759,
											"end": 2774,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2062,
											"end": 2780,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2062,
											"end": 2780,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2062,
											"end": 2780,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2062,
											"end": 2780,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2062,
											"end": 2780,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2785,
											"end": 3179,
											"name": "tag",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 2785,
											"end": 3179,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2862,
											"end": 2868,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2870,
											"end": 2876,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2923,
											"end": 2925,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 2911,
											"end": 2920,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2902,
											"end": 2909,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 2898,
											"end": 2921,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 2894,
											"end": 2926,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 2891,
											"end": 2943,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 2891,
											"end": 2943,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "535"
										},
										{
											"begin": 2891,
											"end": 2943,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 2939,
											"end": 2940,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 2936,
											"end": 2937,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 2929,
											"end": 2941,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 2891,
											"end": 2943,
											"name": "tag",
											"source": 18,
											"value": "535"
										},
										{
											"begin": 2891,
											"end": 2943,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2962,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "536"
										},
										{
											"begin": 2981,
											"end": 2990,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 2962,
											"end": 2991,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "499"
										},
										{
											"begin": 2962,
											"end": 2991,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 2962,
											"end": 2991,
											"name": "tag",
											"source": 18,
											"value": "536"
										},
										{
											"begin": 2962,
											"end": 2991,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 2952,
											"end": 2991,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 2952,
											"end": 2991,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3042,
											"end": 3044,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3031,
											"end": 3040,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 3027,
											"end": 3045,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3014,
											"end": 3046,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 3069,
											"end": 3087,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3061,
											"end": 3067,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 3058,
											"end": 3088,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 3055,
											"end": 3105,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3055,
											"end": 3105,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "537"
										},
										{
											"begin": 3055,
											"end": 3105,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3101,
											"end": 3102,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3098,
											"end": 3099,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3091,
											"end": 3103,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 3055,
											"end": 3105,
											"name": "tag",
											"source": 18,
											"value": "537"
										},
										{
											"begin": 3055,
											"end": 3105,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3124,
											"end": 3173,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "538"
										},
										{
											"begin": 3165,
											"end": 3172,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 3156,
											"end": 3162,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 3145,
											"end": 3154,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 3141,
											"end": 3163,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3124,
											"end": 3173,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "501"
										},
										{
											"begin": 3124,
											"end": 3173,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3124,
											"end": 3173,
											"name": "tag",
											"source": 18,
											"value": "538"
										},
										{
											"begin": 3124,
											"end": 3173,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3114,
											"end": 3173,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3114,
											"end": 3173,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3114,
											"end": 3173,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2785,
											"end": 3179,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2785,
											"end": 3179,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2785,
											"end": 3179,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 2785,
											"end": 3179,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 2785,
											"end": 3179,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 2785,
											"end": 3179,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3184,
											"end": 3506,
											"name": "tag",
											"source": 18,
											"value": "101"
										},
										{
											"begin": 3184,
											"end": 3506,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3261,
											"end": 3267,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3269,
											"end": 3275,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3277,
											"end": 3283,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3330,
											"end": 3332,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 3318,
											"end": 3327,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 3309,
											"end": 3316,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 3305,
											"end": 3328,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 3301,
											"end": 3333,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 3298,
											"end": 3350,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 3298,
											"end": 3350,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "540"
										},
										{
											"begin": 3298,
											"end": 3350,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 3346,
											"end": 3347,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 3343,
											"end": 3344,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 3336,
											"end": 3348,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 3298,
											"end": 3350,
											"name": "tag",
											"source": 18,
											"value": "540"
										},
										{
											"begin": 3298,
											"end": 3350,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3369,
											"end": 3398,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "541"
										},
										{
											"begin": 3388,
											"end": 3397,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 3369,
											"end": 3398,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "499"
										},
										{
											"begin": 3369,
											"end": 3398,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3369,
											"end": 3398,
											"name": "tag",
											"source": 18,
											"value": "541"
										},
										{
											"begin": 3369,
											"end": 3398,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3359,
											"end": 3398,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": 3445,
											"end": 3447,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 3430,
											"end": 3448,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 3430,
											"end": 3448,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3417,
											"end": 3449,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 3417,
											"end": 3449,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3496,
											"end": 3498,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 3481,
											"end": 3499,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 3481,
											"end": 3499,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 3481,
											"end": 3499,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 3468,
											"end": 3500,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 3468,
											"end": 3500,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 3184,
											"end": 3506,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3184,
											"end": 3506,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 3952,
											"end": 4240,
											"name": "tag",
											"source": 18,
											"value": "502"
										},
										{
											"begin": 3952,
											"end": 4240,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 3993,
											"end": 3996,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4031,
											"end": 4036,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4025,
											"end": 4037,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 4058,
											"end": 4064,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4053,
											"end": 4056,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 4046,
											"end": 4065,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4114,
											"end": 4120,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4107,
											"end": 4111,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4100,
											"end": 4105,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 4096,
											"end": 4112,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4089,
											"end": 4093,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4084,
											"end": 4087,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 4080,
											"end": 4094,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4074,
											"end": 4121,
											"name": "MCOPY",
											"source": 18
										},
										{
											"begin": 4166,
											"end": 4167,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4159,
											"end": 4163,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4150,
											"end": 4156,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4145,
											"end": 4148,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 4141,
											"end": 4157,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4137,
											"end": 4164,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4130,
											"end": 4168,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4229,
											"end": 4233,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4222,
											"end": 4224,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 4218,
											"end": 4225,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 4213,
											"end": 4215,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 4205,
											"end": 4211,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 4201,
											"end": 4216,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4197,
											"end": 4226,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 4192,
											"end": 4195,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 4188,
											"end": 4227,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4184,
											"end": 4234,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4177,
											"end": 4234,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 4177,
											"end": 4234,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 4177,
											"end": 4234,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3952,
											"end": 4240,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 3952,
											"end": 4240,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 3952,
											"end": 4240,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3952,
											"end": 4240,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 3952,
											"end": 4240,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4245,
											"end": 4785,
											"name": "tag",
											"source": 18,
											"value": "127"
										},
										{
											"begin": 4245,
											"end": 4785,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4527,
											"end": 4528,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 4523,
											"end": 4524,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 4518,
											"end": 4521,
											"name": "PUSH",
											"source": 18,
											"value": "A0"
										},
										{
											"begin": 4514,
											"end": 4525,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 4510,
											"end": 4529,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 4502,
											"end": 4508,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 4498,
											"end": 4530,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 4487,
											"end": 4496,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4480,
											"end": 4531,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4567,
											"end": 4573,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 4562,
											"end": 4564,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4551,
											"end": 4560,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4547,
											"end": 4565,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4540,
											"end": 4574,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4610,
											"end": 4613,
											"name": "PUSH",
											"source": 18,
											"value": "A0"
										},
										{
											"begin": 4605,
											"end": 4607,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 4594,
											"end": 4603,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 4590,
											"end": 4608,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4583,
											"end": 4614,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4461,
											"end": 4465,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4631,
											"end": 4676,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "548"
										},
										{
											"begin": 4671,
											"end": 4674,
											"name": "PUSH",
											"source": 18,
											"value": "A0"
										},
										{
											"begin": 4660,
											"end": 4669,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 4656,
											"end": 4675,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4648,
											"end": 4654,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 4631,
											"end": 4676,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "502"
										},
										{
											"begin": 4631,
											"end": 4676,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4631,
											"end": 4676,
											"name": "tag",
											"source": 18,
											"value": "548"
										},
										{
											"begin": 4631,
											"end": 4676,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4719,
											"end": 4733,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 4719,
											"end": 4733,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4712,
											"end": 4734,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 4707,
											"end": 4709,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 4692,
											"end": 4710,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 4692,
											"end": 4710,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4685,
											"end": 4735,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4766,
											"end": 4769,
											"name": "PUSH",
											"source": 18,
											"value": "80"
										},
										{
											"begin": 4751,
											"end": 4770,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4744,
											"end": 4779,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4623,
											"end": 4676,
											"name": "SWAP4",
											"source": 18
										},
										{
											"begin": 4245,
											"end": 4785,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4245,
											"end": 4785,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 4790,
											"end": 5009,
											"name": "tag",
											"source": 18,
											"value": "139"
										},
										{
											"begin": 4790,
											"end": 5009,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 4939,
											"end": 4941,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4928,
											"end": 4937,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 4921,
											"end": 4942,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 4902,
											"end": 4906,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 4959,
											"end": 5003,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "492"
										},
										{
											"begin": 4999,
											"end": 5001,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 4988,
											"end": 4997,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 4984,
											"end": 5002,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 4976,
											"end": 4982,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 4959,
											"end": 5003,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "502"
										},
										{
											"begin": 4959,
											"end": 5003,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5014,
											"end": 5476,
											"name": "tag",
											"source": 18,
											"value": "151"
										},
										{
											"begin": 5014,
											"end": 5476,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5100,
											"end": 5106,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5108,
											"end": 5114,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5116,
											"end": 5122,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5169,
											"end": 5171,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 5157,
											"end": 5166,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 5148,
											"end": 5155,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 5144,
											"end": 5167,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 5140,
											"end": 5172,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 5137,
											"end": 5189,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 5137,
											"end": 5189,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "552"
										},
										{
											"begin": 5137,
											"end": 5189,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 5185,
											"end": 5186,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5182,
											"end": 5183,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5175,
											"end": 5187,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 5137,
											"end": 5189,
											"name": "tag",
											"source": 18,
											"value": "552"
										},
										{
											"begin": 5137,
											"end": 5189,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5208,
											"end": 5237,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "553"
										},
										{
											"begin": 5227,
											"end": 5236,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 5208,
											"end": 5237,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "499"
										},
										{
											"begin": 5208,
											"end": 5237,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5208,
											"end": 5237,
											"name": "tag",
											"source": 18,
											"value": "553"
										},
										{
											"begin": 5208,
											"end": 5237,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5198,
											"end": 5237,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 5198,
											"end": 5237,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5284,
											"end": 5286,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 5273,
											"end": 5282,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 5269,
											"end": 5287,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5256,
											"end": 5288,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 5246,
											"end": 5288,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5246,
											"end": 5288,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5339,
											"end": 5341,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 5328,
											"end": 5337,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 5324,
											"end": 5342,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5311,
											"end": 5343,
											"name": "CALLDATALOAD",
											"source": 18
										},
										{
											"begin": 5366,
											"end": 5384,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 5358,
											"end": 5364,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 5355,
											"end": 5385,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 5352,
											"end": 5402,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 5352,
											"end": 5402,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "554"
										},
										{
											"begin": 5352,
											"end": 5402,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 5398,
											"end": 5399,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 5395,
											"end": 5396,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5388,
											"end": 5400,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 5352,
											"end": 5402,
											"name": "tag",
											"source": 18,
											"value": "554"
										},
										{
											"begin": 5352,
											"end": 5402,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5421,
											"end": 5470,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "555"
										},
										{
											"begin": 5462,
											"end": 5469,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 5453,
											"end": 5459,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5442,
											"end": 5451,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 5438,
											"end": 5460,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5421,
											"end": 5470,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "501"
										},
										{
											"begin": 5421,
											"end": 5470,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5421,
											"end": 5470,
											"name": "tag",
											"source": 18,
											"value": "555"
										},
										{
											"begin": 5421,
											"end": 5470,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5411,
											"end": 5470,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 5411,
											"end": 5470,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5411,
											"end": 5470,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5014,
											"end": 5476,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 5014,
											"end": 5476,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5014,
											"end": 5476,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 5014,
											"end": 5476,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 5014,
											"end": 5476,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 5014,
											"end": 5476,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5481,
											"end": 5817,
											"name": "tag",
											"source": 18,
											"value": "177"
										},
										{
											"begin": 5481,
											"end": 5817,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 5683,
											"end": 5685,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 5665,
											"end": 5686,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 5665,
											"end": 5686,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5665,
											"end": 5686,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5722,
											"end": 5724,
											"name": "PUSH",
											"source": 18,
											"value": "C"
										},
										{
											"begin": 5702,
											"end": 5720,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5702,
											"end": 5720,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5702,
											"end": 5720,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5695,
											"end": 5725,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2737BA1030B71030B236B4B7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5756,
											"end": 5758,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 5741,
											"end": 5759,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 5741,
											"end": 5759,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5734,
											"end": 5776,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 5808,
											"end": 5810,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 5793,
											"end": 5811,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 5793,
											"end": 5811,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5481,
											"end": 5817,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 5822,
											"end": 6172,
											"name": "tag",
											"source": 18,
											"value": "181"
										},
										{
											"begin": 5822,
											"end": 6172,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6024,
											"end": 6026,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 6006,
											"end": 6027,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6006,
											"end": 6027,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6006,
											"end": 6027,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6063,
											"end": 6065,
											"name": "PUSH",
											"source": 18,
											"value": "1A"
										},
										{
											"begin": 6043,
											"end": 6061,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6043,
											"end": 6061,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6043,
											"end": 6061,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6036,
											"end": 6066,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6102,
											"end": 6130,
											"name": "PUSH",
											"source": 18,
											"value": "5472616E73616374696F6E20646F6573206E6F74206578697374000000000000"
										},
										{
											"begin": 6097,
											"end": 6099,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 6082,
											"end": 6100,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6082,
											"end": 6100,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6075,
											"end": 6131,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6163,
											"end": 6165,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 6148,
											"end": 6166,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6148,
											"end": 6166,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 5822,
											"end": 6172,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 6177,
											"end": 6304,
											"name": "tag",
											"source": 18,
											"value": "185"
										},
										{
											"begin": 6177,
											"end": 6304,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6238,
											"end": 6248,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B71"
										},
										{
											"begin": 6233,
											"end": 6236,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 6229,
											"end": 6249,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 6226,
											"end": 6227,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6219,
											"end": 6250,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6269,
											"end": 6273,
											"name": "PUSH",
											"source": 18,
											"value": "32"
										},
										{
											"begin": 6266,
											"end": 6267,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 6259,
											"end": 6274,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6293,
											"end": 6297,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 6290,
											"end": 6291,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 6283,
											"end": 6298,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 6309,
											"end": 6661,
											"name": "tag",
											"source": 18,
											"value": "189"
										},
										{
											"begin": 6309,
											"end": 6661,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 6511,
											"end": 6513,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 6493,
											"end": 6514,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 6493,
											"end": 6514,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6493,
											"end": 6514,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6550,
											"end": 6552,
											"name": "PUSH",
											"source": 18,
											"value": "1C"
										},
										{
											"begin": 6530,
											"end": 6548,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6530,
											"end": 6548,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6530,
											"end": 6548,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6523,
											"end": 6553,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6589,
											"end": 6619,
											"name": "PUSH",
											"source": 18,
											"value": "5472616E73616374696F6E20616C726561647920657865637574656400000000"
										},
										{
											"begin": 6584,
											"end": 6586,
											"name": "PUSH",
											"source": 18,
											"value": "40"
										},
										{
											"begin": 6569,
											"end": 6587,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 6569,
											"end": 6587,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6562,
											"end": 6620,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 6652,
											"end": 6654,
											"name": "PUSH",
											"source": 18,
											"value": "60"
										},
										{
											"begin": 6637,
											"end": 6655,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 6637,
											"end": 6655,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 6309,
											"end": 6661,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7020,
											"end": 7147,
											"name": "tag",
											"source": 18,
											"value": "503"
										},
										{
											"begin": 7020,
											"end": 7147,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7081,
											"end": 7091,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B71"
										},
										{
											"begin": 7076,
											"end": 7079,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 7072,
											"end": 7092,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 7069,
											"end": 7070,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7062,
											"end": 7093,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7112,
											"end": 7116,
											"name": "PUSH",
											"source": 18,
											"value": "11"
										},
										{
											"begin": 7109,
											"end": 7110,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 7102,
											"end": 7117,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 7136,
											"end": 7140,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 7133,
											"end": 7134,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7126,
											"end": 7141,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 7152,
											"end": 7280,
											"name": "tag",
											"source": 18,
											"value": "198"
										},
										{
											"begin": 7152,
											"end": 7280,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7219,
											"end": 7228,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7219,
											"end": 7228,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7219,
											"end": 7228,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 7240,
											"end": 7251,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7240,
											"end": 7251,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7240,
											"end": 7251,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 7237,
											"end": 7274,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 7237,
											"end": 7274,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "171"
										},
										{
											"begin": 7237,
											"end": 7274,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 7254,
											"end": 7272,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "171"
										},
										{
											"begin": 7254,
											"end": 7272,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "503"
										},
										{
											"begin": 7254,
											"end": 7272,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 7665,
											"end": 7942,
											"name": "tag",
											"source": 18,
											"value": "242"
										},
										{
											"begin": 7665,
											"end": 7942,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7732,
											"end": 7738,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7785,
											"end": 7787,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 7773,
											"end": 7782,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 7764,
											"end": 7771,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 7760,
											"end": 7783,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 7756,
											"end": 7788,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 7753,
											"end": 7805,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 7753,
											"end": 7805,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "567"
										},
										{
											"begin": 7753,
											"end": 7805,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 7801,
											"end": 7802,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7798,
											"end": 7799,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 7791,
											"end": 7803,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 7753,
											"end": 7805,
											"name": "tag",
											"source": 18,
											"value": "567"
										},
										{
											"begin": 7753,
											"end": 7805,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 7833,
											"end": 7842,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7827,
											"end": 7843,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 7886,
											"end": 7891,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 7879,
											"end": 7892,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 7872,
											"end": 7893,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 7865,
											"end": 7870,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 7862,
											"end": 7894,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 7852,
											"end": 7912,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "492"
										},
										{
											"begin": 7852,
											"end": 7912,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 7908,
											"end": 7909,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 7905,
											"end": 7906,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 7898,
											"end": 7910,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 8511,
											"end": 8891,
											"name": "tag",
											"source": 18,
											"value": "279"
										},
										{
											"begin": 8511,
											"end": 8891,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8590,
											"end": 8591,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 8586,
											"end": 8598,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8586,
											"end": 8598,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8586,
											"end": 8598,
											"name": "SHR",
											"source": 18
										},
										{
											"begin": 8586,
											"end": 8598,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8633,
											"end": 8645,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8633,
											"end": 8645,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 8633,
											"end": 8645,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 8654,
											"end": 8715,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "572"
										},
										{
											"begin": 8654,
											"end": 8715,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 8708,
											"end": 8712,
											"name": "PUSH",
											"source": 18,
											"value": "7F"
										},
										{
											"begin": 8700,
											"end": 8706,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8696,
											"end": 8713,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 8686,
											"end": 8713,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 8686,
											"end": 8713,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8654,
											"end": 8715,
											"name": "tag",
											"source": 18,
											"value": "572"
										},
										{
											"begin": 8654,
											"end": 8715,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8761,
											"end": 8763,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 8753,
											"end": 8759,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 8750,
											"end": 8764,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 8730,
											"end": 8748,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 8727,
											"end": 8765,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 8724,
											"end": 8885,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "573"
										},
										{
											"begin": 8724,
											"end": 8885,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 8807,
											"end": 8817,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B71"
										},
										{
											"begin": 8802,
											"end": 8805,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 8798,
											"end": 8818,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 8795,
											"end": 8796,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8788,
											"end": 8819,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8842,
											"end": 8846,
											"name": "PUSH",
											"source": 18,
											"value": "22"
										},
										{
											"begin": 8839,
											"end": 8840,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 8832,
											"end": 8847,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 8870,
											"end": 8874,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 8867,
											"end": 8868,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 8860,
											"end": 8875,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 8724,
											"end": 8885,
											"name": "tag",
											"source": 18,
											"value": "573"
										},
										{
											"begin": 8724,
											"end": 8885,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 8724,
											"end": 8885,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8511,
											"end": 8891,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 8511,
											"end": 8891,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 8511,
											"end": 8891,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 8511,
											"end": 8891,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9241,
											"end": 9409,
											"name": "tag",
											"source": 18,
											"value": "292"
										},
										{
											"begin": 9241,
											"end": 9409,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9314,
											"end": 9323,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 9314,
											"end": 9323,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9314,
											"end": 9323,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 9345,
											"end": 9354,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 9345,
											"end": 9354,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 9362,
											"end": 9377,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9362,
											"end": 9377,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9362,
											"end": 9377,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 9356,
											"end": 9378,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 9356,
											"end": 9378,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 9342,
											"end": 9379,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 9332,
											"end": 9403,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "171"
										},
										{
											"begin": 9332,
											"end": 9403,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 9383,
											"end": 9401,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "171"
										},
										{
											"begin": 9383,
											"end": 9401,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "503"
										},
										{
											"begin": 9383,
											"end": 9401,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9414,
											"end": 9631,
											"name": "tag",
											"source": 18,
											"value": "295"
										},
										{
											"begin": 9414,
											"end": 9631,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9454,
											"end": 9455,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9480,
											"end": 9481,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9470,
											"end": 9602,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "579"
										},
										{
											"begin": 9470,
											"end": 9602,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 9524,
											"end": 9534,
											"name": "PUSH",
											"source": 18,
											"value": "4E487B71"
										},
										{
											"begin": 9519,
											"end": 9522,
											"name": "PUSH",
											"source": 18,
											"value": "E0"
										},
										{
											"begin": 9515,
											"end": 9535,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 9512,
											"end": 9513,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9505,
											"end": 9536,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9559,
											"end": 9563,
											"name": "PUSH",
											"source": 18,
											"value": "12"
										},
										{
											"begin": 9556,
											"end": 9557,
											"name": "PUSH",
											"source": 18,
											"value": "4"
										},
										{
											"begin": 9549,
											"end": 9564,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 9587,
											"end": 9591,
											"name": "PUSH",
											"source": 18,
											"value": "24"
										},
										{
											"begin": 9584,
											"end": 9585,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 9577,
											"end": 9592,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 9470,
											"end": 9602,
											"name": "tag",
											"source": 18,
											"value": "579"
										},
										{
											"begin": 9470,
											"end": 9602,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 9616,
											"end": 9625,
											"name": "DIV",
											"source": 18
										},
										{
											"begin": 9616,
											"end": 9625,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 9414,
											"end": 9631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 9636,
											"end": 9761,
											"name": "tag",
											"source": 18,
											"value": "297"
										},
										{
											"begin": 9636,
											"end": 9761,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 9701,
											"end": 9710,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 9701,
											"end": 9710,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9701,
											"end": 9710,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 9722,
											"end": 9732,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 9722,
											"end": 9732,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 9722,
											"end": 9732,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 9719,
											"end": 9755,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 9719,
											"end": 9755,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "171"
										},
										{
											"begin": 9719,
											"end": 9755,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 9735,
											"end": 9753,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "171"
										},
										{
											"begin": 9735,
											"end": 9753,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "503"
										},
										{
											"begin": 9735,
											"end": 9753,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10528,
											"end": 11045,
											"name": "tag",
											"source": 18,
											"value": "505"
										},
										{
											"begin": 10528,
											"end": 11045,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10629,
											"end": 10631,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 10624,
											"end": 10627,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10621,
											"end": 10632,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 10618,
											"end": 11039,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 10618,
											"end": 11039,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "213"
										},
										{
											"begin": 10618,
											"end": 11039,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 10665,
											"end": 10670,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 10662,
											"end": 10663,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 10655,
											"end": 10671,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10709,
											"end": 10713,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 10706,
											"end": 10707,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 10696,
											"end": 10714,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 10779,
											"end": 10781,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 10767,
											"end": 10777,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 10763,
											"end": 10782,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10760,
											"end": 10761,
											"name": "PUSH",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 10756,
											"end": 10783,
											"name": "SHR",
											"source": 18
										},
										{
											"begin": 10750,
											"end": 10754,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10746,
											"end": 10784,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10815,
											"end": 10819,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 10803,
											"end": 10813,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 10800,
											"end": 10820,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 10797,
											"end": 10844,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 10797,
											"end": 10844,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "588"
										},
										{
											"begin": 10797,
											"end": 10844,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 10838,
											"end": 10842,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 10797,
											"end": 10844,
											"name": "tag",
											"source": 18,
											"value": "588"
										},
										{
											"begin": 10797,
											"end": 10844,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10893,
											"end": 10895,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 10888,
											"end": 10891,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 10884,
											"end": 10896,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10881,
											"end": 10882,
											"name": "PUSH",
											"source": 18,
											"value": "5"
										},
										{
											"begin": 10877,
											"end": 10897,
											"name": "SHR",
											"source": 18
										},
										{
											"begin": 10871,
											"end": 10875,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 10867,
											"end": 10898,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10857,
											"end": 10898,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 10857,
											"end": 10898,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10948,
											"end": 11029,
											"name": "tag",
											"source": 18,
											"value": "589"
										},
										{
											"begin": 10948,
											"end": 11029,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10966,
											"end": 10968,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10959,
											"end": 10964,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10956,
											"end": 10969,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 10948,
											"end": 11029,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 10948,
											"end": 11029,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "591"
										},
										{
											"begin": 10948,
											"end": 11029,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 11025,
											"end": 11026,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 11011,
											"end": 11027,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 11011,
											"end": 11027,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 10992,
											"end": 10993,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 10981,
											"end": 10994,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 10948,
											"end": 11029,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "589"
										},
										{
											"begin": 10948,
											"end": 11029,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 10948,
											"end": 11029,
											"name": "tag",
											"source": 18,
											"value": "591"
										},
										{
											"begin": 10948,
											"end": 11029,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10952,
											"end": 10955,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10952,
											"end": 10955,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10528,
											"end": 11045,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10528,
											"end": 11045,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10528,
											"end": 11045,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 10528,
											"end": 11045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11221,
											"end": 12562,
											"name": "tag",
											"source": 18,
											"value": "335"
										},
										{
											"begin": 11221,
											"end": 12562,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11345,
											"end": 11348,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 11339,
											"end": 11349,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 11372,
											"end": 11390,
											"name": "PUSH",
											"source": 18,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 11364,
											"end": 11370,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 11361,
											"end": 11391,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 11358,
											"end": 11414,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 11358,
											"end": 11414,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "595"
										},
										{
											"begin": 11358,
											"end": 11414,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 11394,
											"end": 11412,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "595"
										},
										{
											"begin": 11394,
											"end": 11412,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "500"
										},
										{
											"begin": 11394,
											"end": 11412,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11394,
											"end": 11412,
											"name": "tag",
											"source": 18,
											"value": "595"
										},
										{
											"begin": 11394,
											"end": 11412,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11423,
											"end": 11519,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "596"
										},
										{
											"begin": 11512,
											"end": 11518,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 11472,
											"end": 11510,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "597"
										},
										{
											"begin": 11504,
											"end": 11508,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 11498,
											"end": 11509,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 11472,
											"end": 11510,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "279"
										},
										{
											"begin": 11472,
											"end": 11510,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11472,
											"end": 11510,
											"name": "tag",
											"source": 18,
											"value": "597"
										},
										{
											"begin": 11472,
											"end": 11510,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11466,
											"end": 11470,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 11423,
											"end": 11519,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "505"
										},
										{
											"begin": 11423,
											"end": 11519,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11423,
											"end": 11519,
											"name": "tag",
											"source": 18,
											"value": "596"
										},
										{
											"begin": 11423,
											"end": 11519,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11574,
											"end": 11578,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 11574,
											"end": 11578,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 11631,
											"end": 11633,
											"name": "PUSH",
											"source": 18,
											"value": "1F"
										},
										{
											"begin": 11620,
											"end": 11634,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 11620,
											"end": 11634,
											"name": "GT",
											"source": 18
										},
										{
											"begin": 11648,
											"end": 11649,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 11643,
											"end": 12305,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 11643,
											"end": 12305,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 11643,
											"end": 12305,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "599"
										},
										{
											"begin": 11643,
											"end": 12305,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 12349,
											"end": 12350,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 12366,
											"end": 12372,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 12363,
											"end": 12452,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 12363,
											"end": 12452,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "600"
										},
										{
											"begin": 12363,
											"end": 12452,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12418,
											"end": 12437,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 12418,
											"end": 12437,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 12418,
											"end": 12437,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12412,
											"end": 12438,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 12363,
											"end": 12452,
											"name": "tag",
											"source": 18,
											"value": "600"
										},
										{
											"begin": 12363,
											"end": 12452,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11178,
											"end": 11179,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 11174,
											"end": 11185,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 11174,
											"end": 11185,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 11174,
											"end": 11185,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 11170,
											"end": 11194,
											"name": "SHR",
											"source": 18
										},
										{
											"begin": 11166,
											"end": 11195,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 11156,
											"end": 11196,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 11202,
											"end": 11203,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 11198,
											"end": 11209,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 11198,
											"end": 11209,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 11198,
											"end": 11209,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 11153,
											"end": 11210,
											"name": "OR",
											"source": 18
										},
										{
											"begin": 12465,
											"end": 12546,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 12465,
											"end": 12546,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 11613,
											"end": 12556,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "598"
										},
										{
											"begin": 11613,
											"end": 12556,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11643,
											"end": 12305,
											"name": "tag",
											"source": 18,
											"value": "599"
										},
										{
											"begin": 11643,
											"end": 12305,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 10475,
											"end": 10476,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 10468,
											"end": 10482,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 10468,
											"end": 10482,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10468,
											"end": 10482,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 10512,
											"end": 10516,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 10499,
											"end": 10517,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 10499,
											"end": 10517,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 11679,
											"end": 11699,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 11679,
											"end": 11699,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 11679,
											"end": 11699,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 11796,
											"end": 12032,
											"name": "tag",
											"source": 18,
											"value": "603"
										},
										{
											"begin": 11796,
											"end": 12032,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11810,
											"end": 11817,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11807,
											"end": 11808,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 11804,
											"end": 11818,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 11796,
											"end": 12032,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 11796,
											"end": 12032,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "605"
										},
										{
											"begin": 11796,
											"end": 12032,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 11899,
											"end": 11918,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 11899,
											"end": 11918,
											"name": "DUP7",
											"source": 18
										},
										{
											"begin": 11899,
											"end": 11918,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11893,
											"end": 11919,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 11878,
											"end": 11920,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 11878,
											"end": 11920,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 11991,
											"end": 12018,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 11991,
											"end": 12018,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 11991,
											"end": 12018,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11991,
											"end": 12018,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 11959,
											"end": 11960,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 11947,
											"end": 11961,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 11947,
											"end": 11961,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 11947,
											"end": 11961,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11947,
											"end": 11961,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 11826,
											"end": 11845,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 11826,
											"end": 11845,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 11796,
											"end": 12032,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "603"
										},
										{
											"begin": 11796,
											"end": 12032,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 11796,
											"end": 12032,
											"name": "tag",
											"source": 18,
											"value": "605"
										},
										{
											"begin": 11796,
											"end": 12032,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11800,
											"end": 11803,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12060,
											"end": 12066,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 12051,
											"end": 12058,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 12048,
											"end": 12067,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 12045,
											"end": 12246,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 12045,
											"end": 12246,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "606"
										},
										{
											"begin": 12045,
											"end": 12246,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 12121,
											"end": 12140,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 12121,
											"end": 12140,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 12121,
											"end": 12140,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12115,
											"end": 12141,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 12204,
											"end": 12205,
											"name": "PUSH",
											"source": 18,
											"value": "3"
										},
										{
											"begin": 12200,
											"end": 12214,
											"name": "DUP9",
											"source": 18
										},
										{
											"begin": 12200,
											"end": 12214,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 12200,
											"end": 12214,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 12216,
											"end": 12219,
											"name": "PUSH",
											"source": 18,
											"value": "F8"
										},
										{
											"begin": 12196,
											"end": 12220,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 12192,
											"end": 12229,
											"name": "SHR",
											"source": 18
										},
										{
											"begin": 12188,
											"end": 12230,
											"name": "NOT",
											"source": 18
										},
										{
											"begin": 12173,
											"end": 12231,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 12158,
											"end": 12232,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 12158,
											"end": 12232,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 12045,
											"end": 12246,
											"name": "tag",
											"source": 18,
											"value": "606"
										},
										{
											"begin": 12045,
											"end": 12246,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 12045,
											"end": 12246,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12045,
											"end": 12246,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 12292,
											"end": 12293,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 12283,
											"end": 12289,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 12280,
											"end": 12281,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 12276,
											"end": 12290,
											"name": "SHL",
											"source": 18
										},
										{
											"begin": 12272,
											"end": 12294,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 12266,
											"end": 12270,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 12259,
											"end": 12295,
											"name": "SSTORE",
											"source": 18
										},
										{
											"begin": 11613,
											"end": 12556,
											"name": "tag",
											"source": 18,
											"value": "598"
										},
										{
											"begin": 11613,
											"end": 12556,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 11613,
											"end": 12556,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11613,
											"end": 12556,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11613,
											"end": 12556,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11613,
											"end": 12556,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11221,
											"end": 12562,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11221,
											"end": 12562,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 11221,
											"end": 12562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 12913,
											"end": 13754,
											"name": "tag",
											"source": 18,
											"value": "362"
										},
										{
											"begin": 12913,
											"end": 13754,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13039,
											"end": 13042,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 13068,
											"end": 13069,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 13101,
											"end": 13107,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 13095,
											"end": 13108,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 13131,
											"end": 13167,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "609"
										},
										{
											"begin": 13157,
											"end": 13166,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 13131,
											"end": 13167,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "279"
										},
										{
											"begin": 13131,
											"end": 13167,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13131,
											"end": 13167,
											"name": "tag",
											"source": 18,
											"value": "609"
										},
										{
											"begin": 13131,
											"end": 13167,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13186,
											"end": 13187,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 13203,
											"end": 13220,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 13203,
											"end": 13220,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 13203,
											"end": 13220,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 13229,
											"end": 13362,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 13229,
											"end": 13362,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 13229,
											"end": 13362,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "611"
										},
										{
											"begin": 13229,
											"end": 13362,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 13376,
											"end": 13377,
											"name": "PUSH",
											"source": 18,
											"value": "1"
										},
										{
											"begin": 13371,
											"end": 13729,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 13371,
											"end": 13729,
											"name": "EQ",
											"source": 18
										},
										{
											"begin": 13371,
											"end": 13729,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "612"
										},
										{
											"begin": 13371,
											"end": 13729,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 13196,
											"end": 13729,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "610"
										},
										{
											"begin": 13196,
											"end": 13729,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13229,
											"end": 13362,
											"name": "tag",
											"source": 18,
											"value": "611"
										},
										{
											"begin": 13229,
											"end": 13362,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 13262,
											"end": 13286,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 13262,
											"end": 13286,
											"name": "AND",
											"source": 18
										},
										{
											"begin": 13250,
											"end": 13287,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 13250,
											"end": 13287,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 13335,
											"end": 13349,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 13335,
											"end": 13349,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 13328,
											"end": 13350,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 13316,
											"end": 13351,
											"name": "DUP4",
											"source": 18
										},
										{
											"begin": 13316,
											"end": 13351,
											"name": "MUL",
											"source": 18
										},
										{
											"begin": 13307,
											"end": 13352,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 13307,
											"end": 13352,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13307,
											"end": 13352,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13229,
											"end": 13362,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "610"
										},
										{
											"begin": 13229,
											"end": 13362,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13371,
											"end": 13729,
											"name": "tag",
											"source": 18,
											"value": "612"
										},
										{
											"begin": 13371,
											"end": 13729,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13402,
											"end": 13408,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 13399,
											"end": 13400,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 13392,
											"end": 13409,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 13432,
											"end": 13436,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 13477,
											"end": 13481,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 13474,
											"end": 13475,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 13464,
											"end": 13482,
											"name": "KECCAK256",
											"source": 18
										},
										{
											"begin": 13504,
											"end": 13505,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 13518,
											"end": 13683,
											"name": "tag",
											"source": 18,
											"value": "613"
										},
										{
											"begin": 13518,
											"end": 13683,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13532,
											"end": 13538,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 13529,
											"end": 13530,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 13526,
											"end": 13539,
											"name": "LT",
											"source": 18
										},
										{
											"begin": 13518,
											"end": 13683,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 13518,
											"end": 13683,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "615"
										},
										{
											"begin": 13518,
											"end": 13683,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 13610,
											"end": 13624,
											"name": "DUP2",
											"source": 18
										},
										{
											"begin": 13610,
											"end": 13624,
											"name": "SLOAD",
											"source": 18
										},
										{
											"begin": 13597,
											"end": 13608,
											"name": "DUP11",
											"source": 18
										},
										{
											"begin": 13597,
											"end": 13608,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 13597,
											"end": 13608,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13590,
											"end": 13625,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": 13653,
											"end": 13669,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 13653,
											"end": 13669,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 13653,
											"end": 13669,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13653,
											"end": 13669,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": 13547,
											"end": 13557,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 13547,
											"end": 13557,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13518,
											"end": 13683,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "613"
										},
										{
											"begin": 13518,
											"end": 13683,
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 13518,
											"end": 13683,
											"name": "tag",
											"source": 18,
											"value": "615"
										},
										{
											"begin": 13518,
											"end": 13683,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 13522,
											"end": 13525,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13522,
											"end": 13525,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13522,
											"end": 13525,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13712,
											"end": 13718,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 13707,
											"end": 13710,
											"name": "DUP8",
											"source": 18
										},
										{
											"begin": 13703,
											"end": 13719,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 13696,
											"end": 13719,
											"name": "SWAP5",
											"source": 18
										},
										{
											"begin": 13696,
											"end": 13719,
											"name": "POP",
											"source": 18
										},
										{
											"begin": 13196,
											"end": 13729,
											"name": "tag",
											"source": 18,
											"value": "610"
										},
										{
											"begin": 13196,
											"end": 13729,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13745,
											"end": 13748,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 13745,
											"end": 13748,
											"name": "SWAP7",
											"source": 18
										},
										{
											"begin": 12913,
											"end": 13754,
											"name": "SWAP6",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12913,
											"end": 13754,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 14314,
											"end": 14498,
											"name": "tag",
											"source": 18,
											"value": "406"
										},
										{
											"begin": 14314,
											"end": 14498,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 14384,
											"end": 14390,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 14437,
											"end": 14439,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 14425,
											"end": 14434,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 14416,
											"end": 14423,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 14412,
											"end": 14435,
											"name": "SUB",
											"source": 18
										},
										{
											"begin": 14408,
											"end": 14440,
											"name": "SLT",
											"source": 18
										},
										{
											"begin": 14405,
											"end": 14457,
											"name": "ISZERO",
											"source": 18
										},
										{
											"begin": 14405,
											"end": 14457,
											"name": "PUSH [tag]",
											"source": 18,
											"value": "619"
										},
										{
											"begin": 14405,
											"end": 14457,
											"name": "JUMPI",
											"source": 18
										},
										{
											"begin": 14453,
											"end": 14454,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 14450,
											"end": 14451,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 14443,
											"end": 14455,
											"name": "REVERT",
											"source": 18
										},
										{
											"begin": 14405,
											"end": 14457,
											"name": "tag",
											"source": 18,
											"value": "619"
										},
										{
											"begin": 14405,
											"end": 14457,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14476,
											"end": 14492,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 14476,
											"end": 14492,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 14314,
											"end": 14498,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 14314,
											"end": 14498,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										},
										{
											"begin": 15476,
											"end": 15777,
											"name": "tag",
											"source": 18,
											"value": "478"
										},
										{
											"begin": 15476,
											"end": 15777,
											"name": "JUMPDEST",
											"source": 18
										},
										{
											"begin": 15605,
											"end": 15608,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 15643,
											"end": 15649,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 15637,
											"end": 15650,
											"name": "MLOAD",
											"source": 18
										},
										{
											"begin": 15689,
											"end": 15695,
											"name": "DUP1",
											"source": 18
										},
										{
											"begin": 15682,
											"end": 15686,
											"name": "PUSH",
											"source": 18,
											"value": "20"
										},
										{
											"begin": 15674,
											"end": 15680,
											"name": "DUP6",
											"source": 18
										},
										{
											"begin": 15670,
											"end": 15687,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 15665,
											"end": 15668,
											"name": "DUP5",
											"source": 18
										},
										{
											"begin": 15659,
											"end": 15696,
											"name": "MCOPY",
											"source": 18
										},
										{
											"begin": 15751,
											"end": 15752,
											"name": "PUSH",
											"source": 18,
											"value": "0"
										},
										{
											"begin": 15715,
											"end": 15731,
											"name": "SWAP3",
											"source": 18
										},
										{
											"begin": 15715,
											"end": 15731,
											"name": "ADD",
											"source": 18
										},
										{
											"begin": 15740,
											"end": 15753,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 15740,
											"end": 15753,
											"name": "DUP3",
											"source": 18
										},
										{
											"begin": 15740,
											"end": 15753,
											"name": "MSTORE",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15715,
											"end": 15731,
											"name": "SWAP2",
											"source": 18
										},
										{
											"begin": 15476,
											"end": 15777,
											"name": "SWAP1",
											"source": 18
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 15476,
											"end": 15777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 18
										}
									],
									".data": {
										"75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D": "360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc",
										"9B87106A812D214D41AD9B68A21119E2948EAAF1040375C939EC808B8862455C": "65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
										"B3DA67D1B252AEAB7C8063542D95E75F82A5307A82535949BC38F7CF7BA8897F": "02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800",
										"CB864C43DD5D441BB6271F424F11BEFA622C032DFD374D226E26FBBDB782B8F8": "a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775"
									}
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"ADMIN_ROLE()": "75b238fc",
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"PAUSER_ROLE()": "e63ab1e9",
							"UPGRADER_ROLE()": "f72c0d8b",
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"confirmTransaction(uint256)": "c01a8c84",
							"executeTransaction(uint256)": "ee22610b",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"initialize(address,uint256,uint256)": "7a1ac61e",
							"isConfirmed(uint256,address)": "80f59a65",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"proxiableUUID()": "52d1902d",
							"renounceRole(bytes32,address)": "36568abe",
							"requiredConfirmations()": "82e717f7",
							"revokeConfirmation(uint256)": "20ea8d86",
							"revokeRole(bytes32,address)": "d547741f",
							"stakeTokens(uint256)": "7547c7a3",
							"stakes(address)": "16934fc4",
							"stakingRate()": "c63a6ad2",
							"submitTransaction(address,uint256,bytes)": "c6427474",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transactions(uint256)": "9ace38c2",
							"unpause()": "3f4ba83a",
							"unstakeTokens()": "a5ce413b",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"}],\"name\":\"TokensStaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"TokensUnstaked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"}],\"name\":\"TransactionConfirmed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"}],\"name\":\"TransactionExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"}],\"name\":\"TransactionRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"txIndex\",\"type\":\"uint256\"}],\"name\":\"TransactionSubmitted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_txIndex\",\"type\":\"uint256\"}],\"name\":\"confirmTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_txIndex\",\"type\":\"uint256\"}],\"name\":\"executeTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_requiredConfirmations\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_stakingRate\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isConfirmed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"requiredConfirmations\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_txIndex\",\"type\":\"uint256\"}],\"name\":\"revokeConfirmation\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"stakeTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakes\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"startTime\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingRate\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"submitTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"transactions\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"bool\",\"name\":\"executed\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"numConfirmations\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unstakeTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":\"CryptoQuestTheShardsOfGenesisWallet\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x6662ec4e5cefca03eeadd073e9469df8d2944bb2ee8ec8f7622c2c46aab5f225\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d8544c6f8daa4d1bc215c6a72fe0acdb748664a105b0e5efc19295667521d45\",\"dweb:/ipfs/QmdGWqdnXT8S3RgCR6aV8XHZrsybieMQLLnug1NtpSjEXN\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930\",\"dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj\"]},\"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol\":{\"keccak256\":\"0xad32f6821f860555f9530902a65b54203a4f5db2117f4384ae47a124958078db\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6d362da7417bc7d7cc8623f3d3f8f04c3808d043ee6379568c63a63ec14a124e\",\"dweb:/ipfs/QmYm3wDHUcfGh3MNiRqpWEBbSSYnDSyUsppDATy5DVsfui\"]},\"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol\":{\"keccak256\":\"0xf51f292659a77777c0ed7375a39683d8bee53b86a6e7bd0c76f34ce7aa37a3a8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://32c68498e1b6013477d299e4881dcea818d7e4c3e3aba7a18bde3989b12dff83\",\"dweb:/ipfs/QmZzw1eHLQmDLfKbxVivEWUdae2BfTmjSg1aLowuLwScuZ\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\":{\"keccak256\":\"0xbe63437e37e32162d5d11ea8f11a44378c092b4bcbb05b51a813fe4bf33297d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68a514febde6ffd8afe3cb5b40815d10c0a926063237d5d167cbaa90239f75ae\",\"dweb:/ipfs/QmVBvYeR6oGBw7K7vu5FMotr8josejtaGwugM68VTZacww\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xdaba3f7c42c55b2896353f32bd27d4d5f8bae741b3b05d4c53f67abc4dc47ce8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fa2e61141c602510bcd2cd936ed9561922ac8772a9b9c9a9db091a74e354a45\",\"dweb:/ipfs/QmcHQDDoEBwJmwUbzoVkytvJsBx3KVHYFFnDkvRGWh9Wmh\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol\":{\"keccak256\":\"0x53e93533f1efbe5fc910f21587226b3f6feed3aac4a31b535682d35e975d530f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6cca394f987afee318899649c81ded125ddde4392f55b3c306417eeee2ae893\",\"dweb:/ipfs/QmeJtojU5pWSczwXrtvpExkFdVd8nh41QrKsgEeM3ifHZR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 820,
								"contract": "src/contract/CryptoQuestTheShardsOfGenesisWallet.sol:CryptoQuestTheShardsOfGenesisWallet",
								"label": "_paused",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							},
							{
								"astId": 925,
								"contract": "src/contract/CryptoQuestTheShardsOfGenesisWallet.sol:CryptoQuestTheShardsOfGenesisWallet",
								"label": "__gap",
								"offset": 0,
								"slot": "1",
								"type": "t_array(t_uint256)49_storage"
							},
							{
								"astId": 2170,
								"contract": "src/contract/CryptoQuestTheShardsOfGenesisWallet.sol:CryptoQuestTheShardsOfGenesisWallet",
								"label": "isConfirmed",
								"offset": 0,
								"slot": "50",
								"type": "t_mapping(t_uint256,t_mapping(t_address,t_bool))"
							},
							{
								"astId": 2174,
								"contract": "src/contract/CryptoQuestTheShardsOfGenesisWallet.sol:CryptoQuestTheShardsOfGenesisWallet",
								"label": "transactions",
								"offset": 0,
								"slot": "51",
								"type": "t_array(t_struct(Transaction)2164_storage)dyn_storage"
							},
							{
								"astId": 2176,
								"contract": "src/contract/CryptoQuestTheShardsOfGenesisWallet.sol:CryptoQuestTheShardsOfGenesisWallet",
								"label": "requiredConfirmations",
								"offset": 0,
								"slot": "52",
								"type": "t_uint256"
							},
							{
								"astId": 2186,
								"contract": "src/contract/CryptoQuestTheShardsOfGenesisWallet.sol:CryptoQuestTheShardsOfGenesisWallet",
								"label": "stakes",
								"offset": 0,
								"slot": "53",
								"type": "t_mapping(t_address,t_struct(Stake)2181_storage)"
							},
							{
								"astId": 2188,
								"contract": "src/contract/CryptoQuestTheShardsOfGenesisWallet.sol:CryptoQuestTheShardsOfGenesisWallet",
								"label": "stakingRate",
								"offset": 0,
								"slot": "54",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_array(t_struct(Transaction)2164_storage)dyn_storage": {
								"base": "t_struct(Transaction)2164_storage",
								"encoding": "dynamic_array",
								"label": "struct CryptoQuestTheShardsOfGenesisWallet.Transaction[]",
								"numberOfBytes": "32"
							},
							"t_array(t_uint256)49_storage": {
								"base": "t_uint256",
								"encoding": "inplace",
								"label": "uint256[49]",
								"numberOfBytes": "1568"
							},
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes_storage": {
								"encoding": "bytes",
								"label": "bytes",
								"numberOfBytes": "32"
							},
							"t_mapping(t_address,t_bool)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							},
							"t_mapping(t_address,t_struct(Stake)2181_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct CryptoQuestTheShardsOfGenesisWallet.Stake)",
								"numberOfBytes": "32",
								"value": "t_struct(Stake)2181_storage"
							},
							"t_mapping(t_uint256,t_mapping(t_address,t_bool))": {
								"encoding": "mapping",
								"key": "t_uint256",
								"label": "mapping(uint256 => mapping(address => bool))",
								"numberOfBytes": "32",
								"value": "t_mapping(t_address,t_bool)"
							},
							"t_struct(Stake)2181_storage": {
								"encoding": "inplace",
								"label": "struct CryptoQuestTheShardsOfGenesisWallet.Stake",
								"members": [
									{
										"astId": 2178,
										"contract": "src/contract/CryptoQuestTheShardsOfGenesisWallet.sol:CryptoQuestTheShardsOfGenesisWallet",
										"label": "amount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2180,
										"contract": "src/contract/CryptoQuestTheShardsOfGenesisWallet.sol:CryptoQuestTheShardsOfGenesisWallet",
										"label": "startTime",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "64"
							},
							"t_struct(Transaction)2164_storage": {
								"encoding": "inplace",
								"label": "struct CryptoQuestTheShardsOfGenesisWallet.Transaction",
								"members": [
									{
										"astId": 2155,
										"contract": "src/contract/CryptoQuestTheShardsOfGenesisWallet.sol:CryptoQuestTheShardsOfGenesisWallet",
										"label": "to",
										"offset": 0,
										"slot": "0",
										"type": "t_address"
									},
									{
										"astId": 2157,
										"contract": "src/contract/CryptoQuestTheShardsOfGenesisWallet.sol:CryptoQuestTheShardsOfGenesisWallet",
										"label": "value",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2159,
										"contract": "src/contract/CryptoQuestTheShardsOfGenesisWallet.sol:CryptoQuestTheShardsOfGenesisWallet",
										"label": "data",
										"offset": 0,
										"slot": "2",
										"type": "t_bytes_storage"
									},
									{
										"astId": 2161,
										"contract": "src/contract/CryptoQuestTheShardsOfGenesisWallet.sol:CryptoQuestTheShardsOfGenesisWallet",
										"label": "executed",
										"offset": 0,
										"slot": "3",
										"type": "t_bool"
									},
									{
										"astId": 2163,
										"contract": "src/contract/CryptoQuestTheShardsOfGenesisWallet.sol:CryptoQuestTheShardsOfGenesisWallet",
										"label": "numConfirmations",
										"offset": 0,
										"slot": "4",
										"type": "t_uint256"
									}
								],
								"numberOfBytes": "160"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
					"exportedSymbols": {
						"AccessControlUpgradeable": [
							362
						],
						"ContextUpgradeable": [
							1288
						],
						"ERC165Upgradeable": [
							1328
						],
						"IAccessControl": [
							1423
						],
						"Initializable": [
							616
						]
					},
					"id": 363,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "@openzeppelin/contracts/access/IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 363,
							"sourceUnit": 1424,
							"src": "134:81:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1423,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 363,
							"sourceUnit": 1289,
							"src": "216:67:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1288,
										"src": "224:18:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
							"file": "../utils/introspection/ERC165Upgradeable.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 363,
							"sourceUnit": 1329,
							"src": "284:79:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "ERC165Upgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1328,
										"src": "292:17:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 9,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 363,
							"sourceUnit": 617,
							"src": "364:63:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 8,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 616,
										"src": "372:13:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 11,
										"name": "Initializable",
										"nameLocations": [
											"2136:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 616,
										"src": "2136:13:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "2136:13:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"2151:18:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1288,
										"src": "2151:18:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "2151:18:0"
								},
								{
									"baseName": {
										"id": 15,
										"name": "IAccessControl",
										"nameLocations": [
											"2171:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1423,
										"src": "2171:14:0"
									},
									"id": 16,
									"nodeType": "InheritanceSpecifier",
									"src": "2171:14:0"
								},
								{
									"baseName": {
										"id": 17,
										"name": "ERC165Upgradeable",
										"nameLocations": [
											"2187:17:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1328,
										"src": "2187:17:0"
									},
									"id": 18,
									"nodeType": "InheritanceSpecifier",
									"src": "2187:17:0"
								}
							],
							"canonicalName": "AccessControlUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 10,
								"nodeType": "StructuredDocumentation",
								"src": "429:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 362,
							"linearizedBaseContracts": [
								362,
								1328,
								2121,
								1423,
								1288,
								616
							],
							"name": "AccessControlUpgradeable",
							"nameLocation": "2108:24:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControlUpgradeable.RoleData",
									"id": 25,
									"members": [
										{
											"constant": false,
											"id": 22,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2270:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 25,
											"src": "2237:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 21,
												"keyName": "account",
												"keyNameLocation": "2253:7:0",
												"keyType": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2237:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 20,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2264:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 24,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2295:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 25,
											"src": "2287:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 23,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2287:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2218:8:0",
									"nodeType": "StructDefinition",
									"scope": 362,
									"src": "2211:100:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 28,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2341:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 362,
									"src": "2317:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 26,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2317:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 27,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2362:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"canonicalName": "AccessControlUpgradeable.AccessControlStorage",
									"documentation": {
										"id": 29,
										"nodeType": "StructuredDocumentation",
										"src": "2374:71:0",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.AccessControl"
									},
									"id": 35,
									"members": [
										{
											"constant": false,
											"id": 34,
											"mutability": "mutable",
											"name": "_roles",
											"nameLocation": "2522:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 35,
											"src": "2488:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$",
												"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
											},
											"typeName": {
												"id": 33,
												"keyName": "role",
												"keyNameLocation": "2504:4:0",
												"keyType": {
													"id": 30,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2496:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "Mapping",
												"src": "2488:33:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$",
													"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 32,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 31,
														"name": "RoleData",
														"nameLocations": [
															"2512:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 25,
														"src": "2512:8:0"
													},
													"referencedDeclaration": 25,
													"src": "2512:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RoleData_$25_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.RoleData"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AccessControlStorage",
									"nameLocation": "2457:20:0",
									"nodeType": "StructDefinition",
									"scope": 362,
									"src": "2450:85:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 38,
									"mutability": "constant",
									"name": "AccessControlStorageLocation",
									"nameLocation": "2683:28:0",
									"nodeType": "VariableDeclaration",
									"scope": 362,
									"src": "2658:122:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 36,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2658:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307830326464376263376465633464636565646461373735653538646435343165303861313136633663353338313563306264303238313932663762363236383030",
										"id": 37,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2714:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1295953201772911215391058989745868821651057887752387839782086074958115661824_by_1",
											"typeString": "int_const 1295...(68 digits omitted)...1824"
										},
										"value": "0x02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "2877:87:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2896:62:0",
													"nodeType": "YulBlock",
													"src": "2896:62:0",
													"statements": [
														{
															"nativeSrc": "2910:38:0",
															"nodeType": "YulAssignment",
															"src": "2910:38:0",
															"value": {
																"name": "AccessControlStorageLocation",
																"nativeSrc": "2920:28:0",
																"nodeType": "YulIdentifier",
																"src": "2920:28:0"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "2910:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "2910:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 42,
														"isOffset": false,
														"isSlot": true,
														"src": "2910:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 38,
														"isOffset": false,
														"isSlot": false,
														"src": "2920:28:0",
														"valueSize": 1
													}
												],
												"id": 44,
												"nodeType": "InlineAssembly",
												"src": "2887:71:0"
											}
										]
									},
									"id": 46,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getAccessControlStorage",
									"nameLocation": "2796:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2820:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "2874:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "2845:30:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
													"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
												},
												"typeName": {
													"id": 41,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 40,
														"name": "AccessControlStorage",
														"nameLocations": [
															"2845:20:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 35,
														"src": "2845:20:0"
													},
													"referencedDeclaration": 35,
													"src": "2845:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2844:32:0"
									},
									"scope": 362,
									"src": "2787:177:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 56,
										"nodeType": "Block",
										"src": "3181:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 52,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 49,
															"src": "3202:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 51,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															129,
															150
														],
														"referencedDeclaration": 129,
														"src": "3191:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3191:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 54,
												"nodeType": "ExpressionStatement",
												"src": "3191:16:0"
											},
											{
												"id": 55,
												"nodeType": "PlaceholderStatement",
												"src": "3217:1:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "2970:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 57,
									"name": "onlyRole",
									"nameLocation": "3158:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3175:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "3167:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 48,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3167:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3166:14:0"
									},
									"src": "3149:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "3289:7:0",
										"statements": []
									},
									"id": 63,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 60,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 59,
												"name": "onlyInitializing",
												"nameLocations": [
													"3272:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "3272:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3272:16:0"
										}
									],
									"name": "__AccessControl_init",
									"nameLocation": "3240:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3260:2:0"
									},
									"returnParameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3289:0:0"
									},
									"scope": 362,
									"src": "3231:65:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 68,
										"nodeType": "Block",
										"src": "3370:7:0",
										"statements": []
									},
									"id": 69,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyInitializing",
												"nameLocations": [
													"3353:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "3353:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3353:16:0"
										}
									],
									"name": "__AccessControl_init_unchained",
									"nameLocation": "3311:30:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3341:2:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3370:0:0"
									},
									"scope": 362,
									"src": "3302:75:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1327
									],
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "3534:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 83,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 78,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 72,
															"src": "3551:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 80,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1423,
																		"src": "3571:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$1423_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$1423_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 79,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "3566:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3566:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$1423",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "3587:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "3566:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "3551:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 86,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 72,
																"src": "3626:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 84,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "3602:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControlUpgradeable_$362_$",
																	"typeString": "type(contract super AccessControlUpgradeable)"
																}
															},
															"id": 85,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3608:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1327,
															"src": "3602:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 87,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3602:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3551:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 77,
												"id": 89,
												"nodeType": "Return",
												"src": "3544:94:0"
											}
										]
									},
									"documentation": {
										"id": 70,
										"nodeType": "StructuredDocumentation",
										"src": "3382:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "3452:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 74,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3510:8:0"
									},
									"parameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "3477:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "3470:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 71,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "3470:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3469:20:0"
									},
									"returnParameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "3528:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 75,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3528:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3527:6:0"
									},
									"scope": 362,
									"src": "3443:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1390
									],
									"body": {
										"id": 115,
										"nodeType": "Block",
										"src": "3815:124:0",
										"statements": [
											{
												"assignments": [
													103
												],
												"declarations": [
													{
														"constant": false,
														"id": 103,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3854:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 115,
														"src": "3825:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
															"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
														},
														"typeName": {
															"id": 102,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 101,
																"name": "AccessControlStorage",
																"nameLocations": [
																	"3825:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 35,
																"src": "3825:20:0"
															},
															"referencedDeclaration": 35,
															"src": "3825:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 106,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 104,
														"name": "_getAccessControlStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "3858:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$",
															"typeString": "function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"
														}
													},
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3858:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3825:59:0"
											},
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"expression": {
																	"id": 107,
																	"name": "$",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 103,
																	"src": "3901:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																		"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
																	}
																},
																"id": 108,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3903:6:0",
																"memberName": "_roles",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 34,
																"src": "3901:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																}
															},
															"id": 110,
															"indexExpression": {
																"id": 109,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 94,
																"src": "3910:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3901:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$25_storage",
																"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
															}
														},
														"id": 111,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3916:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 22,
														"src": "3901:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 113,
													"indexExpression": {
														"id": 112,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 96,
														"src": "3924:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3901:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 100,
												"id": 114,
												"nodeType": "Return",
												"src": "3894:38:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "3651:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "3741:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3757:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "3749:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 93,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3749:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3771:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "3763:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 95,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3763:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3748:31:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "3809:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 98,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3809:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3808:6:0"
									},
									"scope": 362,
									"src": "3732:207:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 128,
										"nodeType": "Block",
										"src": "4204:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 123,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "4225:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 124,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1270,
																"src": "4231:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4231:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 122,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															129,
															150
														],
														"referencedDeclaration": 150,
														"src": "4214:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4214:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 127,
												"nodeType": "ExpressionStatement",
												"src": "4214:30:0"
											}
										]
									},
									"documentation": {
										"id": 117,
										"nodeType": "StructuredDocumentation",
										"src": "3945:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "4157:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4176:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "4168:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 118,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4168:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4167:14:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4204:0:0"
									},
									"scope": 362,
									"src": "4148:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 149,
										"nodeType": "Block",
										"src": "4454:124:0",
										"statements": [
											{
												"condition": {
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4468:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 138,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 132,
																"src": "4477:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 139,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 134,
																"src": "4483:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 137,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 116,
															"src": "4469:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 140,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4469:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 148,
												"nodeType": "IfStatement",
												"src": "4464:108:0",
												"trueBody": {
													"id": 147,
													"nodeType": "Block",
													"src": "4493:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 143,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 134,
																		"src": "4547:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 144,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 132,
																		"src": "4556:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 142,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1350,
																	"src": "4514:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$__$",
																		"typeString": "function (address,bytes32) pure"
																	}
																},
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4514:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 146,
															"nodeType": "RevertStatement",
															"src": "4507:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 130,
										"nodeType": "StructuredDocumentation",
										"src": "4257:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "4390:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4409:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4401:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 131,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4401:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4423:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4415:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4400:31:0"
									},
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4454:0:0"
									},
									"scope": 362,
									"src": "4381:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1398
									],
									"body": {
										"id": 170,
										"nodeType": "Block",
										"src": "4833:117:0",
										"statements": [
											{
												"assignments": [
													160
												],
												"declarations": [
													{
														"constant": false,
														"id": 160,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4872:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 170,
														"src": "4843:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
															"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
														},
														"typeName": {
															"id": 159,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 158,
																"name": "AccessControlStorage",
																"nameLocations": [
																	"4843:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 35,
																"src": "4843:20:0"
															},
															"referencedDeclaration": 35,
															"src": "4843:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 163,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 161,
														"name": "_getAccessControlStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "4876:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$",
															"typeString": "function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"
														}
													},
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4876:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4843:59:0"
											},
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"expression": {
																"id": 164,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 160,
																"src": "4919:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																	"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
																}
															},
															"id": 165,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4921:6:0",
															"memberName": "_roles",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 34,
															"src": "4919:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
															}
														},
														"id": 167,
														"indexExpression": {
															"id": 166,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "4928:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4919:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$25_storage",
															"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
														}
													},
													"id": 168,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4934:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 24,
													"src": "4919:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 157,
												"id": 169,
												"nodeType": "Return",
												"src": "4912:31:0"
											}
										]
									},
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "4584:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 171,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "4768:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4789:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "4781:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 152,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4781:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4780:14:0"
									},
									"returnParameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "4824:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 155,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4823:9:0"
									},
									"scope": 362,
									"src": "4759:191:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1406
									],
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "5340:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 185,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 174,
															"src": "5361:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 186,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 176,
															"src": "5367:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 184,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "5350:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5350:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "5350:25:0"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "4956:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 180,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 174,
															"src": "5333:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 179,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5320:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5320:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 182,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 178,
												"name": "onlyRole",
												"nameLocations": [
													"5311:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "5311:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5311:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "5255:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5273:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5265:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 173,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5265:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5287:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5279:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5279:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5264:31:0"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5340:0:0"
									},
									"scope": 362,
									"src": "5246:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1414
									],
									"body": {
										"id": 208,
										"nodeType": "Block",
										"src": "5757:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 204,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "5779:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 205,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "5785:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 203,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 361,
														"src": "5767:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5767:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 207,
												"nodeType": "ExpressionStatement",
												"src": "5767:26:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "5388:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 209,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 199,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "5750:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 198,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5737:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5737:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 201,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 197,
												"name": "onlyRole",
												"nameLocations": [
													"5728:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "5728:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5728:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "5671:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5690:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "5682:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 192,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5704:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "5696:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5681:31:0"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5757:0:0"
									},
									"scope": 362,
									"src": "5662:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1422
									],
									"body": {
										"id": 231,
										"nodeType": "Block",
										"src": "6427:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 217,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 214,
														"src": "6441:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 218,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1270,
															"src": "6463:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 219,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6463:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6441:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 225,
												"nodeType": "IfStatement",
												"src": "6437:102:0",
												"trueBody": {
													"id": 224,
													"nodeType": "Block",
													"src": "6477:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 221,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1353,
																	"src": "6498:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 222,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6498:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 223,
															"nodeType": "RevertStatement",
															"src": "6491:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 227,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 212,
															"src": "6561:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 228,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "6567:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 226,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 361,
														"src": "6549:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6549:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 230,
												"nodeType": "ExpressionStatement",
												"src": "6549:37:0"
											}
										]
									},
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "5806:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "6357:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6378:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "6370:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 211,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6370:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "6392:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "6384:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6384:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6369:42:0"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6427:0:0"
									},
									"scope": 362,
									"src": "6348:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 267,
										"nodeType": "Block",
										"src": "6791:245:0",
										"statements": [
											{
												"assignments": [
													242
												],
												"declarations": [
													{
														"constant": false,
														"id": 242,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6830:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 267,
														"src": "6801:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
															"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
														},
														"typeName": {
															"id": 241,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 240,
																"name": "AccessControlStorage",
																"nameLocations": [
																	"6801:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 35,
																"src": "6801:20:0"
															},
															"referencedDeclaration": 35,
															"src": "6801:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 245,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 243,
														"name": "_getAccessControlStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "6834:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$",
															"typeString": "function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"
														}
													},
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6834:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6801:59:0"
											},
											{
												"assignments": [
													247
												],
												"declarations": [
													{
														"constant": false,
														"id": 247,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "6878:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 267,
														"src": "6870:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 246,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "6870:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [
														{
															"id": 249,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "6911:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 248,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "6898:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6898:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6870:46:0"
											},
											{
												"expression": {
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"expression": {
																	"id": 252,
																	"name": "$",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "6926:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																		"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
																	}
																},
																"id": 255,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6928:6:0",
																"memberName": "_roles",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 34,
																"src": "6926:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																}
															},
															"id": 256,
															"indexExpression": {
																"id": 254,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 235,
																"src": "6935:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6926:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$25_storage",
																"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
															}
														},
														"id": 257,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6941:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 24,
														"src": "6926:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 258,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 237,
														"src": "6953:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "6926:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 260,
												"nodeType": "ExpressionStatement",
												"src": "6926:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 262,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "6994:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 263,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "7000:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 264,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "7019:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 261,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1362,
														"src": "6977:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6977:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 266,
												"nodeType": "EmitStatement",
												"src": "6972:57:0"
											}
										]
									},
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "6599:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "6727:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6749:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "6741:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 234,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6741:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "6763:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "6755:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 236,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6755:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6740:33:0"
									},
									"returnParameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6791:0:0"
									},
									"scope": 362,
									"src": "6718:318:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 314,
										"nodeType": "Block",
										"src": "7353:304:0",
										"statements": [
											{
												"assignments": [
													280
												],
												"declarations": [
													{
														"constant": false,
														"id": 280,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7392:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 314,
														"src": "7363:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
															"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
														},
														"typeName": {
															"id": 279,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 278,
																"name": "AccessControlStorage",
																"nameLocations": [
																	"7363:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 35,
																"src": "7363:20:0"
															},
															"referencedDeclaration": 35,
															"src": "7363:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 283,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 281,
														"name": "_getAccessControlStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "7396:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$",
															"typeString": "function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"
														}
													},
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7396:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7363:59:0"
											},
											{
												"condition": {
													"id": 288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7436:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 285,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 271,
																"src": "7445:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 286,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 273,
																"src": "7451:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 284,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 116,
															"src": "7437:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 287,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7437:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 312,
													"nodeType": "Block",
													"src": "7614:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 310,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7635:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 277,
															"id": 311,
															"nodeType": "Return",
															"src": "7628:12:0"
														}
													]
												},
												"id": 313,
												"nodeType": "IfStatement",
												"src": "7432:219:0",
												"trueBody": {
													"id": 309,
													"nodeType": "Block",
													"src": "7461:147:0",
													"statements": [
														{
															"expression": {
																"id": 298,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"expression": {
																					"id": 289,
																					"name": "$",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 280,
																					"src": "7475:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																						"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
																					}
																				},
																				"id": 292,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7477:6:0",
																				"memberName": "_roles",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 34,
																				"src": "7475:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																				}
																			},
																			"id": 293,
																			"indexExpression": {
																				"id": 291,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 271,
																				"src": "7484:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7475:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$25_storage",
																				"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
																			}
																		},
																		"id": 294,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7490:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 22,
																		"src": "7475:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 296,
																	"indexExpression": {
																		"id": 295,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 273,
																		"src": "7498:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7475:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 297,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7509:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "7475:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 299,
															"nodeType": "ExpressionStatement",
															"src": "7475:38:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 301,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 271,
																		"src": "7544:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 302,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 273,
																		"src": "7550:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 303,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1270,
																			"src": "7559:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 304,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7559:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 300,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1371,
																	"src": "7532:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 305,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7532:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 306,
															"nodeType": "EmitStatement",
															"src": "7527:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 307,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7593:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 277,
															"id": 308,
															"nodeType": "Return",
															"src": "7586:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "7042:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "7279:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7298:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "7290:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 270,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7290:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7312:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "7304:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7304:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7289:31:0"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "7347:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 275,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7347:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7346:6:0"
									},
									"scope": 362,
									"src": "7270:387:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 360,
										"nodeType": "Block",
										"src": "7976:304:0",
										"statements": [
											{
												"assignments": [
													327
												],
												"declarations": [
													{
														"constant": false,
														"id": 327,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "8015:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 360,
														"src": "7986:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
															"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
														},
														"typeName": {
															"id": 326,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 325,
																"name": "AccessControlStorage",
																"nameLocations": [
																	"7986:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 35,
																"src": "7986:20:0"
															},
															"referencedDeclaration": 35,
															"src": "7986:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 330,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 328,
														"name": "_getAccessControlStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "8019:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$",
															"typeString": "function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8019:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7986:59:0"
											},
											{
												"condition": {
													"arguments": [
														{
															"id": 332,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 318,
															"src": "8067:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 333,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 320,
															"src": "8073:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 331,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 116,
														"src": "8059:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8059:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 358,
													"nodeType": "Block",
													"src": "8237:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 356,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8258:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 324,
															"id": 357,
															"nodeType": "Return",
															"src": "8251:12:0"
														}
													]
												},
												"id": 359,
												"nodeType": "IfStatement",
												"src": "8055:219:0",
												"trueBody": {
													"id": 355,
													"nodeType": "Block",
													"src": "8083:148:0",
													"statements": [
														{
															"expression": {
																"id": 344,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"expression": {
																					"id": 335,
																					"name": "$",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 327,
																					"src": "8097:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																						"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
																					}
																				},
																				"id": 338,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "8099:6:0",
																				"memberName": "_roles",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 34,
																				"src": "8097:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																				}
																			},
																			"id": 339,
																			"indexExpression": {
																				"id": 337,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 318,
																				"src": "8106:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8097:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$25_storage",
																				"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
																			}
																		},
																		"id": 340,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8112:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 22,
																		"src": "8097:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 342,
																	"indexExpression": {
																		"id": 341,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 320,
																		"src": "8120:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8097:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8131:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "8097:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 345,
															"nodeType": "ExpressionStatement",
															"src": "8097:39:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 347,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 318,
																		"src": "8167:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 348,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 320,
																		"src": "8173:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 349,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1270,
																			"src": "8182:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 350,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8182:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 346,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1380,
																	"src": "8155:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8155:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 352,
															"nodeType": "EmitStatement",
															"src": "8150:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 353,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8216:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 324,
															"id": 354,
															"nodeType": "Return",
															"src": "8209:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 316,
										"nodeType": "StructuredDocumentation",
										"src": "7663:224:0",
										"text": " @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "7901:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7921:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "7913:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 317,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7913:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7935:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "7927:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7927:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7912:31:0"
									},
									"returnParameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "7970:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 322,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7970:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7969:6:0"
									},
									"scope": 362,
									"src": "7892:388:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 363,
							"src": "2090:6192:0",
							"usedErrors": [
								379,
								382,
								1350,
								1353
							],
							"usedEvents": [
								387,
								1362,
								1371,
								1380
							]
						}
					],
					"src": "108:8175:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							616
						]
					},
					"id": 617,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 364,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 365,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:1",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 616,
							"linearizedBaseContracts": [
								616
							],
							"name": "Initializable",
							"nameLocation": "2367:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 366,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:1",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 373,
									"members": [
										{
											"constant": false,
											"id": 369,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 373,
											"src": "2813:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 368,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 372,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:1",
											"nodeType": "VariableDeclaration",
											"scope": 373,
											"src": "2950:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 371,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:1",
									"nodeType": "StructDefinition",
									"scope": 616,
									"src": "2685:290:1",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 376,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 616,
									"src": "3098:115:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 374,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 375,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 377,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:1",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 379,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:1"
									},
									"src": "3285:30:1"
								},
								{
									"documentation": {
										"id": 380,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:1",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 382,
									"name": "NotInitializing",
									"nameLocation": "3389:15:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:1"
									},
									"src": "3383:24:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 383,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:1",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 387,
									"name": "Initialized",
									"nameLocation": "3514:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "3526:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 384,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:1"
									},
									"src": "3508:34:1"
								},
								{
									"body": {
										"id": 469,
										"nodeType": "Block",
										"src": "4092:1081:1",
										"statements": [
											{
												"assignments": [
													392
												],
												"declarations": [
													{
														"constant": false,
														"id": 392,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 469,
														"src": "4158:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 391,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 390,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 373,
																"src": "4158:20:1"
															},
															"referencedDeclaration": 373,
															"src": "4158:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 395,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 393,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "4191:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:1"
											},
											{
												"assignments": [
													397
												],
												"declarations": [
													{
														"constant": false,
														"id": 397,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 469,
														"src": "4279:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 396,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 401,
												"initialValue": {
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:1",
													"subExpression": {
														"expression": {
															"id": 398,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "4302:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 399,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 372,
														"src": "4302:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:1"
											},
											{
												"assignments": [
													403
												],
												"declarations": [
													{
														"constant": false,
														"id": 403,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 469,
														"src": "4327:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 402,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 406,
												"initialValue": {
													"expression": {
														"id": 404,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 392,
														"src": "4348:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 405,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 369,
													"src": "4348:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:1"
											},
											{
												"assignments": [
													408
												],
												"declarations": [
													{
														"constant": false,
														"id": 408,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4711:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 469,
														"src": "4706:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 407,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4706:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 414,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 411,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 409,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "4726:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 410,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4741:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4726:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 412,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "4746:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4726:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4706:54:1"
											},
											{
												"assignments": [
													416
												],
												"declarations": [
													{
														"constant": false,
														"id": 416,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4775:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 469,
														"src": "4770:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 415,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4770:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 429,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 419,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 417,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "4790:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4805:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4790:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 427,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 422,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4818:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$616",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$616",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 421,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4810:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 420,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4810:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4810:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 424,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4824:4:1",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4810:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4829:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4810:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 426,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4839:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4810:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4790:50:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4770:70:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 431,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4855:13:1",
														"subExpression": {
															"id": 430,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "4856:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 433,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4872:13:1",
														"subExpression": {
															"id": 432,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 416,
															"src": "4873:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4855:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 439,
												"nodeType": "IfStatement",
												"src": "4851:91:1",
												"trueBody": {
													"id": 438,
													"nodeType": "Block",
													"src": "4887:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 435,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 379,
																	"src": "4908:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4908:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 437,
															"nodeType": "RevertStatement",
															"src": "4901:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 440,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "4951:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 442,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4953:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 369,
														"src": "4951:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 443,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4968:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4951:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 445,
												"nodeType": "ExpressionStatement",
												"src": "4951:18:1"
											},
											{
												"condition": {
													"id": 446,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 397,
													"src": "4983:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 454,
												"nodeType": "IfStatement",
												"src": "4979:67:1",
												"trueBody": {
													"id": 453,
													"nodeType": "Block",
													"src": "4999:47:1",
													"statements": [
														{
															"expression": {
																"id": 451,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 447,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "5013:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 449,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5015:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 372,
																	"src": "5013:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 450,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5031:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5013:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 452,
															"nodeType": "ExpressionStatement",
															"src": "5013:22:1"
														}
													]
												}
											},
											{
												"id": 455,
												"nodeType": "PlaceholderStatement",
												"src": "5055:1:1"
											},
											{
												"condition": {
													"id": 456,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 397,
													"src": "5070:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 468,
												"nodeType": "IfStatement",
												"src": "5066:101:1",
												"trueBody": {
													"id": 467,
													"nodeType": "Block",
													"src": "5086:81:1",
													"statements": [
														{
															"expression": {
																"id": 461,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 457,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "5100:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 459,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5102:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 372,
																	"src": "5100:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 460,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5118:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5100:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 462,
															"nodeType": "ExpressionStatement",
															"src": "5100:23:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 464,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5154:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 463,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 387,
																	"src": "5142:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 465,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5142:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 466,
															"nodeType": "EmitStatement",
															"src": "5137:19:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:1",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 470,
									"name": "initializer",
									"nameLocation": "4078:11:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:1"
									},
									"src": "4069:1104:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 516,
										"nodeType": "Block",
										"src": "6291:392:1",
										"statements": [
											{
												"assignments": [
													477
												],
												"declarations": [
													{
														"constant": false,
														"id": 477,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6386:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 516,
														"src": "6357:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 476,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 475,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6357:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 373,
																"src": "6357:20:1"
															},
															"referencedDeclaration": 373,
															"src": "6357:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 480,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 478,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "6390:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6357:59:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 481,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "6431:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 482,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6433:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 372,
														"src": "6431:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 486,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 483,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 477,
																"src": "6450:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 484,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6452:12:1",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 369,
															"src": "6450:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 485,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 473,
															"src": "6468:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6450:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6431:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 492,
												"nodeType": "IfStatement",
												"src": "6427:105:1",
												"trueBody": {
													"id": 491,
													"nodeType": "Block",
													"src": "6477:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 488,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 379,
																	"src": "6498:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 489,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6498:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 490,
															"nodeType": "RevertStatement",
															"src": "6491:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 493,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "6541:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 495,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6543:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 369,
														"src": "6541:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 496,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 473,
														"src": "6558:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6541:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 498,
												"nodeType": "ExpressionStatement",
												"src": "6541:24:1"
											},
											{
												"expression": {
													"id": 503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 499,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "6575:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 501,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6577:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 372,
														"src": "6575:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 502,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6593:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6575:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 504,
												"nodeType": "ExpressionStatement",
												"src": "6575:22:1"
											},
											{
												"id": 505,
												"nodeType": "PlaceholderStatement",
												"src": "6607:1:1"
											},
											{
												"expression": {
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 506,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "6618:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 508,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6620:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 372,
														"src": "6618:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 509,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6636:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6618:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 511,
												"nodeType": "ExpressionStatement",
												"src": "6618:23:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 513,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 473,
															"src": "6668:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 512,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "6656:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6656:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 515,
												"nodeType": "EmitStatement",
												"src": "6651:25:1"
											}
										]
									},
									"documentation": {
										"id": 471,
										"nodeType": "StructuredDocumentation",
										"src": "5179:1068:1",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 517,
									"name": "reinitializer",
									"nameLocation": "6261:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6282:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "6275:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 472,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6275:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6274:16:1"
									},
									"src": "6252:431:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 524,
										"nodeType": "Block",
										"src": "6921:48:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 520,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 538,
														"src": "6931:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6931:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "6931:20:1"
											},
											{
												"id": 523,
												"nodeType": "PlaceholderStatement",
												"src": "6961:1:1"
											}
										]
									},
									"documentation": {
										"id": 518,
										"nodeType": "StructuredDocumentation",
										"src": "6689:199:1",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 525,
									"name": "onlyInitializing",
									"nameLocation": "6902:16:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6918:2:1"
									},
									"src": "6893:76:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 537,
										"nodeType": "Block",
										"src": "7136:89:1",
										"statements": [
											{
												"condition": {
													"id": 531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7150:18:1",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 529,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 606,
															"src": "7151:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 530,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7151:17:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 536,
												"nodeType": "IfStatement",
												"src": "7146:73:1",
												"trueBody": {
													"id": 535,
													"nodeType": "Block",
													"src": "7170:49:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 532,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 382,
																	"src": "7191:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 533,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7191:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 534,
															"nodeType": "RevertStatement",
															"src": "7184:24:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 526,
										"nodeType": "StructuredDocumentation",
										"src": "6975:104:1",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7093:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7111:2:1"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7136:0:1"
									},
									"scope": 616,
									"src": "7084:141:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 583,
										"nodeType": "Block",
										"src": "7760:373:1",
										"statements": [
											{
												"assignments": [
													544
												],
												"declarations": [
													{
														"constant": false,
														"id": 544,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7855:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 583,
														"src": "7826:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 543,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 542,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7826:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 373,
																"src": "7826:20:1"
															},
															"referencedDeclaration": 373,
															"src": "7826:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 547,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 545,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "7859:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7859:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7826:59:1"
											},
											{
												"condition": {
													"expression": {
														"id": 548,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 544,
														"src": "7900:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 549,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7902:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 372,
													"src": "7900:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 554,
												"nodeType": "IfStatement",
												"src": "7896:76:1",
												"trueBody": {
													"id": 553,
													"nodeType": "Block",
													"src": "7917:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 550,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 379,
																	"src": "7938:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 551,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7938:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 552,
															"nodeType": "RevertStatement",
															"src": "7931:30:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 555,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "7985:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 556,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7987:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 369,
														"src": "7985:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8008:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 558,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8008:6:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 557,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8003:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 560,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8003:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 561,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8016:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8003:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7985:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 582,
												"nodeType": "IfStatement",
												"src": "7981:146:1",
												"trueBody": {
													"id": 581,
													"nodeType": "Block",
													"src": "8021:106:1",
													"statements": [
														{
															"expression": {
																"id": 571,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 563,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 544,
																		"src": "8035:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 565,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8037:12:1",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 369,
																	"src": "8035:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 568,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8057:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 567,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8057:6:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 566,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8052:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 569,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8052:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8065:3:1",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8052:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8035:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 572,
															"nodeType": "ExpressionStatement",
															"src": "8035:33:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 576,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8104:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 575,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8104:6:1",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 574,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8099:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8099:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 578,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8112:3:1",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8099:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 573,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 387,
																	"src": "8087:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 579,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8087:29:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 580,
															"nodeType": "EmitStatement",
															"src": "8082:34:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 539,
										"nodeType": "StructuredDocumentation",
										"src": "7231:475:1",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 584,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7720:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7740:2:1"
									},
									"returnParameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7760:0:1"
									},
									"scope": 616,
									"src": "7711:422:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 594,
										"nodeType": "Block",
										"src": "8308:63:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 590,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 615,
															"src": "8325:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 591,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8325:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 592,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8352:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 369,
													"src": "8325:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 589,
												"id": 593,
												"nodeType": "Return",
												"src": "8318:46:1"
											}
										]
									},
									"documentation": {
										"id": 585,
										"nodeType": "StructuredDocumentation",
										"src": "8139:99:1",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 595,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8252:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8274:2:1"
									},
									"returnParameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "8300:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 587,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8300:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8299:8:1"
									},
									"scope": 616,
									"src": "8243:128:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "8543:64:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 601,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 615,
															"src": "8560:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 602,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8560:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8587:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 372,
													"src": "8560:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 600,
												"id": 604,
												"nodeType": "Return",
												"src": "8553:47:1"
											}
										]
									},
									"documentation": {
										"id": 596,
										"nodeType": "StructuredDocumentation",
										"src": "8377:105:1",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8496:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8511:2:1"
									},
									"returnParameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "8537:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 598,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8537:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8536:6:1"
									},
									"scope": 616,
									"src": "8487:120:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 614,
										"nodeType": "Block",
										"src": "8827:80:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "8846:55:1",
													"nodeType": "YulBlock",
													"src": "8846:55:1",
													"statements": [
														{
															"nativeSrc": "8860:31:1",
															"nodeType": "YulAssignment",
															"src": "8860:31:1",
															"value": {
																"name": "INITIALIZABLE_STORAGE",
																"nativeSrc": "8870:21:1",
																"nodeType": "YulIdentifier",
																"src": "8870:21:1"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "8860:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8860:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 611,
														"isOffset": false,
														"isSlot": true,
														"src": "8860:6:1",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 376,
														"isOffset": false,
														"isSlot": false,
														"src": "8870:21:1",
														"valueSize": 1
													}
												],
												"id": 613,
												"nodeType": "InlineAssembly",
												"src": "8837:64:1"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "8613:67:1",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 615,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "8746:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8770:2:1"
									},
									"returnParameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "8824:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "8795:30:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 610,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 609,
														"name": "InitializableStorage",
														"nameLocations": [
															"8795:20:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 373,
														"src": "8795:20:1"
													},
													"referencedDeclaration": 373,
													"src": "8795:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8794:32:1"
									},
									"scope": 616,
									"src": "8737:170:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 617,
							"src": "2349:6560:1",
							"usedErrors": [
								379,
								382
							],
							"usedEvents": [
								387
							]
						}
					],
					"src": "113:8797:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
					"exportedSymbols": {
						"ERC1967Utils": [
							1736
						],
						"IERC1822Proxiable": [
							1433
						],
						"Initializable": [
							616
						],
						"UUPSUpgradeable": [
							798
						]
					},
					"id": 799,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 618,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"file": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"id": 620,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 799,
							"sourceUnit": 1434,
							"src": "141:88:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 619,
										"name": "IERC1822Proxiable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1433,
										"src": "149:17:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"file": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"id": 622,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 799,
							"sourceUnit": 1737,
							"src": "230:84:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 621,
										"name": "ERC1967Utils",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1736,
										"src": "238:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "./Initializable.sol",
							"id": 624,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 799,
							"sourceUnit": 617,
							"src": "315:50:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 623,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 616,
										"src": "323:13:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 626,
										"name": "Initializable",
										"nameLocations": [
											"1023:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 616,
										"src": "1023:13:2"
									},
									"id": 627,
									"nodeType": "InheritanceSpecifier",
									"src": "1023:13:2"
								},
								{
									"baseName": {
										"id": 628,
										"name": "IERC1822Proxiable",
										"nameLocations": [
											"1038:17:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1433,
										"src": "1038:17:2"
									},
									"id": 629,
									"nodeType": "InheritanceSpecifier",
									"src": "1038:17:2"
								}
							],
							"canonicalName": "UUPSUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 625,
								"nodeType": "StructuredDocumentation",
								"src": "367:618:2",
								"text": " @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism."
							},
							"fullyImplemented": false,
							"id": 798,
							"linearizedBaseContracts": [
								798,
								1433,
								616
							],
							"name": "UUPSUpgradeable",
							"nameLocation": "1004:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 630,
										"nodeType": "StructuredDocumentation",
										"src": "1062:61:2",
										"text": "@custom:oz-upgrades-unsafe-allow state-variable-immutable"
									},
									"id": 636,
									"mutability": "immutable",
									"name": "__self",
									"nameLocation": "1154:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 798,
									"src": "1128:48:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 631,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1128:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 634,
												"name": "this",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967268,
												"src": "1171:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$798",
													"typeString": "contract UUPSUpgradeable"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$798",
													"typeString": "contract UUPSUpgradeable"
												}
											],
											"id": 633,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "1163:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 632,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1163:7:2",
												"typeDescriptions": {}
											}
										},
										"id": 635,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1163:13:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 637,
										"nodeType": "StructuredDocumentation",
										"src": "1183:631:2",
										"text": " @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."
									},
									"functionSelector": "ad3cb1cc",
									"id": 640,
									"mutability": "constant",
									"name": "UPGRADE_INTERFACE_VERSION",
									"nameLocation": "1842:25:2",
									"nodeType": "VariableDeclaration",
									"scope": 798,
									"src": "1819:58:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 638,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1819:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "352e302e30",
										"id": 639,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1870:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c",
											"typeString": "literal_string \"5.0.0\""
										},
										"value": "5.0.0"
									},
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "1884:65:2",
										"text": " @dev The call is from an unauthorized context."
									},
									"errorSelector": "e07c8dba",
									"id": 643,
									"name": "UUPSUnauthorizedCallContext",
									"nameLocation": "1960:27:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1987:2:2"
									},
									"src": "1954:36:2"
								},
								{
									"documentation": {
										"id": 644,
										"nodeType": "StructuredDocumentation",
										"src": "1996:68:2",
										"text": " @dev The storage `slot` is unsupported as a UUID."
									},
									"errorSelector": "aa1d49a4",
									"id": 648,
									"name": "UUPSUnsupportedProxiableUUID",
									"nameLocation": "2075:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2112:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "2104:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 645,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2104:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2103:14:2"
									},
									"src": "2069:49:2"
								},
								{
									"body": {
										"id": 655,
										"nodeType": "Block",
										"src": "2643:41:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 651,
														"name": "_checkProxy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 730,
														"src": "2653:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2653:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 653,
												"nodeType": "ExpressionStatement",
												"src": "2653:13:2"
											},
											{
												"id": 654,
												"nodeType": "PlaceholderStatement",
												"src": "2676:1:2"
											}
										]
									},
									"documentation": {
										"id": 649,
										"nodeType": "StructuredDocumentation",
										"src": "2124:493:2",
										"text": " @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."
									},
									"id": 656,
									"name": "onlyProxy",
									"nameLocation": "2631:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2640:2:2"
									},
									"src": "2622:62:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 663,
										"nodeType": "Block",
										"src": "2914:48:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 659,
														"name": "_checkNotDelegated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 746,
														"src": "2924:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2924:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 661,
												"nodeType": "ExpressionStatement",
												"src": "2924:20:2"
											},
											{
												"id": 662,
												"nodeType": "PlaceholderStatement",
												"src": "2954:1:2"
											}
										]
									},
									"documentation": {
										"id": 657,
										"nodeType": "StructuredDocumentation",
										"src": "2690:195:2",
										"text": " @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."
									},
									"id": 664,
									"name": "notDelegated",
									"nameLocation": "2899:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2911:2:2"
									},
									"src": "2890:72:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 669,
										"nodeType": "Block",
										"src": "3028:7:2",
										"statements": []
									},
									"id": 670,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 667,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 666,
												"name": "onlyInitializing",
												"nameLocations": [
													"3011:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "3011:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3011:16:2"
										}
									],
									"name": "__UUPSUpgradeable_init",
									"nameLocation": "2977:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2999:2:2"
									},
									"returnParameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3028:0:2"
									},
									"scope": 798,
									"src": "2968:67:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 675,
										"nodeType": "Block",
										"src": "3111:7:2",
										"statements": []
									},
									"id": 676,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 673,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 672,
												"name": "onlyInitializing",
												"nameLocations": [
													"3094:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "3094:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3094:16:2"
										}
									],
									"name": "__UUPSUpgradeable_init_unchained",
									"nameLocation": "3050:32:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3082:2:2"
									},
									"returnParameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3111:0:2"
									},
									"scope": 798,
									"src": "3041:77:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1432
									],
									"body": {
										"id": 687,
										"nodeType": "Block",
										"src": "3783:56:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 684,
														"name": "ERC1967Utils",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1736,
														"src": "3800:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1736_$",
															"typeString": "type(library ERC1967Utils)"
														}
													},
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "3813:19:2",
													"memberName": "IMPLEMENTATION_SLOT",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1463,
													"src": "3800:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 683,
												"id": 686,
												"nodeType": "Return",
												"src": "3793:39:2"
											}
										]
									},
									"documentation": {
										"id": 677,
										"nodeType": "StructuredDocumentation",
										"src": "3123:577:2",
										"text": " @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
									},
									"functionSelector": "52d1902d",
									"id": 688,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 680,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 679,
												"name": "notDelegated",
												"nameLocations": [
													"3752:12:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 664,
												"src": "3752:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3752:12:2"
										}
									],
									"name": "proxiableUUID",
									"nameLocation": "3714:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3727:2:2"
									},
									"returnParameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "3774:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 681,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3773:9:2"
									},
									"scope": 798,
									"src": "3705:134:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 707,
										"nodeType": "Block",
										"src": "4263:109:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 699,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "4291:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 698,
														"name": "_authorizeUpgrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 752,
														"src": "4273:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4273:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 701,
												"nodeType": "ExpressionStatement",
												"src": "4273:36:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 703,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "4341:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 704,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 693,
															"src": "4360:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 702,
														"name": "_upgradeToAndCallUUPS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 797,
														"src": "4319:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,bytes memory)"
														}
													},
													"id": 705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4319:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 706,
												"nodeType": "ExpressionStatement",
												"src": "4319:46:2"
											}
										]
									},
									"documentation": {
										"id": 689,
										"nodeType": "StructuredDocumentation",
										"src": "3845:308:2",
										"text": " @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"
									},
									"functionSelector": "4f1ef286",
									"id": 708,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 696,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 695,
												"name": "onlyProxy",
												"nameLocations": [
													"4253:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 656,
												"src": "4253:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "4253:9:2"
										}
									],
									"name": "upgradeToAndCall",
									"nameLocation": "4167:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "4192:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "4184:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 690,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4184:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4224:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "4211:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 692,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4211:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4183:46:2"
									},
									"returnParameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4263:0:2"
									},
									"scope": 798,
									"src": "4158:214:2",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 729,
										"nodeType": "Block",
										"src": "4644:267:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 717,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 714,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4679:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$798",
																		"typeString": "contract UUPSUpgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$798",
																		"typeString": "contract UUPSUpgradeable"
																	}
																],
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4671:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 712,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4671:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 715,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4671:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 716,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "4688:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4671:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 722,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 718,
																	"name": "ERC1967Utils",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1736,
																	"src": "4749:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1736_$",
																		"typeString": "type(library ERC1967Utils)"
																	}
																},
																"id": 719,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4762:17:2",
																"memberName": "getImplementation",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1494,
																"src": "4749:30:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4749:32:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 721,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "4785:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4749:42:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4671:120:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 728,
												"nodeType": "IfStatement",
												"src": "4654:251:2",
												"trueBody": {
													"id": 727,
													"nodeType": "Block",
													"src": "4844:61:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 724,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 643,
																	"src": "4865:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 725,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4865:29:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 726,
															"nodeType": "RevertStatement",
															"src": "4858:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 709,
										"nodeType": "StructuredDocumentation",
										"src": "4378:216:2",
										"text": " @dev Reverts if the execution is not performed via delegatecall or the execution\n context is not of a proxy with an ERC1967-compliant implementation pointing to self.\n See {_onlyProxy}."
									},
									"id": 730,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkProxy",
									"nameLocation": "4608:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4619:2:2"
									},
									"returnParameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4644:0:2"
									},
									"scope": 798,
									"src": "4599:312:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 745,
										"nodeType": "Block",
										"src": "5080:161:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 736,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "5102:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$798",
																	"typeString": "contract UUPSUpgradeable"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$798",
																	"typeString": "contract UUPSUpgradeable"
																}
															],
															"id": 735,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5094:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 734,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5094:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 737,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5094:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 738,
														"name": "__self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 636,
														"src": "5111:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5094:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 744,
												"nodeType": "IfStatement",
												"src": "5090:145:2",
												"trueBody": {
													"id": 743,
													"nodeType": "Block",
													"src": "5119:116:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 740,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 643,
																	"src": "5195:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 741,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5195:29:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 742,
															"nodeType": "RevertStatement",
															"src": "5188:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 731,
										"nodeType": "StructuredDocumentation",
										"src": "4917:106:2",
										"text": " @dev Reverts if the execution is performed via delegatecall.\n See {notDelegated}."
									},
									"id": 746,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNotDelegated",
									"nameLocation": "5037:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5055:2:2"
									},
									"returnParameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5080:0:2"
									},
									"scope": 798,
									"src": "5028:213:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 747,
										"nodeType": "StructuredDocumentation",
										"src": "5247:372:2",
										"text": " @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal onlyOwner {}\n ```"
									},
									"id": 752,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_authorizeUpgrade",
									"nameLocation": "5633:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "5659:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "5651:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 748,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:27:2"
									},
									"returnParameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5694:0:2"
									},
									"scope": 798,
									"src": "5624:71:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 796,
										"nodeType": "Block",
										"src": "6137:453:2",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 785,
															"nodeType": "Block",
															"src": "6227:212:2",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		"id": 771,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 768,
																			"name": "slot",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 766,
																			"src": "6245:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"expression": {
																				"id": 769,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1736,
																				"src": "6253:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1736_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 770,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "6266:19:2",
																			"memberName": "IMPLEMENTATION_SLOT",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1463,
																			"src": "6253:32:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"src": "6245:40:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 777,
																	"nodeType": "IfStatement",
																	"src": "6241:120:2",
																	"trueBody": {
																		"id": 776,
																		"nodeType": "Block",
																		"src": "6287:74:2",
																		"statements": [
																			{
																				"errorCall": {
																					"arguments": [
																						{
																							"id": 773,
																							"name": "slot",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 766,
																							"src": "6341:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 772,
																						"name": "UUPSUnsupportedProxiableUUID",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 648,
																						"src": "6312:28:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$__$",
																							"typeString": "function (bytes32) pure"
																						}
																					},
																					"id": 774,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6312:34:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_tuple$__$",
																						"typeString": "tuple()"
																					}
																				},
																				"id": 775,
																				"nodeType": "RevertStatement",
																				"src": "6305:41:2"
																			}
																		]
																	}
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 781,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "6404:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 782,
																				"name": "data",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 757,
																				"src": "6423:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"expression": {
																				"id": 778,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1736,
																				"src": "6374:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1736_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 780,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6387:16:2",
																			"memberName": "upgradeToAndCall",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1555,
																			"src": "6374:29:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
																				"typeString": "function (address,bytes memory)"
																			}
																		},
																		"id": 783,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6374:54:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 784,
																	"nodeType": "ExpressionStatement",
																	"src": "6374:54:2"
																}
															]
														},
														"errorName": "",
														"id": 786,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 767,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 766,
																	"mutability": "mutable",
																	"name": "slot",
																	"nameLocation": "6221:4:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 786,
																	"src": "6213:12:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 765,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "6213:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "6212:14:2"
														},
														"src": "6204:235:2"
													},
													{
														"block": {
															"id": 793,
															"nodeType": "Block",
															"src": "6446:138:2",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 790,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "6555:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"id": 787,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1736,
																				"src": "6513:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1736_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 789,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6526:28:2",
																			"memberName": "ERC1967InvalidImplementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1468,
																			"src": "6513:41:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																				"typeString": "function (address) pure"
																			}
																		},
																		"id": 791,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6513:60:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 792,
																	"nodeType": "RevertStatement",
																	"src": "6506:67:2"
																}
															]
														},
														"errorName": "",
														"id": 794,
														"nodeType": "TryCatchClause",
														"src": "6440:144:2"
													}
												],
												"externalCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 761,
																	"name": "newImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 755,
																	"src": "6169:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 760,
																"name": "IERC1822Proxiable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1433,
																"src": "6151:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC1822Proxiable_$1433_$",
																	"typeString": "type(contract IERC1822Proxiable)"
																}
															},
															"id": 762,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6151:36:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1822Proxiable_$1433",
																"typeString": "contract IERC1822Proxiable"
															}
														},
														"id": 763,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6188:13:2",
														"memberName": "proxiableUUID",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1432,
														"src": "6151:50:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
															"typeString": "function () view external returns (bytes32)"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6151:52:2",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 795,
												"nodeType": "TryStatement",
												"src": "6147:437:2"
											}
										]
									},
									"documentation": {
										"id": 753,
										"nodeType": "StructuredDocumentation",
										"src": "5701:346:2",
										"text": " @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n is expected to be the implementation slot in ERC1967.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 797,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCallUUPS",
									"nameLocation": "6061:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "6091:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "6083:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6083:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6123:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "6110:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 756,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6110:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6082:46:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6137:0:2"
									},
									"scope": 798,
									"src": "6052:538:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 799,
							"src": "986:5606:2",
							"usedErrors": [
								379,
								382,
								643,
								648,
								1468,
								1481,
								1759,
								1762
							],
							"usedEvents": [
								387,
								1447
							]
						}
					],
					"src": "115:6478:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1288
						],
						"Initializable": [
							616
						],
						"PausableUpgradeable": [
							926
						]
					},
					"id": 927,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 800,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "105:23:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 801,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 927,
							"sourceUnit": 1289,
							"src": "130:41:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 803,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 927,
							"sourceUnit": 617,
							"src": "172:63:3",
							"symbolAliases": [
								{
									"foreign": {
										"id": 802,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 616,
										"src": "180:13:3",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 805,
										"name": "Initializable",
										"nameLocations": [
											"718:13:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 616,
										"src": "718:13:3"
									},
									"id": 806,
									"nodeType": "InheritanceSpecifier",
									"src": "718:13:3"
								},
								{
									"baseName": {
										"id": 807,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"733:18:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1288,
										"src": "733:18:3"
									},
									"id": 808,
									"nodeType": "InheritanceSpecifier",
									"src": "733:18:3"
								}
							],
							"canonicalName": "PausableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 804,
								"nodeType": "StructuredDocumentation",
								"src": "237:439:3",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 926,
							"linearizedBaseContracts": [
								926,
								1288,
								616
							],
							"name": "PausableUpgradeable",
							"nameLocation": "695:19:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 809,
										"nodeType": "StructuredDocumentation",
										"src": "758:73:3",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 813,
									"name": "Paused",
									"nameLocation": "842:6:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 811,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "857:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 813,
												"src": "849:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 810,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "849:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "848:17:3"
									},
									"src": "836:30:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 814,
										"nodeType": "StructuredDocumentation",
										"src": "872:70:3",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 818,
									"name": "Unpaused",
									"nameLocation": "953:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 817,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 816,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "970:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 818,
												"src": "962:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 815,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "962:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "961:17:3"
									},
									"src": "947:32:3"
								},
								{
									"constant": false,
									"id": 820,
									"mutability": "mutable",
									"name": "_paused",
									"nameLocation": "998:7:3",
									"nodeType": "VariableDeclaration",
									"scope": 926,
									"src": "985:20:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 819,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "985:4:3",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 829,
										"nodeType": "Block",
										"src": "1137:44:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 826,
														"name": "__Pausable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 840,
														"src": "1147:25:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 827,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1147:27:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 828,
												"nodeType": "ExpressionStatement",
												"src": "1147:27:3"
											}
										]
									},
									"documentation": {
										"id": 821,
										"nodeType": "StructuredDocumentation",
										"src": "1012:67:3",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 830,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 824,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 823,
												"name": "onlyInitializing",
												"nameLocations": [
													"1120:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "1120:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1120:16:3"
										}
									],
									"name": "__Pausable_init",
									"nameLocation": "1093:15:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 822,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1108:2:3"
									},
									"returnParameters": {
										"id": 825,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1137:0:3"
									},
									"scope": 926,
									"src": "1084:97:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 839,
										"nodeType": "Block",
										"src": "1250:32:3",
										"statements": [
											{
												"expression": {
													"id": 837,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 835,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "1260:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 836,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1270:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "1260:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 838,
												"nodeType": "ExpressionStatement",
												"src": "1260:15:3"
											}
										]
									},
									"id": 840,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 833,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 832,
												"name": "onlyInitializing",
												"nameLocations": [
													"1233:16:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "1233:16:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "1233:16:3"
										}
									],
									"name": "__Pausable_init_unchained",
									"nameLocation": "1196:25:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 831,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1221:2:3"
									},
									"returnParameters": {
										"id": 834,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1250:0:3"
									},
									"scope": 926,
									"src": "1187:95:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 847,
										"nodeType": "Block",
										"src": "1493:47:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 843,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 877,
														"src": "1503:17:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 844,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1503:19:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 845,
												"nodeType": "ExpressionStatement",
												"src": "1503:19:3"
											},
											{
												"id": 846,
												"nodeType": "PlaceholderStatement",
												"src": "1532:1:3"
											}
										]
									},
									"documentation": {
										"id": 841,
										"nodeType": "StructuredDocumentation",
										"src": "1288:175:3",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 848,
									"name": "whenNotPaused",
									"nameLocation": "1477:13:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1490:2:3"
									},
									"src": "1468:72:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 855,
										"nodeType": "Block",
										"src": "1740:44:3",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 851,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 888,
														"src": "1750:14:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 852,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:16:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 853,
												"nodeType": "ExpressionStatement",
												"src": "1750:16:3"
											},
											{
												"id": 854,
												"nodeType": "PlaceholderStatement",
												"src": "1776:1:3"
											}
										]
									},
									"documentation": {
										"id": 849,
										"nodeType": "StructuredDocumentation",
										"src": "1546:167:3",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 856,
									"name": "whenPaused",
									"nameLocation": "1727:10:3",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 850,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1737:2:3"
									},
									"src": "1718:66:3",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 864,
										"nodeType": "Block",
										"src": "1932:31:3",
										"statements": [
											{
												"expression": {
													"id": 862,
													"name": "_paused",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 820,
													"src": "1949:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 861,
												"id": 863,
												"nodeType": "Return",
												"src": "1942:14:3"
											}
										]
									},
									"documentation": {
										"id": 857,
										"nodeType": "StructuredDocumentation",
										"src": "1790:84:3",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 865,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "1888:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 858,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1894:2:3"
									},
									"returnParameters": {
										"id": 861,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 860,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 865,
												"src": "1926:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 859,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1926:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1925:6:3"
									},
									"scope": 926,
									"src": "1879:84:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 876,
										"nodeType": "Block",
										"src": "2082:55:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 872,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2100:9:3",
															"subExpression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 870,
																	"name": "paused",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 865,
																	"src": "2101:6:3",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																		"typeString": "function () view returns (bool)"
																	}
																},
																"id": 871,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2101:8:3",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a20706175736564",
															"id": 873,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2111:18:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															},
															"value": "Pausable: paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
																"typeString": "literal_string \"Pausable: paused\""
															}
														],
														"id": 869,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2092:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 874,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2092:38:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 875,
												"nodeType": "ExpressionStatement",
												"src": "2092:38:3"
											}
										]
									},
									"documentation": {
										"id": 866,
										"nodeType": "StructuredDocumentation",
										"src": "1969:57:3",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 877,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "2040:17:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 867,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2057:2:3"
									},
									"returnParameters": {
										"id": 868,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2082:0:3"
									},
									"scope": 926,
									"src": "2031:106:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 887,
										"nodeType": "Block",
										"src": "2257:58:3",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 882,
																"name": "paused",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 865,
																"src": "2275:6:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																	"typeString": "function () view returns (bool)"
																}
															},
															"id": 883,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2275:8:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5061757361626c653a206e6f7420706175736564",
															"id": 884,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2285:22:3",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															},
															"value": "Pausable: not paused"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
																"typeString": "literal_string \"Pausable: not paused\""
															}
														],
														"id": 881,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2267:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 885,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2267:41:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 886,
												"nodeType": "ExpressionStatement",
												"src": "2267:41:3"
											}
										]
									},
									"documentation": {
										"id": 878,
										"nodeType": "StructuredDocumentation",
										"src": "2143:61:3",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 888,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "2218:14:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 879,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2232:2:3"
									},
									"returnParameters": {
										"id": 880,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2257:0:3"
									},
									"scope": 926,
									"src": "2209:106:3",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 903,
										"nodeType": "Block",
										"src": "2499:66:3",
										"statements": [
											{
												"expression": {
													"id": 896,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 894,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "2509:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 895,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2519:4:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "2509:14:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 897,
												"nodeType": "ExpressionStatement",
												"src": "2509:14:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 899,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1270,
																"src": "2545:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 900,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2545:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 898,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 813,
														"src": "2538:6:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 901,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2538:20:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 902,
												"nodeType": "EmitStatement",
												"src": "2533:25:3"
											}
										]
									},
									"documentation": {
										"id": 889,
										"nodeType": "StructuredDocumentation",
										"src": "2321:124:3",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 904,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 892,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 891,
												"name": "whenNotPaused",
												"nameLocations": [
													"2485:13:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 848,
												"src": "2485:13:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2485:13:3"
										}
									],
									"name": "_pause",
									"nameLocation": "2459:6:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2465:2:3"
									},
									"returnParameters": {
										"id": 893,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2499:0:3"
									},
									"scope": 926,
									"src": "2450:115:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 919,
										"nodeType": "Block",
										"src": "2745:69:3",
										"statements": [
											{
												"expression": {
													"id": 912,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 910,
														"name": "_paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 820,
														"src": "2755:7:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 911,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2765:5:3",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2755:15:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 913,
												"nodeType": "ExpressionStatement",
												"src": "2755:15:3"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 915,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1270,
																"src": "2794:10:3",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 916,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2794:12:3",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 914,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 818,
														"src": "2785:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2785:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 918,
												"nodeType": "EmitStatement",
												"src": "2780:27:3"
											}
										]
									},
									"documentation": {
										"id": 905,
										"nodeType": "StructuredDocumentation",
										"src": "2571:121:3",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 920,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 908,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 907,
												"name": "whenPaused",
												"nameLocations": [
													"2734:10:3"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 856,
												"src": "2734:10:3"
											},
											"nodeType": "ModifierInvocation",
											"src": "2734:10:3"
										}
									],
									"name": "_unpause",
									"nameLocation": "2706:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 906,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2714:2:3"
									},
									"returnParameters": {
										"id": 909,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2745:0:3"
									},
									"scope": 926,
									"src": "2697:117:3",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"constant": false,
									"documentation": {
										"id": 921,
										"nodeType": "StructuredDocumentation",
										"src": "2820:254:3",
										"text": " @dev This empty reserved space is put in place to allow future versions to add new\n variables without shifting down storage in the inheritance chain.\n See https://docs.openzeppelin.com/contracts/4.x/upgradeable#storage_gaps"
									},
									"id": 925,
									"mutability": "mutable",
									"name": "__gap",
									"nameLocation": "3099:5:3",
									"nodeType": "VariableDeclaration",
									"scope": 926,
									"src": "3079:25:3",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_uint256_$49_storage",
										"typeString": "uint256[49]"
									},
									"typeName": {
										"baseType": {
											"id": 922,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "3079:7:3",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"id": 924,
										"length": {
											"hexValue": "3439",
											"id": 923,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"kind": "number",
											"lValueRequested": false,
											"nodeType": "Literal",
											"src": "3087:2:3",
											"typeDescriptions": {
												"typeIdentifier": "t_rational_49_by_1",
												"typeString": "int_const 49"
											},
											"value": "49"
										},
										"nodeType": "ArrayTypeName",
										"src": "3079:11:3",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
											"typeString": "uint256[49]"
										}
									},
									"visibility": "private"
								}
							],
							"scope": 927,
							"src": "677:2430:3",
							"usedErrors": [
								379,
								382
							],
							"usedEvents": [
								387,
								813,
								818
							]
						}
					],
					"src": "105:3003:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol",
					"exportedSymbols": {
						"IERC1155Upgradeable": [
							1048
						],
						"IERC165Upgradeable": [
							1340
						]
					},
					"id": 1049,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 928,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "110:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
							"file": "../../utils/introspection/IERC165Upgradeable.sol",
							"id": 929,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1049,
							"sourceUnit": 1341,
							"src": "135:58:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 931,
										"name": "IERC165Upgradeable",
										"nameLocations": [
											"394:18:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1340,
										"src": "394:18:4"
									},
									"id": 932,
									"nodeType": "InheritanceSpecifier",
									"src": "394:18:4"
								}
							],
							"canonicalName": "IERC1155Upgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 930,
								"nodeType": "StructuredDocumentation",
								"src": "195:165:4",
								"text": " @dev Required interface of an ERC1155 compliant contract, as defined in the\n https://eips.ethereum.org/EIPS/eip-1155[EIP].\n _Available since v3.1._"
							},
							"fullyImplemented": false,
							"id": 1048,
							"linearizedBaseContracts": [
								1048,
								1340
							],
							"name": "IERC1155Upgradeable",
							"nameLocation": "371:19:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 933,
										"nodeType": "StructuredDocumentation",
										"src": "419:121:4",
										"text": " @dev Emitted when `value` tokens of token type `id` are transferred from `from` to `to` by `operator`."
									},
									"eventSelector": "c3d58168c5ae7397731d063d5bbf3d657854427343f4c083240f7aacaa2d0f62",
									"id": 945,
									"name": "TransferSingle",
									"nameLocation": "551:14:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 944,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 935,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "582:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "566:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 934,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "566:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 937,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "608:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "592:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 936,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "592:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 939,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "630:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "614:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 938,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "614:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 941,
												"indexed": false,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "642:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "634:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 940,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "634:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 943,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "654:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 945,
												"src": "646:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 942,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "646:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "565:95:4"
									},
									"src": "545:116:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 946,
										"nodeType": "StructuredDocumentation",
										"src": "667:144:4",
										"text": " @dev Equivalent to multiple {TransferSingle} events, where `operator`, `from` and `to` are the same for all\n transfers."
									},
									"eventSelector": "4a39dc06d4c0dbc64b70af90fd698a233a518aa5d07e595d983b8c0526c8f7fb",
									"id": 960,
									"name": "TransferBatch",
									"nameLocation": "822:13:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 959,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 948,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "861:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "845:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 947,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "845:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 950,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "895:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "879:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "879:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "925:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "909:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 951,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "909:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 955,
												"indexed": false,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "947:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "937:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 953,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "937:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 954,
													"nodeType": "ArrayTypeName",
													"src": "937:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 958,
												"indexed": false,
												"mutability": "mutable",
												"name": "values",
												"nameLocation": "970:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 960,
												"src": "960:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 956,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "960:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 957,
													"nodeType": "ArrayTypeName",
													"src": "960:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "835:147:4"
									},
									"src": "816:167:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 961,
										"nodeType": "StructuredDocumentation",
										"src": "989:147:4",
										"text": " @dev Emitted when `account` grants or revokes permission to `operator` to transfer their tokens, according to\n `approved`."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 969,
									"name": "ApprovalForAll",
									"nameLocation": "1147:14:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 968,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 963,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1178:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "1162:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 962,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1162:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 965,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "1203:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "1187:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 964,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1187:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 967,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "1218:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 969,
												"src": "1213:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 966,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1213:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1161:66:4"
									},
									"src": "1141:87:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 970,
										"nodeType": "StructuredDocumentation",
										"src": "1234:343:4",
										"text": " @dev Emitted when the URI for token type `id` changes to `value`, if it is a non-programmatic URI.\n If an {URI} event was emitted for `id`, the standard\n https://eips.ethereum.org/EIPS/eip-1155#metadata-extensions[guarantees] that `value` will equal the value\n returned by {IERC1155MetadataURI-uri}."
									},
									"eventSelector": "6bb7ff708619ba0610cba295a58592e0451dee2622938c8755667688daf3529b",
									"id": 976,
									"name": "URI",
									"nameLocation": "1588:3:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 975,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 972,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "1599:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "1592:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_string_memory_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 971,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "1592:6:4",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 974,
												"indexed": true,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1622:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 976,
												"src": "1606:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 973,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1606:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1591:34:4"
									},
									"src": "1582:44:4"
								},
								{
									"documentation": {
										"id": 977,
										"nodeType": "StructuredDocumentation",
										"src": "1632:173:4",
										"text": " @dev Returns the amount of tokens of token type `id` owned by `account`.\n Requirements:\n - `account` cannot be the zero address."
									},
									"functionSelector": "00fdd58e",
									"id": 986,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "1819:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 982,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1837:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "1829:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 978,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1829:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 981,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "1854:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "1846:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 980,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1846:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1828:29:4"
									},
									"returnParameters": {
										"id": 985,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 986,
												"src": "1881:7:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 983,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1881:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1880:9:4"
									},
									"scope": 1048,
									"src": "1810:80:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 987,
										"nodeType": "StructuredDocumentation",
										"src": "1896:188:4",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {balanceOf}.\n Requirements:\n - `accounts` and `ids` must have the same length."
									},
									"functionSelector": "4e1273f4",
									"id": 999,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOfBatch",
									"nameLocation": "2098:14:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 990,
												"mutability": "mutable",
												"name": "accounts",
												"nameLocation": "2141:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "2122:27:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_address_$dyn_calldata_ptr",
													"typeString": "address[]"
												},
												"typeName": {
													"baseType": {
														"id": 988,
														"name": "address",
														"nodeType": "ElementaryTypeName",
														"src": "2122:7:4",
														"stateMutability": "nonpayable",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"id": 989,
													"nodeType": "ArrayTypeName",
													"src": "2122:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
														"typeString": "address[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 993,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "2178:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "2159:22:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 991,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2159:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 992,
													"nodeType": "ArrayTypeName",
													"src": "2159:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2112:75:4"
									},
									"returnParameters": {
										"id": 998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 997,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 999,
												"src": "2211:16:4",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 995,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "2211:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 996,
													"nodeType": "ArrayTypeName",
													"src": "2211:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2210:18:4"
									},
									"scope": 1048,
									"src": "2089:140:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1000,
										"nodeType": "StructuredDocumentation",
										"src": "2235:248:4",
										"text": " @dev Grants or revokes permission to `operator` to transfer the caller's tokens, according to `approved`,\n Emits an {ApprovalForAll} event.\n Requirements:\n - `operator` cannot be the caller."
									},
									"functionSelector": "a22cb465",
									"id": 1007,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "2497:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1002,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2523:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "2515:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1001,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2515:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1004,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "2538:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1007,
												"src": "2533:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1003,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2533:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2514:33:4"
									},
									"returnParameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2556:0:4"
									},
									"scope": 1048,
									"src": "2488:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1008,
										"nodeType": "StructuredDocumentation",
										"src": "2563:135:4",
										"text": " @dev Returns true if `operator` is approved to transfer ``account``'s tokens.\n See {setApprovalForAll}."
									},
									"functionSelector": "e985e9c5",
									"id": 1017,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "2712:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1013,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1010,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2737:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "2729:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1009,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2729:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1012,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "2754:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "2746:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1011,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2746:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2728:35:4"
									},
									"returnParameters": {
										"id": 1016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1015,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1017,
												"src": "2787:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1014,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2787:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2786:6:4"
									},
									"scope": 1048,
									"src": "2703:90:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1018,
										"nodeType": "StructuredDocumentation",
										"src": "2799:556:4",
										"text": " @dev Transfers `amount` tokens of token type `id` from `from` to `to`.\n Emits a {TransferSingle} event.\n Requirements:\n - `to` cannot be the zero address.\n - If the caller is not `from`, it must have been approved to spend ``from``'s tokens via {setApprovalForAll}.\n - `from` must have a balance of tokens of type `id` of at least `amount`.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155Received} and return the\n acceptance magic value."
									},
									"functionSelector": "f242432a",
									"id": 1031,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "3369:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1029,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1020,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3394:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "3386:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1019,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3386:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1022,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3408:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "3400:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1021,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3400:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1024,
												"mutability": "mutable",
												"name": "id",
												"nameLocation": "3420:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "3412:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1023,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3412:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1026,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "3432:6:4",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "3424:14:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1025,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3424:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1028,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3455:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1031,
												"src": "3440:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1027,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3440:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3385:75:4"
									},
									"returnParameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3469:0:4"
									},
									"scope": 1048,
									"src": "3360:110:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1032,
										"nodeType": "StructuredDocumentation",
										"src": "3476:390:4",
										"text": " @dev xref:ROOT:erc1155.adoc#batch-operations[Batched] version of {safeTransferFrom}.\n Emits a {TransferBatch} event.\n Requirements:\n - `ids` and `amounts` must have the same length.\n - If `to` refers to a smart contract, it must implement {IERC1155Receiver-onERC1155BatchReceived} and return the\n acceptance magic value."
									},
									"functionSelector": "2eb2c2d6",
									"id": 1047,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeBatchTransferFrom",
									"nameLocation": "3880:21:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1034,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3919:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "3911:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1033,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3911:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1036,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3941:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "3933:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1035,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3933:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1039,
												"mutability": "mutable",
												"name": "ids",
												"nameLocation": "3972:3:4",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "3953:22:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1037,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3953:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1038,
													"nodeType": "ArrayTypeName",
													"src": "3953:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1042,
												"mutability": "mutable",
												"name": "amounts",
												"nameLocation": "4004:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "3985:26:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
													"typeString": "uint256[]"
												},
												"typeName": {
													"baseType": {
														"id": 1040,
														"name": "uint256",
														"nodeType": "ElementaryTypeName",
														"src": "3985:7:4",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 1041,
													"nodeType": "ArrayTypeName",
													"src": "3985:9:4",
													"typeDescriptions": {
														"typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
														"typeString": "uint256[]"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1044,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4036:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 1047,
												"src": "4021:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1043,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4021:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3901:145:4"
									},
									"returnParameters": {
										"id": 1046,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4055:0:4"
									},
									"scope": 1048,
									"src": "3871:185:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1049,
							"src": "361:3697:4",
							"usedErrors": [],
							"usedEvents": [
								945,
								960,
								969,
								976
							]
						}
					],
					"src": "110:3949:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
					"exportedSymbols": {
						"IERC20Upgradeable": [
							1126
						]
					},
					"id": 1127,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1050,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:5"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Upgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1051,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:5",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 1126,
							"linearizedBaseContracts": [
								1126
							],
							"name": "IERC20Upgradeable",
							"nameLocation": "212:17:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1052,
										"nodeType": "StructuredDocumentation",
										"src": "236:158:5",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1060,
									"name": "Transfer",
									"nameLocation": "405:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1059,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1054,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "430:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "414:20:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1053,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "414:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1056,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "452:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "436:18:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1055,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "436:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1058,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "464:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1060,
												"src": "456:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1057,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "456:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "413:57:5"
									},
									"src": "399:72:5"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1061,
										"nodeType": "StructuredDocumentation",
										"src": "477:148:5",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1069,
									"name": "Approval",
									"nameLocation": "636:8:5",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1063,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "661:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "645:21:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1062,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1065,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "684:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "668:23:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1064,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1067,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "701:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "693:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1066,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "644:63:5"
									},
									"src": "630:78:5"
								},
								{
									"documentation": {
										"id": 1070,
										"nodeType": "StructuredDocumentation",
										"src": "714:66:5",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 1075,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "794:11:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1071,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "805:2:5"
									},
									"returnParameters": {
										"id": 1074,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1073,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1075,
												"src": "831:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1072,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "830:9:5"
									},
									"scope": 1126,
									"src": "785:55:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1076,
										"nodeType": "StructuredDocumentation",
										"src": "846:72:5",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 1083,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "932:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1078,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "950:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "942:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1077,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "942:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "941:17:5"
									},
									"returnParameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1081,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1083,
												"src": "982:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1080,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "982:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "981:9:5"
									},
									"scope": 1126,
									"src": "923:68:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1084,
										"nodeType": "StructuredDocumentation",
										"src": "997:202:5",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 1093,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1089,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1086,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1093,
												"src": "1222:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1085,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1088,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1242:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1093,
												"src": "1234:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1087,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:28:5"
									},
									"returnParameters": {
										"id": 1092,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1091,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1093,
												"src": "1268:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1090,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:5"
									},
									"scope": 1126,
									"src": "1204:70:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1094,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:5",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 1103,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1099,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1096,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:5",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "1568:13:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1095,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1098,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "1583:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1097,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:5"
									},
									"returnParameters": {
										"id": 1102,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1101,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1103,
												"src": "1623:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1100,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:5"
									},
									"scope": 1126,
									"src": "1549:83:5",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1104,
										"nodeType": "StructuredDocumentation",
										"src": "1638:642:5",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1113,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2294:7:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1109,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1106,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2310:7:5",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "2302:15:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2302:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1108,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2327:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "2319:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1107,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2319:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:33:5"
									},
									"returnParameters": {
										"id": 1112,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1111,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1113,
												"src": "2353:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1110,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2353:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2352:6:5"
									},
									"scope": 1126,
									"src": "2285:74:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1114,
										"nodeType": "StructuredDocumentation",
										"src": "2365:287:5",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1125,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2666:12:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1121,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1116,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2687:4:5",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "2679:12:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1115,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1118,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2701:2:5",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "2693:10:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2693:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1120,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2713:6:5",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "2705:14:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1119,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2705:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2678:42:5"
									},
									"returnParameters": {
										"id": 1124,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1123,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1125,
												"src": "2739:4:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1122,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2739:4:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2738:6:5"
									},
									"scope": 1126,
									"src": "2657:88:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1127,
							"src": "202:2545:5",
							"usedErrors": [],
							"usedEvents": [
								1060,
								1069
							]
						}
					],
					"src": "106:2642:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol",
					"exportedSymbols": {
						"IERC165Upgradeable": [
							1340
						],
						"IERC721Upgradeable": [
							1242
						]
					},
					"id": 1243,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1128,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
							"file": "../../utils/introspection/IERC165Upgradeable.sol",
							"id": 1129,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1243,
							"sourceUnit": 1341,
							"src": "133:58:6",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 1131,
										"name": "IERC165Upgradeable",
										"nameLocations": [
											"293:18:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1340,
										"src": "293:18:6"
									},
									"id": 1132,
									"nodeType": "InheritanceSpecifier",
									"src": "293:18:6"
								}
							],
							"canonicalName": "IERC721Upgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1130,
								"nodeType": "StructuredDocumentation",
								"src": "193:67:6",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 1242,
							"linearizedBaseContracts": [
								1242,
								1340
							],
							"name": "IERC721Upgradeable",
							"nameLocation": "271:18:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1133,
										"nodeType": "StructuredDocumentation",
										"src": "318:88:6",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 1141,
									"name": "Transfer",
									"nameLocation": "417:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1140,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1135,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "442:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "426:20:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1134,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1137,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "464:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "448:18:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1136,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1139,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "484:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1141,
												"src": "468:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1138,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "468:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:67:6"
									},
									"src": "411:82:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1142,
										"nodeType": "StructuredDocumentation",
										"src": "499:94:6",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 1150,
									"name": "Approval",
									"nameLocation": "604:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1149,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1144,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "629:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "613:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1143,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "613:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1146,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "652:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "636:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1145,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1148,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "678:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1150,
												"src": "662:23:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1147,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "662:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "612:74:6"
									},
									"src": "598:89:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1151,
										"nodeType": "StructuredDocumentation",
										"src": "693:117:6",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 1159,
									"name": "ApprovalForAll",
									"nameLocation": "821:14:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1153,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "852:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "836:21:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1152,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "836:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1155,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "875:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "859:24:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1154,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "859:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1157,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "890:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1159,
												"src": "885:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1156,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "885:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "835:64:6"
									},
									"src": "815:85:6"
								},
								{
									"documentation": {
										"id": 1160,
										"nodeType": "StructuredDocumentation",
										"src": "906:76:6",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 1167,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "996:9:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1163,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1162,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1014:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "1006:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1006:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1005:15:6"
									},
									"returnParameters": {
										"id": 1166,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1165,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1052:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1167,
												"src": "1044:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1164,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1044:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1043:17:6"
									},
									"scope": 1242,
									"src": "987:74:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1168,
										"nodeType": "StructuredDocumentation",
										"src": "1067:131:6",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 1175,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1212:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1171,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1170,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1228:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "1220:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1169,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1220:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1219:17:6"
									},
									"returnParameters": {
										"id": 1174,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1173,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1268:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1175,
												"src": "1260:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1172,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1260:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1259:15:6"
									},
									"scope": 1242,
									"src": "1203:72:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1176,
										"nodeType": "StructuredDocumentation",
										"src": "1281:556:6",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 1187,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1851:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1185,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1178,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1876:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "1868:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1868:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1180,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1890:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "1882:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1179,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1882:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1182,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1902:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "1894:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1181,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1894:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1184,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1926:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1187,
												"src": "1911:19:6",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1183,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1911:5:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1867:64:6"
									},
									"returnParameters": {
										"id": 1186,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1940:0:6"
									},
									"scope": 1242,
									"src": "1842:99:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1188,
										"nodeType": "StructuredDocumentation",
										"src": "1947:687:6",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 1197,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2648:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1195,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1190,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2673:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "2665:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1189,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2665:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1192,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2687:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "2679:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1191,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1194,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2699:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1197,
												"src": "2691:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1193,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2691:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2664:43:6"
									},
									"returnParameters": {
										"id": 1196,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2716:0:6"
									},
									"scope": 1242,
									"src": "2639:78:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1198,
										"nodeType": "StructuredDocumentation",
										"src": "2723:732:6",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 1207,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3469:12:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1205,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1200,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3490:4:6",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "3482:12:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1199,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3482:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1202,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3504:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "3496:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1201,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3496:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1204,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3516:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1207,
												"src": "3508:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1203,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3508:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3481:43:6"
									},
									"returnParameters": {
										"id": 1206,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3533:0:6"
									},
									"scope": 1242,
									"src": "3460:74:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1208,
										"nodeType": "StructuredDocumentation",
										"src": "3540:452:6",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 1215,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4006:7:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1213,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1210,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4022:2:6",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "4014:10:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4014:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1212,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4034:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1215,
												"src": "4026:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4026:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4013:29:6"
									},
									"returnParameters": {
										"id": 1214,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4051:0:6"
									},
									"scope": 1242,
									"src": "3997:55:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1216,
										"nodeType": "StructuredDocumentation",
										"src": "4058:309:6",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 1223,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4381:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1218,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4407:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "4399:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4399:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1220,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4422:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1223,
												"src": "4417:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1219,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4417:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4398:33:6"
									},
									"returnParameters": {
										"id": 1222,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4440:0:6"
									},
									"scope": 1242,
									"src": "4372:69:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1224,
										"nodeType": "StructuredDocumentation",
										"src": "4447:139:6",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 1231,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4600:11:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1227,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1226,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4620:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "4612:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1225,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4612:7:6",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4611:17:6"
									},
									"returnParameters": {
										"id": 1230,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1229,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4660:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1231,
												"src": "4652:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1228,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4652:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4651:18:6"
									},
									"scope": 1242,
									"src": "4591:79:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1232,
										"nodeType": "StructuredDocumentation",
										"src": "4676:138:6",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 1241,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4828:16:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1237,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1234,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4853:5:6",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "4845:13:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4845:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1236,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4868:8:6",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "4860:16:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1235,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4844:33:6"
									},
									"returnParameters": {
										"id": 1240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1239,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1241,
												"src": "4901:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1238,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4901:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4900:6:6"
									},
									"scope": 1242,
									"src": "4819:88:6",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1243,
							"src": "261:4648:6",
							"usedErrors": [],
							"usedEvents": [
								1141,
								1150,
								1159
							]
						}
					],
					"src": "108:4802:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1288
						],
						"Initializable": [
							616
						]
					},
					"id": 1289,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1244,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 1246,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1289,
							"sourceUnit": 617,
							"src": "126:63:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1245,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 616,
										"src": "134:13:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1248,
										"name": "Initializable",
										"nameLocations": [
											"728:13:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 616,
										"src": "728:13:7"
									},
									"id": 1249,
									"nodeType": "InheritanceSpecifier",
									"src": "728:13:7"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1247,
								"nodeType": "StructuredDocumentation",
								"src": "191:496:7",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1288,
							"linearizedBaseContracts": [
								1288,
								616
							],
							"name": "ContextUpgradeable",
							"nameLocation": "706:18:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1254,
										"nodeType": "Block",
										"src": "800:7:7",
										"statements": []
									},
									"id": 1255,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1252,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1251,
												"name": "onlyInitializing",
												"nameLocations": [
													"783:16:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "783:16:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "783:16:7"
										}
									],
									"name": "__Context_init",
									"nameLocation": "757:14:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1250,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:2:7"
									},
									"returnParameters": {
										"id": 1253,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "800:0:7"
									},
									"scope": 1288,
									"src": "748:59:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1260,
										"nodeType": "Block",
										"src": "875:7:7",
										"statements": []
									},
									"id": 1261,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1258,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1257,
												"name": "onlyInitializing",
												"nameLocations": [
													"858:16:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "858:16:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "858:16:7"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "822:24:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1256,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:2:7"
									},
									"returnParameters": {
										"id": 1259,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "875:0:7"
									},
									"scope": 1288,
									"src": "813:69:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1269,
										"nodeType": "Block",
										"src": "949:34:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1266,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "966:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1267,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "970:6:7",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "966:10:7",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1265,
												"id": 1268,
												"nodeType": "Return",
												"src": "959:17:7"
											}
										]
									},
									"id": 1270,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "896:10:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1262,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "906:2:7"
									},
									"returnParameters": {
										"id": 1265,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1264,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1270,
												"src": "940:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1263,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:7",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:9:7"
									},
									"scope": 1288,
									"src": "887:96:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1278,
										"nodeType": "Block",
										"src": "1056:32:7",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1275,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1073:3:7",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1276,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1077:4:7",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1073:8:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1274,
												"id": 1277,
												"nodeType": "Return",
												"src": "1066:15:7"
											}
										]
									},
									"id": 1279,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "998:8:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1271,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1006:2:7"
									},
									"returnParameters": {
										"id": 1274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1273,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1279,
												"src": "1040:14:7",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1272,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1040:5:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:16:7"
									},
									"scope": 1288,
									"src": "989:99:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1286,
										"nodeType": "Block",
										"src": "1166:25:7",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1284,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1183:1:7",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1283,
												"id": 1285,
												"nodeType": "Return",
												"src": "1176:8:7"
											}
										]
									},
									"id": 1287,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "1103:20:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1280,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1123:2:7"
									},
									"returnParameters": {
										"id": 1283,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1282,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1287,
												"src": "1157:7:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1281,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:7",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:9:7"
									},
									"scope": 1288,
									"src": "1094:97:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1289,
							"src": "688:505:7",
							"usedErrors": [
								379,
								382
							],
							"usedEvents": [
								387
							]
						}
					],
					"src": "101:1093:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
					"exportedSymbols": {
						"ERC165Upgradeable": [
							1328
						],
						"IERC165": [
							2121
						],
						"Initializable": [
							616
						]
					},
					"id": 1329,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1290,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:8"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"id": 1292,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1329,
							"sourceUnit": 2122,
							"src": "140:80:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1291,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2121,
										"src": "148:7:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../../proxy/utils/Initializable.sol",
							"id": 1294,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1329,
							"sourceUnit": 617,
							"src": "221:66:8",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1293,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 616,
										"src": "229:13:8",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1296,
										"name": "Initializable",
										"nameLocations": [
											"807:13:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 616,
										"src": "807:13:8"
									},
									"id": 1297,
									"nodeType": "InheritanceSpecifier",
									"src": "807:13:8"
								},
								{
									"baseName": {
										"id": 1298,
										"name": "IERC165",
										"nameLocations": [
											"822:7:8"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2121,
										"src": "822:7:8"
									},
									"id": 1299,
									"nodeType": "InheritanceSpecifier",
									"src": "822:7:8"
								}
							],
							"canonicalName": "ERC165Upgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1295,
								"nodeType": "StructuredDocumentation",
								"src": "289:478:8",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1328,
							"linearizedBaseContracts": [
								1328,
								2121,
								616
							],
							"name": "ERC165Upgradeable",
							"nameLocation": "786:17:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1304,
										"nodeType": "Block",
										"src": "887:7:8",
										"statements": []
									},
									"id": 1305,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1302,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1301,
												"name": "onlyInitializing",
												"nameLocations": [
													"870:16:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "870:16:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "870:16:8"
										}
									],
									"name": "__ERC165_init",
									"nameLocation": "845:13:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1300,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "858:2:8"
									},
									"returnParameters": {
										"id": 1303,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "887:0:8"
									},
									"scope": 1328,
									"src": "836:58:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1310,
										"nodeType": "Block",
										"src": "961:7:8",
										"statements": []
									},
									"id": 1311,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1308,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1307,
												"name": "onlyInitializing",
												"nameLocations": [
													"944:16:8"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "944:16:8"
											},
											"nodeType": "ModifierInvocation",
											"src": "944:16:8"
										}
									],
									"name": "__ERC165_init_unchained",
									"nameLocation": "909:23:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1306,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "932:2:8"
									},
									"returnParameters": {
										"id": 1309,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "961:0:8"
									},
									"scope": 1328,
									"src": "900:68:8",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2120
									],
									"body": {
										"id": 1326,
										"nodeType": "Block",
										"src": "1116:64:8",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1324,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1319,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1314,
														"src": "1133:11:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1321,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2121,
																	"src": "1153:7:8",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2121_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2121_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1320,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "1148:4:8",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1322,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1148:13:8",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$2121",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1323,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1162:11:8",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "1148:25:8",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "1133:40:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1318,
												"id": 1325,
												"nodeType": "Return",
												"src": "1126:47:8"
											}
										]
									},
									"documentation": {
										"id": 1312,
										"nodeType": "StructuredDocumentation",
										"src": "973:56:8",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1327,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1043:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1068:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "1061:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1313,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:20:8"
									},
									"returnParameters": {
										"id": 1318,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1317,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1327,
												"src": "1110:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1316,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1110:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1109:6:8"
									},
									"scope": 1328,
									"src": "1034:146:8",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1329,
							"src": "768:414:8",
							"usedErrors": [
								379,
								382
							],
							"usedEvents": [
								387
							]
						}
					],
					"src": "114:1069:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
					"exportedSymbols": {
						"IERC165Upgradeable": [
							1340
						]
					},
					"id": 1341,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1330,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165Upgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1331,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:9",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1340,
							"linearizedBaseContracts": [
								1340
							],
							"name": "IERC165Upgradeable",
							"nameLocation": "415:18:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1332,
										"nodeType": "StructuredDocumentation",
										"src": "440:340:9",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1339,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "794:17:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1335,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1334,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "819:11:9",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "812:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1333,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "812:6:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "811:20:9"
									},
									"returnParameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1339,
												"src": "855:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1336,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "855:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "854:6:9"
									},
									"scope": 1340,
									"src": "785:76:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1341,
							"src": "405:458:9",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "100:764:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							1423
						]
					},
					"id": 1424,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1342,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1343,
								"nodeType": "StructuredDocumentation",
								"src": "135:89:10",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 1423,
							"linearizedBaseContracts": [
								1423
							],
							"name": "IAccessControl",
							"nameLocation": "235:14:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1344,
										"nodeType": "StructuredDocumentation",
										"src": "256:56:10",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 1350,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "323:32:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1349,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1346,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "364:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "356:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1345,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "356:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1348,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "381:10:10",
												"nodeType": "VariableDeclaration",
												"scope": 1350,
												"src": "373:18:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1347,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "373:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "355:37:10"
									},
									"src": "317:76:10"
								},
								{
									"documentation": {
										"id": 1351,
										"nodeType": "StructuredDocumentation",
										"src": "399:148:10",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 1353,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "558:28:10",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1352,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "586:2:10"
									},
									"src": "552:37:10"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1354,
										"nodeType": "StructuredDocumentation",
										"src": "595:254:10",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 1362,
									"name": "RoleAdminChanged",
									"nameLocation": "860:16:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1361,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1356,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "893:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "877:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1355,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "877:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1358,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "915:17:10",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "899:33:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1357,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "899:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1360,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "950:12:10",
												"nodeType": "VariableDeclaration",
												"scope": 1362,
												"src": "934:28:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1359,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "934:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:87:10"
									},
									"src": "854:110:10"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1363,
										"nodeType": "StructuredDocumentation",
										"src": "970:212:10",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 1371,
									"name": "RoleGranted",
									"nameLocation": "1193:11:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1370,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1365,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1221:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1371,
												"src": "1205:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1364,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1205:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1367,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1243:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1371,
												"src": "1227:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1366,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1369,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1268:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1371,
												"src": "1252:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1368,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1252:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1204:71:10"
									},
									"src": "1187:89:10"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1372,
										"nodeType": "StructuredDocumentation",
										"src": "1282:275:10",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 1380,
									"name": "RoleRevoked",
									"nameLocation": "1568:11:10",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1374,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1596:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1380,
												"src": "1580:20:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1373,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1580:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1376,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1618:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1380,
												"src": "1602:23:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1602:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1378,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1643:6:10",
												"nodeType": "VariableDeclaration",
												"scope": 1380,
												"src": "1627:22:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1627:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1579:71:10"
									},
									"src": "1562:89:10"
								},
								{
									"documentation": {
										"id": 1381,
										"nodeType": "StructuredDocumentation",
										"src": "1657:76:10",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 1390,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1747:7:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1383,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1763:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "1755:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1382,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1755:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1385,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1777:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "1769:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1384,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1769:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1754:31:10"
									},
									"returnParameters": {
										"id": 1389,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1388,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1390,
												"src": "1809:4:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1387,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1809:4:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1808:6:10"
									},
									"scope": 1423,
									"src": "1738:77:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1391,
										"nodeType": "StructuredDocumentation",
										"src": "1821:184:10",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 1398,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2019:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1394,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1393,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2040:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1398,
												"src": "2032:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1392,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2032:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2031:14:10"
									},
									"returnParameters": {
										"id": 1397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1396,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1398,
												"src": "2069:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1395,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2069:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2068:9:10"
									},
									"scope": 1423,
									"src": "2010:68:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1399,
										"nodeType": "StructuredDocumentation",
										"src": "2084:239:10",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 1406,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2337:9:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1401,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2355:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1406,
												"src": "2347:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1400,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2347:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1403,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2369:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1406,
												"src": "2361:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1402,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2361:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2346:31:10"
									},
									"returnParameters": {
										"id": 1405,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2386:0:10"
									},
									"scope": 1423,
									"src": "2328:59:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1407,
										"nodeType": "StructuredDocumentation",
										"src": "2393:223:10",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 1414,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2630:10:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1409,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2649:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "2641:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1408,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2641:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2663:7:10",
												"nodeType": "VariableDeclaration",
												"scope": 1414,
												"src": "2655:15:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2655:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2640:31:10"
									},
									"returnParameters": {
										"id": 1413,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2680:0:10"
									},
									"scope": 1423,
									"src": "2621:60:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1415,
										"nodeType": "StructuredDocumentation",
										"src": "2687:491:10",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 1422,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3192:12:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1420,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1417,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3213:4:10",
												"nodeType": "VariableDeclaration",
												"scope": 1422,
												"src": "3205:12:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1416,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3205:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1419,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3227:18:10",
												"nodeType": "VariableDeclaration",
												"scope": 1422,
												"src": "3219:26:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1418,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:10",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3204:42:10"
									},
									"returnParameters": {
										"id": 1421,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:10"
									},
									"scope": 1423,
									"src": "3183:73:10",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1424,
							"src": "225:3033:10",
							"usedErrors": [
								1350,
								1353
							],
							"usedEvents": [
								1362,
								1371,
								1380
							]
						}
					],
					"src": "109:3150:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
					"exportedSymbols": {
						"IERC1822Proxiable": [
							1433
						]
					},
					"id": 1434,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1425,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:11"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1822Proxiable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1426,
								"nodeType": "StructuredDocumentation",
								"src": "139:203:11",
								"text": " @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."
							},
							"fullyImplemented": false,
							"id": 1433,
							"linearizedBaseContracts": [
								1433
							],
							"name": "IERC1822Proxiable",
							"nameLocation": "353:17:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1427,
										"nodeType": "StructuredDocumentation",
										"src": "377:438:11",
										"text": " @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."
									},
									"functionSelector": "52d1902d",
									"id": 1432,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "proxiableUUID",
									"nameLocation": "829:13:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1428,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "842:2:11"
									},
									"returnParameters": {
										"id": 1431,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1430,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1432,
												"src": "868:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1429,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "868:7:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "867:9:11"
									},
									"scope": 1433,
									"src": "820:57:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1434,
							"src": "343:536:11",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "113:767:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
					"exportedSymbols": {
						"Address": [
							1999
						],
						"ERC1967Utils": [
							1736
						],
						"IBeacon": [
							1746
						],
						"StorageSlot": [
							2109
						]
					},
					"id": 1737,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1435,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:12"
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
							"file": "../beacon/IBeacon.sol",
							"id": 1437,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1737,
							"sourceUnit": 1747,
							"src": "140:46:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1436,
										"name": "IBeacon",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1746,
										"src": "148:7:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 1439,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1737,
							"sourceUnit": 2000,
							"src": "187:48:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1438,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1999,
										"src": "195:7:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
							"file": "../../utils/StorageSlot.sol",
							"id": 1441,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1737,
							"sourceUnit": 2110,
							"src": "236:56:12",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1440,
										"name": "StorageSlot",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2109,
										"src": "244:11:12",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC1967Utils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1442,
								"nodeType": "StructuredDocumentation",
								"src": "294:154:12",
								"text": " @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots."
							},
							"fullyImplemented": true,
							"id": 1736,
							"linearizedBaseContracts": [
								1736
							],
							"name": "ERC1967Utils",
							"nameLocation": "457:12:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1443,
										"nodeType": "StructuredDocumentation",
										"src": "660:68:12",
										"text": " @dev Emitted when the implementation is upgraded."
									},
									"eventSelector": "bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
									"id": 1447,
									"name": "Upgraded",
									"nameLocation": "739:8:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1446,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1445,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "764:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "748:30:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1444,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "748:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "747:32:12"
									},
									"src": "733:47:12"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1448,
										"nodeType": "StructuredDocumentation",
										"src": "786:67:12",
										"text": " @dev Emitted when the admin account has changed."
									},
									"eventSelector": "7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f",
									"id": 1454,
									"name": "AdminChanged",
									"nameLocation": "864:12:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1450,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousAdmin",
												"nameLocation": "885:13:12",
												"nodeType": "VariableDeclaration",
												"scope": 1454,
												"src": "877:21:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "877:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1452,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "908:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1454,
												"src": "900:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1451,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:41:12"
									},
									"src": "858:60:12"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1455,
										"nodeType": "StructuredDocumentation",
										"src": "924:59:12",
										"text": " @dev Emitted when the beacon is changed."
									},
									"eventSelector": "1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e",
									"id": 1459,
									"name": "BeaconUpgraded",
									"nameLocation": "994:14:12",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1458,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1457,
												"indexed": true,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "1025:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1459,
												"src": "1009:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1456,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1009:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1008:24:12"
									},
									"src": "988:45:12"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1460,
										"nodeType": "StructuredDocumentation",
										"src": "1039:170:12",
										"text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
									},
									"id": 1463,
									"mutability": "constant",
									"name": "IMPLEMENTATION_SLOT",
									"nameLocation": "1305:19:12",
									"nodeType": "VariableDeclaration",
									"scope": 1736,
									"src": "1279:114:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1461,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1279:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
										"id": 1462,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1327:66:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
											"typeString": "int_const 2444...(69 digits omitted)...5612"
										},
										"value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									},
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 1464,
										"nodeType": "StructuredDocumentation",
										"src": "1400:69:12",
										"text": " @dev The `implementation` of the proxy is invalid."
									},
									"errorSelector": "4c9c8ce3",
									"id": 1468,
									"name": "ERC1967InvalidImplementation",
									"nameLocation": "1480:28:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1467,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1466,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1517:14:12",
												"nodeType": "VariableDeclaration",
												"scope": 1468,
												"src": "1509:22:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1465,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:24:12"
									},
									"src": "1474:59:12"
								},
								{
									"documentation": {
										"id": 1469,
										"nodeType": "StructuredDocumentation",
										"src": "1539:60:12",
										"text": " @dev The `admin` of the proxy is invalid."
									},
									"errorSelector": "62e77ba2",
									"id": 1473,
									"name": "ERC1967InvalidAdmin",
									"nameLocation": "1610:19:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1472,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1471,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1638:5:12",
												"nodeType": "VariableDeclaration",
												"scope": 1473,
												"src": "1630:13:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1470,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1630:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1629:15:12"
									},
									"src": "1604:41:12"
								},
								{
									"documentation": {
										"id": 1474,
										"nodeType": "StructuredDocumentation",
										"src": "1651:61:12",
										"text": " @dev The `beacon` of the proxy is invalid."
									},
									"errorSelector": "64ced0ec",
									"id": 1478,
									"name": "ERC1967InvalidBeacon",
									"nameLocation": "1723:20:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1476,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "1752:6:12",
												"nodeType": "VariableDeclaration",
												"scope": 1478,
												"src": "1744:14:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1475,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1744:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1743:16:12"
									},
									"src": "1717:43:12"
								},
								{
									"documentation": {
										"id": 1479,
										"nodeType": "StructuredDocumentation",
										"src": "1766:82:12",
										"text": " @dev An upgrade function sees `msg.value > 0` that may be lost."
									},
									"errorSelector": "b398979f",
									"id": 1481,
									"name": "ERC1967NonPayable",
									"nameLocation": "1859:17:12",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1480,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1876:2:12"
									},
									"src": "1853:26:12"
								},
								{
									"body": {
										"id": 1493,
										"nodeType": "Block",
										"src": "2018:77:12",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1489,
																"name": "IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1463,
																"src": "2062:19:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1487,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2109,
																"src": "2035:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2109_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 1488,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2047:14:12",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2031,
															"src": "2035:26:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2005_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 1490,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2035:47:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$2005_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 1491,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2083:5:12",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2004,
													"src": "2035:53:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1486,
												"id": 1492,
												"nodeType": "Return",
												"src": "2028:60:12"
											}
										]
									},
									"documentation": {
										"id": 1482,
										"nodeType": "StructuredDocumentation",
										"src": "1885:67:12",
										"text": " @dev Returns the current implementation address."
									},
									"id": 1494,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getImplementation",
									"nameLocation": "1966:17:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1483,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1983:2:12"
									},
									"returnParameters": {
										"id": 1486,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1485,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1494,
												"src": "2009:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1484,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2009:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:9:12"
									},
									"scope": 1736,
									"src": "1957:138:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1520,
										"nodeType": "Block",
										"src": "2249:218:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1504,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1500,
																"name": "newImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1497,
																"src": "2263:17:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1501,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2281:4:12",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "2263:22:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1502,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2286:6:12",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2263:29:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1503,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2296:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2263:34:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1510,
												"nodeType": "IfStatement",
												"src": "2259:119:12",
												"trueBody": {
													"id": 1509,
													"nodeType": "Block",
													"src": "2299:79:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1506,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1497,
																		"src": "2349:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1505,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1468,
																	"src": "2320:28:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1507,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2320:47:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1508,
															"nodeType": "RevertStatement",
															"src": "2313:54:12"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1518,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 1514,
																	"name": "IMPLEMENTATION_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1463,
																	"src": "2414:19:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1511,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2109,
																	"src": "2387:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2109_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 1513,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2399:14:12",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2031,
																"src": "2387:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2005_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 1515,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2387:47:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$2005_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 1516,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2435:5:12",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2004,
														"src": "2387:53:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1517,
														"name": "newImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1497,
														"src": "2443:17:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2387:73:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1519,
												"nodeType": "ExpressionStatement",
												"src": "2387:73:12"
											}
										]
									},
									"documentation": {
										"id": 1495,
										"nodeType": "StructuredDocumentation",
										"src": "2101:80:12",
										"text": " @dev Stores a new address in the EIP1967 implementation slot."
									},
									"id": 1521,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nameLocation": "2195:18:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1498,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1497,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2222:17:12",
												"nodeType": "VariableDeclaration",
												"scope": 1521,
												"src": "2214:25:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1496,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2214:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2213:27:12"
									},
									"returnParameters": {
										"id": 1499,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2249:0:12"
									},
									"scope": 1736,
									"src": "2186:281:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1554,
										"nodeType": "Block",
										"src": "2860:254:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1530,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1524,
															"src": "2889:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1529,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1521,
														"src": "2870:18:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2870:37:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1532,
												"nodeType": "ExpressionStatement",
												"src": "2870:37:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1534,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1524,
															"src": "2931:17:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1533,
														"name": "Upgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1447,
														"src": "2922:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2922:27:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1536,
												"nodeType": "EmitStatement",
												"src": "2917:32:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1540,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1537,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1526,
															"src": "2964:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1538,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2969:6:12",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2964:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1539,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2978:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2964:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1552,
													"nodeType": "Block",
													"src": "3065:43:12",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1549,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1735,
																	"src": "3079:16:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1550,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3079:18:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1551,
															"nodeType": "ExpressionStatement",
															"src": "3079:18:12"
														}
													]
												},
												"id": 1553,
												"nodeType": "IfStatement",
												"src": "2960:148:12",
												"trueBody": {
													"id": 1548,
													"nodeType": "Block",
													"src": "2981:78:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1544,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1524,
																		"src": "3024:17:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1545,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1526,
																		"src": "3043:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 1541,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1999,
																		"src": "2995:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$1999_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 1543,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3003:20:12",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1918,
																	"src": "2995:28:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 1546,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2995:53:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1547,
															"nodeType": "ExpressionStatement",
															"src": "2995:53:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1522,
										"nodeType": "StructuredDocumentation",
										"src": "2473:301:12",
										"text": " @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 1555,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeToAndCall",
									"nameLocation": "2788:16:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1527,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1524,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2813:17:12",
												"nodeType": "VariableDeclaration",
												"scope": 1555,
												"src": "2805:25:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1523,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2805:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1526,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2845:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1555,
												"src": "2832:17:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1525,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2832:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2804:46:12"
									},
									"returnParameters": {
										"id": 1528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2860:0:12"
									},
									"scope": 1736,
									"src": "2779:335:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1556,
										"nodeType": "StructuredDocumentation",
										"src": "3120:145:12",
										"text": " @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
									},
									"id": 1559,
									"mutability": "constant",
									"name": "ADMIN_SLOT",
									"nameLocation": "3361:10:12",
									"nodeType": "VariableDeclaration",
									"scope": 1736,
									"src": "3335:105:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1557,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3335:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
										"id": 1558,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3374:66:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
											"typeString": "int_const 8195...(69 digits omitted)...7091"
										},
										"value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1571,
										"nodeType": "Block",
										"src": "3844:68:12",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1567,
																"name": "ADMIN_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1559,
																"src": "3888:10:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1565,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2109,
																"src": "3861:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2109_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 1566,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3873:14:12",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2031,
															"src": "3861:26:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2005_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 1568,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3861:38:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$2005_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 1569,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3900:5:12",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2004,
													"src": "3861:44:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1564,
												"id": 1570,
												"nodeType": "Return",
												"src": "3854:51:12"
											}
										]
									},
									"documentation": {
										"id": 1560,
										"nodeType": "StructuredDocumentation",
										"src": "3447:340:12",
										"text": " @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
									},
									"id": 1572,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAdmin",
									"nameLocation": "3801:8:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1561,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3809:2:12"
									},
									"returnParameters": {
										"id": 1564,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1563,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1572,
												"src": "3835:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1562,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3835:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3834:9:12"
									},
									"scope": 1736,
									"src": "3792:120:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1602,
										"nodeType": "Block",
										"src": "4039:172:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1583,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1578,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1575,
														"src": "4053:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1581,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4073:1:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1580,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4065:7:12",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1579,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4065:7:12",
																"typeDescriptions": {}
															}
														},
														"id": 1582,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4065:10:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4053:22:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1592,
												"nodeType": "IfStatement",
												"src": "4049:91:12",
												"trueBody": {
													"id": 1591,
													"nodeType": "Block",
													"src": "4077:63:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1587,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4126:1:12",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1586,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4118:7:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1585,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4118:7:12",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1588,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4118:10:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1584,
																	"name": "ERC1967InvalidAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1473,
																	"src": "4098:19:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1589,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4098:31:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1590,
															"nodeType": "RevertStatement",
															"src": "4091:38:12"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1600,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 1596,
																	"name": "ADMIN_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1559,
																	"src": "4176:10:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1593,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2109,
																	"src": "4149:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2109_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 1595,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4161:14:12",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2031,
																"src": "4149:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2005_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 1597,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4149:38:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$2005_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 1598,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4188:5:12",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2004,
														"src": "4149:44:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1599,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1575,
														"src": "4196:8:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4149:55:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1601,
												"nodeType": "ExpressionStatement",
												"src": "4149:55:12"
											}
										]
									},
									"documentation": {
										"id": 1573,
										"nodeType": "StructuredDocumentation",
										"src": "3918:71:12",
										"text": " @dev Stores a new address in the EIP1967 admin slot."
									},
									"id": 1603,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAdmin",
									"nameLocation": "4003:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1576,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1575,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "4021:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1603,
												"src": "4013:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1574,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4013:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4012:18:12"
									},
									"returnParameters": {
										"id": 1577,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4039:0:12"
									},
									"scope": 1736,
									"src": "3994:217:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1619,
										"nodeType": "Block",
										"src": "4379:85:12",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1610,
																"name": "getAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1572,
																"src": "4407:8:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1611,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4407:10:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1612,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1606,
															"src": "4419:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1609,
														"name": "AdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1454,
														"src": "4394:12:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1613,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4394:34:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1614,
												"nodeType": "EmitStatement",
												"src": "4389:39:12"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1616,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1606,
															"src": "4448:8:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1615,
														"name": "_setAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1603,
														"src": "4438:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4438:19:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1618,
												"nodeType": "ExpressionStatement",
												"src": "4438:19:12"
											}
										]
									},
									"documentation": {
										"id": 1604,
										"nodeType": "StructuredDocumentation",
										"src": "4217:109:12",
										"text": " @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."
									},
									"id": 1620,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "changeAdmin",
									"nameLocation": "4340:11:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1607,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1606,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "4360:8:12",
												"nodeType": "VariableDeclaration",
												"scope": 1620,
												"src": "4352:16:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1605,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4352:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4351:18:12"
									},
									"returnParameters": {
										"id": 1608,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4379:0:12"
									},
									"scope": 1736,
									"src": "4331:133:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1621,
										"nodeType": "StructuredDocumentation",
										"src": "4470:201:12",
										"text": " @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
									},
									"id": 1624,
									"mutability": "constant",
									"name": "BEACON_SLOT",
									"nameLocation": "4767:11:12",
									"nodeType": "VariableDeclaration",
									"scope": 1736,
									"src": "4741:106:12",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1622,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4741:7:12",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530",
										"id": 1623,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4781:66:12",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1",
											"typeString": "int_const 7415...(69 digits omitted)...4704"
										},
										"value": "0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1636,
										"nodeType": "Block",
										"src": "4963:69:12",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1632,
																"name": "BEACON_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1624,
																"src": "5007:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1630,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2109,
																"src": "4980:11:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2109_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 1631,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4992:14:12",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2031,
															"src": "4980:26:12",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2005_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 1633,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4980:39:12",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$2005_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 1634,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5020:5:12",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 2004,
													"src": "4980:45:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1629,
												"id": 1635,
												"nodeType": "Return",
												"src": "4973:52:12"
											}
										]
									},
									"documentation": {
										"id": 1625,
										"nodeType": "StructuredDocumentation",
										"src": "4854:51:12",
										"text": " @dev Returns the current beacon."
									},
									"id": 1637,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBeacon",
									"nameLocation": "4919:9:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1626,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4928:2:12"
									},
									"returnParameters": {
										"id": 1629,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1628,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1637,
												"src": "4954:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1627,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4954:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4953:9:12"
									},
									"scope": 1736,
									"src": "4910:122:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1682,
										"nodeType": "Block",
										"src": "5161:390:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1647,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1643,
																"name": "newBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1640,
																"src": "5175:9:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1644,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5185:4:12",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5175:14:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1645,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5190:6:12",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5175:21:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1646,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5200:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5175:26:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1653,
												"nodeType": "IfStatement",
												"src": "5171:95:12",
												"trueBody": {
													"id": 1652,
													"nodeType": "Block",
													"src": "5203:63:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1649,
																		"name": "newBeacon",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1640,
																		"src": "5245:9:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1648,
																	"name": "ERC1967InvalidBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1478,
																	"src": "5224:20:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1650,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5224:31:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1651,
															"nodeType": "RevertStatement",
															"src": "5217:38:12"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1661,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 1657,
																	"name": "BEACON_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1624,
																	"src": "5303:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1654,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2109,
																	"src": "5276:11:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2109_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 1656,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5288:14:12",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2031,
																"src": "5276:26:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$2005_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 1658,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5276:39:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$2005_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 1659,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5316:5:12",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2004,
														"src": "5276:45:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1660,
														"name": "newBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1640,
														"src": "5324:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5276:57:12",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1662,
												"nodeType": "ExpressionStatement",
												"src": "5276:57:12"
											},
											{
												"assignments": [
													1664
												],
												"declarations": [
													{
														"constant": false,
														"id": 1664,
														"mutability": "mutable",
														"name": "beaconImplementation",
														"nameLocation": "5352:20:12",
														"nodeType": "VariableDeclaration",
														"scope": 1682,
														"src": "5344:28:12",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1663,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5344:7:12",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1670,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 1666,
																	"name": "newBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1640,
																	"src": "5383:9:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1665,
																"name": "IBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1746,
																"src": "5375:7:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBeacon_$1746_$",
																	"typeString": "type(contract IBeacon)"
																}
															},
															"id": 1667,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5375:18:12",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBeacon_$1746",
																"typeString": "contract IBeacon"
															}
														},
														"id": 1668,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5394:14:12",
														"memberName": "implementation",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1745,
														"src": "5375:33:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 1669,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5375:35:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5344:66:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1675,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1671,
																"name": "beaconImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1664,
																"src": "5424:20:12",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1672,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5445:4:12",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5424:25:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1673,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5450:6:12",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5424:32:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1674,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5460:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5424:37:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1681,
												"nodeType": "IfStatement",
												"src": "5420:125:12",
												"trueBody": {
													"id": 1680,
													"nodeType": "Block",
													"src": "5463:82:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1677,
																		"name": "beaconImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1664,
																		"src": "5513:20:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1676,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1468,
																	"src": "5484:28:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1678,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5484:50:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1679,
															"nodeType": "RevertStatement",
															"src": "5477:57:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1638,
										"nodeType": "StructuredDocumentation",
										"src": "5038:71:12",
										"text": " @dev Stores a new beacon in the EIP1967 beacon slot."
									},
									"id": 1683,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setBeacon",
									"nameLocation": "5123:10:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1641,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1640,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "5142:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1683,
												"src": "5134:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1639,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5134:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5133:19:12"
									},
									"returnParameters": {
										"id": 1642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:12"
									},
									"scope": 1736,
									"src": "5114:437:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1720,
										"nodeType": "Block",
										"src": "6155:254:12",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1692,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1686,
															"src": "6176:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1691,
														"name": "_setBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1683,
														"src": "6165:10:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1693,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6165:21:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1694,
												"nodeType": "ExpressionStatement",
												"src": "6165:21:12"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1696,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1686,
															"src": "6216:9:12",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1695,
														"name": "BeaconUpgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1459,
														"src": "6201:14:12",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1697,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6201:25:12",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1698,
												"nodeType": "EmitStatement",
												"src": "6196:30:12"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1699,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1688,
															"src": "6241:4:12",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1700,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6246:6:12",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6241:11:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1701,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6255:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6241:15:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1718,
													"nodeType": "Block",
													"src": "6360:43:12",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1715,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1735,
																	"src": "6374:16:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1716,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6374:18:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1717,
															"nodeType": "ExpressionStatement",
															"src": "6374:18:12"
														}
													]
												},
												"id": 1719,
												"nodeType": "IfStatement",
												"src": "6237:166:12",
												"trueBody": {
													"id": 1714,
													"nodeType": "Block",
													"src": "6258:96:12",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1707,
																						"name": "newBeacon",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1686,
																						"src": "6309:9:12",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 1706,
																					"name": "IBeacon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1746,
																					"src": "6301:7:12",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IBeacon_$1746_$",
																						"typeString": "type(contract IBeacon)"
																					}
																				},
																				"id": 1708,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6301:18:12",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IBeacon_$1746",
																					"typeString": "contract IBeacon"
																				}
																			},
																			"id": 1709,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6320:14:12",
																			"memberName": "implementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1745,
																			"src": "6301:33:12",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 1710,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6301:35:12",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1711,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1688,
																		"src": "6338:4:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 1703,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1999,
																		"src": "6272:7:12",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$1999_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 1705,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6280:20:12",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1918,
																	"src": "6272:28:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 1712,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6272:71:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1713,
															"nodeType": "ExpressionStatement",
															"src": "6272:71:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1684,
										"nodeType": "StructuredDocumentation",
										"src": "5557:514:12",
										"text": " @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."
									},
									"id": 1721,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeBeaconToAndCall",
									"nameLocation": "6085:22:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1689,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1686,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "6116:9:12",
												"nodeType": "VariableDeclaration",
												"scope": 1721,
												"src": "6108:17:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1685,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6108:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1688,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6140:4:12",
												"nodeType": "VariableDeclaration",
												"scope": 1721,
												"src": "6127:17:12",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1687,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6127:5:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6107:38:12"
									},
									"returnParameters": {
										"id": 1690,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6155:0:12"
									},
									"scope": 1736,
									"src": "6076:333:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1734,
										"nodeType": "Block",
										"src": "6634:86:12",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1728,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1725,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6648:3:12",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1726,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6652:5:12",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "6648:9:12",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1727,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6660:1:12",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6648:13:12",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1733,
												"nodeType": "IfStatement",
												"src": "6644:70:12",
												"trueBody": {
													"id": 1732,
													"nodeType": "Block",
													"src": "6663:51:12",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1729,
																	"name": "ERC1967NonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1481,
																	"src": "6684:17:12",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1730,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6684:19:12",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1731,
															"nodeType": "RevertStatement",
															"src": "6677:26:12"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1722,
										"nodeType": "StructuredDocumentation",
										"src": "6415:178:12",
										"text": " @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."
									},
									"id": 1735,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNonPayable",
									"nameLocation": "6607:16:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1723,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6623:2:12"
									},
									"returnParameters": {
										"id": 1724,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6634:0:12"
									},
									"scope": 1736,
									"src": "6598:122:12",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1737,
							"src": "449:6273:12",
							"usedErrors": [
								1468,
								1473,
								1478,
								1481
							],
							"usedEvents": [
								1447,
								1454,
								1459
							]
						}
					],
					"src": "114:6609:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
					"exportedSymbols": {
						"IBeacon": [
							1746
						]
					},
					"id": 1747,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1738,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBeacon",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1739,
								"nodeType": "StructuredDocumentation",
								"src": "134:79:13",
								"text": " @dev This is the interface that {BeaconProxy} expects of its beacon."
							},
							"fullyImplemented": false,
							"id": 1746,
							"linearizedBaseContracts": [
								1746
							],
							"name": "IBeacon",
							"nameLocation": "224:7:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1740,
										"nodeType": "StructuredDocumentation",
										"src": "238:168:13",
										"text": " @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."
									},
									"functionSelector": "5c60da1b",
									"id": 1745,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "420:14:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1741,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "434:2:13"
									},
									"returnParameters": {
										"id": 1744,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1743,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1745,
												"src": "460:7:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1742,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "459:9:13"
									},
									"scope": 1746,
									"src": "411:58:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1747,
							"src": "214:257:13",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "108:364:13"
				},
				"id": 13
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1999
						]
					},
					"id": 2000,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1748,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1749,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:14",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1999,
							"linearizedBaseContracts": [
								1999
							],
							"name": "Address",
							"nameLocation": "203:7:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1750,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:14",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 1754,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:14",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1753,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1752,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1754,
												"src": "349:15:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1751,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:14"
									},
									"src": "316:50:14"
								},
								{
									"documentation": {
										"id": 1755,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:14",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 1759,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:14",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1757,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1759,
												"src": "475:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1756,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:14"
									},
									"src": "452:39:14"
								},
								{
									"documentation": {
										"id": 1760,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:14",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 1762,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:14",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1761,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:14"
									},
									"src": "591:24:14"
								},
								{
									"body": {
										"id": 1802,
										"nodeType": "Block",
										"src": "1602:260:14",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1776,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1772,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1999",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1999",
																		"typeString": "library Address"
																	}
																],
																"id": 1771,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1770,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 1773,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1774,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:14",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1775,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1767,
														"src": "1640:6:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1785,
												"nodeType": "IfStatement",
												"src": "1612:109:14",
												"trueBody": {
													"id": 1784,
													"nodeType": "Block",
													"src": "1648:73:14",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1780,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$1999",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$1999",
																					"typeString": "library Address"
																				}
																			],
																			"id": 1779,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1778,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:14",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1781,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1777,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1754,
																	"src": "1669:26:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1782,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1783,
															"nodeType": "RevertStatement",
															"src": "1662:48:14"
														}
													]
												}
											},
											{
												"assignments": [
													1787,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1787,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:14",
														"nodeType": "VariableDeclaration",
														"scope": 1802,
														"src": "1732:12:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1786,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1794,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1792,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:14",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1788,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1765,
																"src": "1750:9:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1789,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:14",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1791,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1790,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1767,
																"src": "1772:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1793,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:14"
											},
											{
												"condition": {
													"id": 1796,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:14",
													"subExpression": {
														"id": 1795,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1787,
														"src": "1798:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1801,
												"nodeType": "IfStatement",
												"src": "1793:63:14",
												"trueBody": {
													"id": 1800,
													"nodeType": "Block",
													"src": "1807:49:14",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1797,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1762,
																	"src": "1828:15:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1798,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1799,
															"nodeType": "RevertStatement",
															"src": "1821:24:14"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1763,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:14",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1803,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1768,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1765,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:14",
												"nodeType": "VariableDeclaration",
												"scope": 1803,
												"src": "1550:25:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1764,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:14",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1767,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1803,
												"src": "1577:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1766,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:14"
									},
									"returnParameters": {
										"id": 1769,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:14"
									},
									"scope": 1999,
									"src": "1531:331:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1819,
										"nodeType": "Block",
										"src": "2794:62:14",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1814,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1806,
															"src": "2833:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1815,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1808,
															"src": "2841:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1816,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:14",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1813,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1866,
														"src": "2811:21:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 1817,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1812,
												"id": 1818,
												"nodeType": "Return",
												"src": "2804:45:14"
											}
										]
									},
									"documentation": {
										"id": 1804,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:14",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 1820,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1806,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1820,
												"src": "2727:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1805,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1808,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 1820,
												"src": "2743:17:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1807,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:14"
									},
									"returnParameters": {
										"id": 1812,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1811,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1820,
												"src": "2780:12:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1810,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:14"
									},
									"scope": 1999,
									"src": "2705:151:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1865,
										"nodeType": "Block",
										"src": "3293:279:14",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1838,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1834,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1999",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1999",
																		"typeString": "library Address"
																	}
																],
																"id": 1833,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1832,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:14",
																	"typeDescriptions": {}
																}
															},
															"id": 1835,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:14",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1836,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:14",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1837,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1827,
														"src": "3331:5:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1847,
												"nodeType": "IfStatement",
												"src": "3303:108:14",
												"trueBody": {
													"id": 1846,
													"nodeType": "Block",
													"src": "3338:73:14",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1842,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$1999",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$1999",
																					"typeString": "library Address"
																				}
																			],
																			"id": 1841,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1840,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:14",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1843,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:14",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1839,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1754,
																	"src": "3359:26:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																		"typeString": "function (address) pure"
																	}
																},
																"id": 1844,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1845,
															"nodeType": "RevertStatement",
															"src": "3352:48:14"
														}
													]
												}
											},
											{
												"assignments": [
													1849,
													1851
												],
												"declarations": [
													{
														"constant": false,
														"id": 1849,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:14",
														"nodeType": "VariableDeclaration",
														"scope": 1865,
														"src": "3421:12:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1848,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1851,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:14",
														"nodeType": "VariableDeclaration",
														"scope": 1865,
														"src": "3435:23:14",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1850,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1858,
												"initialValue": {
													"arguments": [
														{
															"id": 1856,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1825,
															"src": "3488:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1852,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1823,
																"src": "3462:6:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1853,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:14",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:14",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1855,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1854,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1827,
																"src": "3481:5:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1860,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1823,
															"src": "3537:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1861,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1849,
															"src": "3545:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1862,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1851,
															"src": "3554:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1859,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1958,
														"src": "3510:26:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1863,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1831,
												"id": 1864,
												"nodeType": "Return",
												"src": "3503:62:14"
											}
										]
									},
									"documentation": {
										"id": 1821,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:14",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 1866,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1828,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1823,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1866,
												"src": "3211:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1822,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1825,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 1866,
												"src": "3227:17:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1824,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1827,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 1866,
												"src": "3246:13:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1826,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:14"
									},
									"returnParameters": {
										"id": 1831,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1830,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1866,
												"src": "3279:12:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1829,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:14"
									},
									"scope": 1999,
									"src": "3180:392:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1891,
										"nodeType": "Block",
										"src": "3811:154:14",
										"statements": [
											{
												"assignments": [
													1877,
													1879
												],
												"declarations": [
													{
														"constant": false,
														"id": 1877,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:14",
														"nodeType": "VariableDeclaration",
														"scope": 1891,
														"src": "3822:12:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1876,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1879,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:14",
														"nodeType": "VariableDeclaration",
														"scope": 1891,
														"src": "3836:23:14",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1878,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1884,
												"initialValue": {
													"arguments": [
														{
															"id": 1882,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1871,
															"src": "3881:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1880,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1869,
															"src": "3863:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1881,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:14",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1883,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1886,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1869,
															"src": "3930:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1887,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1877,
															"src": "3938:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1888,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1879,
															"src": "3947:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1885,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1958,
														"src": "3903:26:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1889,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1875,
												"id": 1890,
												"nodeType": "Return",
												"src": "3896:62:14"
											}
										]
									},
									"documentation": {
										"id": 1867,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:14",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 1892,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1872,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1869,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1892,
												"src": "3739:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1868,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1871,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 1892,
												"src": "3755:17:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1870,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:14"
									},
									"returnParameters": {
										"id": 1875,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1874,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1892,
												"src": "3797:12:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1873,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:14"
									},
									"scope": 1999,
									"src": "3711:254:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1917,
										"nodeType": "Block",
										"src": "4203:156:14",
										"statements": [
											{
												"assignments": [
													1903,
													1905
												],
												"declarations": [
													{
														"constant": false,
														"id": 1903,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:14",
														"nodeType": "VariableDeclaration",
														"scope": 1917,
														"src": "4214:12:14",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1902,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1905,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:14",
														"nodeType": "VariableDeclaration",
														"scope": 1917,
														"src": "4228:23:14",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1904,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1910,
												"initialValue": {
													"arguments": [
														{
															"id": 1908,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1897,
															"src": "4275:4:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1906,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1895,
															"src": "4255:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1907,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:14",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1909,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:14"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1912,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1895,
															"src": "4324:6:14",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1913,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1903,
															"src": "4332:7:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1914,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1905,
															"src": "4341:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1911,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1958,
														"src": "4297:26:14",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:14",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1901,
												"id": 1916,
												"nodeType": "Return",
												"src": "4290:62:14"
											}
										]
									},
									"documentation": {
										"id": 1893,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:14",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 1918,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1898,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1895,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "4136:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1894,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1897,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "4152:17:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1896,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:14"
									},
									"returnParameters": {
										"id": 1901,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1900,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1918,
												"src": "4189:12:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1899,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:14"
									},
									"scope": 1999,
									"src": "4106:253:14",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1957,
										"nodeType": "Block",
										"src": "4783:424:14",
										"statements": [
											{
												"condition": {
													"id": 1931,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:14",
													"subExpression": {
														"id": 1930,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1923,
														"src": "4798:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1955,
													"nodeType": "Block",
													"src": "4857:344:14",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1946,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1940,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1937,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1925,
																			"src": "5045:10:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1938,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:14",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1939,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1945,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 1941,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1921,
																				"src": "5071:6:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1942,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:14",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:14",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1943,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:14",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1944,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1952,
															"nodeType": "IfStatement",
															"src": "5041:119:14",
															"trueBody": {
																"id": 1951,
																"nodeType": "Block",
																"src": "5096:64:14",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1948,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1921,
																					"src": "5138:6:14",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1947,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1759,
																				"src": "5121:16:14",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$__$",
																					"typeString": "function (address) pure"
																				}
																			},
																			"id": 1949,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:14",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_tuple$__$",
																				"typeString": "tuple()"
																			}
																		},
																		"id": 1950,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:14"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1953,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1925,
																"src": "5180:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1929,
															"id": 1954,
															"nodeType": "Return",
															"src": "5173:17:14"
														}
													]
												},
												"id": 1956,
												"nodeType": "IfStatement",
												"src": "4793:408:14",
												"trueBody": {
													"id": 1936,
													"nodeType": "Block",
													"src": "4807:44:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1933,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1925,
																		"src": "4829:10:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1932,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1998,
																	"src": "4821:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1934,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1935,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:14"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1919,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:14",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 1958,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1926,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1921,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:14",
												"nodeType": "VariableDeclaration",
												"scope": 1958,
												"src": "4670:14:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1920,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:14",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1923,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1958,
												"src": "4694:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1922,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1925,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 1958,
												"src": "4716:23:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1924,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:14"
									},
									"returnParameters": {
										"id": 1929,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1928,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1958,
												"src": "4769:12:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1927,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:14"
									},
									"scope": 1999,
									"src": "4625:582:14",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1979,
										"nodeType": "Block",
										"src": "5509:122:14",
										"statements": [
											{
												"condition": {
													"id": 1969,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:14",
													"subExpression": {
														"id": 1968,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1961,
														"src": "5524:7:14",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1977,
													"nodeType": "Block",
													"src": "5583:42:14",
													"statements": [
														{
															"expression": {
																"id": 1975,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1963,
																"src": "5604:10:14",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1967,
															"id": 1976,
															"nodeType": "Return",
															"src": "5597:17:14"
														}
													]
												},
												"id": 1978,
												"nodeType": "IfStatement",
												"src": "5519:106:14",
												"trueBody": {
													"id": 1974,
													"nodeType": "Block",
													"src": "5533:44:14",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1971,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1963,
																		"src": "5555:10:14",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1970,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1998,
																	"src": "5547:7:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1972,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1973,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:14"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1959,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:14",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 1980,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1964,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1961,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:14",
												"nodeType": "VariableDeclaration",
												"scope": 1980,
												"src": "5433:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1960,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1963,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 1980,
												"src": "5447:23:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1962,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:14"
									},
									"returnParameters": {
										"id": 1967,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1966,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1980,
												"src": "5495:12:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1965,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:14"
									},
									"scope": 1999,
									"src": "5407:224:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1997,
										"nodeType": "Block",
										"src": "5798:461:14",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1989,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1986,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1983,
															"src": "5874:10:14",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1987,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:14",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:14",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1988,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:14",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1995,
													"nodeType": "Block",
													"src": "6204:49:14",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1992,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1762,
																	"src": "6225:15:14",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 1993,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:14",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1994,
															"nodeType": "RevertStatement",
															"src": "6218:24:14"
														}
													]
												},
												"id": 1996,
												"nodeType": "IfStatement",
												"src": "5870:383:14",
												"trueBody": {
													"id": 1991,
													"nodeType": "Block",
													"src": "5897:301:14",
													"statements": [
														{
															"AST": {
																"nativeSrc": "6055:133:14",
																"nodeType": "YulBlock",
																"src": "6055:133:14",
																"statements": [
																	{
																		"nativeSrc": "6073:40:14",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:14",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "6102:10:14",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:14"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6096:5:14",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:14"
																			},
																			"nativeSrc": "6096:17:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:14"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "6077:15:14",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:14",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6141:2:14",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:14",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "6145:10:14",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:14"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6137:3:14",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:14"
																					},
																					"nativeSrc": "6137:19:14",
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:14"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "6158:15:14",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:14"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6130:6:14",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:14"
																			},
																			"nativeSrc": "6130:44:14",
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:14"
																		},
																		"nativeSrc": "6130:44:14",
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:14"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 1983,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:14",
																	"valueSize": 1
																},
																{
																	"declaration": 1983,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:14",
																	"valueSize": 1
																}
															],
															"id": 1990,
															"nodeType": "InlineAssembly",
															"src": "6046:142:14"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1981,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:14",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 1998,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1984,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1983,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:14",
												"nodeType": "VariableDeclaration",
												"scope": 1998,
												"src": "5760:23:14",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1982,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:14"
									},
									"returnParameters": {
										"id": 1985,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:14"
									},
									"scope": 1999,
									"src": "5743:516:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 2000,
							"src": "195:6066:14",
							"usedErrors": [
								1754,
								1759,
								1762
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:14"
				},
				"id": 14
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							2109
						]
					},
					"id": 2110,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2001,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2002,
								"nodeType": "StructuredDocumentation",
								"src": "219:1025:15",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 2109,
							"linearizedBaseContracts": [
								2109
							],
							"name": "StorageSlot",
							"nameLocation": "1253:11:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 2005,
									"members": [
										{
											"constant": false,
											"id": 2004,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1308:5:15",
											"nodeType": "VariableDeclaration",
											"scope": 2005,
											"src": "1300:13:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2003,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1300:7:15",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1278:11:15",
									"nodeType": "StructDefinition",
									"scope": 2109,
									"src": "1271:49:15",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 2008,
									"members": [
										{
											"constant": false,
											"id": 2007,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1360:5:15",
											"nodeType": "VariableDeclaration",
											"scope": 2008,
											"src": "1355:10:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2006,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1355:4:15",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1333:11:15",
									"nodeType": "StructDefinition",
									"scope": 2109,
									"src": "1326:46:15",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 2011,
									"members": [
										{
											"constant": false,
											"id": 2010,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1415:5:15",
											"nodeType": "VariableDeclaration",
											"scope": 2011,
											"src": "1407:13:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 2009,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1407:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1385:11:15",
									"nodeType": "StructDefinition",
									"scope": 2109,
									"src": "1378:49:15",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 2014,
									"members": [
										{
											"constant": false,
											"id": 2013,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1470:5:15",
											"nodeType": "VariableDeclaration",
											"scope": 2014,
											"src": "1462:13:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2012,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1462:7:15",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1440:11:15",
									"nodeType": "StructDefinition",
									"scope": 2109,
									"src": "1433:49:15",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 2017,
									"members": [
										{
											"constant": false,
											"id": 2016,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1523:5:15",
											"nodeType": "VariableDeclaration",
											"scope": 2017,
											"src": "1516:12:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 2015,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1516:6:15",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1495:10:15",
									"nodeType": "StructDefinition",
									"scope": 2109,
									"src": "1488:47:15",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 2020,
									"members": [
										{
											"constant": false,
											"id": 2019,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1574:5:15",
											"nodeType": "VariableDeclaration",
											"scope": 2020,
											"src": "1568:11:15",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 2018,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1568:5:15",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1548:9:15",
									"nodeType": "StructDefinition",
									"scope": 2109,
									"src": "1541:45:15",
									"visibility": "public"
								},
								{
									"body": {
										"id": 2030,
										"nodeType": "Block",
										"src": "1768:106:15",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1830:38:15",
													"nodeType": "YulBlock",
													"src": "1830:38:15",
													"statements": [
														{
															"nativeSrc": "1844:14:15",
															"nodeType": "YulAssignment",
															"src": "1844:14:15",
															"value": {
																"name": "slot",
																"nativeSrc": "1854:4:15",
																"nodeType": "YulIdentifier",
																"src": "1854:4:15"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "1844:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "1844:6:15"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2027,
														"isOffset": false,
														"isSlot": true,
														"src": "1844:6:15",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2023,
														"isOffset": false,
														"isSlot": false,
														"src": "1854:4:15",
														"valueSize": 1
													}
												],
												"id": 2029,
												"nodeType": "InlineAssembly",
												"src": "1821:47:15"
											}
										]
									},
									"documentation": {
										"id": 2021,
										"nodeType": "StructuredDocumentation",
										"src": "1592:87:15",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 2031,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1693:14:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2023,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1716:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2031,
												"src": "1708:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2022,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1708:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1707:14:15"
									},
									"returnParameters": {
										"id": 2028,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2027,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1765:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2031,
												"src": "1745:21:15",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$2005_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 2026,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2025,
														"name": "AddressSlot",
														"nameLocations": [
															"1745:11:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2005,
														"src": "1745:11:15"
													},
													"referencedDeclaration": 2005,
													"src": "1745:11:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$2005_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1744:23:15"
									},
									"scope": 2109,
									"src": "1684:190:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2041,
										"nodeType": "Block",
										"src": "2056:106:15",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2118:38:15",
													"nodeType": "YulBlock",
													"src": "2118:38:15",
													"statements": [
														{
															"nativeSrc": "2132:14:15",
															"nodeType": "YulAssignment",
															"src": "2132:14:15",
															"value": {
																"name": "slot",
																"nativeSrc": "2142:4:15",
																"nodeType": "YulIdentifier",
																"src": "2142:4:15"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2132:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2132:6:15"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2038,
														"isOffset": false,
														"isSlot": true,
														"src": "2132:6:15",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2034,
														"isOffset": false,
														"isSlot": false,
														"src": "2142:4:15",
														"valueSize": 1
													}
												],
												"id": 2040,
												"nodeType": "InlineAssembly",
												"src": "2109:47:15"
											}
										]
									},
									"documentation": {
										"id": 2032,
										"nodeType": "StructuredDocumentation",
										"src": "1880:87:15",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 2042,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "1981:14:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2035,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2034,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2004:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2042,
												"src": "1996:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2033,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1996:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1995:14:15"
									},
									"returnParameters": {
										"id": 2039,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2038,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2053:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2042,
												"src": "2033:21:15",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$2008_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 2037,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2036,
														"name": "BooleanSlot",
														"nameLocations": [
															"2033:11:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2008,
														"src": "2033:11:15"
													},
													"referencedDeclaration": 2008,
													"src": "2033:11:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$2008_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2032:23:15"
									},
									"scope": 2109,
									"src": "1972:190:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2052,
										"nodeType": "Block",
										"src": "2344:106:15",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2406:38:15",
													"nodeType": "YulBlock",
													"src": "2406:38:15",
													"statements": [
														{
															"nativeSrc": "2420:14:15",
															"nodeType": "YulAssignment",
															"src": "2420:14:15",
															"value": {
																"name": "slot",
																"nativeSrc": "2430:4:15",
																"nodeType": "YulIdentifier",
																"src": "2430:4:15"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2420:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2420:6:15"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2049,
														"isOffset": false,
														"isSlot": true,
														"src": "2420:6:15",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2045,
														"isOffset": false,
														"isSlot": false,
														"src": "2430:4:15",
														"valueSize": 1
													}
												],
												"id": 2051,
												"nodeType": "InlineAssembly",
												"src": "2397:47:15"
											}
										]
									},
									"documentation": {
										"id": 2043,
										"nodeType": "StructuredDocumentation",
										"src": "2168:87:15",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 2053,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2269:14:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2046,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2045,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2292:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2053,
												"src": "2284:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2044,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2284:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2283:14:15"
									},
									"returnParameters": {
										"id": 2050,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2049,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2341:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2053,
												"src": "2321:21:15",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$2011_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 2048,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2047,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2321:11:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2011,
														"src": "2321:11:15"
													},
													"referencedDeclaration": 2011,
													"src": "2321:11:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$2011_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2320:23:15"
									},
									"scope": 2109,
									"src": "2260:190:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2063,
										"nodeType": "Block",
										"src": "2632:106:15",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2694:38:15",
													"nodeType": "YulBlock",
													"src": "2694:38:15",
													"statements": [
														{
															"nativeSrc": "2708:14:15",
															"nodeType": "YulAssignment",
															"src": "2708:14:15",
															"value": {
																"name": "slot",
																"nativeSrc": "2718:4:15",
																"nodeType": "YulIdentifier",
																"src": "2718:4:15"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2708:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2708:6:15"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2060,
														"isOffset": false,
														"isSlot": true,
														"src": "2708:6:15",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2056,
														"isOffset": false,
														"isSlot": false,
														"src": "2718:4:15",
														"valueSize": 1
													}
												],
												"id": 2062,
												"nodeType": "InlineAssembly",
												"src": "2685:47:15"
											}
										]
									},
									"documentation": {
										"id": 2054,
										"nodeType": "StructuredDocumentation",
										"src": "2456:87:15",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 2064,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2557:14:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2057,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2056,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2580:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2064,
												"src": "2572:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2055,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2572:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2571:14:15"
									},
									"returnParameters": {
										"id": 2061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2060,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2629:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2064,
												"src": "2609:21:15",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$2014_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 2059,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2058,
														"name": "Uint256Slot",
														"nameLocations": [
															"2609:11:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2014,
														"src": "2609:11:15"
													},
													"referencedDeclaration": 2014,
													"src": "2609:11:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$2014_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2608:23:15"
									},
									"scope": 2109,
									"src": "2548:190:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2074,
										"nodeType": "Block",
										"src": "2917:106:15",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2979:38:15",
													"nodeType": "YulBlock",
													"src": "2979:38:15",
													"statements": [
														{
															"nativeSrc": "2993:14:15",
															"nodeType": "YulAssignment",
															"src": "2993:14:15",
															"value": {
																"name": "slot",
																"nativeSrc": "3003:4:15",
																"nodeType": "YulIdentifier",
																"src": "3003:4:15"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2993:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "2993:6:15"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2071,
														"isOffset": false,
														"isSlot": true,
														"src": "2993:6:15",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2067,
														"isOffset": false,
														"isSlot": false,
														"src": "3003:4:15",
														"valueSize": 1
													}
												],
												"id": 2073,
												"nodeType": "InlineAssembly",
												"src": "2970:47:15"
											}
										]
									},
									"documentation": {
										"id": 2065,
										"nodeType": "StructuredDocumentation",
										"src": "2744:86:15",
										"text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
									},
									"id": 2075,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "2844:13:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2067,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2866:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2075,
												"src": "2858:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2066,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2858:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2857:14:15"
									},
									"returnParameters": {
										"id": 2072,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2071,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2914:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2075,
												"src": "2895:20:15",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$2017_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 2070,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2069,
														"name": "StringSlot",
														"nameLocations": [
															"2895:10:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2017,
														"src": "2895:10:15"
													},
													"referencedDeclaration": 2017,
													"src": "2895:10:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$2017_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2894:22:15"
									},
									"scope": 2109,
									"src": "2835:188:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2085,
										"nodeType": "Block",
										"src": "3225:112:15",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3287:44:15",
													"nodeType": "YulBlock",
													"src": "3287:44:15",
													"statements": [
														{
															"nativeSrc": "3301:20:15",
															"nodeType": "YulAssignment",
															"src": "3301:20:15",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3311:10:15",
																"nodeType": "YulIdentifier",
																"src": "3311:10:15"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3301:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3301:6:15"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2082,
														"isOffset": false,
														"isSlot": true,
														"src": "3301:6:15",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2078,
														"isOffset": false,
														"isSlot": true,
														"src": "3311:10:15",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 2084,
												"nodeType": "InlineAssembly",
												"src": "3278:53:15"
											}
										]
									},
									"documentation": {
										"id": 2076,
										"nodeType": "StructuredDocumentation",
										"src": "3029:101:15",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 2086,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3144:13:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2079,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2078,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3173:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 2086,
												"src": "3158:20:15",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2077,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3158:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3157:22:15"
									},
									"returnParameters": {
										"id": 2083,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2082,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3222:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2086,
												"src": "3203:20:15",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$2017_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 2081,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2080,
														"name": "StringSlot",
														"nameLocations": [
															"3203:10:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2017,
														"src": "3203:10:15"
													},
													"referencedDeclaration": 2017,
													"src": "3203:10:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$2017_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3202:22:15"
									},
									"scope": 2109,
									"src": "3135:202:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2096,
										"nodeType": "Block",
										"src": "3513:106:15",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3575:38:15",
													"nodeType": "YulBlock",
													"src": "3575:38:15",
													"statements": [
														{
															"nativeSrc": "3589:14:15",
															"nodeType": "YulAssignment",
															"src": "3589:14:15",
															"value": {
																"name": "slot",
																"nativeSrc": "3599:4:15",
																"nodeType": "YulIdentifier",
																"src": "3599:4:15"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3589:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3589:6:15"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2093,
														"isOffset": false,
														"isSlot": true,
														"src": "3589:6:15",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2089,
														"isOffset": false,
														"isSlot": false,
														"src": "3599:4:15",
														"valueSize": 1
													}
												],
												"id": 2095,
												"nodeType": "InlineAssembly",
												"src": "3566:47:15"
											}
										]
									},
									"documentation": {
										"id": 2087,
										"nodeType": "StructuredDocumentation",
										"src": "3343:85:15",
										"text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
									},
									"id": 2097,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3442:12:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2090,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2089,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3463:4:15",
												"nodeType": "VariableDeclaration",
												"scope": 2097,
												"src": "3455:12:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2088,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3455:7:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3454:14:15"
									},
									"returnParameters": {
										"id": 2094,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2093,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3510:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2097,
												"src": "3492:19:15",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$2020_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 2092,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2091,
														"name": "BytesSlot",
														"nameLocations": [
															"3492:9:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2020,
														"src": "3492:9:15"
													},
													"referencedDeclaration": 2020,
													"src": "3492:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$2020_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:21:15"
									},
									"scope": 2109,
									"src": "3433:186:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2107,
										"nodeType": "Block",
										"src": "3816:112:15",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3878:44:15",
													"nodeType": "YulBlock",
													"src": "3878:44:15",
													"statements": [
														{
															"nativeSrc": "3892:20:15",
															"nodeType": "YulAssignment",
															"src": "3892:20:15",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3902:10:15",
																"nodeType": "YulIdentifier",
																"src": "3902:10:15"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3892:6:15",
																	"nodeType": "YulIdentifier",
																	"src": "3892:6:15"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2104,
														"isOffset": false,
														"isSlot": true,
														"src": "3892:6:15",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2100,
														"isOffset": false,
														"isSlot": true,
														"src": "3902:10:15",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 2106,
												"nodeType": "InlineAssembly",
												"src": "3869:53:15"
											}
										]
									},
									"documentation": {
										"id": 2098,
										"nodeType": "StructuredDocumentation",
										"src": "3625:99:15",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 2108,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3738:12:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2101,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2100,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3765:5:15",
												"nodeType": "VariableDeclaration",
												"scope": 2108,
												"src": "3751:19:15",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2099,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3751:5:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3750:21:15"
									},
									"returnParameters": {
										"id": 2105,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2104,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3813:1:15",
												"nodeType": "VariableDeclaration",
												"scope": 2108,
												"src": "3795:19:15",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$2020_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 2103,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2102,
														"name": "BytesSlot",
														"nameLocations": [
															"3795:9:15"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 2020,
														"src": "3795:9:15"
													},
													"referencedDeclaration": 2020,
													"src": "3795:9:15",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$2020_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3794:21:15"
									},
									"scope": 2109,
									"src": "3729:199:15",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2110,
							"src": "1245:2685:15",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3738:15"
				},
				"id": 15
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2121
						]
					},
					"id": 2122,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2111,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:16"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2112,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:16",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 2121,
							"linearizedBaseContracts": [
								2121
							],
							"name": "IERC165",
							"nameLocation": "431:7:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2113,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:16",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2120,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2116,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2115,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 2120,
												"src": "817:18:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2114,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:16"
									},
									"returnParameters": {
										"id": 2119,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2118,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2120,
												"src": "860:4:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2117,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:16"
									},
									"scope": 2121,
									"src": "790:76:16",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2122,
							"src": "421:447:16",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:16"
				},
				"id": 16
			},
			"src/contract/CryptoQuestTheShardsOfGenesisWallet.sol": {
				"ast": {
					"absolutePath": "src/contract/CryptoQuestTheShardsOfGenesisWallet.sol",
					"exportedSymbols": {
						"AccessControlUpgradeable": [
							362
						],
						"ContextUpgradeable": [
							1288
						],
						"CryptoQuestTheShardsOfGenesisWallet": [
							2692
						],
						"ERC165Upgradeable": [
							1328
						],
						"ERC1967Utils": [
							1736
						],
						"IAccessControl": [
							1423
						],
						"IERC1155Upgradeable": [
							1048
						],
						"IERC165Upgradeable": [
							1340
						],
						"IERC1822Proxiable": [
							1433
						],
						"IERC20Upgradeable": [
							1126
						],
						"IERC721Upgradeable": [
							1242
						],
						"Initializable": [
							616
						],
						"PausableUpgradeable": [
							926
						],
						"UUPSUpgradeable": [
							798
						]
					},
					"id": 2693,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2123,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".19"
							],
							"nodeType": "PragmaDirective",
							"src": "32:24:17"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
							"id": 2124,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2693,
							"sourceUnit": 363,
							"src": "58:81:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/security/PausableUpgradeable.sol",
							"id": 2125,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2693,
							"sourceUnit": 927,
							"src": "140:78:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
							"id": 2126,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2693,
							"sourceUnit": 1127,
							"src": "219:79:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol",
							"id": 2127,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2693,
							"sourceUnit": 1243,
							"src": "299:81:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/token/ERC1155/IERC1155Upgradeable.sol",
							"id": 2128,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2693,
							"sourceUnit": 1049,
							"src": "381:83:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"id": 2129,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2693,
							"sourceUnit": 617,
							"src": "465:75:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"id": 2130,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2693,
							"sourceUnit": 799,
							"src": "541:77:17",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2131,
										"name": "Initializable",
										"nameLocations": [
											"668:13:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 616,
										"src": "668:13:17"
									},
									"id": 2132,
									"nodeType": "InheritanceSpecifier",
									"src": "668:13:17"
								},
								{
									"baseName": {
										"id": 2133,
										"name": "AccessControlUpgradeable",
										"nameLocations": [
											"683:24:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 362,
										"src": "683:24:17"
									},
									"id": 2134,
									"nodeType": "InheritanceSpecifier",
									"src": "683:24:17"
								},
								{
									"baseName": {
										"id": 2135,
										"name": "PausableUpgradeable",
										"nameLocations": [
											"709:19:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 926,
										"src": "709:19:17"
									},
									"id": 2136,
									"nodeType": "InheritanceSpecifier",
									"src": "709:19:17"
								},
								{
									"baseName": {
										"id": 2137,
										"name": "UUPSUpgradeable",
										"nameLocations": [
											"730:15:17"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 798,
										"src": "730:15:17"
									},
									"id": 2138,
									"nodeType": "InheritanceSpecifier",
									"src": "730:15:17"
								}
							],
							"canonicalName": "CryptoQuestTheShardsOfGenesisWallet",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 2692,
							"linearizedBaseContracts": [
								2692,
								798,
								1433,
								926,
								362,
								1328,
								2121,
								1423,
								1288,
								616
							],
							"name": "CryptoQuestTheShardsOfGenesisWallet",
							"nameLocation": "629:35:17",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "e63ab1e9",
									"id": 2143,
									"mutability": "constant",
									"name": "PAUSER_ROLE",
									"nameLocation": "776:11:17",
									"nodeType": "VariableDeclaration",
									"scope": 2692,
									"src": "752:62:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2139,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "752:7:17",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5041555345525f524f4c45",
												"id": 2141,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "800:13:17",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
													"typeString": "literal_string \"PAUSER_ROLE\""
												},
												"value": "PAUSER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
													"typeString": "literal_string \"PAUSER_ROLE\""
												}
											],
											"id": 2140,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "790:9:17",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 2142,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "790:24:17",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "75b238fc",
									"id": 2148,
									"mutability": "constant",
									"name": "ADMIN_ROLE",
									"nameLocation": "844:10:17",
									"nodeType": "VariableDeclaration",
									"scope": 2692,
									"src": "820:60:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2144,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "820:7:17",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "41444d494e5f524f4c45",
												"id": 2146,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "867:12:17",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
													"typeString": "literal_string \"ADMIN_ROLE\""
												},
												"value": "ADMIN_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_a49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c21775",
													"typeString": "literal_string \"ADMIN_ROLE\""
												}
											],
											"id": 2145,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "857:9:17",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 2147,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "857:23:17",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "f72c0d8b",
									"id": 2153,
									"mutability": "constant",
									"name": "UPGRADER_ROLE",
									"nameLocation": "910:13:17",
									"nodeType": "VariableDeclaration",
									"scope": 2692,
									"src": "886:66:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2149,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "886:7:17",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "55504752414445525f524f4c45",
												"id": 2151,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "936:15:17",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3",
													"typeString": "literal_string \"UPGRADER_ROLE\""
												},
												"value": "UPGRADER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3",
													"typeString": "literal_string \"UPGRADER_ROLE\""
												}
											],
											"id": 2150,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "926:9:17",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 2152,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "926:26:17",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "CryptoQuestTheShardsOfGenesisWallet.Transaction",
									"id": 2164,
									"members": [
										{
											"constant": false,
											"id": 2155,
											"mutability": "mutable",
											"name": "to",
											"nameLocation": "1042:2:17",
											"nodeType": "VariableDeclaration",
											"scope": 2164,
											"src": "1034:10:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 2154,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1034:7:17",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2157,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1062:5:17",
											"nodeType": "VariableDeclaration",
											"scope": 2164,
											"src": "1054:13:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2156,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1054:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2159,
											"mutability": "mutable",
											"name": "data",
											"nameLocation": "1083:4:17",
											"nodeType": "VariableDeclaration",
											"scope": 2164,
											"src": "1077:10:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 2158,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1077:5:17",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2161,
											"mutability": "mutable",
											"name": "executed",
											"nameLocation": "1102:8:17",
											"nodeType": "VariableDeclaration",
											"scope": 2164,
											"src": "1097:13:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 2160,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1097:4:17",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2163,
											"mutability": "mutable",
											"name": "numConfirmations",
											"nameLocation": "1128:16:17",
											"nodeType": "VariableDeclaration",
											"scope": 2164,
											"src": "1120:24:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2162,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1120:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Transaction",
									"nameLocation": "1012:11:17",
									"nodeType": "StructDefinition",
									"scope": 2692,
									"src": "1005:146:17",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "80f59a65",
									"id": 2170,
									"mutability": "mutable",
									"name": "isConfirmed",
									"nameLocation": "1209:11:17",
									"nodeType": "VariableDeclaration",
									"scope": 2692,
									"src": "1157:63:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
										"typeString": "mapping(uint256 => mapping(address => bool))"
									},
									"typeName": {
										"id": 2169,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2165,
											"name": "uint256",
											"nodeType": "ElementaryTypeName",
											"src": "1165:7:17",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											}
										},
										"nodeType": "Mapping",
										"src": "1157:44:17",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
											"typeString": "mapping(uint256 => mapping(address => bool))"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2168,
											"keyName": "",
											"keyNameLocation": "-1:-1:-1",
											"keyType": {
												"id": 2166,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1184:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"nodeType": "Mapping",
											"src": "1176:24:17",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"valueName": "",
											"valueNameLocation": "-1:-1:-1",
											"valueType": {
												"id": 2167,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1195:4:17",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "9ace38c2",
									"id": 2174,
									"mutability": "mutable",
									"name": "transactions",
									"nameLocation": "1247:12:17",
									"nodeType": "VariableDeclaration",
									"scope": 2692,
									"src": "1226:33:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_array$_t_struct$_Transaction_$2164_storage_$dyn_storage",
										"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Transaction[]"
									},
									"typeName": {
										"baseType": {
											"id": 2172,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2171,
												"name": "Transaction",
												"nameLocations": [
													"1226:11:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2164,
												"src": "1226:11:17"
											},
											"referencedDeclaration": 2164,
											"src": "1226:11:17",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Transaction_$2164_storage_ptr",
												"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Transaction"
											}
										},
										"id": 2173,
										"nodeType": "ArrayTypeName",
										"src": "1226:13:17",
										"typeDescriptions": {
											"typeIdentifier": "t_array$_t_struct$_Transaction_$2164_storage_$dyn_storage_ptr",
											"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Transaction[]"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "82e717f7",
									"id": 2176,
									"mutability": "mutable",
									"name": "requiredConfirmations",
									"nameLocation": "1280:21:17",
									"nodeType": "VariableDeclaration",
									"scope": 2692,
									"src": "1265:36:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2175,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1265:7:17",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "CryptoQuestTheShardsOfGenesisWallet.Stake",
									"id": 2181,
									"members": [
										{
											"constant": false,
											"id": 2178,
											"mutability": "mutable",
											"name": "amount",
											"nameLocation": "1365:6:17",
											"nodeType": "VariableDeclaration",
											"scope": 2181,
											"src": "1357:14:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2177,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1357:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2180,
											"mutability": "mutable",
											"name": "startTime",
											"nameLocation": "1389:9:17",
											"nodeType": "VariableDeclaration",
											"scope": 2181,
											"src": "1381:17:17",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2179,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1381:7:17",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Stake",
									"nameLocation": "1341:5:17",
									"nodeType": "StructDefinition",
									"scope": 2692,
									"src": "1334:71:17",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "16934fc4",
									"id": 2186,
									"mutability": "mutable",
									"name": "stakes",
									"nameLocation": "1444:6:17",
									"nodeType": "VariableDeclaration",
									"scope": 2692,
									"src": "1411:39:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$2181_storage_$",
										"typeString": "mapping(address => struct CryptoQuestTheShardsOfGenesisWallet.Stake)"
									},
									"typeName": {
										"id": 2185,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2182,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1419:7:17",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1411:25:17",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$2181_storage_$",
											"typeString": "mapping(address => struct CryptoQuestTheShardsOfGenesisWallet.Stake)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2184,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2183,
												"name": "Stake",
												"nameLocations": [
													"1430:5:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2181,
												"src": "1430:5:17"
											},
											"referencedDeclaration": 2181,
											"src": "1430:5:17",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_Stake_$2181_storage_ptr",
												"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Stake"
											}
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "c63a6ad2",
									"id": 2188,
									"mutability": "mutable",
									"name": "stakingRate",
									"nameLocation": "1471:11:17",
									"nodeType": "VariableDeclaration",
									"scope": 2692,
									"src": "1456:26:17",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2187,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "1456:7:17",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "d0b5d9eac097410294ec9f2cee7cd185cf31ab46babf3dfdbeac8b222b03f2d1",
									"id": 2192,
									"name": "TransactionSubmitted",
									"nameLocation": "1531:20:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2191,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2190,
												"indexed": true,
												"mutability": "mutable",
												"name": "txIndex",
												"nameLocation": "1568:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2192,
												"src": "1552:23:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2189,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1552:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1551:25:17"
									},
									"src": "1525:52:17"
								},
								{
									"anonymous": false,
									"eventSelector": "f8a17c9136a3ae33364fac05eb088a3cbafee10c1889c88593e20ee2d8e4eb88",
									"id": 2198,
									"name": "TransactionConfirmed",
									"nameLocation": "1588:20:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2197,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2194,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1625:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 2198,
												"src": "1609:21:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2193,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1609:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2196,
												"indexed": true,
												"mutability": "mutable",
												"name": "txIndex",
												"nameLocation": "1648:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2198,
												"src": "1632:23:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2195,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1632:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1608:48:17"
									},
									"src": "1582:75:17"
								},
								{
									"anonymous": false,
									"eventSelector": "15ed165a284872ea7017f03df402a0cadfbfab588320ffaf83f160c2f82781c7",
									"id": 2202,
									"name": "TransactionExecuted",
									"nameLocation": "1668:19:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2201,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2200,
												"indexed": true,
												"mutability": "mutable",
												"name": "txIndex",
												"nameLocation": "1704:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2202,
												"src": "1688:23:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2199,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1688:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1687:25:17"
									},
									"src": "1662:51:17"
								},
								{
									"anonymous": false,
									"eventSelector": "e5c8875c5e14471f806f15f740cd9fd54937d151e9dcf8ad3ba988d6a285e67e",
									"id": 2208,
									"name": "TransactionRevoked",
									"nameLocation": "1724:18:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2207,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2204,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1759:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 2208,
												"src": "1743:21:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2203,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1743:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2206,
												"indexed": true,
												"mutability": "mutable",
												"name": "txIndex",
												"nameLocation": "1782:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2208,
												"src": "1766:23:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2205,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1766:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1742:48:17"
									},
									"src": "1718:73:17"
								},
								{
									"anonymous": false,
									"eventSelector": "dd2a19c3bdd089cbe77c04f5655f83de0504d6140d12c8667646f55d0557c4dc",
									"id": 2216,
									"name": "TokensStaked",
									"nameLocation": "1802:12:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2210,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1831:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 2216,
												"src": "1815:20:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2209,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1815:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2212,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1845:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 2216,
												"src": "1837:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2211,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1837:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2214,
												"indexed": false,
												"mutability": "mutable",
												"name": "startTime",
												"nameLocation": "1861:9:17",
												"nodeType": "VariableDeclaration",
												"scope": 2216,
												"src": "1853:17:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2213,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1853:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1814:57:17"
									},
									"src": "1796:76:17"
								},
								{
									"anonymous": false,
									"eventSelector": "6f2d3e000c89d37446b7c0374c0125068ff316d1e3ee302336478a8cd03c2336",
									"id": 2224,
									"name": "TokensUnstaked",
									"nameLocation": "1883:14:17",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2223,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2218,
												"indexed": true,
												"mutability": "mutable",
												"name": "user",
												"nameLocation": "1914:4:17",
												"nodeType": "VariableDeclaration",
												"scope": 2224,
												"src": "1898:20:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2217,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1898:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2220,
												"indexed": false,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1928:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 2224,
												"src": "1920:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2219,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1920:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2222,
												"indexed": false,
												"mutability": "mutable",
												"name": "reward",
												"nameLocation": "1944:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 2224,
												"src": "1936:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2221,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1936:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1897:54:17"
									},
									"src": "1877:75:17"
								},
								{
									"body": {
										"id": 2231,
										"nodeType": "Block",
										"src": "2025:39:17",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2228,
														"name": "_disableInitializers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "2035:20:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2035:22:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2230,
												"nodeType": "ExpressionStatement",
												"src": "2035:22:17"
											}
										]
									},
									"documentation": {
										"id": 2225,
										"nodeType": "StructuredDocumentation",
										"src": "1958:48:17",
										"text": "@custom:oz-upgrades-unsafe-allow constructor"
									},
									"id": 2232,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2226,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2022:2:17"
									},
									"returnParameters": {
										"id": 2227,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2025:0:17"
									},
									"scope": 2692,
									"src": "2011:53:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2280,
										"nodeType": "Block",
										"src": "2178:362:17",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2243,
														"name": "__AccessControl_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 63,
														"src": "2188:20:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2188:22:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2245,
												"nodeType": "ExpressionStatement",
												"src": "2188:22:17"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2246,
														"name": "__Pausable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 830,
														"src": "2220:15:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2247,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2220:17:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2248,
												"nodeType": "ExpressionStatement",
												"src": "2220:17:17"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2249,
														"name": "__UUPSUpgradeable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 670,
														"src": "2247:22:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2247:24:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2251,
												"nodeType": "ExpressionStatement",
												"src": "2247:24:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2253,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "2293:18:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2254,
															"name": "admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2234,
															"src": "2313:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2252,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "2282:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 2255,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2282:37:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2256,
												"nodeType": "ExpressionStatement",
												"src": "2282:37:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2258,
															"name": "PAUSER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2143,
															"src": "2340:11:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2259,
															"name": "admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2234,
															"src": "2353:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2257,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "2329:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 2260,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2329:30:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2261,
												"nodeType": "ExpressionStatement",
												"src": "2329:30:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2263,
															"name": "ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2148,
															"src": "2380:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2264,
															"name": "admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2234,
															"src": "2392:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2262,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "2369:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 2265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2369:29:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2266,
												"nodeType": "ExpressionStatement",
												"src": "2369:29:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2268,
															"name": "UPGRADER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2153,
															"src": "2419:13:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2269,
															"name": "admin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2234,
															"src": "2434:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2267,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "2408:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 2270,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2408:32:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2271,
												"nodeType": "ExpressionStatement",
												"src": "2408:32:17"
											},
											{
												"expression": {
													"id": 2274,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2272,
														"name": "requiredConfirmations",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2176,
														"src": "2451:21:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2273,
														"name": "_requiredConfirmations",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2236,
														"src": "2475:22:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2451:46:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2275,
												"nodeType": "ExpressionStatement",
												"src": "2451:46:17"
											},
											{
												"expression": {
													"id": 2278,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2276,
														"name": "stakingRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2188,
														"src": "2507:11:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2277,
														"name": "_stakingRate",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2238,
														"src": "2521:12:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "2507:26:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2279,
												"nodeType": "ExpressionStatement",
												"src": "2507:26:17"
											}
										]
									},
									"functionSelector": "7a1ac61e",
									"id": 2281,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2241,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2240,
												"name": "initializer",
												"nameLocations": [
													"2159:11:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 470,
												"src": "2159:11:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "2159:11:17"
										}
									],
									"name": "initialize",
									"nameLocation": "2079:10:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2239,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2234,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "2098:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 2281,
												"src": "2090:13:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2233,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2090:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2236,
												"mutability": "mutable",
												"name": "_requiredConfirmations",
												"nameLocation": "2113:22:17",
												"nodeType": "VariableDeclaration",
												"scope": 2281,
												"src": "2105:30:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2235,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2105:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2238,
												"mutability": "mutable",
												"name": "_stakingRate",
												"nameLocation": "2145:12:17",
												"nodeType": "VariableDeclaration",
												"scope": 2281,
												"src": "2137:20:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2237,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2137:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2089:69:17"
									},
									"returnParameters": {
										"id": 2242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2178:0:17"
									},
									"scope": 2692,
									"src": "2070:470:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2293,
										"nodeType": "Block",
										"src": "2567:84:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2285,
																	"name": "ADMIN_ROLE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2148,
																	"src": "2593:10:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																},
																{
																	"expression": {
																		"id": 2286,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "2605:3:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2287,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "2609:6:17",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "2605:10:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2284,
																"name": "hasRole",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 116,
																"src": "2585:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																	"typeString": "function (bytes32,address) view returns (bool)"
																}
															},
															"id": 2288,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2585:31:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f7420616e2061646d696e",
															"id": 2289,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2618:14:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_5f53099e044b88c99cc014ede5713cfdba96d95b088c34d5fa4406866af6c250",
																"typeString": "literal_string \"Not an admin\""
															},
															"value": "Not an admin"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_5f53099e044b88c99cc014ede5713cfdba96d95b088c34d5fa4406866af6c250",
																"typeString": "literal_string \"Not an admin\""
															}
														],
														"id": 2283,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2577:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2290,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2577:56:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2291,
												"nodeType": "ExpressionStatement",
												"src": "2577:56:17"
											},
											{
												"id": 2292,
												"nodeType": "PlaceholderStatement",
												"src": "2643:1:17"
											}
										]
									},
									"id": 2294,
									"name": "onlyAdmin",
									"nameLocation": "2555:9:17",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2282,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2564:2:17"
									},
									"src": "2546:105:17",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2307,
										"nodeType": "Block",
										"src": "2693:97:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2302,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2299,
																"name": "_txIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2296,
																"src": "2711:8:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "<",
															"rightExpression": {
																"expression": {
																	"id": 2300,
																	"name": "transactions",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2174,
																	"src": "2722:12:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_array$_t_struct$_Transaction_$2164_storage_$dyn_storage",
																		"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Transaction storage ref[] storage ref"
																	}
																},
																"id": 2301,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2735:6:17",
																"memberName": "length",
																"nodeType": "MemberAccess",
																"src": "2722:19:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "2711:30:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73616374696f6e20646f6573206e6f74206578697374",
															"id": 2303,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2743:28:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_cb323e46bbcca91e157c2b50ad4ce2acbe1153338b838c84372d5723b8995ef0",
																"typeString": "literal_string \"Transaction does not exist\""
															},
															"value": "Transaction does not exist"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_cb323e46bbcca91e157c2b50ad4ce2acbe1153338b838c84372d5723b8995ef0",
																"typeString": "literal_string \"Transaction does not exist\""
															}
														],
														"id": 2298,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2703:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2304,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2703:69:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2305,
												"nodeType": "ExpressionStatement",
												"src": "2703:69:17"
											},
											{
												"id": 2306,
												"nodeType": "PlaceholderStatement",
												"src": "2782:1:17"
											}
										]
									},
									"id": 2308,
									"name": "txExists",
									"nameLocation": "2666:8:17",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2297,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2296,
												"mutability": "mutable",
												"name": "_txIndex",
												"nameLocation": "2683:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 2308,
												"src": "2675:16:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2295,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2675:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2674:18:17"
									},
									"src": "2657:133:17",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2322,
										"nodeType": "Block",
										"src": "2835:101:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2317,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "2853:32:17",
															"subExpression": {
																"expression": {
																	"baseExpression": {
																		"id": 2313,
																		"name": "transactions",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2174,
																		"src": "2854:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_array$_t_struct$_Transaction_$2164_storage_$dyn_storage",
																			"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Transaction storage ref[] storage ref"
																		}
																	},
																	"id": 2315,
																	"indexExpression": {
																		"id": 2314,
																		"name": "_txIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2310,
																		"src": "2867:8:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "2854:22:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Transaction_$2164_storage",
																		"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Transaction storage ref"
																	}
																},
																"id": 2316,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2877:8:17",
																"memberName": "executed",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2161,
																"src": "2854:31:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73616374696f6e20616c7265616479206578656375746564",
															"id": 2318,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2887:30:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_3c3f7cf602281cf7a98efd78d98ba46309975dadee18bcb57e640145699bd800",
																"typeString": "literal_string \"Transaction already executed\""
															},
															"value": "Transaction already executed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_3c3f7cf602281cf7a98efd78d98ba46309975dadee18bcb57e640145699bd800",
																"typeString": "literal_string \"Transaction already executed\""
															}
														],
														"id": 2312,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2845:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2319,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2845:73:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2320,
												"nodeType": "ExpressionStatement",
												"src": "2845:73:17"
											},
											{
												"id": 2321,
												"nodeType": "PlaceholderStatement",
												"src": "2928:1:17"
											}
										]
									},
									"id": 2323,
									"name": "notExecuted",
									"nameLocation": "2805:11:17",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2311,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2310,
												"mutability": "mutable",
												"name": "_txIndex",
												"nameLocation": "2825:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 2323,
												"src": "2817:16:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2309,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2817:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2816:18:17"
									},
									"src": "2796:140:17",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2339,
										"nodeType": "Block",
										"src": "2982:104:17",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 2334,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "3000:34:17",
															"subExpression": {
																"baseExpression": {
																	"baseExpression": {
																		"id": 2328,
																		"name": "isConfirmed",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2170,
																		"src": "3001:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
																			"typeString": "mapping(uint256 => mapping(address => bool))"
																		}
																	},
																	"id": 2330,
																	"indexExpression": {
																		"id": 2329,
																		"name": "_txIndex",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2325,
																		"src": "3013:8:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "IndexAccess",
																	"src": "3001:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																		"typeString": "mapping(address => bool)"
																	}
																},
																"id": 2333,
																"indexExpression": {
																	"expression": {
																		"id": 2331,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3023:3:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2332,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3027:6:17",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "3023:10:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "3001:33:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73616374696f6e20616c726561647920636f6e6669726d6564",
															"id": 2335,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "3036:31:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c00ff6506fc53457ae4202871882703dada01c533275bb259e2cd12acaf31a69",
																"typeString": "literal_string \"Transaction already confirmed\""
															},
															"value": "Transaction already confirmed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c00ff6506fc53457ae4202871882703dada01c533275bb259e2cd12acaf31a69",
																"typeString": "literal_string \"Transaction already confirmed\""
															}
														],
														"id": 2327,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2992:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2336,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2992:76:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2337,
												"nodeType": "ExpressionStatement",
												"src": "2992:76:17"
											},
											{
												"id": 2338,
												"nodeType": "PlaceholderStatement",
												"src": "3078:1:17"
											}
										]
									},
									"id": 2340,
									"name": "notConfirmed",
									"nameLocation": "2951:12:17",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 2326,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2325,
												"mutability": "mutable",
												"name": "_txIndex",
												"nameLocation": "2972:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 2340,
												"src": "2964:16:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2324,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2964:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2963:18:17"
									},
									"src": "2942:144:17",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2372,
										"nodeType": "Block",
										"src": "3185:287:17",
										"statements": [
											{
												"assignments": [
													2352
												],
												"declarations": [
													{
														"constant": false,
														"id": 2352,
														"mutability": "mutable",
														"name": "txIndex",
														"nameLocation": "3203:7:17",
														"nodeType": "VariableDeclaration",
														"scope": 2372,
														"src": "3195:15:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2351,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3195:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2355,
												"initialValue": {
													"expression": {
														"id": 2353,
														"name": "transactions",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2174,
														"src": "3213:12:17",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Transaction_$2164_storage_$dyn_storage",
															"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Transaction storage ref[] storage ref"
														}
													},
													"id": 2354,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3226:6:17",
													"memberName": "length",
													"nodeType": "MemberAccess",
													"src": "3213:19:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3195:37:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2360,
																	"name": "_to",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2342,
																	"src": "3291:3:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2361,
																	"name": "_value",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2344,
																	"src": "3315:6:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																{
																	"id": 2362,
																	"name": "_data",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2346,
																	"src": "3341:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	}
																},
																{
																	"hexValue": "66616c7365",
																	"id": 2363,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3370:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																{
																	"hexValue": "30",
																	"id": 2364,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "3407:1:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	{
																		"typeIdentifier": "t_bytes_memory_ptr",
																		"typeString": "bytes memory"
																	},
																	{
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	{
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	}
																],
																"id": 2359,
																"name": "Transaction",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2164,
																"src": "3261:11:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_struct$_Transaction_$2164_storage_ptr_$",
																	"typeString": "type(struct CryptoQuestTheShardsOfGenesisWallet.Transaction storage pointer)"
																}
															},
															"id": 2365,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "structConstructorCall",
															"lValueRequested": false,
															"nameLocations": [
																"3287:2:17",
																"3308:5:17",
																"3335:4:17",
																"3360:8:17",
																"3389:16:17"
															],
															"names": [
																"to",
																"value",
																"data",
																"executed",
																"numConfirmations"
															],
															"nodeType": "FunctionCall",
															"src": "3261:158:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Transaction_$2164_memory_ptr",
																"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Transaction memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_struct$_Transaction_$2164_memory_ptr",
																"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Transaction memory"
															}
														],
														"expression": {
															"id": 2356,
															"name": "transactions",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2174,
															"src": "3243:12:17",
															"typeDescriptions": {
																"typeIdentifier": "t_array$_t_struct$_Transaction_$2164_storage_$dyn_storage",
																"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Transaction storage ref[] storage ref"
															}
														},
														"id": 2358,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3256:4:17",
														"memberName": "push",
														"nodeType": "MemberAccess",
														"src": "3243:17:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Transaction_$2164_storage_$dyn_storage_ptr_$_t_struct$_Transaction_$2164_storage_$returns$__$attached_to$_t_array$_t_struct$_Transaction_$2164_storage_$dyn_storage_ptr_$",
															"typeString": "function (struct CryptoQuestTheShardsOfGenesisWallet.Transaction storage ref[] storage pointer,struct CryptoQuestTheShardsOfGenesisWallet.Transaction storage ref)"
														}
													},
													"id": 2366,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3243:177:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2367,
												"nodeType": "ExpressionStatement",
												"src": "3243:177:17"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2369,
															"name": "txIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2352,
															"src": "3457:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2368,
														"name": "TransactionSubmitted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2192,
														"src": "3436:20:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2370,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3436:29:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2371,
												"nodeType": "EmitStatement",
												"src": "3431:34:17"
											}
										]
									},
									"functionSelector": "c6427474",
									"id": 2373,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2349,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2348,
												"name": "onlyAdmin",
												"nameLocations": [
													"3175:9:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2294,
												"src": "3175:9:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "3175:9:17"
										}
									],
									"name": "submitTransaction",
									"nameLocation": "3101:17:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2347,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2342,
												"mutability": "mutable",
												"name": "_to",
												"nameLocation": "3127:3:17",
												"nodeType": "VariableDeclaration",
												"scope": 2373,
												"src": "3119:11:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2341,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3119:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2344,
												"mutability": "mutable",
												"name": "_value",
												"nameLocation": "3140:6:17",
												"nodeType": "VariableDeclaration",
												"scope": 2373,
												"src": "3132:14:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2343,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3132:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2346,
												"mutability": "mutable",
												"name": "_data",
												"nameLocation": "3161:5:17",
												"nodeType": "VariableDeclaration",
												"scope": 2373,
												"src": "3148:18:17",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2345,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3148:5:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3118:49:17"
									},
									"returnParameters": {
										"id": 2350,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3185:0:17"
									},
									"scope": 2692,
									"src": "3092:380:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2417,
										"nodeType": "Block",
										"src": "3649:224:17",
										"statements": [
											{
												"assignments": [
													2391
												],
												"declarations": [
													{
														"constant": false,
														"id": 2391,
														"mutability": "mutable",
														"name": "transaction",
														"nameLocation": "3679:11:17",
														"nodeType": "VariableDeclaration",
														"scope": 2417,
														"src": "3659:31:17",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Transaction_$2164_storage_ptr",
															"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Transaction"
														},
														"typeName": {
															"id": 2390,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2389,
																"name": "Transaction",
																"nameLocations": [
																	"3659:11:17"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2164,
																"src": "3659:11:17"
															},
															"referencedDeclaration": 2164,
															"src": "3659:11:17",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Transaction_$2164_storage_ptr",
																"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Transaction"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2395,
												"initialValue": {
													"baseExpression": {
														"id": 2392,
														"name": "transactions",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2174,
														"src": "3693:12:17",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Transaction_$2164_storage_$dyn_storage",
															"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Transaction storage ref[] storage ref"
														}
													},
													"id": 2394,
													"indexExpression": {
														"id": 2393,
														"name": "_txIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2375,
														"src": "3706:8:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3693:22:17",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Transaction_$2164_storage",
														"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Transaction storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3659:56:17"
											},
											{
												"expression": {
													"id": 2400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2396,
															"name": "transaction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2391,
															"src": "3725:11:17",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Transaction_$2164_storage_ptr",
																"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Transaction storage pointer"
															}
														},
														"id": 2398,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3737:16:17",
														"memberName": "numConfirmations",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2163,
														"src": "3725:28:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 2399,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3757:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "3725:33:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2401,
												"nodeType": "ExpressionStatement",
												"src": "3725:33:17"
											},
											{
												"expression": {
													"id": 2409,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2402,
																"name": "isConfirmed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2170,
																"src": "3768:11:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(uint256 => mapping(address => bool))"
																}
															},
															"id": 2406,
															"indexExpression": {
																"id": 2403,
																"name": "_txIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2375,
																"src": "3780:8:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3768:21:17",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2407,
														"indexExpression": {
															"expression": {
																"id": 2404,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3790:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2405,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3794:6:17",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3790:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3768:33:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2408,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3804:4:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3768:40:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2410,
												"nodeType": "ExpressionStatement",
												"src": "3768:40:17"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2412,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3845:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2413,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3849:6:17",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3845:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2414,
															"name": "_txIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2375,
															"src": "3857:8:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2411,
														"name": "TransactionConfirmed",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2198,
														"src": "3824:20:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2415,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3824:42:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2416,
												"nodeType": "EmitStatement",
												"src": "3819:47:17"
											}
										]
									},
									"functionSelector": "c01a8c84",
									"id": 2418,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2378,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2377,
												"name": "onlyAdmin",
												"nameLocations": [
													"3547:9:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2294,
												"src": "3547:9:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "3547:9:17"
										},
										{
											"arguments": [
												{
													"id": 2380,
													"name": "_txIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2375,
													"src": "3574:8:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 2381,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2379,
												"name": "txExists",
												"nameLocations": [
													"3565:8:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2308,
												"src": "3565:8:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "3565:18:17"
										},
										{
											"arguments": [
												{
													"id": 2383,
													"name": "_txIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2375,
													"src": "3604:8:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 2384,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2382,
												"name": "notExecuted",
												"nameLocations": [
													"3592:11:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2323,
												"src": "3592:11:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "3592:21:17"
										},
										{
											"arguments": [
												{
													"id": 2386,
													"name": "_txIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2375,
													"src": "3635:8:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 2387,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2385,
												"name": "notConfirmed",
												"nameLocations": [
													"3622:12:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2340,
												"src": "3622:12:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "3622:22:17"
										}
									],
									"name": "confirmTransaction",
									"nameLocation": "3487:18:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2376,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2375,
												"mutability": "mutable",
												"name": "_txIndex",
												"nameLocation": "3514:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 2418,
												"src": "3506:16:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2374,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3506:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3505:18:17"
									},
									"returnParameters": {
										"id": 2388,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3649:0:17"
									},
									"scope": 2692,
									"src": "3478:395:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2473,
										"nodeType": "Block",
										"src": "3983:391:17",
										"statements": [
											{
												"assignments": [
													2433
												],
												"declarations": [
													{
														"constant": false,
														"id": 2433,
														"mutability": "mutable",
														"name": "transaction",
														"nameLocation": "4013:11:17",
														"nodeType": "VariableDeclaration",
														"scope": 2473,
														"src": "3993:31:17",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Transaction_$2164_storage_ptr",
															"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Transaction"
														},
														"typeName": {
															"id": 2432,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2431,
																"name": "Transaction",
																"nameLocations": [
																	"3993:11:17"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2164,
																"src": "3993:11:17"
															},
															"referencedDeclaration": 2164,
															"src": "3993:11:17",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Transaction_$2164_storage_ptr",
																"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Transaction"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2437,
												"initialValue": {
													"baseExpression": {
														"id": 2434,
														"name": "transactions",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2174,
														"src": "4027:12:17",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Transaction_$2164_storage_$dyn_storage",
															"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Transaction storage ref[] storage ref"
														}
													},
													"id": 2436,
													"indexExpression": {
														"id": 2435,
														"name": "_txIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2420,
														"src": "4040:8:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4027:22:17",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Transaction_$2164_storage",
														"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Transaction storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3993:56:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2442,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2439,
																	"name": "transaction",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2433,
																	"src": "4068:11:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Transaction_$2164_storage_ptr",
																		"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Transaction storage pointer"
																	}
																},
																"id": 2440,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4080:16:17",
																"memberName": "numConfirmations",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2163,
																"src": "4068:28:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2441,
																"name": "requiredConfirmations",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2176,
																"src": "4100:21:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4068:53:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "43616e6e6f742065786563757465207478",
															"id": 2443,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4123:19:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_7e54dddc19fe041cd2ab5a676b9022929cd57fae1ef2ef044dff489da7dfdd60",
																"typeString": "literal_string \"Cannot execute tx\""
															},
															"value": "Cannot execute tx"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_7e54dddc19fe041cd2ab5a676b9022929cd57fae1ef2ef044dff489da7dfdd60",
																"typeString": "literal_string \"Cannot execute tx\""
															}
														],
														"id": 2438,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4060:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4060:83:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2445,
												"nodeType": "ExpressionStatement",
												"src": "4060:83:17"
											},
											{
												"expression": {
													"id": 2450,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2446,
															"name": "transaction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2433,
															"src": "4154:11:17",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Transaction_$2164_storage_ptr",
																"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Transaction storage pointer"
															}
														},
														"id": 2448,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4166:8:17",
														"memberName": "executed",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2161,
														"src": "4154:20:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 2449,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4177:4:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "4154:27:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2451,
												"nodeType": "ExpressionStatement",
												"src": "4154:27:17"
											},
											{
												"assignments": [
													2453,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 2453,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4198:7:17",
														"nodeType": "VariableDeclaration",
														"scope": 2473,
														"src": "4193:12:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 2452,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4193:4:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 2463,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2460,
																"name": "transaction",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2433,
																"src": "4257:11:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Transaction_$2164_storage_ptr",
																	"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Transaction storage pointer"
																}
															},
															"id": 2461,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4269:4:17",
															"memberName": "data",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2159,
															"src": "4257:16:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage",
																"typeString": "bytes storage ref"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_storage",
																"typeString": "bytes storage ref"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_storage",
																	"typeString": "bytes storage ref"
																}
															],
															"expression": {
																"expression": {
																	"id": 2454,
																	"name": "transaction",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2433,
																	"src": "4211:11:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Transaction_$2164_storage_ptr",
																		"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Transaction storage pointer"
																	}
																},
																"id": 2455,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4223:2:17",
																"memberName": "to",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2155,
																"src": "4211:14:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2456,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4226:4:17",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "4211:19:17",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 2459,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"expression": {
																	"id": 2457,
																	"name": "transaction",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2433,
																	"src": "4238:11:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Transaction_$2164_storage_ptr",
																		"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Transaction storage pointer"
																	}
																},
																"id": 2458,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4250:5:17",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2157,
																"src": "4238:17:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "4211:45:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 2462,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4211:63:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4192:82:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2465,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2453,
															"src": "4292:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73616374696f6e206661696c6564",
															"id": 2466,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4301:20:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c49f60e918d4d07c4337a420c2afcf7054eea7f9d81d8862809229abad6c8588",
																"typeString": "literal_string \"Transaction failed\""
															},
															"value": "Transaction failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c49f60e918d4d07c4337a420c2afcf7054eea7f9d81d8862809229abad6c8588",
																"typeString": "literal_string \"Transaction failed\""
															}
														],
														"id": 2464,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4284:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2467,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4284:38:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2468,
												"nodeType": "ExpressionStatement",
												"src": "4284:38:17"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 2470,
															"name": "_txIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2420,
															"src": "4358:8:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2469,
														"name": "TransactionExecuted",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2202,
														"src": "4338:19:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2471,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4338:29:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2472,
												"nodeType": "EmitStatement",
												"src": "4333:34:17"
											}
										]
									},
									"functionSelector": "ee22610b",
									"id": 2474,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2423,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2422,
												"name": "onlyAdmin",
												"nameLocations": [
													"3932:9:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2294,
												"src": "3932:9:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "3932:9:17"
										},
										{
											"arguments": [
												{
													"id": 2425,
													"name": "_txIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2420,
													"src": "3951:8:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 2426,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2424,
												"name": "txExists",
												"nameLocations": [
													"3942:8:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2308,
												"src": "3942:8:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "3942:18:17"
										},
										{
											"arguments": [
												{
													"id": 2428,
													"name": "_txIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2420,
													"src": "3973:8:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 2429,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2427,
												"name": "notExecuted",
												"nameLocations": [
													"3961:11:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2323,
												"src": "3961:11:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "3961:21:17"
										}
									],
									"name": "executeTransaction",
									"nameLocation": "3888:18:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2421,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2420,
												"mutability": "mutable",
												"name": "_txIndex",
												"nameLocation": "3915:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 2474,
												"src": "3907:16:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2419,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3907:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3906:18:17"
									},
									"returnParameters": {
										"id": 2430,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3983:0:17"
									},
									"scope": 2692,
									"src": "3879:495:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2525,
										"nodeType": "Block",
										"src": "4484:306:17",
										"statements": [
											{
												"assignments": [
													2489
												],
												"declarations": [
													{
														"constant": false,
														"id": 2489,
														"mutability": "mutable",
														"name": "transaction",
														"nameLocation": "4514:11:17",
														"nodeType": "VariableDeclaration",
														"scope": 2525,
														"src": "4494:31:17",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Transaction_$2164_storage_ptr",
															"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Transaction"
														},
														"typeName": {
															"id": 2488,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2487,
																"name": "Transaction",
																"nameLocations": [
																	"4494:11:17"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2164,
																"src": "4494:11:17"
															},
															"referencedDeclaration": 2164,
															"src": "4494:11:17",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Transaction_$2164_storage_ptr",
																"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Transaction"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2493,
												"initialValue": {
													"baseExpression": {
														"id": 2490,
														"name": "transactions",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2174,
														"src": "4528:12:17",
														"typeDescriptions": {
															"typeIdentifier": "t_array$_t_struct$_Transaction_$2164_storage_$dyn_storage",
															"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Transaction storage ref[] storage ref"
														}
													},
													"id": 2492,
													"indexExpression": {
														"id": 2491,
														"name": "_txIndex",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2476,
														"src": "4541:8:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4528:22:17",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Transaction_$2164_storage",
														"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Transaction storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4494:56:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"baseExpression": {
																"baseExpression": {
																	"id": 2495,
																	"name": "isConfirmed",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2170,
																	"src": "4569:11:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
																		"typeString": "mapping(uint256 => mapping(address => bool))"
																	}
																},
																"id": 2497,
																"indexExpression": {
																	"id": 2496,
																	"name": "_txIndex",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2476,
																	"src": "4581:8:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4569:21:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																	"typeString": "mapping(address => bool)"
																}
															},
															"id": 2500,
															"indexExpression": {
																"expression": {
																	"id": 2498,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4591:3:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2499,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4595:6:17",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "4591:10:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4569:33:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "5472616e73616374696f6e206e6f7420636f6e6669726d6564",
															"id": 2501,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4604:27:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_e3d0a597e455a5df21f74650a7518ab8d226371e3763bb9c00413fb3af8193f2",
																"typeString": "literal_string \"Transaction not confirmed\""
															},
															"value": "Transaction not confirmed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_e3d0a597e455a5df21f74650a7518ab8d226371e3763bb9c00413fb3af8193f2",
																"typeString": "literal_string \"Transaction not confirmed\""
															}
														],
														"id": 2494,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4561:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2502,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4561:71:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2503,
												"nodeType": "ExpressionStatement",
												"src": "4561:71:17"
											},
											{
												"expression": {
													"id": 2508,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2504,
															"name": "transaction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2489,
															"src": "4643:11:17",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Transaction_$2164_storage_ptr",
																"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Transaction storage pointer"
															}
														},
														"id": 2506,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4655:16:17",
														"memberName": "numConfirmations",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2163,
														"src": "4643:28:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 2507,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4675:1:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4643:33:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2509,
												"nodeType": "ExpressionStatement",
												"src": "4643:33:17"
											},
											{
												"expression": {
													"id": 2517,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"baseExpression": {
																"id": 2510,
																"name": "isConfirmed",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2170,
																"src": "4686:11:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$",
																	"typeString": "mapping(uint256 => mapping(address => bool))"
																}
															},
															"id": 2514,
															"indexExpression": {
																"id": 2511,
																"name": "_txIndex",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2476,
																"src": "4698:8:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "4686:21:17",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																"typeString": "mapping(address => bool)"
															}
														},
														"id": 2515,
														"indexExpression": {
															"expression": {
																"id": 2512,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4708:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4712:6:17",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4708:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4686:33:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 2516,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4722:5:17",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "4686:41:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2518,
												"nodeType": "ExpressionStatement",
												"src": "4686:41:17"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2520,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4762:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2521,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4766:6:17",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4762:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2522,
															"name": "_txIndex",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2476,
															"src": "4774:8:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2519,
														"name": "TransactionRevoked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2208,
														"src": "4743:18:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256)"
														}
													},
													"id": 2523,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4743:40:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2524,
												"nodeType": "EmitStatement",
												"src": "4738:45:17"
											}
										]
									},
									"functionSelector": "20ea8d86",
									"id": 2526,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2479,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2478,
												"name": "onlyAdmin",
												"nameLocations": [
													"4433:9:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2294,
												"src": "4433:9:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "4433:9:17"
										},
										{
											"arguments": [
												{
													"id": 2481,
													"name": "_txIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2476,
													"src": "4452:8:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 2482,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2480,
												"name": "txExists",
												"nameLocations": [
													"4443:8:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2308,
												"src": "4443:8:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "4443:18:17"
										},
										{
											"arguments": [
												{
													"id": 2484,
													"name": "_txIndex",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2476,
													"src": "4474:8:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											],
											"id": 2485,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2483,
												"name": "notExecuted",
												"nameLocations": [
													"4462:11:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2323,
												"src": "4462:11:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "4462:21:17"
										}
									],
									"name": "revokeConfirmation",
									"nameLocation": "4389:18:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2477,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2476,
												"mutability": "mutable",
												"name": "_txIndex",
												"nameLocation": "4416:8:17",
												"nodeType": "VariableDeclaration",
												"scope": 2526,
												"src": "4408:16:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2475,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4408:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4407:18:17"
									},
									"returnParameters": {
										"id": 2486,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4484:0:17"
									},
									"scope": 2692,
									"src": "4380:410:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2576,
										"nodeType": "Block",
										"src": "4884:357:17",
										"statements": [
											{
												"assignments": [
													2535
												],
												"declarations": [
													{
														"constant": false,
														"id": 2535,
														"mutability": "mutable",
														"name": "token",
														"nameLocation": "4912:5:17",
														"nodeType": "VariableDeclaration",
														"scope": 2576,
														"src": "4894:23:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Upgradeable_$1126",
															"typeString": "contract IERC20Upgradeable"
														},
														"typeName": {
															"id": 2534,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2533,
																"name": "IERC20Upgradeable",
																"nameLocations": [
																	"4894:17:17"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1126,
																"src": "4894:17:17"
															},
															"referencedDeclaration": 1126,
															"src": "4894:17:17",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$1126",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2542,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2539,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4946:4:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_CryptoQuestTheShardsOfGenesisWallet_$2692",
																		"typeString": "contract CryptoQuestTheShardsOfGenesisWallet"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_CryptoQuestTheShardsOfGenesisWallet_$2692",
																		"typeString": "contract CryptoQuestTheShardsOfGenesisWallet"
																	}
																],
																"id": 2538,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4938:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2537,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4938:7:17",
																	"typeDescriptions": {}
																}
															},
															"id": 2540,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4938:13:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2536,
														"name": "IERC20Upgradeable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1126,
														"src": "4920:17:17",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$1126_$",
															"typeString": "type(contract IERC20Upgradeable)"
														}
													},
													"id": 2541,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4920:32:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$1126",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4894:58:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 2546,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4989:3:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2547,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4993:6:17",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4989:10:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"arguments": [
																		{
																			"id": 2550,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "5009:4:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_CryptoQuestTheShardsOfGenesisWallet_$2692",
																				"typeString": "contract CryptoQuestTheShardsOfGenesisWallet"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_CryptoQuestTheShardsOfGenesisWallet_$2692",
																				"typeString": "contract CryptoQuestTheShardsOfGenesisWallet"
																			}
																		],
																		"id": 2549,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "5001:7:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2548,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "5001:7:17",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2551,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "5001:13:17",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"id": 2552,
																	"name": "_amount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2528,
																	"src": "5016:7:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2544,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2535,
																	"src": "4970:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$1126",
																		"typeString": "contract IERC20Upgradeable"
																	}
																},
																"id": 2545,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4976:12:17",
																"memberName": "transferFrom",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1125,
																"src": "4970:18:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,address,uint256) external returns (bool)"
																}
															},
															"id": 2553,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4970:54:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e207472616e73666572206661696c6564",
															"id": 2554,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5026:23:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																"typeString": "literal_string \"Token transfer failed\""
															},
															"value": "Token transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																"typeString": "literal_string \"Token transfer failed\""
															}
														],
														"id": 2543,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4962:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2555,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4962:88:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2556,
												"nodeType": "ExpressionStatement",
												"src": "4962:88:17"
											},
											{
												"expression": {
													"id": 2566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 2557,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2186,
															"src": "5061:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$2181_storage_$",
																"typeString": "mapping(address => struct CryptoQuestTheShardsOfGenesisWallet.Stake storage ref)"
															}
														},
														"id": 2560,
														"indexExpression": {
															"expression": {
																"id": 2558,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5068:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2559,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5072:6:17",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5068:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5061:18:17",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$2181_storage",
															"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Stake storage ref"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2562,
																"name": "_amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2528,
																"src": "5110:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															{
																"expression": {
																	"id": 2563,
																	"name": "block",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967292,
																	"src": "5142:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_block",
																		"typeString": "block"
																	}
																},
																"id": 2564,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5148:9:17",
																"memberName": "timestamp",
																"nodeType": "MemberAccess",
																"src": "5142:15:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																{
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															],
															"id": 2561,
															"name": "Stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2181,
															"src": "5082:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_struct$_Stake_$2181_storage_ptr_$",
																"typeString": "type(struct CryptoQuestTheShardsOfGenesisWallet.Stake storage pointer)"
															}
														},
														"id": 2565,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "structConstructorCall",
														"lValueRequested": false,
														"nameLocations": [
															"5102:6:17",
															"5131:9:17"
														],
														"names": [
															"amount",
															"startTime"
														],
														"nodeType": "FunctionCall",
														"src": "5082:86:17",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$2181_memory_ptr",
															"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Stake memory"
														}
													},
													"src": "5061:107:17",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$2181_storage",
														"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Stake storage ref"
													}
												},
												"id": 2567,
												"nodeType": "ExpressionStatement",
												"src": "5061:107:17"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2569,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5197:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2570,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5201:6:17",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5197:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2571,
															"name": "_amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2528,
															"src": "5209:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 2572,
																"name": "block",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967292,
																"src": "5218:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_block",
																	"typeString": "block"
																}
															},
															"id": 2573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5224:9:17",
															"memberName": "timestamp",
															"nodeType": "MemberAccess",
															"src": "5218:15:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2568,
														"name": "TokensStaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2216,
														"src": "5184:12:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2574,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5184:50:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2575,
												"nodeType": "EmitStatement",
												"src": "5179:55:17"
											}
										]
									},
									"functionSelector": "7547c7a3",
									"id": 2577,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2531,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2530,
												"name": "whenNotPaused",
												"nameLocations": [
													"4870:13:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 848,
												"src": "4870:13:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "4870:13:17"
										}
									],
									"name": "stakeTokens",
									"nameLocation": "4834:11:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2529,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2528,
												"mutability": "mutable",
												"name": "_amount",
												"nameLocation": "4854:7:17",
												"nodeType": "VariableDeclaration",
												"scope": 2577,
												"src": "4846:15:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2527,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4846:7:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4845:17:17"
									},
									"returnParameters": {
										"id": 2532,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4884:0:17"
									},
									"scope": 2692,
									"src": "4825:416:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2656,
										"nodeType": "Block",
										"src": "5293:529:17",
										"statements": [
											{
												"assignments": [
													2584
												],
												"declarations": [
													{
														"constant": false,
														"id": 2584,
														"mutability": "mutable",
														"name": "stake",
														"nameLocation": "5316:5:17",
														"nodeType": "VariableDeclaration",
														"scope": 2656,
														"src": "5303:18:17",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$2181_memory_ptr",
															"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Stake"
														},
														"typeName": {
															"id": 2583,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2582,
																"name": "Stake",
																"nameLocations": [
																	"5303:5:17"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2181,
																"src": "5303:5:17"
															},
															"referencedDeclaration": 2181,
															"src": "5303:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$2181_storage_ptr",
																"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Stake"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2589,
												"initialValue": {
													"baseExpression": {
														"id": 2585,
														"name": "stakes",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2186,
														"src": "5324:6:17",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$2181_storage_$",
															"typeString": "mapping(address => struct CryptoQuestTheShardsOfGenesisWallet.Stake storage ref)"
														}
													},
													"id": 2588,
													"indexExpression": {
														"expression": {
															"id": 2586,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "5331:3:17",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2587,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5335:6:17",
														"memberName": "sender",
														"nodeType": "MemberAccess",
														"src": "5331:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5324:18:17",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Stake_$2181_storage",
														"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Stake storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5303:39:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2594,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2591,
																	"name": "stake",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2584,
																	"src": "5360:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_Stake_$2181_memory_ptr",
																		"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Stake memory"
																	}
																},
																"id": 2592,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5366:6:17",
																"memberName": "amount",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 2178,
																"src": "5360:12:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2593,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5375:1:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5360:16:17",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f20746f6b656e73207374616b6564",
															"id": 2595,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5378:18:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1f983d08a8c5ff4ffa11b495317acc03b08c5d01aeba8602c5a3a648ea98755b",
																"typeString": "literal_string \"No tokens staked\""
															},
															"value": "No tokens staked"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1f983d08a8c5ff4ffa11b495317acc03b08c5d01aeba8602c5a3a648ea98755b",
																"typeString": "literal_string \"No tokens staked\""
															}
														],
														"id": 2590,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5352:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2596,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5352:45:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2597,
												"nodeType": "ExpressionStatement",
												"src": "5352:45:17"
											},
											{
												"assignments": [
													2599
												],
												"declarations": [
													{
														"constant": false,
														"id": 2599,
														"mutability": "mutable",
														"name": "stakingDuration",
														"nameLocation": "5416:15:17",
														"nodeType": "VariableDeclaration",
														"scope": 2656,
														"src": "5408:23:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2598,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5408:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2605,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2604,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2600,
															"name": "block",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967292,
															"src": "5434:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_block",
																"typeString": "block"
															}
														},
														"id": 2601,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5440:9:17",
														"memberName": "timestamp",
														"nodeType": "MemberAccess",
														"src": "5434:15:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "-",
													"rightExpression": {
														"expression": {
															"id": 2602,
															"name": "stake",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2584,
															"src": "5452:5:17",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_Stake_$2181_memory_ptr",
																"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Stake memory"
															}
														},
														"id": 2603,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5458:9:17",
														"memberName": "startTime",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2180,
														"src": "5452:15:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5434:33:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5408:59:17"
											},
											{
												"assignments": [
													2607
												],
												"declarations": [
													{
														"constant": false,
														"id": 2607,
														"mutability": "mutable",
														"name": "reward",
														"nameLocation": "5485:6:17",
														"nodeType": "VariableDeclaration",
														"scope": 2656,
														"src": "5477:14:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2606,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5477:7:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2618,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2617,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2613,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2611,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 2608,
																			"name": "stake",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2584,
																			"src": "5495:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$2181_memory_ptr",
																				"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Stake memory"
																			}
																		},
																		"id": 2609,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5501:6:17",
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2178,
																		"src": "5495:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2610,
																		"name": "stakingRate",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2188,
																		"src": "5510:11:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5495:26:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"id": 2612,
																	"name": "stakingDuration",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2599,
																	"src": "5524:15:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "5495:44:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2614,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5494:46:17",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"components": [
															{
																"hexValue": "333635",
																"id": 2615,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5544:8:17",
																"subdenomination": "days",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_31536000_by_1",
																	"typeString": "int_const 31536000"
																},
																"value": "365"
															}
														],
														"id": 2616,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "5543:10:17",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_31536000_by_1",
															"typeString": "int_const 31536000"
														}
													},
													"src": "5494:59:17",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5477:76:17"
											},
											{
												"assignments": [
													2621
												],
												"declarations": [
													{
														"constant": false,
														"id": 2621,
														"mutability": "mutable",
														"name": "token",
														"nameLocation": "5582:5:17",
														"nodeType": "VariableDeclaration",
														"scope": 2656,
														"src": "5564:23:17",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Upgradeable_$1126",
															"typeString": "contract IERC20Upgradeable"
														},
														"typeName": {
															"id": 2620,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2619,
																"name": "IERC20Upgradeable",
																"nameLocations": [
																	"5564:17:17"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1126,
																"src": "5564:17:17"
															},
															"referencedDeclaration": 1126,
															"src": "5564:17:17",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$1126",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2628,
												"initialValue": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2625,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "5616:4:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_CryptoQuestTheShardsOfGenesisWallet_$2692",
																		"typeString": "contract CryptoQuestTheShardsOfGenesisWallet"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_CryptoQuestTheShardsOfGenesisWallet_$2692",
																		"typeString": "contract CryptoQuestTheShardsOfGenesisWallet"
																	}
																],
																"id": 2624,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "5608:7:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2623,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "5608:7:17",
																	"typeDescriptions": {}
																}
															},
															"id": 2626,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5608:13:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2622,
														"name": "IERC20Upgradeable",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1126,
														"src": "5590:17:17",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$1126_$",
															"typeString": "type(contract IERC20Upgradeable)"
														}
													},
													"id": 2627,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5590:32:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$1126",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5564:58:17"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"expression": {
																		"id": 2632,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "5655:3:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2633,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5659:6:17",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "5655:10:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2637,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 2634,
																			"name": "stake",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2584,
																			"src": "5667:5:17",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_Stake_$2181_memory_ptr",
																				"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Stake memory"
																			}
																		},
																		"id": 2635,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5673:6:17",
																		"memberName": "amount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2178,
																		"src": "5667:12:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "+",
																	"rightExpression": {
																		"id": 2636,
																		"name": "reward",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2607,
																		"src": "5682:6:17",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "5667:21:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	},
																	{
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																],
																"expression": {
																	"id": 2630,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2621,
																	"src": "5640:5:17",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC20Upgradeable_$1126",
																		"typeString": "contract IERC20Upgradeable"
																	}
																},
																"id": 2631,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5646:8:17",
																"memberName": "transfer",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1093,
																"src": "5640:14:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
																	"typeString": "function (address,uint256) external returns (bool)"
																}
															},
															"id": 2638,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5640:49:17",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e207472616e73666572206661696c6564",
															"id": 2639,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5691:23:17",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																"typeString": "literal_string \"Token transfer failed\""
															},
															"value": "Token transfer failed"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_74c7d57a908ebeca4ca501d4682067d5006fafb2a418959e98aa45be0419cba4",
																"typeString": "literal_string \"Token transfer failed\""
															}
														],
														"id": 2629,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5632:7:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5632:83:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2641,
												"nodeType": "ExpressionStatement",
												"src": "5632:83:17"
											},
											{
												"expression": {
													"id": 2646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "delete",
													"prefix": true,
													"src": "5726:25:17",
													"subExpression": {
														"baseExpression": {
															"id": 2642,
															"name": "stakes",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2186,
															"src": "5733:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_struct$_Stake_$2181_storage_$",
																"typeString": "mapping(address => struct CryptoQuestTheShardsOfGenesisWallet.Stake storage ref)"
															}
														},
														"id": 2645,
														"indexExpression": {
															"expression": {
																"id": 2643,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5740:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2644,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5744:6:17",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5740:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "5733:18:17",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_Stake_$2181_storage",
															"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Stake storage ref"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2647,
												"nodeType": "ExpressionStatement",
												"src": "5726:25:17"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2649,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5782:3:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2650,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5786:6:17",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5782:10:17",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2651,
																"name": "stake",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2584,
																"src": "5794:5:17",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_Stake_$2181_memory_ptr",
																	"typeString": "struct CryptoQuestTheShardsOfGenesisWallet.Stake memory"
																}
															},
															"id": 2652,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5800:6:17",
															"memberName": "amount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2178,
															"src": "5794:12:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2653,
															"name": "reward",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2607,
															"src": "5808:6:17",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2648,
														"name": "TokensUnstaked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2224,
														"src": "5767:14:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,uint256,uint256)"
														}
													},
													"id": 2654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5767:48:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2655,
												"nodeType": "EmitStatement",
												"src": "5762:53:17"
											}
										]
									},
									"functionSelector": "a5ce413b",
									"id": 2657,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2580,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2579,
												"name": "whenNotPaused",
												"nameLocations": [
													"5279:13:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 848,
												"src": "5279:13:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "5279:13:17"
										}
									],
									"name": "unstakeTokens",
									"nameLocation": "5256:13:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2578,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5269:2:17"
									},
									"returnParameters": {
										"id": 2581,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5293:0:17"
									},
									"scope": 2692,
									"src": "5247:575:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2666,
										"nodeType": "Block",
										"src": "5874:25:17",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2663,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 904,
														"src": "5884:6:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2664,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5884:8:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2665,
												"nodeType": "ExpressionStatement",
												"src": "5884:8:17"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 2667,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2660,
													"name": "PAUSER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2143,
													"src": "5861:11:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2661,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2659,
												"name": "onlyRole",
												"nameLocations": [
													"5852:8:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "5852:8:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "5852:21:17"
										}
									],
									"name": "pause",
									"nameLocation": "5837:5:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2658,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5842:2:17"
									},
									"returnParameters": {
										"id": 2662,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5874:0:17"
									},
									"scope": 2692,
									"src": "5828:71:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2676,
										"nodeType": "Block",
										"src": "5953:27:17",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2673,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 920,
														"src": "5963:8:17",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5963:10:17",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2675,
												"nodeType": "ExpressionStatement",
												"src": "5963:10:17"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 2677,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2670,
													"name": "PAUSER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2143,
													"src": "5940:11:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2671,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2669,
												"name": "onlyRole",
												"nameLocations": [
													"5931:8:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "5931:8:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "5931:21:17"
										}
									],
									"name": "unpause",
									"nameLocation": "5914:7:17",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2668,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5921:2:17"
									},
									"returnParameters": {
										"id": 2672,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5953:0:17"
									},
									"scope": 2692,
									"src": "5905:75:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										752
									],
									"body": {
										"id": 2686,
										"nodeType": "Block",
										"src": "6082:2:17",
										"statements": []
									},
									"id": 2687,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2683,
													"name": "UPGRADER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2153,
													"src": "6067:13:17",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2684,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2682,
												"name": "onlyRole",
												"nameLocations": [
													"6058:8:17"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "6058:8:17"
											},
											"nodeType": "ModifierInvocation",
											"src": "6058:23:17"
										}
									],
									"name": "_authorizeUpgrade",
									"nameLocation": "5995:17:17",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2681,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "6049:8:17"
									},
									"parameters": {
										"id": 2680,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2679,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "6021:17:17",
												"nodeType": "VariableDeclaration",
												"scope": 2687,
												"src": "6013:25:17",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2678,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6013:7:17",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6012:27:17"
									},
									"returnParameters": {
										"id": 2685,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6082:0:17"
									},
									"scope": 2692,
									"src": "5986:98:17",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2690,
										"nodeType": "Block",
										"src": "6117:2:17",
										"statements": []
									},
									"id": 2691,
									"implemented": true,
									"kind": "receive",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2688,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6097:2:17"
									},
									"returnParameters": {
										"id": 2689,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6117:0:17"
									},
									"scope": 2692,
									"src": "6090:29:17",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2693,
							"src": "620:5501:17",
							"usedErrors": [
								379,
								382,
								643,
								648,
								1350,
								1353,
								1468,
								1481,
								1759,
								1762
							],
							"usedEvents": [
								387,
								813,
								818,
								1362,
								1371,
								1380,
								1447,
								2192,
								2198,
								2202,
								2208,
								2216,
								2224
							]
						}
					],
					"src": "32:6090:17"
				},
				"id": 17
			}
		}
	}
}