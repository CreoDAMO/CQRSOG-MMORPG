{
	"id": "658dab6b779d8b5d441eb69bf41c5cd0",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"src/smartcontracts/CryptoQuestSwap.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// Compatible with OpenZeppelin Contracts ^5.0.0\npragma solidity ^0.8.25;\n\nimport \"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\";\n\n/// @custom:security-contact jacquedegraff@creodamo.com\ncontract CryptoQuestSwap is Initializable, PausableUpgradeable, AccessControlUpgradeable, UUPSUpgradeable {\n    bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\");\n    bytes32 public constant UPGRADER_ROLE = keccak256(\"UPGRADER_ROLE\");\n    bytes32 public constant LIQUIDITY_MANAGER_ROLE = keccak256(\"LIQUIDITY_MANAGER_ROLE\");\n\n    uint256 public constant FEE_RATE = 3; // 0.3% fee\n\n    IERC20Upgradeable public cqtToken;\n    IERC721Upgradeable public cqtNFT;\n\n    struct LiquidityPool {\n        uint256 tokenAmount;\n        uint256 ethAmount;\n        uint256 totalLiquidity;\n        mapping(address => uint256) liquidity;\n    }\n\n    mapping(address => LiquidityPool) public liquidityPools;\n\n    event LiquidityAdded(address indexed provider, address indexed token, uint256 tokenAmount, uint256 ethAmount, uint256 liquidity);\n    event LiquidityRemoved(address indexed provider, address indexed token, uint256 tokenAmount, uint256 ethAmount, uint256 liquidity);\n    event TokenSwapped(address indexed swapper, address indexed token, uint256 tokenAmount, uint256 ethAmount);\n    event NFTSwapped(address indexed swapper, address indexed nftContract, uint256 indexed tokenId, uint256 ethAmount);\n\n    /// @custom:oz-upgrades-unsafe-allow constructor\n    constructor() {\n        _disableInitializers();\n    }\n\n    function initialize(\n        address defaultAdmin,\n        address pauser,\n        address upgrader,\n        address liquidityManager,\n        address cqtTokenAddress,\n        address cqtNFTAddress\n    ) initializer public {\n        __Pausable_init();\n        __AccessControl_init();\n        __UUPSUpgradeable_init();\n\n        _grantRole(DEFAULT_ADMIN_ROLE, defaultAdmin);\n        _grantRole(PAUSER_ROLE, pauser);\n        _grantRole(UPGRADER_ROLE, upgrader);\n        _grantRole(LIQUIDITY_MANAGER_ROLE, liquidityManager);\n\n        cqtToken = IERC20Upgradeable(cqtTokenAddress);\n        cqtNFT = IERC721Upgradeable(cqtNFTAddress);\n    }\n\n    function pause() public onlyRole(PAUSER_ROLE) {\n        _pause();\n    }\n\n    function unpause() public onlyRole(PAUSER_ROLE) {\n        _unpause();\n    }\n\n    function addLiquidity(address token, uint256 tokenAmount) external payable whenNotPaused returns (uint256) {\n        require(tokenAmount > 0, \"Token amount must be greater than zero\");\n        require(msg.value > 0, \"ETH amount must be greater than zero\");\n\n        IERC20Upgradeable(token).transferFrom(msg.sender, address(this), tokenAmount);\n\n        LiquidityPool storage pool = liquidityPools[token];\n        uint256 liquidity;\n\n        if (pool.totalLiquidity == 0) {\n            pool.tokenAmount = tokenAmount;\n            pool.ethAmount = msg.value;\n            liquidity = tokenAmount;\n        } else {\n            require(pool.ethAmount > 0 && pool.tokenAmount > 0, \"Invalid pool state\");\n\n            uint256 ethAmountRatio = (pool.ethAmount * tokenAmount) / pool.tokenAmount;\n            require(msg.value >= ethAmountRatio, \"Insufficient ETH amount\");\n\n            pool.tokenAmount += tokenAmount;\n            pool.ethAmount += msg.value;\n            liquidity = (pool.totalLiquidity * tokenAmount) / pool.tokenAmount;\n        }\n\n        pool.totalLiquidity += liquidity;\n        pool.liquidity[msg.sender] += liquidity;\n\n        emit LiquidityAdded(msg.sender, token, tokenAmount, msg.value, liquidity);\n        return liquidity;\n    }\n\n    function removeLiquidity(address token, uint256 liquidity) external whenNotPaused returns (uint256 tokenAmount, uint256 ethAmount) {\n        LiquidityPool storage pool = liquidityPools[token];\n        require(pool.liquidity[msg.sender] >= liquidity, \"Insufficient liquidity\");\n\n        tokenAmount = (pool.tokenAmount * liquidity) / pool.totalLiquidity;\n        ethAmount = (pool.ethAmount * liquidity) / pool.totalLiquidity;\n\n        pool.tokenAmount -= tokenAmount;\n        pool.ethAmount -= ethAmount;\n        pool.totalLiquidity -= liquidity;\n        pool.liquidity[msg.sender] -= liquidity;\n\n        IERC20Upgradeable(token).transfer(msg.sender, tokenAmount);\n        payable(msg.sender).transfer(ethAmount);\n\n        emit LiquidityRemoved(msg.sender, token, tokenAmount, ethAmount, liquidity);\n    }\n\n    function swapETHForTokens(address token, uint256 minTokens) external payable whenNotPaused {\n        require(msg.value > 0, \"ETH amount must be greater than zero\");\n        LiquidityPool storage pool = liquidityPools[token];\n        require(pool.ethAmount > 0 && pool.tokenAmount > 0, \"Insufficient liquidity\");\n\n        uint256 tokenAmount = getOutputAmount(msg.value, pool.ethAmount, pool.tokenAmount);\n        require(tokenAmount >= minTokens, \"Slippage tolerance exceeded\");\n\n        pool.ethAmount += msg.value;\n        pool.tokenAmount -= tokenAmount;\n\n        IERC20Upgradeable(token).transfer(msg.sender, tokenAmount);\n\n        emit TokenSwapped(msg.sender, token, tokenAmount, msg.value);\n    }\n\n    function swapTokensForETH(address token, uint256 tokenAmount, uint256 minETH) external whenNotPaused {\n        require(tokenAmount > 0, \"Token amount must be greater than zero\");\n        LiquidityPool storage pool = liquidityPools[token];\n        require(pool.ethAmount > 0 && pool.tokenAmount > 0, \"Insufficient liquidity\");\n\n        uint256 ethAmount = getOutputAmount(tokenAmount, pool.tokenAmount, pool.ethAmount);\n        require(ethAmount >= minETH, \"Slippage tolerance exceeded\");\n\n        pool.tokenAmount += tokenAmount;\n        pool.ethAmount -= ethAmount;\n\n        IERC20Upgradeable(token).transferFrom(msg.sender, address(this), tokenAmount);\n        payable(msg.sender).transfer(ethAmount);\n\n        emit TokenSwapped(msg.sender, token, tokenAmount, ethAmount);\n    }\n\n    function swapETHForNFT(uint256 tokenId, uint256 minETH) external payable whenNotPaused {\n        require(msg.value > 0, \"ETH amount must be greater than zero\");\n        require(cqtNFT.ownerOf(tokenId) == address(this), \"NFT not owned by contract\");\n\n        uint256 ethAmount = getOutputAmount(msg.value, address(this).balance - msg.value, 1); // Assuming 1 NFT as reserve\n        require(ethAmount >= minETH, \"Slippage tolerance exceeded\");\n\n        payable(msg.sender).transfer(ethAmount);\n        cqtNFT.safeTransferFrom(address(this), msg.sender, tokenId);\n\n        emit NFTSwapped(msg.sender, address(cqtNFT), tokenId, ethAmount);\n    }\n\n    function swapNFTForETH(uint256 tokenId, uint256 minETH) external whenNotPaused {\n        require(cqtNFT.ownerOf(tokenId) == msg.sender, \"Not owner of NFT\");\n\n        uint256 ethAmount = getOutputAmount(1, 1, address(this).balance); // Assuming 1 NFT as input\n        require(ethAmount >= minETH, \"Slippage tolerance exceeded\");\n\n        cqtNFT.safeTransferFrom(msg.sender, address(this), tokenId);\n        payable(msg.sender).transfer(ethAmount);\n\n        emit NFTSwapped(msg.sender, address(cqtNFT), tokenId, ethAmount);\n    }\n\n    function getOutputAmount(uint256 inputAmount, uint256 inputReserve, uint256 outputReserve) internal pure returns (uint256) {\n        uint256 inputAmountWithFee = inputAmount * (1000 - FEE_RATE);\n        uint256 numerator = inputAmountWithFee * outputReserve;\n        uint256 denominator = (inputReserve * 1000) + inputAmountWithFee;\n        return numerator / denominator;\n    }\n\n    function _authorizeUpgrade(address newImplementation) internal onlyRole(UPGRADER_ROLE) override {}\n\n    function updateLiquidityPool(address token, uint256 newTokenAmount, uint256 newEthAmount) external onlyRole(LIQUIDITY_MANAGER_ROLE) {\n        liquidityPools[token].tokenAmount = newTokenAmount;\n        liquidityPools[token].ethAmount = newEthAmount;\n    }\n\n    function withdrawETH(uint256 amount) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        require(address(this).balance >= amount, \"Insufficient balance\");\n        payable(msg.sender).transfer(amount);\n    }\n\n    function withdrawTokens(address token, uint256 amount) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        IERC20Upgradeable(token).transfer(msg.sender, amount);\n    }\n\n    function withdrawNFT(uint256 tokenId) external onlyRole(DEFAULT_ADMIN_ROLE) {\n        cqtNFT.safeTransferFrom(address(this), msg.sender, tokenId);\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/UUPSUpgradeable.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC1822Proxiable} from \"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\";\nimport {ERC1967Utils} from \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\";\nimport {Initializable} from \"./Initializable.sol\";\n\n/**\n * @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n * {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n *\n * A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n * reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n * `UUPSUpgradeable` with a custom implementation of upgrades.\n *\n * The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\n */\nabstract contract UUPSUpgradeable is Initializable, IERC1822Proxiable {\n    /// @custom:oz-upgrades-unsafe-allow state-variable-immutable\n    address private immutable __self = address(this);\n\n    /**\n     * @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n     * and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n     * while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n     * If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n     * be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n     * during an upgrade.\n     */\n    string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\";\n\n    /**\n     * @dev The call is from an unauthorized context.\n     */\n    error UUPSUnauthorizedCallContext();\n\n    /**\n     * @dev The storage `slot` is unsupported as a UUID.\n     */\n    error UUPSUnsupportedProxiableUUID(bytes32 slot);\n\n    /**\n     * @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n     * a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n     * for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n     * function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n     * fail.\n     */\n    modifier onlyProxy() {\n        _checkProxy();\n        _;\n    }\n\n    /**\n     * @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n     * callable on the implementing contract but not through proxies.\n     */\n    modifier notDelegated() {\n        _checkNotDelegated();\n        _;\n    }\n\n    function __UUPSUpgradeable_init() internal onlyInitializing {\n    }\n\n    function __UUPSUpgradeable_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n     * implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\n     */\n    function proxiableUUID() external view virtual notDelegated returns (bytes32) {\n        return ERC1967Utils.IMPLEMENTATION_SLOT;\n    }\n\n    /**\n     * @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n     * encoded in `data`.\n     *\n     * Calls {_authorizeUpgrade}.\n     *\n     * Emits an {Upgraded} event.\n     *\n     * @custom:oz-upgrades-unsafe-allow-reachable delegatecall\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {\n        _authorizeUpgrade(newImplementation);\n        _upgradeToAndCallUUPS(newImplementation, data);\n    }\n\n    /**\n     * @dev Reverts if the execution is not performed via delegatecall or the execution\n     * context is not of a proxy with an ERC1967-compliant implementation pointing to self.\n     * See {_onlyProxy}.\n     */\n    function _checkProxy() internal view virtual {\n        if (\n            address(this) == __self || // Must be called through delegatecall\n            ERC1967Utils.getImplementation() != __self // Must be called through an active proxy\n        ) {\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Reverts if the execution is performed via delegatecall.\n     * See {notDelegated}.\n     */\n    function _checkNotDelegated() internal view virtual {\n        if (address(this) != __self) {\n            // Must not be called through delegatecall\n            revert UUPSUnauthorizedCallContext();\n        }\n    }\n\n    /**\n     * @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n     * {upgradeToAndCall}.\n     *\n     * Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n     *\n     * ```solidity\n     * function _authorizeUpgrade(address) internal onlyOwner {}\n     * ```\n     */\n    function _authorizeUpgrade(address newImplementation) internal virtual;\n\n    /**\n     * @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n     *\n     * As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n     * is expected to be the implementation slot in ERC1967.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {\n        try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {\n            if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {\n                revert UUPSUnsupportedProxiableUUID(slot);\n            }\n            ERC1967Utils.upgradeToAndCall(newImplementation, data);\n        } catch {\n            // The implementation is not UUPS\n            revert ERC1967Utils.ERC1967InvalidImplementation(newImplementation);\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/utils/Initializable.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n * behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n * external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n * function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n *\n * The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n * reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n * case an upgrade adds a module that needs to be initialized.\n *\n * For example:\n *\n * [.hljs-theme-light.nopadding]\n * ```solidity\n * contract MyToken is ERC20Upgradeable {\n *     function initialize() initializer public {\n *         __ERC20_init(\"MyToken\", \"MTK\");\n *     }\n * }\n *\n * contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n *     function initializeV2() reinitializer(2) public {\n *         __ERC20Permit_init(\"MyToken\");\n *     }\n * }\n * ```\n *\n * TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n * possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n *\n * CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n * that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n *\n * [CAUTION]\n * ====\n * Avoid leaving a contract uninitialized.\n *\n * An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n * contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n * the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n *\n * [.hljs-theme-light.nopadding]\n * ```\n * /// @custom:oz-upgrades-unsafe-allow constructor\n * constructor() {\n *     _disableInitializers();\n * }\n * ```\n * ====\n */\nabstract contract Initializable {\n    /**\n     * @dev Storage of the initializable contract.\n     *\n     * It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n     * when using with upgradeable contracts.\n     *\n     * @custom:storage-location erc7201:openzeppelin.storage.Initializable\n     */\n    struct InitializableStorage {\n        /**\n         * @dev Indicates that the contract has been initialized.\n         */\n        uint64 _initialized;\n        /**\n         * @dev Indicates that the contract is in the process of being initialized.\n         */\n        bool _initializing;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Initializable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant INITIALIZABLE_STORAGE = 0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00;\n\n    /**\n     * @dev The contract is already initialized.\n     */\n    error InvalidInitialization();\n\n    /**\n     * @dev The contract is not initializing.\n     */\n    error NotInitializing();\n\n    /**\n     * @dev Triggered when the contract has been initialized or reinitialized.\n     */\n    event Initialized(uint64 version);\n\n    /**\n     * @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n     * `onlyInitializing` functions can be used to initialize parent contracts.\n     *\n     * Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n     * number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n     * production.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier initializer() {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        // Cache values to avoid duplicated sloads\n        bool isTopLevelCall = !$._initializing;\n        uint64 initialized = $._initialized;\n\n        // Allowed calls:\n        // - initialSetup: the contract is not in the initializing state and no previous version was\n        //                 initialized\n        // - construction: the contract is initialized at version 1 (no reininitialization) and the\n        //                 current contract is just being deployed\n        bool initialSetup = initialized == 0 && isTopLevelCall;\n        bool construction = initialized == 1 && address(this).code.length == 0;\n\n        if (!initialSetup && !construction) {\n            revert InvalidInitialization();\n        }\n        $._initialized = 1;\n        if (isTopLevelCall) {\n            $._initializing = true;\n        }\n        _;\n        if (isTopLevelCall) {\n            $._initializing = false;\n            emit Initialized(1);\n        }\n    }\n\n    /**\n     * @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n     * contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n     * used to initialize parent contracts.\n     *\n     * A reinitializer may be used after the original initialization step. This is essential to configure modules that\n     * are added through upgrades and that require initialization.\n     *\n     * When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n     * cannot be nested. If one is invoked in the context of another, execution will revert.\n     *\n     * Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n     * a contract, executing them in the right order is up to the developer or operator.\n     *\n     * WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n     *\n     * Emits an {Initialized} event.\n     */\n    modifier reinitializer(uint64 version) {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing || $._initialized >= version) {\n            revert InvalidInitialization();\n        }\n        $._initialized = version;\n        $._initializing = true;\n        _;\n        $._initializing = false;\n        emit Initialized(version);\n    }\n\n    /**\n     * @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n     * {initializer} and {reinitializer} modifiers, directly or indirectly.\n     */\n    modifier onlyInitializing() {\n        _checkInitializing();\n        _;\n    }\n\n    /**\n     * @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}.\n     */\n    function _checkInitializing() internal view virtual {\n        if (!_isInitializing()) {\n            revert NotInitializing();\n        }\n    }\n\n    /**\n     * @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n     * Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n     * to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n     * through proxies.\n     *\n     * Emits an {Initialized} event the first time it is successfully executed.\n     */\n    function _disableInitializers() internal virtual {\n        // solhint-disable-next-line var-name-mixedcase\n        InitializableStorage storage $ = _getInitializableStorage();\n\n        if ($._initializing) {\n            revert InvalidInitialization();\n        }\n        if ($._initialized != type(uint64).max) {\n            $._initialized = type(uint64).max;\n            emit Initialized(type(uint64).max);\n        }\n    }\n\n    /**\n     * @dev Returns the highest version that has been initialized. See {reinitializer}.\n     */\n    function _getInitializedVersion() internal view returns (uint64) {\n        return _getInitializableStorage()._initialized;\n    }\n\n    /**\n     * @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}.\n     */\n    function _isInitializing() internal view returns (bool) {\n        return _getInitializableStorage()._initializing;\n    }\n\n    /**\n     * @dev Returns a pointer to the storage namespace.\n     */\n    // solhint-disable-next-line var-name-mixedcase\n    function _getInitializableStorage() private pure returns (InitializableStorage storage $) {\n        assembly {\n            $.slot := INITIALIZABLE_STORAGE\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/AccessControl.sol)\n\npragma solidity ^0.8.20;\n\nimport {IAccessControl} from \"@openzeppelin/contracts/access/IAccessControl.sol\";\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {ERC165Upgradeable} from \"../utils/introspection/ERC165Upgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module that allows children to implement role-based access\n * control mechanisms. This is a lightweight version that doesn't allow enumerating role\n * members except through off-chain means by accessing the contract event logs. Some\n * applications may benefit from on-chain enumerability, for those cases see\n * {AccessControlEnumerable}.\n *\n * Roles are referred to by their `bytes32` identifier. These should be exposed\n * in the external API and be unique. The best way to achieve this is by\n * using `public constant` hash digests:\n *\n * ```solidity\n * bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n * ```\n *\n * Roles can be used to represent a set of permissions. To restrict access to a\n * function call, use {hasRole}:\n *\n * ```solidity\n * function foo() public {\n *     require(hasRole(MY_ROLE, msg.sender));\n *     ...\n * }\n * ```\n *\n * Roles can be granted and revoked dynamically via the {grantRole} and\n * {revokeRole} functions. Each role has an associated admin role, and only\n * accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n *\n * By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n * that only accounts with this role will be able to grant or revoke other\n * roles. More complex role relationships can be created by using\n * {_setRoleAdmin}.\n *\n * WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n * grant and revoke this role. Extra precautions should be taken to secure\n * accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n * to enforce additional security measures for this role.\n */\nabstract contract AccessControlUpgradeable is Initializable, ContextUpgradeable, IAccessControl, ERC165Upgradeable {\n    struct RoleData {\n        mapping(address account => bool) hasRole;\n        bytes32 adminRole;\n    }\n\n    bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00;\n\n\n    /// @custom:storage-location erc7201:openzeppelin.storage.AccessControl\n    struct AccessControlStorage {\n        mapping(bytes32 role => RoleData) _roles;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.AccessControl\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant AccessControlStorageLocation = 0x02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800;\n\n    function _getAccessControlStorage() private pure returns (AccessControlStorage storage $) {\n        assembly {\n            $.slot := AccessControlStorageLocation\n        }\n    }\n\n    /**\n     * @dev Modifier that checks that an account has a specific role. Reverts\n     * with an {AccessControlUnauthorizedAccount} error including the required role.\n     */\n    modifier onlyRole(bytes32 role) {\n        _checkRole(role);\n        _;\n    }\n\n    function __AccessControl_init() internal onlyInitializing {\n    }\n\n    function __AccessControl_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n        return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId);\n    }\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) public view virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        return $._roles[role].hasRole[account];\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n     * is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier.\n     */\n    function _checkRole(bytes32 role) internal view virtual {\n        _checkRole(role, _msgSender());\n    }\n\n    /**\n     * @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n     * is missing `role`.\n     */\n    function _checkRole(bytes32 role, address account) internal view virtual {\n        if (!hasRole(role, account)) {\n            revert AccessControlUnauthorizedAccount(account, role);\n        }\n    }\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        return $._roles[role].adminRole;\n    }\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _grantRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {\n        _revokeRole(role, account);\n    }\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been revoked `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) public virtual {\n        if (callerConfirmation != _msgSender()) {\n            revert AccessControlBadConfirmation();\n        }\n\n        _revokeRole(role, callerConfirmation);\n    }\n\n    /**\n     * @dev Sets `adminRole` as ``role``'s admin role.\n     *\n     * Emits a {RoleAdminChanged} event.\n     */\n    function _setRoleAdmin(bytes32 role, bytes32 adminRole) internal virtual {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        bytes32 previousAdminRole = getRoleAdmin(role);\n        $._roles[role].adminRole = adminRole;\n        emit RoleAdminChanged(role, previousAdminRole, adminRole);\n    }\n\n    /**\n     * @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleGranted} event.\n     */\n    function _grantRole(bytes32 role, address account) internal virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        if (!hasRole(role, account)) {\n            $._roles[role].hasRole[account] = true;\n            emit RoleGranted(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n\n    /**\n     * @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n     *\n     * Internal function without access restriction.\n     *\n     * May emit a {RoleRevoked} event.\n     */\n    function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {\n        AccessControlStorage storage $ = _getAccessControlStorage();\n        if (hasRole(role, account)) {\n            $._roles[role].hasRole[account] = false;\n            emit RoleRevoked(role, account, _msgSender());\n            return true;\n        } else {\n            return false;\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Pausable.sol)\n\npragma solidity ^0.8.20;\n\nimport {ContextUpgradeable} from \"../utils/ContextUpgradeable.sol\";\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This module is used through inheritance. It will make available the\n * modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n * the functions of your contract. Note that they will not be pausable by\n * simply including this module, only once the modifiers are put in place.\n */\nabstract contract PausableUpgradeable is Initializable, ContextUpgradeable {\n    /// @custom:storage-location erc7201:openzeppelin.storage.Pausable\n    struct PausableStorage {\n        bool _paused;\n    }\n\n    // keccak256(abi.encode(uint256(keccak256(\"openzeppelin.storage.Pausable\")) - 1)) & ~bytes32(uint256(0xff))\n    bytes32 private constant PausableStorageLocation = 0xcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300;\n\n    function _getPausableStorage() private pure returns (PausableStorage storage $) {\n        assembly {\n            $.slot := PausableStorageLocation\n        }\n    }\n\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    /**\n     * @dev The operation failed because the contract is paused.\n     */\n    error EnforcedPause();\n\n    /**\n     * @dev The operation failed because the contract is not paused.\n     */\n    error ExpectedPause();\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    function __Pausable_init() internal onlyInitializing {\n        __Pausable_init_unchained();\n    }\n\n    function __Pausable_init_unchained() internal onlyInitializing {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = false;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _requireNotPaused();\n        _;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenPaused() {\n        _requirePaused();\n        _;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view virtual returns (bool) {\n        PausableStorage storage $ = _getPausableStorage();\n        return $._paused;\n    }\n\n    /**\n     * @dev Throws if the contract is paused.\n     */\n    function _requireNotPaused() internal view virtual {\n        if (paused()) {\n            revert EnforcedPause();\n        }\n    }\n\n    /**\n     * @dev Throws if the contract is not paused.\n     */\n    function _requirePaused() internal view virtual {\n        if (!paused()) {\n            revert ExpectedPause();\n        }\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause() internal virtual whenNotPaused {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = true;\n        emit Paused(_msgSender());\n    }\n\n    /**\n     * @dev Returns to normal state.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause() internal virtual whenPaused {\n        PausableStorage storage $ = _getPausableStorage();\n        $._paused = false;\n        emit Unpaused(_msgSender());\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC721/IERC721.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../../utils/introspection/IERC165Upgradeable.sol\";\n\n/**\n * @dev Required interface of an ERC721 compliant contract.\n */\ninterface IERC721Upgradeable is IERC165Upgradeable {\n    /**\n     * @dev Emitted when `tokenId` token is transferred from `from` to `to`.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables `approved` to manage the `tokenId` token.\n     */\n    event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId);\n\n    /**\n     * @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\n     */\n    event ApprovalForAll(address indexed owner, address indexed operator, bool approved);\n\n    /**\n     * @dev Returns the number of tokens in ``owner``'s account.\n     */\n    function balanceOf(address owner) external view returns (uint256 balance);\n\n    /**\n     * @dev Returns the owner of the `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function ownerOf(uint256 tokenId) external view returns (address owner);\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId, bytes calldata data) external;\n\n    /**\n     * @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n     * are aware of the ERC721 protocol to prevent tokens from being forever locked.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must exist and be owned by `from`.\n     * - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n     * - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n     *\n     * Emits a {Transfer} event.\n     */\n    function safeTransferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Transfers `tokenId` token from `from` to `to`.\n     *\n     * WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n     * or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n     * understand this adds an external call which potentially creates a reentrancy vulnerability.\n     *\n     * Requirements:\n     *\n     * - `from` cannot be the zero address.\n     * - `to` cannot be the zero address.\n     * - `tokenId` token must be owned by `from`.\n     * - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 tokenId) external;\n\n    /**\n     * @dev Gives permission to `to` to transfer `tokenId` token to another account.\n     * The approval is cleared when the token is transferred.\n     *\n     * Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n     *\n     * Requirements:\n     *\n     * - The caller must own the token or be an approved operator.\n     * - `tokenId` must exist.\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address to, uint256 tokenId) external;\n\n    /**\n     * @dev Approve or remove `operator` as an operator for the caller.\n     * Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n     *\n     * Requirements:\n     *\n     * - The `operator` cannot be the caller.\n     *\n     * Emits an {ApprovalForAll} event.\n     */\n    function setApprovalForAll(address operator, bool approved) external;\n\n    /**\n     * @dev Returns the account approved for `tokenId` token.\n     *\n     * Requirements:\n     *\n     * - `tokenId` must exist.\n     */\n    function getApproved(uint256 tokenId) external view returns (address operator);\n\n    /**\n     * @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n     *\n     * See {setApprovalForAll}\n     */\n    function isApprovedForAll(address owner, address operator) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (token/ERC20/IERC20.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC20 standard as defined in the EIP.\n */\ninterface IERC20Upgradeable {\n    /**\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\n     * another (`to`).\n     *\n     * Note that `value` may be zero.\n     */\n    event Transfer(address indexed from, address indexed to, uint256 value);\n\n    /**\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\n     * a call to {approve}. `value` is the new allowance.\n     */\n    event Approval(address indexed owner, address indexed spender, uint256 value);\n\n    /**\n     * @dev Returns the amount of tokens in existence.\n     */\n    function totalSupply() external view returns (uint256);\n\n    /**\n     * @dev Returns the amount of tokens owned by `account`.\n     */\n    function balanceOf(address account) external view returns (uint256);\n\n    /**\n     * @dev Moves `amount` tokens from the caller's account to `to`.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transfer(address to, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Returns the remaining number of tokens that `spender` will be\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\n     * zero by default.\n     *\n     * This value changes when {approve} or {transferFrom} are called.\n     */\n    function allowance(address owner, address spender) external view returns (uint256);\n\n    /**\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\n     * that someone may use both the old and the new allowance by unfortunate\n     * transaction ordering. One possible solution to mitigate this race\n     * condition is to first reduce the spender's allowance to 0 and set the\n     * desired value afterwards:\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n     *\n     * Emits an {Approval} event.\n     */\n    function approve(address spender, uint256 amount) external returns (bool);\n\n    /**\n     * @dev Moves `amount` tokens from `from` to `to` using the\n     * allowance mechanism. `amount` is then deducted from the caller's\n     * allowance.\n     *\n     * Returns a boolean value indicating whether the operation succeeded.\n     *\n     * Emits a {Transfer} event.\n     */\n    function transferFrom(address from, address to, uint256 amount) external returns (bool);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.1) (utils/Context.sol)\n\npragma solidity ^0.8.20;\nimport {Initializable} from \"../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract ContextUpgradeable is Initializable {\n    function __Context_init() internal onlyInitializing {\n    }\n\n    function __Context_init_unchained() internal onlyInitializing {\n    }\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts v4.4.1 (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165Upgradeable {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/ERC1967/ERC1967Utils.sol)\n\npragma solidity ^0.8.20;\n\nimport {IBeacon} from \"../beacon/IBeacon.sol\";\nimport {Address} from \"../../utils/Address.sol\";\nimport {StorageSlot} from \"../../utils/StorageSlot.sol\";\n\n/**\n * @dev This abstract contract provides getters and event emitting update functions for\n * https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\n */\nlibrary ERC1967Utils {\n    // We re-declare ERC-1967 events here because they can't be used directly from IERC1967.\n    // This will be fixed in Solidity 0.8.21. At that point we should remove these events.\n    /**\n     * @dev Emitted when the implementation is upgraded.\n     */\n    event Upgraded(address indexed implementation);\n\n    /**\n     * @dev Emitted when the admin account has changed.\n     */\n    event AdminChanged(address previousAdmin, address newAdmin);\n\n    /**\n     * @dev Emitted when the beacon is changed.\n     */\n    event BeaconUpgraded(address indexed beacon);\n\n    /**\n     * @dev Storage slot with the address of the current implementation.\n     * This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n\n    /**\n     * @dev The `implementation` of the proxy is invalid.\n     */\n    error ERC1967InvalidImplementation(address implementation);\n\n    /**\n     * @dev The `admin` of the proxy is invalid.\n     */\n    error ERC1967InvalidAdmin(address admin);\n\n    /**\n     * @dev The `beacon` of the proxy is invalid.\n     */\n    error ERC1967InvalidBeacon(address beacon);\n\n    /**\n     * @dev An upgrade function sees `msg.value > 0` that may be lost.\n     */\n    error ERC1967NonPayable();\n\n    /**\n     * @dev Returns the current implementation address.\n     */\n    function getImplementation() internal view returns (address) {\n        return StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 implementation slot.\n     */\n    function _setImplementation(address newImplementation) private {\n        if (newImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(newImplementation);\n        }\n        StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation;\n    }\n\n    /**\n     * @dev Performs implementation upgrade with additional setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-Upgraded} event.\n     */\n    function upgradeToAndCall(address newImplementation, bytes memory data) internal {\n        _setImplementation(newImplementation);\n        emit Upgraded(newImplementation);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(newImplementation, data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Storage slot with the admin of the contract.\n     * This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant ADMIN_SLOT = 0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103;\n\n    /**\n     * @dev Returns the current admin.\n     *\n     * TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n     * the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n     * `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`\n     */\n    function getAdmin() internal view returns (address) {\n        return StorageSlot.getAddressSlot(ADMIN_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new address in the EIP1967 admin slot.\n     */\n    function _setAdmin(address newAdmin) private {\n        if (newAdmin == address(0)) {\n            revert ERC1967InvalidAdmin(address(0));\n        }\n        StorageSlot.getAddressSlot(ADMIN_SLOT).value = newAdmin;\n    }\n\n    /**\n     * @dev Changes the admin of the proxy.\n     *\n     * Emits an {IERC1967-AdminChanged} event.\n     */\n    function changeAdmin(address newAdmin) internal {\n        emit AdminChanged(getAdmin(), newAdmin);\n        _setAdmin(newAdmin);\n    }\n\n    /**\n     * @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n     * This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1.\n     */\n    // solhint-disable-next-line private-vars-leading-underscore\n    bytes32 internal constant BEACON_SLOT = 0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50;\n\n    /**\n     * @dev Returns the current beacon.\n     */\n    function getBeacon() internal view returns (address) {\n        return StorageSlot.getAddressSlot(BEACON_SLOT).value;\n    }\n\n    /**\n     * @dev Stores a new beacon in the EIP1967 beacon slot.\n     */\n    function _setBeacon(address newBeacon) private {\n        if (newBeacon.code.length == 0) {\n            revert ERC1967InvalidBeacon(newBeacon);\n        }\n\n        StorageSlot.getAddressSlot(BEACON_SLOT).value = newBeacon;\n\n        address beaconImplementation = IBeacon(newBeacon).implementation();\n        if (beaconImplementation.code.length == 0) {\n            revert ERC1967InvalidImplementation(beaconImplementation);\n        }\n    }\n\n    /**\n     * @dev Change the beacon and trigger a setup call if data is nonempty.\n     * This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n     * to avoid stuck value in the contract.\n     *\n     * Emits an {IERC1967-BeaconUpgraded} event.\n     *\n     * CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n     * it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n     * efficiency.\n     */\n    function upgradeBeaconToAndCall(address newBeacon, bytes memory data) internal {\n        _setBeacon(newBeacon);\n        emit BeaconUpgraded(newBeacon);\n\n        if (data.length > 0) {\n            Address.functionDelegateCall(IBeacon(newBeacon).implementation(), data);\n        } else {\n            _checkNonPayable();\n        }\n    }\n\n    /**\n     * @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n     * if an upgrade doesn't perform an initialization call.\n     */\n    function _checkNonPayable() private {\n        if (msg.value > 0) {\n            revert ERC1967NonPayable();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (interfaces/draft-IERC1822.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n * proxy whose upgrades are fully controlled by the current implementation.\n */\ninterface IERC1822Proxiable {\n    /**\n     * @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n     * address.\n     *\n     * IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n     * bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n     * function revert if invoked through a proxy.\n     */\n    function proxiableUUID() external view returns (bytes32);\n}\n"
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/ERC165.sol)\n\npragma solidity ^0.8.20;\n\nimport {IERC165} from \"@openzeppelin/contracts/utils/introspection/IERC165.sol\";\nimport {Initializable} from \"../../proxy/utils/Initializable.sol\";\n\n/**\n * @dev Implementation of the {IERC165} interface.\n *\n * Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n * for the additional interface id that will be supported. For example:\n *\n * ```solidity\n * function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n *     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n * }\n * ```\n */\nabstract contract ERC165Upgradeable is Initializable, IERC165 {\n    function __ERC165_init() internal onlyInitializing {\n    }\n\n    function __ERC165_init_unchained() internal onlyInitializing {\n    }\n    /**\n     * @dev See {IERC165-supportsInterface}.\n     */\n    function supportsInterface(bytes4 interfaceId) public view virtual returns (bool) {\n        return interfaceId == type(IERC165).interfaceId;\n    }\n}\n"
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (access/IAccessControl.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev External interface of AccessControl declared to support ERC165 detection.\n */\ninterface IAccessControl {\n    /**\n     * @dev The `account` is missing a role.\n     */\n    error AccessControlUnauthorizedAccount(address account, bytes32 neededRole);\n\n    /**\n     * @dev The caller of a function is not the expected one.\n     *\n     * NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\n     */\n    error AccessControlBadConfirmation();\n\n    /**\n     * @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n     *\n     * `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n     * {RoleAdminChanged} not being emitted signaling this.\n     */\n    event RoleAdminChanged(bytes32 indexed role, bytes32 indexed previousAdminRole, bytes32 indexed newAdminRole);\n\n    /**\n     * @dev Emitted when `account` is granted `role`.\n     *\n     * `sender` is the account that originated the contract call, an admin role\n     * bearer except when using {AccessControl-_setupRole}.\n     */\n    event RoleGranted(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Emitted when `account` is revoked `role`.\n     *\n     * `sender` is the account that originated the contract call:\n     *   - if using `revokeRole`, it is the admin role bearer\n     *   - if using `renounceRole`, it is the role bearer (i.e. `account`)\n     */\n    event RoleRevoked(bytes32 indexed role, address indexed account, address indexed sender);\n\n    /**\n     * @dev Returns `true` if `account` has been granted `role`.\n     */\n    function hasRole(bytes32 role, address account) external view returns (bool);\n\n    /**\n     * @dev Returns the admin role that controls `role`. See {grantRole} and\n     * {revokeRole}.\n     *\n     * To change a role's admin, use {AccessControl-_setRoleAdmin}.\n     */\n    function getRoleAdmin(bytes32 role) external view returns (bytes32);\n\n    /**\n     * @dev Grants `role` to `account`.\n     *\n     * If `account` had not been already granted `role`, emits a {RoleGranted}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function grantRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from `account`.\n     *\n     * If `account` had been granted `role`, emits a {RoleRevoked} event.\n     *\n     * Requirements:\n     *\n     * - the caller must have ``role``'s admin role.\n     */\n    function revokeRole(bytes32 role, address account) external;\n\n    /**\n     * @dev Revokes `role` from the calling account.\n     *\n     * Roles are often managed via {grantRole} and {revokeRole}: this function's\n     * purpose is to provide a mechanism for accounts to lose their privileges\n     * if they are compromised (such as when a trusted device is misplaced).\n     *\n     * If the calling account had been granted `role`, emits a {RoleRevoked}\n     * event.\n     *\n     * Requirements:\n     *\n     * - the caller must be `callerConfirmation`.\n     */\n    function renounceRole(bytes32 role, address callerConfirmation) external;\n}\n"
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/StorageSlot.sol)\n// This file was procedurally generated from scripts/generate/templates/StorageSlot.js.\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Library for reading and writing primitive types to specific storage slots.\n *\n * Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n * This library helps with reading and writing to such slots without the need for inline assembly.\n *\n * The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n *\n * Example usage to set ERC1967 implementation slot:\n * ```solidity\n * contract ERC1967 {\n *     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n *\n *     function _getImplementation() internal view returns (address) {\n *         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n *     }\n *\n *     function _setImplementation(address newImplementation) internal {\n *         require(newImplementation.code.length > 0);\n *         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n *     }\n * }\n * ```\n */\nlibrary StorageSlot {\n    struct AddressSlot {\n        address value;\n    }\n\n    struct BooleanSlot {\n        bool value;\n    }\n\n    struct Bytes32Slot {\n        bytes32 value;\n    }\n\n    struct Uint256Slot {\n        uint256 value;\n    }\n\n    struct StringSlot {\n        string value;\n    }\n\n    struct BytesSlot {\n        bytes value;\n    }\n\n    /**\n     * @dev Returns an `AddressSlot` with member `value` located at `slot`.\n     */\n    function getAddressSlot(bytes32 slot) internal pure returns (AddressSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BooleanSlot` with member `value` located at `slot`.\n     */\n    function getBooleanSlot(bytes32 slot) internal pure returns (BooleanSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Bytes32Slot` with member `value` located at `slot`.\n     */\n    function getBytes32Slot(bytes32 slot) internal pure returns (Bytes32Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `Uint256Slot` with member `value` located at `slot`.\n     */\n    function getUint256Slot(bytes32 slot) internal pure returns (Uint256Slot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` with member `value` located at `slot`.\n     */\n    function getStringSlot(bytes32 slot) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `StringSlot` representation of the string storage pointer `store`.\n     */\n    function getStringSlot(string storage store) internal pure returns (StringSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` with member `value` located at `slot`.\n     */\n    function getBytesSlot(bytes32 slot) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := slot\n        }\n    }\n\n    /**\n     * @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`.\n     */\n    function getBytesSlot(bytes storage store) internal pure returns (BytesSlot storage r) {\n        /// @solidity memory-safe-assembly\n        assembly {\n            r.slot := store.slot\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error AddressInsufficientBalance(address account);\n\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedInnerCall();\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert AddressInsufficientBalance(address(this));\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert FailedInnerCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {FailedInnerCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert AddressInsufficientBalance(address(this));\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n     * unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {FailedInnerCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            /// @solidity memory-safe-assembly\n            assembly {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert FailedInnerCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (proxy/beacon/IBeacon.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev This is the interface that {BeaconProxy} expects of its beacon.\n */\ninterface IBeacon {\n    /**\n     * @dev Must return an address that can be used as a delegate call target.\n     *\n     * {UpgradeableBeacon} will check that this address is a contract.\n     */\n    function implementation() external view returns (address);\n}\n"
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.0.0) (utils/introspection/IERC165.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Interface of the ERC165 standard, as defined in the\n * https://eips.ethereum.org/EIPS/eip-165[EIP].\n *\n * Implementers can declare support of contract interfaces, which can then be\n * queried by others ({ERC165Checker}).\n *\n * For an implementation, see {ERC165}.\n */\ninterface IERC165 {\n    /**\n     * @dev Returns true if this contract implements the interface defined by\n     * `interfaceId`. See the corresponding\n     * https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n     * to learn more about how these ids are created.\n     *\n     * This function call must use less than 30 000 gas.\n     */\n    function supportsInterface(bytes4 interfaceId) external view returns (bool);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": true,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol": {
				"AccessControlUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module that allows children to implement role-based access control mechanisms. This is a lightweight version that doesn't allow enumerating role members except through off-chain means by accessing the contract event logs. Some applications may benefit from on-chain enumerability, for those cases see {AccessControlEnumerable}. Roles are referred to by their `bytes32` identifier. These should be exposed in the external API and be unique. The best way to achieve this is by using `public constant` hash digests: ```solidity bytes32 public constant MY_ROLE = keccak256(\\\"MY_ROLE\\\"); ``` Roles can be used to represent a set of permissions. To restrict access to a function call, use {hasRole}: ```solidity function foo() public {     require(hasRole(MY_ROLE, msg.sender));     ... } ``` Roles can be granted and revoked dynamically via the {grantRole} and {revokeRole} functions. Each role has an associated admin role, and only accounts that have a role's admin role can call {grantRole} and {revokeRole}. By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means that only accounts with this role will be able to grant or revoke other roles. More complex role relationships can be created by using {_setRoleAdmin}. WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to grant and revoke this role. Extra precautions should be taken to secure accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules} to enforce additional security measures for this role.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":\"AccessControlUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x6662ec4e5cefca03eeadd073e9469df8d2944bb2ee8ec8f7622c2c46aab5f225\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d8544c6f8daa4d1bc215c6a72fe0acdb748664a105b0e5efc19295667521d45\",\"dweb:/ipfs/QmdGWqdnXT8S3RgCR6aV8XHZrsybieMQLLnug1NtpSjEXN\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xdaba3f7c42c55b2896353f32bd27d4d5f8bae741b3b05d4c53f67abc4dc47ce8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fa2e61141c602510bcd2cd936ed9561922ac8772a9b9c9a9db091a74e354a45\",\"dweb:/ipfs/QmcHQDDoEBwJmwUbzoVkytvJsBx3KVHYFFnDkvRGWh9Wmh\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"Initializable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"custom:oz-upgrades-unsafe-allow": "constructor constructor() {     _disableInitializers(); } ``` ====",
						"details": "This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\"MyToken\", \"MTK\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\"MyToken\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor constructor() {     _disableInitializers(); } ``` ====\",\"details\":\"This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer function so it can only be called once. The {initializer} modifier provided by this contract will have this effect. The initialization functions use a version number. Once a version number is used, it is consumed and cannot be reused. This mechanism prevents re-execution of each \\\"step\\\" but allows the creation of new initialization steps in case an upgrade adds a module that needs to be initialized. For example: [.hljs-theme-light.nopadding] ```solidity contract MyToken is ERC20Upgradeable {     function initialize() initializer public {         __ERC20_init(\\\"MyToken\\\", \\\"MTK\\\");     } } contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {     function initializeV2() reinitializer(2) public {         __ERC20Permit_init(\\\"MyToken\\\");     } } ``` TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}. CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure that all initializers are idempotent. This is not verified automatically as constructors are by Solidity. [CAUTION] ==== Avoid leaving a contract uninitialized. An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke the {_disableInitializers} function in the constructor to automatically lock it when it is deployed: [.hljs-theme-light.nopadding] ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":\"Initializable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"UUPSUpgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"stateVariables": {
							"UPGRADE_INTERFACE_VERSION": {
								"details": "The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade."
							},
							"__self": {
								"custom:oz-upgrades-unsafe-allow": "state-variable-immutable"
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"proxiableUUID()": "52d1902d",
							"upgradeToAndCall(address,bytes)": "4f1ef286"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy. A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing `UUPSUpgradeable` with a custom implementation of upgrades. The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism.\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"stateVariables\":{\"UPGRADE_INTERFACE_VERSION\":{\"details\":\"The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)` and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called, while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string. If the getter returns `\\\"5.0.0\\\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must be the empty byte string if no function should be called, making it impossible to invoke the `receive` function during an upgrade.\"},\"__self\":{\"custom:oz-upgrades-unsafe-allow\":\"state-variable-immutable\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":\"UUPSUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930\",\"dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"IERC20Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "value",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								}
							],
							"name": "allowance",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "spender",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "totalSupply",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transfer",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC20 standard as defined in the EIP.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
							}
						},
						"kind": "dev",
						"methods": {
							"allowance(address,address)": {
								"details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
							},
							"approve(address,uint256)": {
								"details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the amount of tokens owned by `account`."
							},
							"totalSupply()": {
								"details": "Returns the amount of tokens in existence."
							},
							"transfer(address,uint256)": {
								"details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"allowance(address,address)": "dd62ed3e",
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"totalSupply()": "18160ddd",
							"transfer(address,uint256)": "a9059cbb",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":\"IERC20Upgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol": {
				"IERC721Upgradeable": {
					"abi": [
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "approved",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Approval",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "ApprovalForAll",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "Transfer",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "approve",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"name": "balanceOf",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "getApproved",
							"outputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								}
							],
							"name": "isApprovedForAll",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "ownerOf",
							"outputs": [
								{
									"internalType": "address",
									"name": "owner",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "safeTransferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "operator",
									"type": "address"
								},
								{
									"internalType": "bool",
									"name": "approved",
									"type": "bool"
								}
							],
							"name": "setApprovalForAll",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "from",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "to",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "transferFrom",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Required interface of an ERC721 compliant contract.",
						"events": {
							"Approval(address,address,uint256)": {
								"details": "Emitted when `owner` enables `approved` to manage the `tokenId` token."
							},
							"ApprovalForAll(address,address,bool)": {
								"details": "Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
							},
							"Transfer(address,address,uint256)": {
								"details": "Emitted when `tokenId` token is transferred from `from` to `to`."
							}
						},
						"kind": "dev",
						"methods": {
							"approve(address,uint256)": {
								"details": "Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event."
							},
							"balanceOf(address)": {
								"details": "Returns the number of tokens in ``owner``'s account."
							},
							"getApproved(uint256)": {
								"details": "Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"isApprovedForAll(address,address)": {
								"details": "Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}"
							},
							"ownerOf(uint256)": {
								"details": "Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist."
							},
							"safeTransferFrom(address,address,uint256)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"safeTransferFrom(address,address,uint256,bytes)": {
								"details": "Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event."
							},
							"setApprovalForAll(address,bool)": {
								"details": "Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event."
							},
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							},
							"transferFrom(address,address,uint256)": {
								"details": "Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"approve(address,uint256)": "095ea7b3",
							"balanceOf(address)": "70a08231",
							"getApproved(uint256)": "081812fc",
							"isApprovedForAll(address,address)": "e985e9c5",
							"ownerOf(uint256)": "6352211e",
							"safeTransferFrom(address,address,uint256)": "42842e0e",
							"safeTransferFrom(address,address,uint256,bytes)": "b88d4fde",
							"setApprovalForAll(address,bool)": "a22cb465",
							"supportsInterface(bytes4)": "01ffc9a7",
							"transferFrom(address,address,uint256)": "23b872dd"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Required interface of an ERC721 compliant contract.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when `owner` enables `approved` to manage the `tokenId` token.\"},\"ApprovalForAll(address,address,bool)\":{\"details\":\"Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `tokenId` token is transferred from `from` to `to`.\"}},\"kind\":\"dev\",\"methods\":{\"approve(address,uint256)\":{\"details\":\"Gives permission to `to` to transfer `tokenId` token to another account. The approval is cleared when the token is transferred. Only a single account can be approved at a time, so approving the zero address clears previous approvals. Requirements: - The caller must own the token or be an approved operator. - `tokenId` must exist. Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the number of tokens in ``owner``'s account.\"},\"getApproved(uint256)\":{\"details\":\"Returns the account approved for `tokenId` token. Requirements: - `tokenId` must exist.\"},\"isApprovedForAll(address,address)\":{\"details\":\"Returns if the `operator` is allowed to manage all of the assets of `owner`. See {setApprovalForAll}\"},\"ownerOf(uint256)\":{\"details\":\"Returns the owner of the `tokenId` token. Requirements: - `tokenId` must exist.\"},\"safeTransferFrom(address,address,uint256)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients are aware of the ERC721 protocol to prevent tokens from being forever locked. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"safeTransferFrom(address,address,uint256,bytes)\":{\"details\":\"Safely transfers `tokenId` token from `from` to `to`. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must exist and be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer. Emits a {Transfer} event.\"},\"setApprovalForAll(address,bool)\":{\"details\":\"Approve or remove `operator` as an operator for the caller. Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller. Requirements: - The `operator` cannot be the caller. Emits an {ApprovalForAll} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Transfers `tokenId` token from `from` to `to`. WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721 or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must understand this adds an external call which potentially creates a reentrancy vulnerability. Requirements: - `from` cannot be the zero address. - `to` cannot be the zero address. - `tokenId` token must be owned by `from`. - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\":\"IERC721Upgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\":{\"keccak256\":\"0xbe63437e37e32162d5d11ea8f11a44378c092b4bcbb05b51a813fe4bf33297d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68a514febde6ffd8afe3cb5b40815d10c0a926063237d5d167cbaa90239f75ae\",\"dweb:/ipfs/QmVBvYeR6oGBw7K7vu5FMotr8josejtaGwugM68VTZacww\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ContextUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":\"ContextUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol": {
				"PausableUpgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.",
						"errors": {
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							}
						},
						"kind": "dev",
						"methods": {
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"paused()": "5c975abb"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This module is used through inheritance. It will make available the modifiers `whenNotPaused` and `whenPaused`, which can be applied to the functions of your contract. Note that they will not be pausable by simply including this module, only once the modifiers are put in place.\",\"errors\":{\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":\"PausableUpgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0x92915b7f7f642c6be3f65bfd1522feb5d5b6ef25f755f4dbb51df32c868f2f97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85ad36d5cc7e190e1ee6c94b24659bc3a31396c4c36b6ffa6a509e10661f8007\",\"dweb:/ipfs/QmPFyc4zMh2zo6YWZt25gjm3YdR2hg6wGETaWw256fMmJJ\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
				"ERC165Upgradeable": {
					"abi": [
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```",
						"errors": {
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							}
						},
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC165} interface. Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check for the additional interface id that will be supported. For example: ```solidity function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId); } ```\",\"errors\":{\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"}},\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":\"ERC165Upgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xdaba3f7c42c55b2896353f32bd27d4d5f8bae741b3b05d4c53f67abc4dc47ce8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fa2e61141c602510bcd2cd936ed9561922ac8772a9b9c9a9db091a74e354a45\",\"dweb:/ipfs/QmcHQDDoEBwJmwUbzoVkytvJsBx3KVHYFFnDkvRGWh9Wmh\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol": {
				"IERC165Upgradeable": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":\"IERC165Upgradeable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"IAccessControl": {
					"abi": [
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "External interface of AccessControl declared to support ERC165 detection.",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							]
						},
						"events": {
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							}
						},
						"kind": "dev",
						"methods": {
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"External interface of AccessControl declared to support ERC165 detection.\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}]},\"events\":{\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"}},\"kind\":\"dev\",\"methods\":{\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {AccessControl-_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":\"IAccessControl\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"IERC1822Proxiable": {
					"abi": [
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.",
						"kind": "dev",
						"methods": {
							"proxiableUUID()": {
								"details": "Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"proxiableUUID()": "52d1902d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified proxy whose upgrades are fully controlled by the current implementation.\",\"kind\":\"dev\",\"methods\":{\"proxiableUUID()\":{\"details\":\"Returns the storage slot that the proxiable contract assumes is being used to store the implementation address. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":\"IERC1822Proxiable\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ERC1967Utils": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "admin",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidAdmin",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidBeacon",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "previousAdmin",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "address",
									"name": "newAdmin",
									"type": "address"
								}
							],
							"name": "AdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "beacon",
									"type": "address"
								}
							],
							"name": "BeaconUpgraded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						}
					],
					"devdoc": {
						"details": "This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.",
						"errors": {
							"ERC1967InvalidAdmin(address)": [
								{
									"details": "The `admin` of the proxy is invalid."
								}
							],
							"ERC1967InvalidBeacon(address)": [
								{
									"details": "The `beacon` of the proxy is invalid."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							]
						},
						"events": {
							"AdminChanged(address,address)": {
								"details": "Emitted when the admin account has changed."
							},
							"BeaconUpgraded(address)": {
								"details": "Emitted when the beacon is changed."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {},
						"stateVariables": {
							"ADMIN_SLOT": {
								"details": "Storage slot with the admin of the contract. This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
							},
							"BEACON_SLOT": {
								"details": "The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
							},
							"IMPLEMENTATION_SLOT": {
								"details": "Storage slot with the address of the current implementation. This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":449:6722  library ERC1967Utils {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":449:6722  library ERC1967Utils {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220fd42ca2fcf8e8e4891947f8ebd0dc602d1b7523d29745780b132c0f393eecc8c64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220fd42ca2fcf8e8e4891947f8ebd0dc602d1b7523d29745780b132c0f393eecc8c64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT TIMESTAMP 0xCA 0x2F 0xCF DUP15 DUP15 BASEFEE SWAP2 SWAP5 PUSH32 0x8EBD0DC602D1B7523D29745780B132C0F393EECC8C64736F6C634300081A0033 ",
							"sourceMap": "449:6273:11:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;449:6273:11;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220fd42ca2fcf8e8e4891947f8ebd0dc602d1b7523d29745780b132c0f393eecc8c64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 REVERT TIMESTAMP 0xCA 0x2F 0xCF DUP15 DUP15 BASEFEE SWAP2 SWAP5 PUSH32 0x8EBD0DC602D1B7523D29745780B132C0F393EECC8C64736F6C634300081A0033 ",
							"sourceMap": "449:6273:11:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_checkNonPayable()": "infinite",
								"_setAdmin(address)": "infinite",
								"_setBeacon(address)": "infinite",
								"_setImplementation(address)": "infinite",
								"changeAdmin(address)": "infinite",
								"getAdmin()": "infinite",
								"getBeacon()": "infinite",
								"getImplementation()": "infinite",
								"upgradeBeaconToAndCall(address,bytes memory)": "infinite",
								"upgradeToAndCall(address,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH #[$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH [$]",
									"source": 11,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 11,
									"value": "B"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "CODECOPY",
									"source": 11
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP1",
									"source": 11
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MLOAD",
									"source": 11
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "BYTE",
									"source": 11
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "EQ",
									"source": 11
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH [tag]",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "JUMPI",
									"source": 11
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 11,
									"value": "4"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 11,
									"value": "24"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "REVERT",
									"source": 11
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "tag",
									"source": 11,
									"value": "1"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "JUMPDEST",
									"source": 11
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "ADDRESS",
									"source": 11
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 11,
									"value": "0"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MSTORE",
									"source": 11
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "PUSH",
									"source": 11,
									"value": "73"
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "MSTORE8",
									"source": 11
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP3",
									"source": 11
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "DUP2",
									"source": 11
								},
								{
									"begin": 449,
									"end": 6722,
									"name": "RETURN",
									"source": 11
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220fd42ca2fcf8e8e4891947f8ebd0dc602d1b7523d29745780b132c0f393eecc8c64736f6c634300081a0033",
									".code": [
										{
											"begin": 449,
											"end": 6722,
											"name": "PUSHDEPLOYADDRESS",
											"source": 11
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "ADDRESS",
											"source": 11
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "EQ",
											"source": 11
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "PUSH",
											"source": 11,
											"value": "80"
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 449,
											"end": 6722,
											"name": "REVERT",
											"source": 11
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"src/smartcontracts/CryptoQuestSwap.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"admin\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidAdmin\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidBeacon\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAdmin\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAdmin\",\"type\":\"address\"}],\"name\":\"AdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"beacon\",\"type\":\"address\"}],\"name\":\"BeaconUpgraded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"}],\"devdoc\":{\"details\":\"This abstract contract provides getters and event emitting update functions for https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots.\",\"errors\":{\"ERC1967InvalidAdmin(address)\":[{\"details\":\"The `admin` of the proxy is invalid.\"}],\"ERC1967InvalidBeacon(address)\":[{\"details\":\"The `beacon` of the proxy is invalid.\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}]},\"events\":{\"AdminChanged(address,address)\":{\"details\":\"Emitted when the admin account has changed.\"},\"BeaconUpgraded(address)\":{\"details\":\"Emitted when the beacon is changed.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{},\"stateVariables\":{\"ADMIN_SLOT\":{\"details\":\"Storage slot with the admin of the contract. This is the keccak-256 hash of \\\"eip1967.proxy.admin\\\" subtracted by 1.\"},\"BEACON_SLOT\":{\"details\":\"The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy. This is the keccak-256 hash of \\\"eip1967.proxy.beacon\\\" subtracted by 1.\"},\"IMPLEMENTATION_SLOT\":{\"details\":\"Storage slot with the address of the current implementation. This is the keccak-256 hash of \\\"eip1967.proxy.implementation\\\" subtracted by 1.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":\"ERC1967Utils\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"IBeacon": {
					"abi": [
						{
							"inputs": [],
							"name": "implementation",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "This is the interface that {BeaconProxy} expects of its beacon.",
						"kind": "dev",
						"methods": {
							"implementation()": {
								"details": "Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"implementation()": "5c60da1b"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"implementation\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"This is the interface that {BeaconProxy} expects of its beacon.\",\"kind\":\"dev\",\"methods\":{\"implementation()\":{\"details\":\"Must return an address that can be used as a delegate call target. {UpgradeableBeacon} will check that this address is a contract.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":\"IBeacon\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "AddressInsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"AddressInsufficientBalance(address)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":195:6261  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220a03b0ca46f65fefcfd432545a0b8a9b234277d39a37bdf0425bf228a8136e72e64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220a03b0ca46f65fefcfd432545a0b8a9b234277d39a37bdf0425bf228a8136e72e64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 EXTCODESIZE 0xC LOG4 PUSH16 0x65FEFCFD432545A0B8A9B234277D39A3 PUSH28 0xDF0425BF228A8136E72E64736F6C634300081A003300000000000000 ",
							"sourceMap": "195:6066:13:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;195:6066:13;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220a03b0ca46f65fefcfd432545a0b8a9b234277d39a37bdf0425bf228a8136e72e64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LOG0 EXTCODESIZE 0xC LOG4 PUSH16 0x65FEFCFD432545A0B8A9B234277D39A3 PUSH28 0xDF0425BF228A8136E72E64736F6C634300081A003300000000000000 ",
							"sourceMap": "195:6066:13:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH #[$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [$]",
									"source": 13,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 13,
									"value": "B"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "CODECOPY",
									"source": 13
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP1",
									"source": 13
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MLOAD",
									"source": 13
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "BYTE",
									"source": 13
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "EQ",
									"source": 13
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH [tag]",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPI",
									"source": 13
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 13,
									"value": "4"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 13,
									"value": "24"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "REVERT",
									"source": 13
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "tag",
									"source": 13,
									"value": "1"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "JUMPDEST",
									"source": 13
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "ADDRESS",
									"source": 13
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 13,
									"value": "0"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE",
									"source": 13
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "PUSH",
									"source": 13,
									"value": "73"
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "MSTORE8",
									"source": 13
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP3",
									"source": 13
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "DUP2",
									"source": 13
								},
								{
									"begin": 195,
									"end": 6261,
									"name": "RETURN",
									"source": 13
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220a03b0ca46f65fefcfd432545a0b8a9b234277d39a37bdf0425bf228a8136e72e64736f6c634300081a0033",
									".code": [
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSHDEPLOYADDRESS",
											"source": 13
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "ADDRESS",
											"source": 13
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 13,
											"value": "80"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 195,
											"end": 6261,
											"name": "REVERT",
											"source": 13
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"src/smartcontracts/CryptoQuestSwap.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"StorageSlot": {
					"abi": [],
					"devdoc": {
						"details": "Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, shl(0xe0, 0x4e487b71))\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/StorageSlot.sol\":1245:3930  library StorageSlot {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122009971487be252fe8fb3f93e06bd7d41310db95f162c4852fda7c70255c9c50c864736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "60556032600b8282823980515f1a607314602657634e487b7160e01b5f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122009971487be252fe8fb3f93e06bd7d41310db95f162c4852fda7c70255c9c50c864736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x32 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x26 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD SWAP8 EQ DUP8 0xBE 0x25 0x2F 0xE8 0xFB EXTCODEHASH SWAP4 0xE0 PUSH12 0xD7D41310DB95F162C4852FDA PUSH29 0x70255C9C50C864736F6C634300081A0033000000000000000000000000 ",
							"sourceMap": "1245:2685:14:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;1245:2685:14;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122009971487be252fe8fb3f93e06bd7d41310db95f162c4852fda7c70255c9c50c864736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 MULMOD SWAP8 EQ DUP8 0xBE 0x25 0x2F 0xE8 0xFB EXTCODEHASH SWAP4 0xE0 PUSH12 0xD7D41310DB95F162C4852FDA PUSH29 0x70255C9C50C864736F6C634300081A0033000000000000000000000000 ",
							"sourceMap": "1245:2685:14:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "96",
								"totalCost": "17096"
							},
							"internal": {
								"getAddressSlot(bytes32)": "infinite",
								"getBooleanSlot(bytes32)": "infinite",
								"getBytes32Slot(bytes32)": "infinite",
								"getBytesSlot(bytes storage pointer)": "infinite",
								"getBytesSlot(bytes32)": "infinite",
								"getStringSlot(bytes32)": "infinite",
								"getStringSlot(string storage pointer)": "infinite",
								"getUint256Slot(bytes32)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH #[$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [$]",
									"source": 14,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 14,
									"value": "B"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "CODECOPY",
									"source": 14
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP1",
									"source": 14
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MLOAD",
									"source": 14
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "BYTE",
									"source": 14
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "EQ",
									"source": 14
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH [tag]",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPI",
									"source": 14
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "4E487B71"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 14,
									"value": "4"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 14,
									"value": "24"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "REVERT",
									"source": 14
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "tag",
									"source": 14,
									"value": "1"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "JUMPDEST",
									"source": 14
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "ADDRESS",
									"source": 14
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 14,
									"value": "0"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE",
									"source": 14
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "PUSH",
									"source": 14,
									"value": "73"
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "MSTORE8",
									"source": 14
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP3",
									"source": 14
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "DUP2",
									"source": 14
								},
								{
									"begin": 1245,
									"end": 3930,
									"name": "RETURN",
									"source": 14
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122009971487be252fe8fb3f93e06bd7d41310db95f162c4852fda7c70255c9c50c864736f6c634300081a0033",
									".code": [
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSHDEPLOYADDRESS",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "ADDRESS",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "EQ",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 14,
											"value": "80"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 14,
											"value": "40"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "MSTORE",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "PUSH",
											"source": 14,
											"value": "0"
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "DUP1",
											"source": 14
										},
										{
											"begin": 1245,
											"end": 3930,
											"name": "REVERT",
											"source": 14
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"src/smartcontracts/CryptoQuestSwap.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Library for reading and writing primitive types to specific storage slots. Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts. This library helps with reading and writing to such slots without the need for inline assembly. The functions in this library return Slot structs that contain a `value` member that can be used to read or write. Example usage to set ERC1967 implementation slot: ```solidity contract ERC1967 {     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;     function _getImplementation() internal view returns (address) {         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;     }     function _setImplementation(address newImplementation) internal {         require(newImplementation.code.length > 0);         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;     } } ```\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":\"StorageSlot\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.",
						"kind": "dev",
						"methods": {
							"supportsInterface(bytes4)": {
								"details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC165 standard, as defined in the https://eips.ethereum.org/EIPS/eip-165[EIP]. Implementers can declare support of contract interfaces, which can then be queried by others ({ERC165Checker}). For an implementation, see {ERC165}.\",\"kind\":\"dev\",\"methods\":{\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section] to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"src/smartcontracts/CryptoQuestSwap.sol": {
				"CryptoQuestSwap": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [],
							"name": "AccessControlBadConfirmation",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"internalType": "bytes32",
									"name": "neededRole",
									"type": "bytes32"
								}
							],
							"name": "AccessControlUnauthorizedAccount",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "ERC1967InvalidImplementation",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ERC1967NonPayable",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "EnforcedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "ExpectedPause",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedInnerCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "InvalidInitialization",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "NotInitializing",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "UUPSUnauthorizedCallContext",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "slot",
									"type": "bytes32"
								}
							],
							"name": "UUPSUnsupportedProxiableUUID",
							"type": "error"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "uint64",
									"name": "version",
									"type": "uint64"
								}
							],
							"name": "Initialized",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "provider",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "ethAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"name": "LiquidityAdded",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "provider",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "ethAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"name": "LiquidityRemoved",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "swapper",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "nftContract",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "ethAmount",
									"type": "uint256"
								}
							],
							"name": "NFTSwapped",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Paused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "previousAdminRole",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "newAdminRole",
									"type": "bytes32"
								}
							],
							"name": "RoleAdminChanged",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleGranted",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "account",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "sender",
									"type": "address"
								}
							],
							"name": "RoleRevoked",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "swapper",
									"type": "address"
								},
								{
									"indexed": true,
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								},
								{
									"indexed": false,
									"internalType": "uint256",
									"name": "ethAmount",
									"type": "uint256"
								}
							],
							"name": "TokenSwapped",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": false,
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "Unpaused",
							"type": "event"
						},
						{
							"anonymous": false,
							"inputs": [
								{
									"indexed": true,
									"internalType": "address",
									"name": "implementation",
									"type": "address"
								}
							],
							"name": "Upgraded",
							"type": "event"
						},
						{
							"inputs": [],
							"name": "DEFAULT_ADMIN_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "FEE_RATE",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "LIQUIDITY_MANAGER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "PAUSER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "UPGRADER_ROLE",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "UPGRADE_INTERFACE_VERSION",
							"outputs": [
								{
									"internalType": "string",
									"name": "",
									"type": "string"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								}
							],
							"name": "addLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cqtNFT",
							"outputs": [
								{
									"internalType": "contract IERC721Upgradeable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "cqtToken",
							"outputs": [
								{
									"internalType": "contract IERC20Upgradeable",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								}
							],
							"name": "getRoleAdmin",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "grantRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "hasRole",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "defaultAdmin",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "pauser",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "upgrader",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "liquidityManager",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "cqtTokenAddress",
									"type": "address"
								},
								{
									"internalType": "address",
									"name": "cqtNFTAddress",
									"type": "address"
								}
							],
							"name": "initialize",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "liquidityPools",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "ethAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "totalLiquidity",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "pause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "paused",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "proxiableUUID",
							"outputs": [
								{
									"internalType": "bytes32",
									"name": "",
									"type": "bytes32"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "liquidity",
									"type": "uint256"
								}
							],
							"name": "removeLiquidity",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "ethAmount",
									"type": "uint256"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "callerConfirmation",
									"type": "address"
								}
							],
							"name": "renounceRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes32",
									"name": "role",
									"type": "bytes32"
								},
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "revokeRole",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "minETH",
									"type": "uint256"
								}
							],
							"name": "swapETHForNFT",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "minTokens",
									"type": "uint256"
								}
							],
							"name": "swapETHForTokens",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "minETH",
									"type": "uint256"
								}
							],
							"name": "swapNFTForETH",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "tokenAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "minETH",
									"type": "uint256"
								}
							],
							"name": "swapTokensForETH",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "unpause",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "newTokenAmount",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "newEthAmount",
									"type": "uint256"
								}
							],
							"name": "updateLiquidityPool",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "newImplementation",
									"type": "address"
								},
								{
									"internalType": "bytes",
									"name": "data",
									"type": "bytes"
								}
							],
							"name": "upgradeToAndCall",
							"outputs": [],
							"stateMutability": "payable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawETH",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "tokenId",
									"type": "uint256"
								}
							],
							"name": "withdrawNFT",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "token",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "withdrawTokens",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"custom:security-contact": "jacquedegraff@creodamo.com",
						"errors": {
							"AccessControlBadConfirmation()": [
								{
									"details": "The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
								}
							],
							"AccessControlUnauthorizedAccount(address,bytes32)": [
								{
									"details": "The `account` is missing a role."
								}
							],
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							],
							"ERC1967InvalidImplementation(address)": [
								{
									"details": "The `implementation` of the proxy is invalid."
								}
							],
							"ERC1967NonPayable()": [
								{
									"details": "An upgrade function sees `msg.value > 0` that may be lost."
								}
							],
							"EnforcedPause()": [
								{
									"details": "The operation failed because the contract is paused."
								}
							],
							"ExpectedPause()": [
								{
									"details": "The operation failed because the contract is not paused."
								}
							],
							"FailedInnerCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"InvalidInitialization()": [
								{
									"details": "The contract is already initialized."
								}
							],
							"NotInitializing()": [
								{
									"details": "The contract is not initializing."
								}
							],
							"UUPSUnauthorizedCallContext()": [
								{
									"details": "The call is from an unauthorized context."
								}
							],
							"UUPSUnsupportedProxiableUUID(bytes32)": [
								{
									"details": "The storage `slot` is unsupported as a UUID."
								}
							]
						},
						"events": {
							"Initialized(uint64)": {
								"details": "Triggered when the contract has been initialized or reinitialized."
							},
							"Paused(address)": {
								"details": "Emitted when the pause is triggered by `account`."
							},
							"RoleAdminChanged(bytes32,bytes32,bytes32)": {
								"details": "Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this."
							},
							"RoleGranted(bytes32,address,address)": {
								"details": "Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}."
							},
							"RoleRevoked(bytes32,address,address)": {
								"details": "Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
							},
							"Unpaused(address)": {
								"details": "Emitted when the pause is lifted by `account`."
							},
							"Upgraded(address)": {
								"details": "Emitted when the implementation is upgraded."
							}
						},
						"kind": "dev",
						"methods": {
							"constructor": {
								"custom:oz-upgrades-unsafe-allow": "constructor"
							},
							"getRoleAdmin(bytes32)": {
								"details": "Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}."
							},
							"grantRole(bytes32,address)": {
								"details": "Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event."
							},
							"hasRole(bytes32,address)": {
								"details": "Returns `true` if `account` has been granted `role`."
							},
							"paused()": {
								"details": "Returns true if the contract is paused, and false otherwise."
							},
							"proxiableUUID()": {
								"details": "Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
							},
							"renounceRole(bytes32,address)": {
								"details": "Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event."
							},
							"revokeRole(bytes32,address)": {
								"details": "Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event."
							},
							"supportsInterface(bytes4)": {
								"details": "See {IERC165-supportsInterface}."
							},
							"upgradeToAndCall(address,bytes)": {
								"custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
								"details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
							}
						},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"src/smartcontracts/CryptoQuestSwap.sol\":638:8779  contract CryptoQuestSwap is Initializable, PausableUpgradeable, AccessControlUpgradeable, UUPSUpgradeable {... */\n  mstore(0x40, 0xa0)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1171:1175  this */\n  address\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1128:1176  address private immutable __self = address(this) */\n  0x80\n  mstore\n    /* \"src/smartcontracts/CryptoQuestSwap.sol\":1901:1954  constructor() {... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"src/smartcontracts/CryptoQuestSwap.sol\":1925:1947  _disableInitializers() */\n  tag_4\n    /* \"src/smartcontracts/CryptoQuestSwap.sol\":1925:1945  _disableInitializers */\n  tag_5\n    /* \"src/smartcontracts/CryptoQuestSwap.sol\":1925:1947  _disableInitializers() */\n  jump\t// in\ntag_4:\n    /* \"src/smartcontracts/CryptoQuestSwap.sol\":638:8779  contract CryptoQuestSwap is Initializable, PausableUpgradeable, AccessControlUpgradeable, UUPSUpgradeable {... */\n  jump(tag_15)\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7711:8133  function _disableInitializers() internal virtual {... */\ntag_5:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n  0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7900:7915  $._initializing */\n  dup1\n  sload\n  0x010000000000000000\n  swap1\n  div\n  0xff\n  and\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7896:7972  if ($._initializing) {... */\n  iszero\n  tag_10\n  jumpi\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7938:7961  InvalidInitialization() */\n  mload(0x40)\n  shl(0xe0, 0xf92ee8a9)\n  dup2\n  mstore\n  0x04\n  add\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7896:7972  if ($._initializing) {... */\ntag_10:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7985:7999  $._initialized */\n  dup1\n  sload\n  sub(shl(0x40, 0x01), 0x01)\n  swap1\n  dup2\n  and\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7985:8019  $._initialized != type(uint64).max */\n  eq\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7981:8127  if ($._initialized != type(uint64).max) {... */\n  tag_11\n  jumpi\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8035:8068  $._initialized = type(uint64).max */\n  dup1\n  sload\n  not(sub(shl(0x40, 0x01), 0x01))\n  and\n  sub(shl(0x40, 0x01), 0x01)\n  swap1\n  dup2\n  or\n  dup3\n  sstore\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8087:8116  Initialized(type(uint64).max) */\n  mload(0x40)\n    /* \"#utility.yul\":158:208   */\n  swap1\n  dup2\n  mstore\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8087:8116  Initialized(type(uint64).max) */\n  0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n  swap1\n    /* \"#utility.yul\":146:148   */\n  0x20\n    /* \"#utility.yul\":131:149   */\n  add\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8087:8116  Initialized(type(uint64).max) */\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  log1\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7981:8127  if ($._initialized != type(uint64).max) {... */\ntag_11:\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7760:8133  {... */\n  pop\n    /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7711:8133  function _disableInitializers() internal virtual {... */\n  jump\t// out\n    /* \"#utility.yul\":14:214   */\ntag_15:\n    /* \"src/smartcontracts/CryptoQuestSwap.sol\":638:8779  contract CryptoQuestSwap is Initializable, PausableUpgradeable, AccessControlUpgradeable, UUPSUpgradeable {... */\n  mload(0x80)\n  codecopy(0x00, dataOffset(sub_0), dataSize(sub_0))\n  0x00\n  assignImmutable(\"0x3b04ad91523c4dcf551e081621e633b9099d51bf9c5461e58c3bc7354a578b27\")\n  return(0x00, dataSize(sub_0))\nstop\n\nsub_0: assembly {\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":638:8779  contract CryptoQuestSwap is Initializable, PausableUpgradeable, AccessControlUpgradeable, UUPSUpgradeable {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x56688700\n      gt\n      tag_33\n      jumpi\n      dup1\n      0xcc2a9a5b\n      gt\n      tag_34\n      jumpi\n      dup1\n      0xe15cc8da\n      gt\n      tag_35\n      jumpi\n      dup1\n      0xe15cc8da\n      eq\n      tag_29\n      jumpi\n      dup1\n      0xe63ab1e9\n      eq\n      tag_30\n      jumpi\n      dup1\n      0xf14210a6\n      eq\n      tag_31\n      jumpi\n      dup1\n      0xf72c0d8b\n      eq\n      tag_32\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_35:\n      dup1\n      0xcc2a9a5b\n      eq\n      tag_25\n      jumpi\n      dup1\n      0xd547741f\n      eq\n      tag_26\n      jumpi\n      dup1\n      0xd9a37ad2\n      eq\n      tag_27\n      jumpi\n      dup1\n      0xda069683\n      eq\n      tag_28\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_34:\n      dup1\n      0xa201ccf6\n      gt\n      tag_36\n      jumpi\n      dup1\n      0xa201ccf6\n      eq\n      tag_21\n      jumpi\n      dup1\n      0xa217fddf\n      eq\n      tag_22\n      jumpi\n      dup1\n      0xad3cb1cc\n      eq\n      tag_23\n      jumpi\n      dup1\n      0xc7088313\n      eq\n      tag_24\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_36:\n      dup1\n      0x56688700\n      eq\n      tag_17\n      jumpi\n      dup1\n      0x5c975abb\n      eq\n      tag_18\n      jumpi\n      dup1\n      0x8456cb59\n      eq\n      tag_19\n      jumpi\n      dup1\n      0x91d14854\n      eq\n      tag_20\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_33:\n      dup1\n      0x2f2ff15d\n      gt\n      tag_37\n      jumpi\n      dup1\n      0x49f0346e\n      gt\n      tag_38\n      jumpi\n      dup1\n      0x49f0346e\n      eq\n      tag_13\n      jumpi\n      dup1\n      0x4f1ef286\n      eq\n      tag_14\n      jumpi\n      dup1\n      0x51422e97\n      eq\n      tag_15\n      jumpi\n      dup1\n      0x52d1902d\n      eq\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_38:\n      dup1\n      0x2f2ff15d\n      eq\n      tag_9\n      jumpi\n      dup1\n      0x34aab064\n      eq\n      tag_10\n      jumpi\n      dup1\n      0x36568abe\n      eq\n      tag_11\n      jumpi\n      dup1\n      0x3f4ba83a\n      eq\n      tag_12\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_37:\n      dup1\n      0x0b0fd47e\n      gt\n      tag_39\n      jumpi\n      dup1\n      0x0b0fd47e\n      eq\n      tag_5\n      jumpi\n      dup1\n      0x242f0551\n      eq\n      tag_6\n      jumpi\n      dup1\n      0x248a9ca3\n      eq\n      tag_7\n      jumpi\n      dup1\n      0x2d11c58a\n      eq\n      tag_8\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_39:\n      dup1\n      0x01ffc9a7\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x023245d7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0x06b091f9\n      eq\n      tag_4\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3443:3645  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_2:\n      callvalue\n      dup1\n      iszero\n      tag_40\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_40:\n      pop\n      tag_41\n      tag_42\n      calldatasize\n      0x04\n      tag_43\n      jump\t// in\n    tag_42:\n      tag_44\n      jump\t// in\n    tag_41:\n      mload(0x40)\n        /* \"#utility.yul\":470:484   */\n      swap1\n      iszero\n        /* \"#utility.yul\":463:485   */\n      iszero\n        /* \"#utility.yul\":445:486   */\n      dup2\n      mstore\n        /* \"#utility.yul\":433:435   */\n      0x20\n        /* \"#utility.yul\":418:436   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3443:3645  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_45:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8625:8777  function withdrawNFT(uint256 tokenId) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_47\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_47:\n      pop\n      tag_48\n      tag_49\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_49:\n      tag_51\n      jump\t// in\n    tag_48:\n      stop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8456:8619  function withdrawTokens(address token, uint256 amount) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_52\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_52:\n      pop\n      tag_48\n      tag_54\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_54:\n      tag_56\n      jump\t// in\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":1283:1338  mapping(address => LiquidityPool) public liquidityPools */\n    tag_5:\n      callvalue\n      dup1\n      iszero\n      tag_57\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_57:\n      pop\n      tag_58\n      tag_59\n      calldatasize\n      0x04\n      tag_60\n      jump\t// in\n    tag_59:\n      0x02\n      0x20\n      dup2\n      swap1\n      mstore\n      0x00\n      swap2\n      dup3\n      mstore\n      0x40\n      swap1\n      swap2\n      keccak256\n      dup1\n      sload\n      0x01\n      dup3\n      add\n      sload\n      swap2\n      swap1\n      swap3\n      add\n      sload\n      dup4\n      jump\n    tag_58:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":1690:1715   */\n      swap4\n      dup5\n      mstore\n        /* \"#utility.yul\":1746:1748   */\n      0x20\n        /* \"#utility.yul\":1731:1749   */\n      dup5\n      add\n        /* \"#utility.yul\":1724:1758   */\n      swap3\n      swap1\n      swap3\n      mstore\n        /* \"#utility.yul\":1774:1792   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":1767:1801   */\n      mstore\n        /* \"#utility.yul\":1678:1680   */\n      0x60\n        /* \"#utility.yul\":1663:1681   */\n      add\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":1283:1338  mapping(address => LiquidityPool) public liquidityPools */\n      tag_45\n        /* \"#utility.yul\":1488:1807   */\n      jump\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":890:974  bytes32 public constant LIQUIDITY_MANAGER_ROLE = keccak256(\"LIQUIDITY_MANAGER_ROLE\") */\n    tag_6:\n      callvalue\n      dup1\n      iszero\n      tag_64\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_64:\n      pop\n      tag_65\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":939:974  keccak256(\"LIQUIDITY_MANAGER_ROLE\") */\n      0x77e60b99a50d27fb027f6912a507d956105b4148adab27a86d235c8bcca8fa2f\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":890:974  bytes32 public constant LIQUIDITY_MANAGER_ROLE = keccak256(\"LIQUIDITY_MANAGER_ROLE\") */\n      dup2\n      jump\n    tag_65:\n      mload(0x40)\n        /* \"#utility.yul\":1958:1983   */\n      swap1\n      dup2\n      mstore\n        /* \"#utility.yul\":1946:1948   */\n      0x20\n        /* \"#utility.yul\":1931:1949   */\n      add\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":890:974  bytes32 public constant LIQUIDITY_MANAGER_ROLE = keccak256(\"LIQUIDITY_MANAGER_ROLE\") */\n      tag_45\n        /* \"#utility.yul\":1812:1989   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4759:4950  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_7:\n      callvalue\n      dup1\n      iszero\n      tag_69\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_69:\n      pop\n      tag_65\n      tag_71\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_71:\n      tag_73\n      jump\t// in\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":981:1017  uint256 public constant FEE_RATE = 3 */\n    tag_8:\n      callvalue\n      dup1\n      iszero\n      tag_75\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_75:\n      pop\n      tag_65\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":1016:1017  3 */\n      0x03\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":981:1017  uint256 public constant FEE_RATE = 3 */\n      dup2\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5246:5382  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_9:\n      callvalue\n      dup1\n      iszero\n      tag_80\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_80:\n      pop\n      tag_48\n      tag_82\n      calldatasize\n      0x04\n      tag_83\n      jump\t// in\n    tag_82:\n      tag_84\n      jump\t// in\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":1036:1069  IERC20Upgradeable public cqtToken */\n    tag_10:\n      callvalue\n      dup1\n      iszero\n      tag_85\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_85:\n      pop\n      sload(0x00)\n      tag_86\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n    tag_86:\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2968:3000   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2950:3001   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2938:2940   */\n      0x20\n        /* \"#utility.yul\":2923:2941   */\n      add\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":1036:1069  IERC20Upgradeable public cqtToken */\n      tag_45\n        /* \"#utility.yul\":2779:3007   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6348:6593  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_11:\n      callvalue\n      dup1\n      iszero\n      tag_90\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_90:\n      pop\n      tag_48\n      tag_92\n      calldatasize\n      0x04\n      tag_83\n      jump\t// in\n    tag_92:\n      tag_93\n      jump\t// in\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2677:2752  function unpause() public onlyRole(PAUSER_ROLE) {... */\n    tag_12:\n      callvalue\n      dup1\n      iszero\n      tag_94\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_94:\n      pop\n      tag_48\n      tag_96\n      jump\t// in\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6319:6960  function swapETHForNFT(uint256 tokenId, uint256 minETH) external payable whenNotPaused {... */\n    tag_13:\n      tag_48\n      tag_98\n      calldatasize\n      0x04\n      tag_99\n      jump\t// in\n    tag_98:\n      tag_100\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4158:4372  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_14:\n      tag_48\n      tag_102\n      calldatasize\n      0x04\n      tag_103\n      jump\t// in\n    tag_102:\n      tag_104\n      jump\t// in\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4824:5527  function swapETHForTokens(address token, uint256 minTokens) external payable whenNotPaused {... */\n    tag_15:\n      tag_48\n      tag_106\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_106:\n      tag_107\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3705:3839  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_16:\n      callvalue\n      dup1\n      iszero\n      tag_108\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_108:\n      pop\n      tag_65\n      tag_110\n      jump\t// in\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2758:4007  function addLiquidity(address token, uint256 tokenAmount) external payable whenNotPaused returns (uint256) {... */\n    tag_17:\n      tag_65\n      tag_113\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_113:\n      tag_114\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2692:2837  function paused() public view virtual returns (bool) {... */\n    tag_18:\n      callvalue\n      dup1\n      iszero\n      tag_116\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_116:\n      pop\n      0x00\n      dup1\n      mload\n      0x20\n      data_c0c65a3718f3702d917c44106b91645b509d2e2d0979b70495c3babce192339f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2821:2830  $._paused */\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2692:2837  function paused() public view virtual returns (bool) {... */\n      jump(tag_41)\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2600:2671  function pause() public onlyRole(PAUSER_ROLE) {... */\n    tag_19:\n      callvalue\n      dup1\n      iszero\n      tag_120\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_120:\n      pop\n      tag_48\n      tag_122\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3732:3939  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_20:\n      callvalue\n      dup1\n      iszero\n      tag_123\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_123:\n      pop\n      tag_41\n      tag_125\n      calldatasize\n      0x04\n      tag_83\n      jump\t// in\n    tag_125:\n      tag_126\n      jump\t// in\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4013:4818  function removeLiquidity(address token, uint256 liquidity) external whenNotPaused returns (uint256 tokenAmount, uint256 ethAmount) {... */\n    tag_21:\n      callvalue\n      dup1\n      iszero\n      tag_128\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_128:\n      pop\n      tag_129\n      tag_130\n      calldatasize\n      0x04\n      tag_55\n      jump\t// in\n    tag_130:\n      tag_131\n      jump\t// in\n    tag_129:\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":4753:4778   */\n      swap3\n      dup4\n      mstore\n        /* \"#utility.yul\":4809:4811   */\n      0x20\n        /* \"#utility.yul\":4794:4812   */\n      dup4\n      add\n        /* \"#utility.yul\":4787:4821   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":4726:4744   */\n      add\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4013:4818  function removeLiquidity(address token, uint256 liquidity) external whenNotPaused returns (uint256 tokenAmount, uint256 ethAmount) {... */\n      tag_45\n        /* \"#utility.yul\":4579:4827   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2317:2366  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n    tag_22:\n      callvalue\n      dup1\n      iszero\n      tag_134\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_134:\n      pop\n      tag_65\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2362:2366  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2317:2366  bytes32 public constant DEFAULT_ADMIN_ROLE = 0x00 */\n      dup2\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":1819:1877  string public constant UPGRADE_INTERFACE_VERSION = \"5.0.0\" */\n    tag_23:\n      callvalue\n      dup1\n      iszero\n      tag_138\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_138:\n      pop\n      tag_139\n      mload(0x40)\n      dup1\n      0x40\n      add\n      0x40\n      mstore\n      dup1\n      0x05\n      dup2\n      mstore\n      0x20\n      add\n      shl(0xdc, 0x0352e302e3)\n      dup2\n      mstore\n      pop\n      dup2\n      jump\n    tag_139:\n      mload(0x40)\n      tag_45\n      swap2\n      swap1\n      tag_142\n      jump\t// in\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7987:8242  function updateLiquidityPool(address token, uint256 newTokenAmount, uint256 newEthAmount) external onlyRole(LIQUIDITY_MANAGER_ROLE) {... */\n    tag_24:\n      callvalue\n      dup1\n      iszero\n      tag_143\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_143:\n      pop\n      tag_48\n      tag_145\n      calldatasize\n      0x04\n      tag_146\n      jump\t// in\n    tag_145:\n      tag_147\n      jump\t// in\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":1960:2594  function initialize(... */\n    tag_25:\n      callvalue\n      dup1\n      iszero\n      tag_148\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_148:\n      pop\n      tag_48\n      tag_150\n      calldatasize\n      0x04\n      tag_151\n      jump\t// in\n    tag_150:\n      tag_152\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5662:5800  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_26:\n      callvalue\n      dup1\n      iszero\n      tag_153\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_153:\n      pop\n      tag_48\n      tag_155\n      calldatasize\n      0x04\n      tag_83\n      jump\t// in\n    tag_155:\n      tag_156\n      jump\t// in\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6966:7493  function swapNFTForETH(uint256 tokenId, uint256 minETH) external whenNotPaused {... */\n    tag_27:\n      callvalue\n      dup1\n      iszero\n      tag_157\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_157:\n      pop\n      tag_48\n      tag_159\n      calldatasize\n      0x04\n      tag_99\n      jump\t// in\n    tag_159:\n      tag_160\n      jump\t// in\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":1075:1107  IERC721Upgradeable public cqtNFT */\n    tag_28:\n      callvalue\n      dup1\n      iszero\n      tag_161\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_161:\n      pop\n      sload(0x01)\n      tag_86\n      swap1\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      dup2\n      jump\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5533:6313  function swapTokensForETH(address token, uint256 tokenAmount, uint256 minETH) external whenNotPaused {... */\n    tag_29:\n      callvalue\n      dup1\n      iszero\n      tag_166\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_166:\n      pop\n      tag_48\n      tag_168\n      calldatasize\n      0x04\n      tag_146\n      jump\t// in\n    tag_168:\n      tag_169\n      jump\t// in\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":750:812  bytes32 public constant PAUSER_ROLE = keccak256(\"PAUSER_ROLE\") */\n    tag_30:\n      callvalue\n      dup1\n      iszero\n      tag_170\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_170:\n      pop\n      tag_65\n      0x00\n      dup1\n      mload\n      0x20\n      data_9b87106a812d214d41ad9b68a21119e2948eaaf1040375c939ec808b8862455c\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      dup2\n      jump\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8248:8450  function withdrawETH(uint256 amount) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_31:\n      callvalue\n      dup1\n      iszero\n      tag_174\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_174:\n      pop\n      tag_48\n      tag_176\n      calldatasize\n      0x04\n      tag_50\n      jump\t// in\n    tag_176:\n      tag_177\n      jump\t// in\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":818:884  bytes32 public constant UPGRADER_ROLE = keccak256(\"UPGRADER_ROLE\") */\n    tag_32:\n      callvalue\n      dup1\n      iszero\n      tag_178\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_178:\n      pop\n      tag_65\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":858:884  keccak256(\"UPGRADER_ROLE\") */\n      0x189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":818:884  bytes32 public constant UPGRADER_ROLE = keccak256(\"UPGRADER_ROLE\") */\n      dup2\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3443:3645  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n    tag_44:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3528:3532  bool */\n      0x00\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3551:3598  interfaceId == type(IAccessControl).interfaceId */\n      dup3\n      and\n      shl(0xe0, 0x7965db0b)\n      eq\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3551:3638  interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      tag_184\n      jumpi\n      pop\n      shl(0xe0, 0x01ffc9a7)\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":1133:1173  interfaceId == type(IERC165).interfaceId */\n      dup4\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3602:3638  super.supportsInterface(interfaceId) */\n    tag_184:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3544:3638  return interfaceId == type(IAccessControl).interfaceId || super.supportsInterface(interfaceId) */\n      swap3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3443:3645  function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {... */\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8625:8777  function withdrawNFT(uint256 tokenId) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_51:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2362:2366  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_187\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2362:2366  0x00 */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_187:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8711:8717  cqtNFT */\n      sload(0x01)\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8711:8770  cqtNFT.safeTransferFrom(address(this), msg.sender, tokenId) */\n      mload(0x40)\n      shl(0xe1, 0x21421707)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8711:8717  cqtNFT */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8711:8734  cqtNFT.safeTransferFrom */\n      0x42842e0e\n      swap1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8711:8770  cqtNFT.safeTransferFrom(address(this), msg.sender, tokenId) */\n      tag_190\n      swap1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8743:8747  this */\n      address\n      swap1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8750:8760  msg.sender */\n      caller\n      swap1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8762:8769  tokenId */\n      dup8\n      swap1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8711:8770  cqtNFT.safeTransferFrom(address(this), msg.sender, tokenId) */\n      0x04\n      add\n      tag_191\n      jump\t// in\n    tag_190:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_192\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_192:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_194\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_194:\n      pop\n      pop\n      pop\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8625:8777  function withdrawNFT(uint256 tokenId) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8456:8619  function withdrawTokens(address token, uint256 amount) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_56:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2362:2366  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_196\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2362:2366  0x00 */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_196:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8559:8612  IERC20Upgradeable(token).transfer(msg.sender, amount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8593:8603  msg.sender */\n      caller\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8559:8612  IERC20Upgradeable(token).transfer(msg.sender, amount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7491:7542   */\n      mstore\n        /* \"#utility.yul\":7558:7576   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":7551:7585   */\n      dup4\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8559:8592  IERC20Upgradeable(token).transfer */\n      dup5\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":7464:7482   */\n      0x44\n      add\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8559:8612  IERC20Upgradeable(token).transfer(msg.sender, amount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_201\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_201:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_202\n      swap2\n      swap1\n      tag_203\n      jump\t// in\n    tag_202:\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8456:8619  function withdrawTokens(address token, uint256 amount) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4759:4950  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n    tag_73:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4824:4831  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4919:4933  $._roles[role] */\n      swap1\n      dup2\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_b3da67d1b252aeab7c8063542d95e75f82a5307a82535949bc38f7cf7ba8897f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4919:4943  $._roles[role].adminRole */\n      0x01\n      add\n      sload\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4759:4950  function getRoleAdmin(bytes32 role) public view virtual returns (bytes32) {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5246:5382  function grantRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_84:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5320:5338  getRoleAdmin(role) */\n      tag_207\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5333:5337  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5320:5332  getRoleAdmin */\n      tag_73\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5320:5338  getRoleAdmin(role) */\n      jump\t// in\n    tag_207:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_209\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_209:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5350:5375  _grantRole(role, account) */\n      tag_202\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5361:5365  role */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5367:5374  account */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5350:5360  _grantRole */\n      tag_212\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5350:5375  _grantRole(role, account) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6348:6593  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n    tag_93:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6441:6475  callerConfirmation != _msgSender() */\n      dup2\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6441:6475  callerConfirmation != _msgSender() */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6437:6539  if (callerConfirmation != _msgSender()) {... */\n      tag_216\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6498:6528  AccessControlBadConfirmation() */\n      mload(0x40)\n      shl(0xe1, 0x334bd919)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6437:6539  if (callerConfirmation != _msgSender()) {... */\n    tag_216:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6549:6586  _revokeRole(role, callerConfirmation) */\n      tag_217\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6561:6565  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6567:6585  callerConfirmation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6549:6560  _revokeRole */\n      tag_218\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6549:6586  _revokeRole(role, callerConfirmation) */\n      jump\t// in\n    tag_217:\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":6348:6593  function renounceRole(bytes32 role, address callerConfirmation) public virtual {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2677:2752  function unpause() public onlyRole(PAUSER_ROLE) {... */\n    tag_96:\n      0x00\n      dup1\n      mload\n      0x20\n      data_9b87106a812d214d41ad9b68a21119e2948eaaf1040375c939ec808b8862455c\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_220\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_220:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2735:2745  _unpause() */\n      tag_222\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2735:2743  _unpause */\n      tag_223\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2735:2745  _unpause() */\n      jump\t// in\n    tag_222:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2677:2752  function unpause() public onlyRole(PAUSER_ROLE) {... */\n      pop\n      jump\t// out\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6319:6960  function swapETHForNFT(uint256 tokenId, uint256 minETH) external payable whenNotPaused {... */\n    tag_100:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      tag_225\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2333  _requireNotPaused */\n      tag_226\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      jump\t// in\n    tag_225:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6436:6437  0 */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6424:6433  msg.value */\n      callvalue\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6424:6437  msg.value > 0 */\n      gt\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6416:6478  require(msg.value > 0, \"ETH amount must be greater than zero\") */\n      tag_228\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_229\n      swap1\n      tag_230\n      jump\t// in\n    tag_229:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n    tag_228:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6496:6502  cqtNFT */\n      sload(0x01)\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6496:6519  cqtNFT.ownerOf(tokenId) */\n      mload(0x40)\n      shl(0xe1, 0x31a9108f)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":1958:1983   */\n      dup5\n      swap1\n      mstore\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6531:6535  this */\n      address\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6496:6502  cqtNFT */\n      and\n      swap1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6496:6510  cqtNFT.ownerOf */\n      0x6352211e\n      swap1\n        /* \"#utility.yul\":1931:1949   */\n      0x24\n      add\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6496:6519  cqtNFT.ownerOf(tokenId) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_233\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_233:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_234\n      swap2\n      swap1\n      tag_235\n      jump\t// in\n    tag_234:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6496:6536  cqtNFT.ownerOf(tokenId) == address(this) */\n      and\n      eq\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6488:6566  require(cqtNFT.ownerOf(tokenId) == address(this), \"NFT not owned by contract\") */\n      tag_236\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":8741:8743   */\n      0x20\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6488:6566  require(cqtNFT.ownerOf(tokenId) == address(this), \"NFT not owned by contract\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":8723:8744   */\n      mstore\n        /* \"#utility.yul\":8780:8782   */\n      0x19\n        /* \"#utility.yul\":8760:8778   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":8753:8783   */\n      mstore\n        /* \"#utility.yul\":8819:8846   */\n      0x4e4654206e6f74206f776e656420627920636f6e747261637400000000000000\n        /* \"#utility.yul\":8799:8817   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":8792:8847   */\n      mstore\n        /* \"#utility.yul\":8864:8882   */\n      0x64\n      add\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6488:6566  require(cqtNFT.ownerOf(tokenId) == address(this), \"NFT not owned by contract\") */\n      tag_229\n        /* \"#utility.yul\":8539:8888   */\n      jump\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6488:6566  require(cqtNFT.ownerOf(tokenId) == address(this), \"NFT not owned by contract\") */\n    tag_236:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6577:6594  uint256 ethAmount */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6597:6661  getOutputAmount(msg.value, address(this).balance - msg.value, 1) */\n      tag_239\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6613:6622  msg.value */\n      callvalue\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6624:6657  address(this).balance - msg.value */\n      tag_240\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6613:6622  msg.value */\n      dup2\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6624:6645  address(this).balance */\n      selfbalance\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6624:6657  address(this).balance - msg.value */\n      tag_241\n      jump\t// in\n    tag_240:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6659:6660  1 */\n      0x01\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6597:6612  getOutputAmount */\n      tag_242\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6597:6661  getOutputAmount(msg.value, address(this).balance - msg.value, 1) */\n      jump\t// in\n    tag_239:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6577:6661  uint256 ethAmount = getOutputAmount(msg.value, address(this).balance - msg.value, 1) */\n      swap1\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6721:6727  minETH */\n      dup2\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6708:6717  ethAmount */\n      dup2\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6708:6727  ethAmount >= minETH */\n      lt\n      iszero\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6700:6759  require(ethAmount >= minETH, \"Slippage tolerance exceeded\") */\n      tag_243\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_229\n      swap1\n      tag_245\n      jump\t// in\n    tag_243:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6770:6809  payable(msg.sender).transfer(ethAmount) */\n      mload(0x40)\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6778:6788  msg.sender */\n      caller\n      swap1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6770:6809  payable(msg.sender).transfer(ethAmount) */\n      dup3\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6799:6808  ethAmount */\n      dup4\n      swap1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6770:6809  payable(msg.sender).transfer(ethAmount) */\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6799:6808  ethAmount */\n      dup6\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6778:6788  msg.sender */\n      dup9\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6770:6809  payable(msg.sender).transfer(ethAmount) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_247\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_247:\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6819:6825  cqtNFT */\n      sload(0x01)\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6819:6878  cqtNFT.safeTransferFrom(address(this), msg.sender, tokenId) */\n      mload(0x40)\n      shl(0xe1, 0x21421707)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6819:6825  cqtNFT */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6819:6842  cqtNFT.safeTransferFrom */\n      0x42842e0e\n      swap1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6819:6878  cqtNFT.safeTransferFrom(address(this), msg.sender, tokenId) */\n      tag_248\n      swap1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6851:6855  this */\n      address\n      swap1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6858:6868  msg.sender */\n      caller\n      swap1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6870:6877  tokenId */\n      dup9\n      swap1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6819:6878  cqtNFT.safeTransferFrom(address(this), msg.sender, tokenId) */\n      0x04\n      add\n      tag_191\n      jump\t// in\n    tag_248:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_249\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_249:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_251\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_251:\n      pop\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6925:6931  cqtNFT */\n      sload(0x01)\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6894:6953  NFTSwapped(msg.sender, address(cqtNFT), tokenId, ethAmount) */\n      mload(0x40)\n        /* \"#utility.yul\":1958:1983   */\n      dup5\n      dup2\n      mstore\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6934:6941  tokenId */\n      dup7\n      swap4\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6925:6931  cqtNFT */\n      swap1\n      swap2\n      and\n      swap2\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6905:6915  msg.sender */\n      caller\n      swap1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6894:6953  NFTSwapped(msg.sender, address(cqtNFT), tokenId, ethAmount) */\n      0x9181665db8d8d5fcce186f7b2cfebe8fbcdc3a003664bbfce2e790f57b076e65\n      swap1\n        /* \"#utility.yul\":1946:1948   */\n      0x20\n        /* \"#utility.yul\":1931:1949   */\n      add\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6894:6953  NFTSwapped(msg.sender, address(cqtNFT), tokenId, ethAmount) */\n    tag_252:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6406:6960  {... */\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6319:6960  function swapETHForNFT(uint256 tokenId, uint256 minETH) external payable whenNotPaused {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4158:4372  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n    tag_104:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2653:2666  _checkProxy() */\n      tag_254\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2653:2664  _checkProxy */\n      tag_255\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2653:2666  _checkProxy() */\n      jump\t// in\n    tag_254:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4273:4309  _authorizeUpgrade(newImplementation) */\n      tag_257\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4291:4308  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4273:4290  _authorizeUpgrade */\n      tag_258\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4273:4309  _authorizeUpgrade(newImplementation) */\n      jump\t// in\n    tag_257:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4319:4365  _upgradeToAndCallUUPS(newImplementation, data) */\n      tag_259\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4341:4358  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4360:4364  data */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4319:4340  _upgradeToAndCallUUPS */\n      tag_260\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4319:4365  _upgradeToAndCallUUPS(newImplementation, data) */\n      jump\t// in\n    tag_259:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4158:4372  function upgradeToAndCall(address newImplementation, bytes memory data) public payable virtual onlyProxy {... */\n      pop\n      pop\n      jump\t// out\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4824:5527  function swapETHForTokens(address token, uint256 minTokens) external payable whenNotPaused {... */\n    tag_107:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      tag_262\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2333  _requireNotPaused */\n      tag_226\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      jump\t// in\n    tag_262:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4945:4946  0 */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4933:4942  msg.value */\n      callvalue\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4933:4946  msg.value > 0 */\n      gt\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4925:4987  require(msg.value > 0, \"ETH amount must be greater than zero\") */\n      tag_264\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_229\n      swap1\n      tag_230\n      jump\t// in\n    tag_264:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5026:5047  liquidityPools[token] */\n      dup3\n      and\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4997:5023  LiquidityPool storage pool */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5026:5047  liquidityPools[token] */\n      swap1\n      dup2\n      mstore\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5026:5040  liquidityPools */\n      0x02\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5026:5047  liquidityPools[token] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5065:5079  pool.ethAmount */\n      0x01\n      dup2\n      add\n      sload\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5065:5083  pool.ethAmount > 0 */\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5065:5107  pool.ethAmount > 0 && pool.tokenAmount > 0 */\n      tag_266\n      jumpi\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5087:5103  pool.tokenAmount */\n      dup1\n      sload\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5087:5107  pool.tokenAmount > 0 */\n      iszero\n      iszero\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5065:5107  pool.ethAmount > 0 && pool.tokenAmount > 0 */\n    tag_266:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5057:5134  require(pool.ethAmount > 0 && pool.tokenAmount > 0, \"Insufficient liquidity\") */\n      tag_267\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_229\n      swap1\n      tag_269\n      jump\t// in\n    tag_267:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5145:5164  uint256 tokenAmount */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5167:5227  getOutputAmount(msg.value, pool.ethAmount, pool.tokenAmount) */\n      tag_270\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5183:5192  msg.value */\n      callvalue\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5194:5198  pool */\n      dup4\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5194:5208  pool.ethAmount */\n      0x01\n      add\n      sload\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5210:5214  pool */\n      dup5\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5210:5226  pool.tokenAmount */\n      0x00\n      add\n      sload\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5167:5182  getOutputAmount */\n      tag_242\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5167:5227  getOutputAmount(msg.value, pool.ethAmount, pool.tokenAmount) */\n      jump\t// in\n    tag_270:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5145:5227  uint256 tokenAmount = getOutputAmount(msg.value, pool.ethAmount, pool.tokenAmount) */\n      swap1\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5260:5269  minTokens */\n      dup3\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5245:5256  tokenAmount */\n      dup2\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5245:5269  tokenAmount >= minTokens */\n      lt\n      iszero\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5237:5301  require(tokenAmount >= minTokens, \"Slippage tolerance exceeded\") */\n      tag_271\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_229\n      swap1\n      tag_245\n      jump\t// in\n    tag_271:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5330:5339  msg.value */\n      callvalue\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5312:5316  pool */\n      dup3\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5312:5326  pool.ethAmount */\n      0x01\n      add\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5312:5339  pool.ethAmount += msg.value */\n      dup3\n      dup3\n      sload\n      tag_273\n      swap2\n      swap1\n      tag_274\n      jump\t// in\n    tag_273:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5349:5380  pool.tokenAmount -= tokenAmount */\n      dup2\n      sload\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5369:5380  tokenAmount */\n      dup2\n      swap1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5349:5353  pool */\n      dup4\n      swap1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5349:5365  pool.tokenAmount */\n      0x00\n      swap1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5349:5380  pool.tokenAmount -= tokenAmount */\n      tag_275\n      swap1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5369:5380  tokenAmount */\n      dup5\n      swap1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5349:5380  pool.tokenAmount -= tokenAmount */\n      tag_241\n      jump\t// in\n    tag_275:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5391:5449  IERC20Upgradeable(token).transfer(msg.sender, tokenAmount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5425:5435  msg.sender */\n      caller\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5391:5449  IERC20Upgradeable(token).transfer(msg.sender, tokenAmount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7491:7542   */\n      mstore\n        /* \"#utility.yul\":7558:7576   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":7551:7585   */\n      dup3\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5391:5424  IERC20Upgradeable(token).transfer */\n      dup6\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":7464:7482   */\n      0x44\n      add\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5391:5449  IERC20Upgradeable(token).transfer(msg.sender, tokenAmount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_278\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_278:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_279\n      swap2\n      swap1\n      tag_203\n      jump\t// in\n    tag_279:\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5465:5520  TokenSwapped(msg.sender, token, tokenAmount, msg.value) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":4753:4778   */\n      dup3\n      dup2\n      mstore\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5510:5519  msg.value */\n      callvalue\n        /* \"#utility.yul\":4809:4811   */\n      0x20\n        /* \"#utility.yul\":4794:4812   */\n      dup3\n      add\n        /* \"#utility.yul\":4787:4821   */\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5465:5520  TokenSwapped(msg.sender, token, tokenAmount, msg.value) */\n      dup7\n      and\n      swap2\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5478:5488  msg.sender */\n      caller\n      swap2\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5465:5520  TokenSwapped(msg.sender, token, tokenAmount, msg.value) */\n      0x30b60ee4dc75c0fb04420331b13e9ad7f8ff8fc51eac9c97d36fb20ccbe09d66\n      swap2\n        /* \"#utility.yul\":4726:4744   */\n      add\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5465:5520  TokenSwapped(msg.sender, token, tokenAmount, msg.value) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4915:5527  {... */\n      pop\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4824:5527  function swapETHForTokens(address token, uint256 minTokens) external payable whenNotPaused {... */\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3705:3839  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n    tag_110:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3774:3781  bytes32 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2924:2944  _checkNotDelegated() */\n      tag_282\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2924:2942  _checkNotDelegated */\n      tag_283\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":2924:2944  _checkNotDelegated() */\n      jump\t// in\n    tag_282:\n      pop\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":3705:3839  function proxiableUUID() external view virtual notDelegated returns (bytes32) {... */\n      swap1\n      jump\t// out\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2758:4007  function addLiquidity(address token, uint256 tokenAmount) external payable whenNotPaused returns (uint256) {... */\n    tag_114:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2856:2863  uint256 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      tag_286\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2333  _requireNotPaused */\n      tag_226\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      jump\t// in\n    tag_286:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2897:2898  0 */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2883:2894  tokenAmount */\n      dup3\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2883:2898  tokenAmount > 0 */\n      gt\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2875:2941  require(tokenAmount > 0, \"Token amount must be greater than zero\") */\n      tag_288\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_229\n      swap1\n      tag_290\n      jump\t// in\n    tag_288:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2971:2972  0 */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2959:2968  msg.value */\n      callvalue\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2959:2972  msg.value > 0 */\n      gt\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2951:3013  require(msg.value > 0, \"ETH amount must be greater than zero\") */\n      tag_291\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_229\n      swap1\n      tag_230\n      jump\t// in\n    tag_291:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3024:3101  IERC20Upgradeable(token).transferFrom(msg.sender, address(this), tokenAmount) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3024:3061  IERC20Upgradeable(token).transferFrom */\n      dup5\n      and\n      swap1\n      0x23b872dd\n      swap1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3024:3101  IERC20Upgradeable(token).transferFrom(msg.sender, address(this), tokenAmount) */\n      tag_293\n      swap1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3062:3072  msg.sender */\n      caller\n      swap1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3082:3086  this */\n      address\n      swap1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3089:3100  tokenAmount */\n      dup8\n      swap1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3024:3101  IERC20Upgradeable(token).transferFrom(msg.sender, address(this), tokenAmount) */\n      0x04\n      add\n      tag_191\n      jump\t// in\n    tag_293:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_295\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_295:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_296\n      swap2\n      swap1\n      tag_203\n      jump\t// in\n    tag_296:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3141:3162  liquidityPools[token] */\n      dup4\n      and\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3112:3138  LiquidityPool storage pool */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3141:3162  liquidityPools[token] */\n      swap1\n      dup2\n      mstore\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3141:3155  liquidityPools */\n      0x02\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3141:3162  liquidityPools[token] */\n      0x20\n      dup2\n      swap1\n      mstore\n      0x40\n      dup3\n      keccak256\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3204:3223  pool.totalLiquidity */\n      swap1\n      dup2\n      add\n      sload\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3141:3162  liquidityPools[token] */\n      swap1\n      swap2\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3112:3138  LiquidityPool storage pool */\n      swap1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3204:3228  pool.totalLiquidity == 0 */\n      dup2\n      sub\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3200:3799  if (pool.totalLiquidity == 0) {... */\n      tag_297\n      jumpi\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3244:3274  pool.tokenAmount = tokenAmount */\n      dup3\n      dup2\n      sstore\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3305:3314  msg.value */\n      callvalue\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3288:3302  pool.ethAmount */\n      0x01\n      dup3\n      add\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3288:3314  pool.ethAmount = msg.value */\n      sstore\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3263:3274  tokenAmount */\n      dup3\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3200:3799  if (pool.totalLiquidity == 0) {... */\n      jump(tag_298)\n    tag_297:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3407:3408  0 */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3390:3394  pool */\n      dup3\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3390:3404  pool.ethAmount */\n      0x01\n      add\n      sload\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3390:3408  pool.ethAmount > 0 */\n      gt\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3390:3432  pool.ethAmount > 0 && pool.tokenAmount > 0 */\n      dup1\n      iszero\n      tag_299\n      jumpi\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3412:3428  pool.tokenAmount */\n      dup2\n      sload\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3412:3432  pool.tokenAmount > 0 */\n      iszero\n      iszero\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3390:3432  pool.ethAmount > 0 && pool.tokenAmount > 0 */\n    tag_299:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3382:3455  require(pool.ethAmount > 0 && pool.tokenAmount > 0, \"Invalid pool state\") */\n      tag_300\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":10604:10606   */\n      0x20\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3382:3455  require(pool.ethAmount > 0 && pool.tokenAmount > 0, \"Invalid pool state\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":10586:10607   */\n      mstore\n        /* \"#utility.yul\":10643:10645   */\n      0x12\n        /* \"#utility.yul\":10623:10641   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":10616:10646   */\n      mstore\n      shl(0x70, 0x496e76616c696420706f6f6c207374617465)\n        /* \"#utility.yul\":10662:10680   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":10655:10703   */\n      mstore\n        /* \"#utility.yul\":10720:10738   */\n      0x64\n      add\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3382:3455  require(pool.ethAmount > 0 && pool.tokenAmount > 0, \"Invalid pool state\") */\n      tag_229\n        /* \"#utility.yul\":10402:10744   */\n      jump\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3382:3455  require(pool.ethAmount > 0 && pool.tokenAmount > 0, \"Invalid pool state\") */\n    tag_300:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3470:3492  uint256 ethAmountRatio */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3528:3532  pool */\n      dup3\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3528:3544  pool.tokenAmount */\n      0x00\n      add\n      sload\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3513:3524  tokenAmount */\n      dup6\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3496:3500  pool */\n      dup5\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3496:3510  pool.ethAmount */\n      0x01\n      add\n      sload\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3496:3524  pool.ethAmount * tokenAmount */\n      tag_303\n      swap2\n      swap1\n      tag_304\n      jump\t// in\n    tag_303:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3495:3544  (pool.ethAmount * tokenAmount) / pool.tokenAmount */\n      tag_305\n      swap2\n      swap1\n      tag_306\n      jump\t// in\n    tag_305:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3470:3544  uint256 ethAmountRatio = (pool.ethAmount * tokenAmount) / pool.tokenAmount */\n      swap1\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3579:3593  ethAmountRatio */\n      dup1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3566:3575  msg.value */\n      callvalue\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3566:3593  msg.value >= ethAmountRatio */\n      lt\n      iszero\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3558:3621  require(msg.value >= ethAmountRatio, \"Insufficient ETH amount\") */\n      tag_307\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11346:11348   */\n      0x20\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3558:3621  require(msg.value >= ethAmountRatio, \"Insufficient ETH amount\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11328:11349   */\n      mstore\n        /* \"#utility.yul\":11385:11387   */\n      0x17\n        /* \"#utility.yul\":11365:11383   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11358:11388   */\n      mstore\n        /* \"#utility.yul\":11424:11449   */\n      0x496e73756666696369656e742045544820616d6f756e74000000000000000000\n        /* \"#utility.yul\":11404:11422   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11397:11450   */\n      mstore\n        /* \"#utility.yul\":11467:11485   */\n      0x64\n      add\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3558:3621  require(msg.value >= ethAmountRatio, \"Insufficient ETH amount\") */\n      tag_229\n        /* \"#utility.yul\":11144:11491   */\n      jump\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3558:3621  require(msg.value >= ethAmountRatio, \"Insufficient ETH amount\") */\n    tag_307:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3656:3667  tokenAmount */\n      dup5\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3636:3640  pool */\n      dup4\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3636:3652  pool.tokenAmount */\n      0x00\n      add\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3636:3667  pool.tokenAmount += tokenAmount */\n      dup3\n      dup3\n      sload\n      tag_310\n      swap2\n      swap1\n      tag_274\n      jump\t// in\n    tag_310:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3699:3708  msg.value */\n      callvalue\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3681:3685  pool */\n      dup4\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3681:3695  pool.ethAmount */\n      0x01\n      add\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3681:3708  pool.ethAmount += msg.value */\n      dup3\n      dup3\n      sload\n      tag_311\n      swap2\n      swap1\n      tag_274\n      jump\t// in\n    tag_311:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3772:3788  pool.tokenAmount */\n      dup3\n      sload\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3735:3754  pool.totalLiquidity */\n      0x02\n      dup5\n      add\n      sload\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3735:3768  pool.totalLiquidity * tokenAmount */\n      tag_312\n      swap1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3757:3768  tokenAmount */\n      dup8\n      swap1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3735:3768  pool.totalLiquidity * tokenAmount */\n      tag_304\n      jump\t// in\n    tag_312:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3734:3788  (pool.totalLiquidity * tokenAmount) / pool.tokenAmount */\n      tag_313\n      swap2\n      swap1\n      tag_306\n      jump\t// in\n    tag_313:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3722:3788  liquidity = (pool.totalLiquidity * tokenAmount) / pool.tokenAmount */\n      swap2\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3368:3799  {... */\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3200:3799  if (pool.totalLiquidity == 0) {... */\n    tag_298:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3832:3841  liquidity */\n      dup1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3809:3813  pool */\n      dup3\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3809:3828  pool.totalLiquidity */\n      0x02\n      add\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3809:3841  pool.totalLiquidity += liquidity */\n      dup3\n      dup3\n      sload\n      tag_314\n      swap2\n      swap1\n      tag_274\n      jump\t// in\n    tag_314:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3866:3876  msg.sender */\n      caller\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3851:3877  pool.liquidity[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3851:3865  pool.liquidity */\n      0x03\n      dup4\n      add\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3851:3877  pool.liquidity[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3851:3890  pool.liquidity[msg.sender] += liquidity */\n      dup1\n      sload\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3881:3890  liquidity */\n      dup4\n      swap3\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3851:3877  pool.liquidity[msg.sender] */\n      swap1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3851:3890  pool.liquidity[msg.sender] += liquidity */\n      tag_315\n      swap1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3881:3890  liquidity */\n      dup5\n      swap1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3851:3890  pool.liquidity[msg.sender] += liquidity */\n      tag_274\n      jump\t// in\n    tag_315:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3906:3974  LiquidityAdded(msg.sender, token, tokenAmount, msg.value, liquidity) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":1690:1715   */\n      dup6\n      dup2\n      mstore\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3953:3962  msg.value */\n      callvalue\n        /* \"#utility.yul\":1746:1748   */\n      0x20\n        /* \"#utility.yul\":1731:1749   */\n      dup3\n      add\n        /* \"#utility.yul\":1724:1758   */\n      mstore\n        /* \"#utility.yul\":1774:1792   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":1767:1801   */\n      dup3\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3906:3974  LiquidityAdded(msg.sender, token, tokenAmount, msg.value, liquidity) */\n      dup7\n      and\n      swap1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3921:3931  msg.sender */\n      caller\n      swap1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3906:3974  LiquidityAdded(msg.sender, token, tokenAmount, msg.value, liquidity) */\n      0x4a1a2a6176e9646d9e3157f7c2ab3c499f18337c0b0828cfb28e0a61de4a11f7\n      swap1\n        /* \"#utility.yul\":1678:1680   */\n      0x60\n        /* \"#utility.yul\":1663:1681   */\n      add\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3906:3974  LiquidityAdded(msg.sender, token, tokenAmount, msg.value, liquidity) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":3991:4000  liquidity */\n      swap5\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2758:4007  function addLiquidity(address token, uint256 tokenAmount) external payable whenNotPaused returns (uint256) {... */\n      swap4\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2600:2671  function pause() public onlyRole(PAUSER_ROLE) {... */\n    tag_122:\n      0x00\n      dup1\n      mload\n      0x20\n      data_9b87106a812d214d41ad9b68a21119e2948eaaf1040375c939ec808b8862455c\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_321\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_321:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2656:2664  _pause() */\n      tag_222\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2656:2662  _pause */\n      tag_324\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2656:2664  _pause() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3732:3939  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n    tag_126:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3809:3813  bool */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3901:3915  $._roles[role] */\n      swap2\n      dup3\n      mstore\n      0x00\n      dup1\n      mload\n      0x20\n      data_b3da67d1b252aeab7c8063542d95e75f82a5307a82535949bc38f7cf7ba8897f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup5\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3901:3932  $._roles[role].hasRole[account] */\n      swap4\n      swap1\n      swap4\n      and\n      dup5\n      mstore\n      swap2\n      swap1\n      mstore\n      swap1\n      keccak256\n      sload\n      0xff\n      and\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3732:3939  function hasRole(bytes32 role, address account) public view virtual returns (bool) {... */\n      jump\t// out\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4013:4818  function removeLiquidity(address token, uint256 liquidity) external whenNotPaused returns (uint256 tokenAmount, uint256 ethAmount) {... */\n    tag_131:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4104:4123  uint256 tokenAmount */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4125:4142  uint256 ethAmount */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      tag_328\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2333  _requireNotPaused */\n      tag_226\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      jump\t// in\n    tag_328:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4183:4204  liquidityPools[token] */\n      dup5\n      and\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4154:4180  LiquidityPool storage pool */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4183:4204  liquidityPools[token] */\n      swap1\n      dup2\n      mstore\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4183:4197  liquidityPools */\n      0x02\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4183:4204  liquidityPools[token] */\n      0x20\n      swap1\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4237:4247  msg.sender */\n      caller\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4222:4248  pool.liquidity[msg.sender] */\n      dup5\n      mstore\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4222:4236  pool.liquidity */\n      0x03\n      dup2\n      add\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4222:4248  pool.liquidity[msg.sender] */\n      swap1\n      swap3\n      mstore\n      swap1\n      swap2\n      keccak256\n      sload\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4222:4261  pool.liquidity[msg.sender] >= liquidity */\n      dup5\n      gt\n      iszero\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4214:4288  require(pool.liquidity[msg.sender] >= liquidity, \"Insufficient liquidity\") */\n      tag_330\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_229\n      swap1\n      tag_269\n      jump\t// in\n    tag_330:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4346:4365  pool.totalLiquidity */\n      0x02\n      dup2\n      add\n      sload\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4314:4330  pool.tokenAmount */\n      dup2\n      sload\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4314:4342  pool.tokenAmount * liquidity */\n      tag_332\n      swap1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4333:4342  liquidity */\n      dup7\n      swap1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4314:4342  pool.tokenAmount * liquidity */\n      tag_304\n      jump\t// in\n    tag_332:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4313:4365  (pool.tokenAmount * liquidity) / pool.totalLiquidity */\n      tag_333\n      swap2\n      swap1\n      tag_306\n      jump\t// in\n    tag_333:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4299:4365  tokenAmount = (pool.tokenAmount * liquidity) / pool.totalLiquidity */\n      swap3\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4418:4422  pool */\n      dup1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4418:4437  pool.totalLiquidity */\n      0x02\n      add\n      sload\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4405:4414  liquidity */\n      dup5\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4388:4392  pool */\n      dup3\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4388:4402  pool.ethAmount */\n      0x01\n      add\n      sload\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4388:4414  pool.ethAmount * liquidity */\n      tag_334\n      swap2\n      swap1\n      tag_304\n      jump\t// in\n    tag_334:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4387:4437  (pool.ethAmount * liquidity) / pool.totalLiquidity */\n      tag_335\n      swap2\n      swap1\n      tag_306\n      jump\t// in\n    tag_335:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4375:4437  ethAmount = (pool.ethAmount * liquidity) / pool.totalLiquidity */\n      swap2\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4468:4479  tokenAmount */\n      dup3\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4448:4452  pool */\n      dup2\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4448:4464  pool.tokenAmount */\n      0x00\n      add\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4448:4479  pool.tokenAmount -= tokenAmount */\n      dup3\n      dup3\n      sload\n      tag_336\n      swap2\n      swap1\n      tag_241\n      jump\t// in\n    tag_336:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4507:4516  ethAmount */\n      dup2\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4489:4493  pool */\n      dup2\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4489:4503  pool.ethAmount */\n      0x01\n      add\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4489:4516  pool.ethAmount -= ethAmount */\n      dup3\n      dup3\n      sload\n      tag_337\n      swap2\n      swap1\n      tag_241\n      jump\t// in\n    tag_337:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4549:4558  liquidity */\n      dup4\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4526:4530  pool */\n      dup2\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4526:4545  pool.totalLiquidity */\n      0x02\n      add\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4526:4558  pool.totalLiquidity -= liquidity */\n      dup3\n      dup3\n      sload\n      tag_338\n      swap2\n      swap1\n      tag_241\n      jump\t// in\n    tag_338:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4583:4593  msg.sender */\n      caller\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4568:4594  pool.liquidity[msg.sender] */\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4568:4582  pool.liquidity */\n      0x03\n      dup3\n      add\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4568:4594  pool.liquidity[msg.sender] */\n      0x20\n      mstore\n      0x40\n      dup2\n      keccak256\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4568:4607  pool.liquidity[msg.sender] -= liquidity */\n      dup1\n      sload\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4598:4607  liquidity */\n      dup7\n      swap3\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4568:4594  pool.liquidity[msg.sender] */\n      swap1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4568:4607  pool.liquidity[msg.sender] -= liquidity */\n      tag_339\n      swap1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4598:4607  liquidity */\n      dup5\n      swap1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4568:4607  pool.liquidity[msg.sender] -= liquidity */\n      tag_241\n      jump\t// in\n    tag_339:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4618:4676  IERC20Upgradeable(token).transfer(msg.sender, tokenAmount) */\n      mload(0x40)\n      shl(0xe0, 0xa9059cbb)\n      dup2\n      mstore\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4652:4662  msg.sender */\n      caller\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4618:4676  IERC20Upgradeable(token).transfer(msg.sender, tokenAmount) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7491:7542   */\n      mstore\n        /* \"#utility.yul\":7558:7576   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":7551:7585   */\n      dup5\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4618:4651  IERC20Upgradeable(token).transfer */\n      dup7\n      and\n      swap1\n      0xa9059cbb\n      swap1\n        /* \"#utility.yul\":7464:7482   */\n      0x44\n      add\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4618:4676  IERC20Upgradeable(token).transfer(msg.sender, tokenAmount) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_342\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_342:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_343\n      swap2\n      swap1\n      tag_203\n      jump\t// in\n    tag_343:\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4686:4725  payable(msg.sender).transfer(ethAmount) */\n      mload(0x40)\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4694:4704  msg.sender */\n      caller\n      swap1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4686:4725  payable(msg.sender).transfer(ethAmount) */\n      dup4\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4715:4724  ethAmount */\n      dup5\n      swap1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4686:4725  payable(msg.sender).transfer(ethAmount) */\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4715:4724  ethAmount */\n      dup6\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4694:4704  msg.sender */\n      dup9\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4686:4725  payable(msg.sender).transfer(ethAmount) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_345\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_345:\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4741:4811  LiquidityRemoved(msg.sender, token, tokenAmount, ethAmount, liquidity) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":1690:1715   */\n      dup5\n      dup2\n      mstore\n        /* \"#utility.yul\":1746:1748   */\n      0x20\n        /* \"#utility.yul\":1731:1749   */\n      dup2\n      add\n        /* \"#utility.yul\":1724:1758   */\n      dup5\n      swap1\n      mstore\n        /* \"#utility.yul\":1774:1792   */\n      swap1\n      dup2\n      add\n        /* \"#utility.yul\":1767:1801   */\n      dup6\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4741:4811  LiquidityRemoved(msg.sender, token, tokenAmount, ethAmount, liquidity) */\n      dup7\n      and\n      swap1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4758:4768  msg.sender */\n      caller\n      swap1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4741:4811  LiquidityRemoved(msg.sender, token, tokenAmount, ethAmount, liquidity) */\n      0xbc7d19d505c7ec4db83f3b51f19fb98c4c8a99922e7839d1ee608dfbee29501b\n      swap1\n        /* \"#utility.yul\":1678:1680   */\n      0x60\n        /* \"#utility.yul\":1663:1681   */\n      add\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4741:4811  LiquidityRemoved(msg.sender, token, tokenAmount, ethAmount, liquidity) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4144:4818  {... */\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":4013:4818  function removeLiquidity(address token, uint256 liquidity) external whenNotPaused returns (uint256 tokenAmount, uint256 ethAmount) {... */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7987:8242  function updateLiquidityPool(address token, uint256 newTokenAmount, uint256 newEthAmount) external onlyRole(LIQUIDITY_MANAGER_ROLE) {... */\n    tag_147:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":939:974  keccak256(\"LIQUIDITY_MANAGER_ROLE\") */\n      0x77e60b99a50d27fb027f6912a507d956105b4148adab27a86d235c8bcca8fa2f\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_348\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_348:\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8129:8150  liquidityPools[token] */\n      swap1\n      swap3\n      and\n      0x00\n      swap1\n      dup2\n      mstore\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8129:8143  liquidityPools */\n      0x02\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8129:8150  liquidityPools[token] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8129:8179  liquidityPools[token].tokenAmount = newTokenAmount */\n      swap1\n      dup2\n      sstore\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8189:8220  liquidityPools[token].ethAmount */\n      0x01\n      add\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8189:8235  liquidityPools[token].ethAmount = newEthAmount */\n      sstore\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7987:8242  function updateLiquidityPool(address token, uint256 newTokenAmount, uint256 newEthAmount) external onlyRole(LIQUIDITY_MANAGER_ROLE) {... */\n      jump\t// out\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":1960:2594  function initialize(... */\n    tag_152:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4302:4317  $._initializing */\n      dup1\n      sload\n      shl(0x40, 0x01)\n      dup2\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4301:4317  !$._initializing */\n      iszero\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4348:4362  $._initialized */\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4158:4188  InitializableStorage storage $ */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4742  initialized == 0 */\n      dup2\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n      dup1\n      iszero\n      tag_353\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4746:4760  isTopLevelCall */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4726:4760  initialized == 0 && isTopLevelCall */\n    tag_353:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4706:4760  bool initialSetup = initialized == 0 && isTopLevelCall */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4787  bool construction */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4801  initialized */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      0xffffffffffffffff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4805:4806  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4806  initialized == 1 */\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n      dup1\n      iszero\n      tag_354\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4818:4822  this */\n      address\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4835  address(this).code.length */\n      extcodesize\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4810:4840  address(this).code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4790:4840  initialized == 1 && address(this).code.length == 0 */\n    tag_354:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4770:4840  bool construction = initialized == 1 && address(this).code.length == 0 */\n      swap1\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4856:4868  initialSetup */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4868  !initialSetup */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n      dup1\n      iszero\n      tag_355\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4873:4885  construction */\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4872:4885  !construction */\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4855:4885  !initialSetup && !construction */\n    tag_355:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n      iszero\n      tag_356\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4908:4931  InvalidInitialization() */\n      mload(0x40)\n      shl(0xe0, 0xf92ee8a9)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4851:4942  if (!initialSetup && !construction) {... */\n    tag_356:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      dup5\n      sload\n      not(0xffffffffffffffff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4968:4969  1 */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4951:4969  $._initialized = 1 */\n      or\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n      dup4\n      iszero\n      tag_357\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5013:5035  $._initializing = true */\n      dup5\n      sload\n      not(shl(0x40, 0xff))\n      and\n      shl(0x40, 0x01)\n      or\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4979:5046  if (isTopLevelCall) {... */\n    tag_357:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2193:2210  __Pausable_init() */\n      tag_359\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2193:2208  __Pausable_init */\n      tag_360\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2193:2210  __Pausable_init() */\n      jump\t// in\n    tag_359:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2220:2242  __AccessControl_init() */\n      tag_361\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2220:2240  __AccessControl_init */\n      tag_362\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2220:2242  __AccessControl_init() */\n      jump\t// in\n    tag_361:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2252:2276  __UUPSUpgradeable_init() */\n      tag_363\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2252:2274  __UUPSUpgradeable_init */\n      tag_362\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2252:2276  __UUPSUpgradeable_init() */\n      jump\t// in\n    tag_363:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2287:2331  _grantRole(DEFAULT_ADMIN_ROLE, defaultAdmin) */\n      tag_365\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2362:2366  0x00 */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2318:2330  defaultAdmin */\n      dup13\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2287:2297  _grantRole */\n      tag_212\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2287:2331  _grantRole(DEFAULT_ADMIN_ROLE, defaultAdmin) */\n      jump\t// in\n    tag_365:\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2341:2372  _grantRole(PAUSER_ROLE, pauser) */\n      tag_366\n      0x00\n      dup1\n      mload\n      0x20\n      data_9b87106a812d214d41ad9b68a21119e2948eaaf1040375c939ec808b8862455c\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2365:2371  pauser */\n      dup12\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2341:2351  _grantRole */\n      tag_212\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2341:2372  _grantRole(PAUSER_ROLE, pauser) */\n      jump\t// in\n    tag_366:\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2382:2417  _grantRole(UPGRADER_ROLE, upgrader) */\n      tag_367\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":858:884  keccak256(\"UPGRADER_ROLE\") */\n      0x189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2408:2416  upgrader */\n      dup11\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2382:2392  _grantRole */\n      tag_212\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2382:2417  _grantRole(UPGRADER_ROLE, upgrader) */\n      jump\t// in\n    tag_367:\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2427:2479  _grantRole(LIQUIDITY_MANAGER_ROLE, liquidityManager) */\n      tag_368\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":939:974  keccak256(\"LIQUIDITY_MANAGER_ROLE\") */\n      0x77e60b99a50d27fb027f6912a507d956105b4148adab27a86d235c8bcca8fa2f\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2462:2478  liquidityManager */\n      dup10\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2427:2437  _grantRole */\n      tag_212\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2427:2479  _grantRole(LIQUIDITY_MANAGER_ROLE, liquidityManager) */\n      jump\t// in\n    tag_368:\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2490:2498  cqtToken */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2490:2535  cqtToken = IERC20Upgradeable(cqtTokenAddress) */\n      dup1\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      dup1\n      dup11\n      and\n      not(sub(shl(0xa0, 0x01), 0x01))\n      swap3\n      dup4\n      and\n      or\n      swap1\n      swap3\n      sstore\n      0x01\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":2545:2587  cqtNFT = IERC721Upgradeable(cqtNFTAddress) */\n      dup1\n      sload\n      swap3\n      dup10\n      and\n      swap3\n      swap1\n      swap2\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n      dup4\n      iszero\n      tag_369\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5100:5123  $._initializing = false */\n      dup5\n      sload\n      not(shl(0x40, 0xff))\n      and\n      dup6\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      0x01\n        /* \"#utility.yul\":11649:11699   */\n      dup2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      0xc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2\n      swap1\n        /* \"#utility.yul\":11637:11639   */\n      0x20\n        /* \"#utility.yul\":11622:11640   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5142:5156  Initialized(1) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":5066:5167  if (isTopLevelCall) {... */\n    tag_369:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":4092:5173  {... */\n      pop\n      pop\n      pop\n      pop\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":1960:2594  function initialize(... */\n      pop\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5662:5800  function revokeRole(bytes32 role, address account) public virtual onlyRole(getRoleAdmin(role)) {... */\n    tag_156:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5737:5755  getRoleAdmin(role) */\n      tag_372\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5750:5754  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5737:5749  getRoleAdmin */\n      tag_73\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5737:5755  getRoleAdmin(role) */\n      jump\t// in\n    tag_372:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_374\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_374:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5767:5793  _revokeRole(role, account) */\n      tag_202\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5779:5783  role */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5785:5792  account */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5767:5778  _revokeRole */\n      tag_218\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":5767:5793  _revokeRole(role, account) */\n      jump\t// in\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6966:7493  function swapNFTForETH(uint256 tokenId, uint256 minETH) external whenNotPaused {... */\n    tag_160:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      tag_378\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2333  _requireNotPaused */\n      tag_226\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      jump\t// in\n    tag_378:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7063:7069  cqtNFT */\n      sload(0x01)\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7063:7086  cqtNFT.ownerOf(tokenId) */\n      mload(0x40)\n      shl(0xe1, 0x31a9108f)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":1958:1983   */\n      dup5\n      swap1\n      mstore\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7090:7100  msg.sender */\n      caller\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7063:7069  cqtNFT */\n      and\n      swap1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7063:7077  cqtNFT.ownerOf */\n      0x6352211e\n      swap1\n        /* \"#utility.yul\":1931:1949   */\n      0x24\n      add\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7063:7086  cqtNFT.ownerOf(tokenId) */\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_382\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_382:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_383\n      swap2\n      swap1\n      tag_235\n      jump\t// in\n    tag_383:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7063:7100  cqtNFT.ownerOf(tokenId) == msg.sender */\n      and\n      eq\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7055:7121  require(cqtNFT.ownerOf(tokenId) == msg.sender, \"Not owner of NFT\") */\n      tag_384\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":11912:11914   */\n      0x20\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7055:7121  require(cqtNFT.ownerOf(tokenId) == msg.sender, \"Not owner of NFT\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":11894:11915   */\n      mstore\n        /* \"#utility.yul\":11951:11953   */\n      0x10\n        /* \"#utility.yul\":11931:11949   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":11924:11954   */\n      mstore\n      shl(0x82, 0x139bdd081bdddb995c881bd988139195)\n        /* \"#utility.yul\":11970:11988   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":11963:12009   */\n      mstore\n        /* \"#utility.yul\":12026:12044   */\n      0x64\n      add\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7055:7121  require(cqtNFT.ownerOf(tokenId) == msg.sender, \"Not owner of NFT\") */\n      tag_229\n        /* \"#utility.yul\":11710:12050   */\n      jump\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7055:7121  require(cqtNFT.ownerOf(tokenId) == msg.sender, \"Not owner of NFT\") */\n    tag_384:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7132:7149  uint256 ethAmount */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7152:7196  getOutputAmount(1, 1, address(this).balance) */\n      tag_387\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7168:7169  1 */\n      0x01\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7171:7172  1 */\n      dup1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7174:7195  address(this).balance */\n      selfbalance\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7152:7167  getOutputAmount */\n      tag_242\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7152:7196  getOutputAmount(1, 1, address(this).balance) */\n      jump\t// in\n    tag_387:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7132:7196  uint256 ethAmount = getOutputAmount(1, 1, address(this).balance) */\n      swap1\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7254:7260  minETH */\n      dup2\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7241:7250  ethAmount */\n      dup2\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7241:7260  ethAmount >= minETH */\n      lt\n      iszero\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7233:7292  require(ethAmount >= minETH, \"Slippage tolerance exceeded\") */\n      tag_388\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_229\n      swap1\n      tag_245\n      jump\t// in\n    tag_388:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7303:7309  cqtNFT */\n      sload(0x01)\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7303:7362  cqtNFT.safeTransferFrom(msg.sender, address(this), tokenId) */\n      mload(0x40)\n      shl(0xe1, 0x21421707)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7303:7309  cqtNFT */\n      swap1\n      swap2\n      and\n      swap1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7303:7326  cqtNFT.safeTransferFrom */\n      0x42842e0e\n      swap1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7303:7362  cqtNFT.safeTransferFrom(msg.sender, address(this), tokenId) */\n      tag_390\n      swap1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7327:7337  msg.sender */\n      caller\n      swap1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7347:7351  this */\n      address\n      swap1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7354:7361  tokenId */\n      dup9\n      swap1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7303:7362  cqtNFT.safeTransferFrom(msg.sender, address(this), tokenId) */\n      0x04\n      add\n      tag_191\n      jump\t// in\n    tag_390:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_391\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_391:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_393\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_393:\n      pop\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7372:7411  payable(msg.sender).transfer(ethAmount) */\n      mload(0x40)\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7380:7390  msg.sender */\n      caller\n      swap3\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7372:7411  payable(msg.sender).transfer(ethAmount) */\n      dup4\n      iszero\n      0x08fc\n      mul\n      swap2\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7401:7410  ethAmount */\n      dup4\n      swap1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7372:7411  payable(msg.sender).transfer(ethAmount) */\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7401:7410  ethAmount */\n      dup6\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7380:7390  msg.sender */\n      dup9\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7372:7411  payable(msg.sender).transfer(ethAmount) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_395\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_395:\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7458:7464  cqtNFT */\n      sload(0x01)\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7427:7486  NFTSwapped(msg.sender, address(cqtNFT), tokenId, ethAmount) */\n      mload(0x40)\n        /* \"#utility.yul\":1958:1983   */\n      dup3\n      dup2\n      mstore\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7467:7474  tokenId */\n      dup5\n      swap2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7458:7464  cqtNFT */\n      and\n      swap1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7438:7448  msg.sender */\n      caller\n      swap1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7427:7486  NFTSwapped(msg.sender, address(cqtNFT), tokenId, ethAmount) */\n      0x9181665db8d8d5fcce186f7b2cfebe8fbcdc3a003664bbfce2e790f57b076e65\n      swap1\n        /* \"#utility.yul\":1946:1948   */\n      0x20\n        /* \"#utility.yul\":1931:1949   */\n      add\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7427:7486  NFTSwapped(msg.sender, address(cqtNFT), tokenId, ethAmount) */\n      tag_252\n        /* \"#utility.yul\":1812:1989   */\n      jump\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5533:6313  function swapTokensForETH(address token, uint256 tokenAmount, uint256 minETH) external whenNotPaused {... */\n    tag_169:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      tag_398\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2333  _requireNotPaused */\n      tag_226\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      jump\t// in\n    tag_398:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5666:5667  0 */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5652:5663  tokenAmount */\n      dup3\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5652:5667  tokenAmount > 0 */\n      gt\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5644:5710  require(tokenAmount > 0, \"Token amount must be greater than zero\") */\n      tag_400\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_229\n      swap1\n      tag_290\n      jump\t// in\n    tag_400:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5749:5770  liquidityPools[token] */\n      dup4\n      and\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5720:5746  LiquidityPool storage pool */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5749:5770  liquidityPools[token] */\n      swap1\n      dup2\n      mstore\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5749:5763  liquidityPools */\n      0x02\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5749:5770  liquidityPools[token] */\n      0x20\n      mstore\n      0x40\n      swap1\n      keccak256\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5788:5802  pool.ethAmount */\n      0x01\n      dup2\n      add\n      sload\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5788:5806  pool.ethAmount > 0 */\n      iszero\n      dup1\n      iszero\n      swap1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5788:5830  pool.ethAmount > 0 && pool.tokenAmount > 0 */\n      tag_402\n      jumpi\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5810:5826  pool.tokenAmount */\n      dup1\n      sload\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5810:5830  pool.tokenAmount > 0 */\n      iszero\n      iszero\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5788:5830  pool.ethAmount > 0 && pool.tokenAmount > 0 */\n    tag_402:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5780:5857  require(pool.ethAmount > 0 && pool.tokenAmount > 0, \"Insufficient liquidity\") */\n      tag_403\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_229\n      swap1\n      tag_269\n      jump\t// in\n    tag_403:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5868:5885  uint256 ethAmount */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5888:5950  getOutputAmount(tokenAmount, pool.tokenAmount, pool.ethAmount) */\n      tag_405\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5904:5915  tokenAmount */\n      dup5\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5917:5921  pool */\n      dup4\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5917:5933  pool.tokenAmount */\n      0x00\n      add\n      sload\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5935:5939  pool */\n      dup5\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5935:5949  pool.ethAmount */\n      0x01\n      add\n      sload\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5888:5903  getOutputAmount */\n      tag_242\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5888:5950  getOutputAmount(tokenAmount, pool.tokenAmount, pool.ethAmount) */\n      jump\t// in\n    tag_405:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5868:5950  uint256 ethAmount = getOutputAmount(tokenAmount, pool.tokenAmount, pool.ethAmount) */\n      swap1\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5981:5987  minETH */\n      dup3\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5968:5977  ethAmount */\n      dup2\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5968:5987  ethAmount >= minETH */\n      lt\n      iszero\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5960:6019  require(ethAmount >= minETH, \"Slippage tolerance exceeded\") */\n      tag_406\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n      0x04\n      add\n      tag_229\n      swap1\n      tag_245\n      jump\t// in\n    tag_406:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6050:6061  tokenAmount */\n      dup4\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6030:6034  pool */\n      dup3\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6030:6046  pool.tokenAmount */\n      0x00\n      add\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6030:6061  pool.tokenAmount += tokenAmount */\n      dup3\n      dup3\n      sload\n      tag_408\n      swap2\n      swap1\n      tag_274\n      jump\t// in\n    tag_408:\n      swap3\n      pop\n      pop\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6089:6098  ethAmount */\n      dup1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6071:6075  pool */\n      dup3\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6071:6085  pool.ethAmount */\n      0x01\n      add\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6071:6098  pool.ethAmount -= ethAmount */\n      dup3\n      dup3\n      sload\n      tag_409\n      swap2\n      swap1\n      tag_241\n      jump\t// in\n    tag_409:\n      swap1\n      swap2\n      sstore\n      pop\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6109:6186  IERC20Upgradeable(token).transferFrom(msg.sender, address(this), tokenAmount) */\n      mload(0x40)\n      shl(0xe0, 0x23b872dd)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6109:6146  IERC20Upgradeable(token).transferFrom */\n      dup7\n      and\n      swap1\n      0x23b872dd\n      swap1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6109:6186  IERC20Upgradeable(token).transferFrom(msg.sender, address(this), tokenAmount) */\n      tag_410\n      swap1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6147:6157  msg.sender */\n      caller\n      swap1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6167:6171  this */\n      address\n      swap1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6174:6185  tokenAmount */\n      dup10\n      swap1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6109:6186  IERC20Upgradeable(token).transferFrom(msg.sender, address(this), tokenAmount) */\n      0x04\n      add\n      tag_191\n      jump\t// in\n    tag_410:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_412\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_412:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_413\n      swap2\n      swap1\n      tag_203\n      jump\t// in\n    tag_413:\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6196:6235  payable(msg.sender).transfer(ethAmount) */\n      mload(0x40)\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6204:6214  msg.sender */\n      caller\n      swap1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6196:6235  payable(msg.sender).transfer(ethAmount) */\n      dup3\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6225:6234  ethAmount */\n      dup4\n      swap1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6196:6235  payable(msg.sender).transfer(ethAmount) */\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6225:6234  ethAmount */\n      dup6\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6204:6214  msg.sender */\n      dup9\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6196:6235  payable(msg.sender).transfer(ethAmount) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_415\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_415:\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6251:6306  TokenSwapped(msg.sender, token, tokenAmount, ethAmount) */\n      0x40\n      dup1\n      mload\n        /* \"#utility.yul\":4753:4778   */\n      dup6\n      dup2\n      mstore\n        /* \"#utility.yul\":4809:4811   */\n      0x20\n        /* \"#utility.yul\":4794:4812   */\n      dup2\n      add\n        /* \"#utility.yul\":4787:4821   */\n      dup4\n      swap1\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6251:6306  TokenSwapped(msg.sender, token, tokenAmount, ethAmount) */\n      dup8\n      and\n      swap2\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6264:6274  msg.sender */\n      caller\n      swap2\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6251:6306  TokenSwapped(msg.sender, token, tokenAmount, ethAmount) */\n      0x30b60ee4dc75c0fb04420331b13e9ad7f8ff8fc51eac9c97d36fb20ccbe09d66\n      swap2\n        /* \"#utility.yul\":4726:4744   */\n      add\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":6251:6306  TokenSwapped(msg.sender, token, tokenAmount, ethAmount) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log3\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5634:6313  {... */\n      pop\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":5533:6313  function swapTokensForETH(address token, uint256 tokenAmount, uint256 minETH) external whenNotPaused {... */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8248:8450  function withdrawETH(uint256 amount) external onlyRole(DEFAULT_ADMIN_ROLE) {... */\n    tag_177:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2362:2366  0x00 */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_418\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":2362:2366  0x00 */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n    tag_418:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8366:8372  amount */\n      dup2\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8341:8362  address(this).balance */\n      selfbalance\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8341:8372  address(this).balance >= amount */\n      lt\n      iszero\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8333:8397  require(address(this).balance >= amount, \"Insufficient balance\") */\n      tag_420\n      jumpi\n      mload(0x40)\n      shl(0xe5, 0x461bcd)\n      dup2\n      mstore\n        /* \"#utility.yul\":12257:12259   */\n      0x20\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8333:8397  require(address(this).balance >= amount, \"Insufficient balance\") */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":12239:12260   */\n      mstore\n        /* \"#utility.yul\":12296:12298   */\n      0x14\n        /* \"#utility.yul\":12276:12294   */\n      0x24\n      dup3\n      add\n        /* \"#utility.yul\":12269:12299   */\n      mstore\n      shl(0x60, 0x496e73756666696369656e742062616c616e6365)\n        /* \"#utility.yul\":12315:12333   */\n      0x44\n      dup3\n      add\n        /* \"#utility.yul\":12308:12358   */\n      mstore\n        /* \"#utility.yul\":12375:12393   */\n      0x64\n      add\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8333:8397  require(address(this).balance >= amount, \"Insufficient balance\") */\n      tag_229\n        /* \"#utility.yul\":12055:12399   */\n      jump\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8333:8397  require(address(this).balance >= amount, \"Insufficient balance\") */\n    tag_420:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8407:8443  payable(msg.sender).transfer(amount) */\n      mload(0x40)\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8415:8425  msg.sender */\n      caller\n      swap1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8407:8443  payable(msg.sender).transfer(amount) */\n      dup4\n      iszero\n      0x08fc\n      mul\n      swap1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8436:8442  amount */\n      dup5\n      swap1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8407:8443  payable(msg.sender).transfer(amount) */\n      0x00\n      dup2\n      dup2\n      dup2\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8436:8442  amount */\n      dup6\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8415:8425  msg.sender */\n      dup9\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":8407:8443  payable(msg.sender).transfer(amount) */\n      dup9\n      call\n      swap4\n      pop\n      pop\n      pop\n      pop\n      iszero\n      dup1\n      iszero\n      tag_217\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4148:4251  function _checkRole(bytes32 role) internal view virtual {... */\n    tag_188:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4214:4244  _checkRole(role, _msgSender()) */\n      tag_222\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4225:4229  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4214:4224  _checkRole */\n      tag_429\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4214:4244  _checkRole(role, _msgSender()) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7270:7657  function _grantRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_212:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7347:7351  bool */\n      0x00\n      0x00\n      dup1\n      mload\n      0x20\n      data_b3da67d1b252aeab7c8063542d95e75f82a5307a82535949bc38f7cf7ba8897f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7437:7459  hasRole(role, account) */\n      tag_433\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7445:7449  role */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7451:7458  account */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7437:7444  hasRole */\n      tag_126\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7437:7459  hasRole(role, account) */\n      jump\t// in\n    tag_433:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7432:7651  if (!hasRole(role, account)) {... */\n      tag_434\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7475:7483  $._roles */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7475:7489  $._roles[role] */\n      dup5\n      dup2\n      mstore\n      0x20\n      dup3\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7475:7506  $._roles[role].hasRole[account] */\n      dup8\n      and\n      dup5\n      mstore\n      swap1\n      swap2\n      mstore\n      swap1\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7475:7513  $._roles[role].hasRole[account] = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7509:7513  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7475:7513  $._roles[role].hasRole[account] = true */\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7559:7571  _msgSender() */\n      tag_435\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7559:7571  _msgSender() */\n    tag_435:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7532:7572  RoleGranted(role, account, _msgSender()) */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7550:7557  account */\n      dup4\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7532:7572  RoleGranted(role, account, _msgSender()) */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7544:7548  role */\n      dup6\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7532:7572  RoleGranted(role, account, _msgSender()) */\n      0x2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d\n      mload(0x40)\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7593:7597  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7586:7597  return true */\n      swap2\n      pop\n      pop\n      jump(tag_184)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7432:7651  if (!hasRole(role, account)) {... */\n    tag_434:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7635:7640  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7628:7640  return false */\n      swap2\n      pop\n      pop\n      jump(tag_184)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7892:8280  function _revokeRole(bytes32 role, address account) internal virtual returns (bool) {... */\n    tag_218:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":7970:7974  bool */\n      0x00\n      0x00\n      dup1\n      mload\n      0x20\n      data_b3da67d1b252aeab7c8063542d95e75f82a5307a82535949bc38f7cf7ba8897f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8059:8081  hasRole(role, account) */\n      tag_440\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8067:8071  role */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8073:8080  account */\n      dup5\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8059:8066  hasRole */\n      tag_126\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8059:8081  hasRole(role, account) */\n      jump\t// in\n    tag_440:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8055:8274  if (hasRole(role, account)) {... */\n      iszero\n      tag_434\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8131:8136  false */\n      0x00\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8097:8111  $._roles[role] */\n      dup5\n      dup2\n      mstore\n      0x20\n      dup3\n      dup2\n      mstore\n      0x40\n      dup1\n      dup4\n      keccak256\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8097:8128  $._roles[role].hasRole[account] */\n      dup8\n      and\n      dup1\n      dup6\n      mstore\n      swap3\n      mstore\n      dup1\n      dup4\n      keccak256\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8097:8136  $._roles[role].hasRole[account] = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8155:8195  RoleRevoked(role, account, _msgSender()) */\n      mload\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n      swap3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8097:8111  $._roles[role] */\n      dup8\n      swap2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8155:8195  RoleRevoked(role, account, _msgSender()) */\n      0xf6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b\n      swap2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8131:8136  false */\n      swap1\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8155:8195  RoleRevoked(role, account, _msgSender()) */\n      log4\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8216:8220  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":8209:8220  return true */\n      swap2\n      pop\n      pop\n      jump(tag_184)\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3674:3852  function _unpause() internal virtual whenPaused {... */\n    tag_223:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2563:2579  _requirePaused() */\n      tag_445\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2563:2577  _requirePaused */\n      tag_446\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2563:2579  _requirePaused() */\n      jump\t// in\n    tag_445:\n      0x00\n      dup1\n      mload\n      0x20\n      data_c0c65a3718f3702d917c44106b91645b509d2e2d0979b70495c3babce192339f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3791:3808  $._paused = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      dup2\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3823:3845  Unpaused(_msgSender()) */\n      0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3832:3844  _msgSender() */\n    tag_449:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3823:3845  Unpaused(_msgSender()) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2968:3000   */\n      swap1\n      swap2\n      and\n        /* \"#utility.yul\":2950:3001   */\n      dup2\n      mstore\n        /* \"#utility.yul\":2938:2940   */\n      0x20\n        /* \"#utility.yul\":2923:2941   */\n      add\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3823:3845  Unpaused(_msgSender()) */\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      log1\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3722:3852  {... */\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3674:3852  function _unpause() internal virtual whenPaused {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2905:3033  function _requireNotPaused() internal view virtual {... */\n    tag_226:\n      0x00\n      dup1\n      mload\n      0x20\n      data_c0c65a3718f3702d917c44106b91645b509d2e2d0979b70495c3babce192339f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2821:2830  $._paused */\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2966:3027  if (paused()) {... */\n      iszero\n      tag_454\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3001:3016  EnforcedPause() */\n      mload(0x40)\n      shl(0xe0, 0xd93c0665)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2966:3027  if (paused()) {... */\n    tag_454:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2905:3033  function _requireNotPaused() internal view virtual {... */\n      jump\t// out\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7499:7877  function getOutputAmount(uint256 inputAmount, uint256 inputReserve, uint256 outputReserve) internal pure returns (uint256) {... */\n    tag_242:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7613:7620  uint256 */\n      0x00\n      dup1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7676:7691  1000 - FEE_RATE */\n      tag_456\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":1016:1017  3 */\n      0x03\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7676:7680  1000 */\n      0x03e8\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7676:7691  1000 - FEE_RATE */\n      tag_241\n      jump\t// in\n    tag_456:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7661:7692  inputAmount * (1000 - FEE_RATE) */\n      tag_457\n      swap1\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7661:7672  inputAmount */\n      dup7\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7661:7692  inputAmount * (1000 - FEE_RATE) */\n      tag_304\n      jump\t// in\n    tag_457:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7632:7692  uint256 inputAmountWithFee = inputAmount * (1000 - FEE_RATE) */\n      swap1\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7702:7719  uint256 numerator */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7722:7756  inputAmountWithFee * outputReserve */\n      tag_458\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7743:7756  outputReserve */\n      dup5\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7632:7692  uint256 inputAmountWithFee = inputAmount * (1000 - FEE_RATE) */\n      dup4\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7722:7756  inputAmountWithFee * outputReserve */\n      tag_304\n      jump\t// in\n    tag_458:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7702:7756  uint256 numerator = inputAmountWithFee * outputReserve */\n      swap1\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7766:7785  uint256 denominator */\n      0x00\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7812:7830  inputAmountWithFee */\n      dup3\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7789:7808  inputReserve * 1000 */\n      tag_459\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7789:7801  inputReserve */\n      dup8\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7804:7808  1000 */\n      0x03e8\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7789:7808  inputReserve * 1000 */\n      tag_304\n      jump\t// in\n    tag_459:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7788:7830  (inputReserve * 1000) + inputAmountWithFee */\n      tag_460\n      swap2\n      swap1\n      tag_274\n      jump\t// in\n    tag_460:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7766:7830  uint256 denominator = (inputReserve * 1000) + inputAmountWithFee */\n      swap1\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7847:7870  numerator / denominator */\n      tag_461\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7766:7830  uint256 denominator = (inputReserve * 1000) + inputAmountWithFee */\n      dup2\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7847:7856  numerator */\n      dup4\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7847:7870  numerator / denominator */\n      tag_306\n      jump\t// in\n    tag_461:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7840:7870  return numerator / denominator */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7499:7877  function getOutputAmount(uint256 inputAmount, uint256 inputReserve, uint256 outputReserve) internal pure returns (uint256) {... */\n    tag_455:\n      swap4\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4599:4911  function _checkProxy() internal view virtual {... */\n    tag_255:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4679:4683  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4688:4694  __self */\n      immutable(\"0x3b04ad91523c4dcf551e081621e633b9099d51bf9c5461e58c3bc7354a578b27\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4671:4694  address(this) == __self */\n      and\n      eq\n      dup1\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4671:4791  address(this) == __self || // Must be called through delegatecall... */\n      tag_463\n      jumpi\n      pop\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4785:4791  __self */\n      immutable(\"0x3b04ad91523c4dcf551e081621e633b9099d51bf9c5461e58c3bc7354a578b27\")\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4749:4791  ERC1967Utils.getImplementation() != __self */\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4749:4781  ERC1967Utils.getImplementation() */\n      tag_464\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2035:2088  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value */\n      sload\n      sub(shl(0xa0, 0x01), 0x01)\n      and\n      swap1\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":1957:2095  function getImplementation() internal view returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4749:4781  ERC1967Utils.getImplementation() */\n    tag_464:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4749:4791  ERC1967Utils.getImplementation() != __self */\n      and\n      eq\n      iszero\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4671:4791  address(this) == __self || // Must be called through delegatecall... */\n    tag_463:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4654:4905  if (... */\n      iszero\n      tag_454\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":4865:4894  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      shl(0xe1, 0x703e46dd)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":7883:7981  function _authorizeUpgrade(address newImplementation) internal onlyRole(UPGRADER_ROLE) override {} */\n    tag_258:\n        /* \"src/smartcontracts/CryptoQuestSwap.sol\":858:884  keccak256(\"UPGRADER_ROLE\") */\n      0x189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      tag_259\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3202:3206  role */\n      dup2\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3201  _checkRole */\n      tag_188\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3191:3207  _checkRole(role) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6052:6590  function _upgradeToAndCallUUPS(address newImplementation, bytes memory data) private {... */\n    tag_260:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6169:6186  newImplementation */\n      dup2\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6151:6201  IERC1822Proxiable(newImplementation).proxiableUUID */\n      and\n      0x52d1902d\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6151:6203  IERC1822Proxiable(newImplementation).proxiableUUID() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      swap3\n      pop\n      pop\n      pop\n      dup1\n      iszero\n      tag_471\n      jumpi\n      pop\n      0x40\n      dup1\n      mload\n      0x1f\n      returndatasize\n      swap1\n      dup2\n      add\n      not(0x1f)\n      and\n      dup3\n      add\n      swap1\n      swap3\n      mstore\n      tag_472\n      swap2\n      dup2\n      add\n      swap1\n      tag_473\n      jump\t// in\n    tag_472:\n      0x01\n    tag_471:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6147:6584  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n      tag_474\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6513:6573  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      shl(0xe0, 0x4c9c8ce3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2968:3000   */\n      dup4\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6513:6573  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2950:3001   */\n      mstore\n        /* \"#utility.yul\":2923:2941   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6513:6573  ERC1967Utils.ERC1967InvalidImplementation(newImplementation) */\n      tag_229\n        /* \"#utility.yul\":2779:3007   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6147:6584  try IERC1822Proxiable(newImplementation).proxiableUUID() returns (bytes32 slot) {... */\n    tag_474:\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6245:6285  slot != ERC1967Utils.IMPLEMENTATION_SLOT */\n      dup2\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6241:6361  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n      tag_480\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6312:6346  UUPSUnsupportedProxiableUUID(slot) */\n      mload(0x40)\n      shl(0xe2, 0x2a875269)\n      dup2\n      mstore\n      0x04\n      dup2\n      add\n        /* \"#utility.yul\":1958:1983   */\n      dup3\n      swap1\n      mstore\n        /* \"#utility.yul\":1931:1949   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6312:6346  UUPSUnsupportedProxiableUUID(slot) */\n      tag_229\n        /* \"#utility.yul\":1812:1989   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6241:6361  if (slot != ERC1967Utils.IMPLEMENTATION_SLOT) {... */\n    tag_480:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6374:6428  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      tag_217\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6404:6421  newImplementation */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6423:6427  data */\n      dup4\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6374:6403  ERC1967Utils.upgradeToAndCall */\n      tag_483\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":6374:6428  ERC1967Utils.upgradeToAndCall(newImplementation, data) */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5028:5241  function _checkNotDelegated() internal view virtual {... */\n    tag_283:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5102:5106  this */\n      address\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5111:5117  __self */\n      immutable(\"0x3b04ad91523c4dcf551e081621e633b9099d51bf9c5461e58c3bc7354a578b27\")\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5094:5117  address(this) != __self */\n      and\n      eq\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5090:5235  if (address(this) != __self) {... */\n      tag_454\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":5195:5224  UUPSUnauthorizedCallContext() */\n      mload(0x40)\n      shl(0xe1, 0x703e46dd)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3366:3542  function _pause() internal virtual whenNotPaused {... */\n    tag_324:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      tag_488\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2333  _requireNotPaused */\n      tag_226\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2316:2335  _requireNotPaused() */\n      jump\t// in\n    tag_488:\n      0x00\n      dup1\n      mload\n      0x20\n      data_c0c65a3718f3702d917c44106b91645b509d2e2d0979b70495c3babce192339f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3484:3500  $._paused = true */\n      dup1\n      sload\n      not(0xff)\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3496:3500  true */\n      0x01\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3484:3500  $._paused = true */\n      or\n      dup2\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3515:3535  Paused(_msgSender()) */\n      0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":966:976  msg.sender */\n      caller\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3522:3534  _msgSender() */\n      tag_449\n        /* \"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":887:983  function _msgSender() internal view virtual returns (address) {... */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1836:1933  function __Pausable_init() internal onlyInitializing {... */\n    tag_360:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_495\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_496\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_495:\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1899:1926  __Pausable_init_unchained() */\n      tag_454\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1899:1924  __Pausable_init_unchained */\n      tag_499\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1899:1926  __Pausable_init_unchained() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":3231:3296  function __AccessControl_init() internal onlyInitializing {... */\n    tag_362:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_454\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_496\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4381:4578  function _checkRole(bytes32 role, address account) internal view virtual {... */\n    tag_429:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4469:4491  hasRole(role, account) */\n      tag_507\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4477:4481  role */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4483:4490  account */\n      dup3\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4469:4476  hasRole */\n      tag_126\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4469:4491  hasRole(role, account) */\n      jump\t// in\n    tag_507:\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4464:4572  if (!hasRole(role, account)) {... */\n      tag_259\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4514:4561  AccessControlUnauthorizedAccount(account, role) */\n      mload(0x40)\n      shl(0xe0, 0xe2517d3f)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7509:7541   */\n      dup3\n      and\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4514:4561  AccessControlUnauthorizedAccount(account, role) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":7491:7542   */\n      mstore\n        /* \"#utility.yul\":7558:7576   */\n      0x24\n      dup2\n      add\n        /* \"#utility.yul\":7551:7585   */\n      dup4\n      swap1\n      mstore\n        /* \"#utility.yul\":7464:7482   */\n      0x44\n      add\n        /* \"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":4514:4561  AccessControlUnauthorizedAccount(account, role) */\n      tag_229\n        /* \"#utility.yul\":7317:7591   */\n      jump\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3105:3231  function _requirePaused() internal view virtual {... */\n    tag_446:\n      0x00\n      dup1\n      mload\n      0x20\n      data_c0c65a3718f3702d917c44106b91645b509d2e2d0979b70495c3babce192339f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2821:2830  $._paused */\n      sload\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3163:3225  if (!paused()) {... */\n      tag_454\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":3199:3214  ExpectedPause() */\n      mload(0x40)\n      shl(0xe0, 0x8dfc202b)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2779:3114  function upgradeToAndCall(address newImplementation, bytes memory data) internal {... */\n    tag_483:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2870:2907  _setImplementation(newImplementation) */\n      tag_518\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2889:2906  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2870:2888  _setImplementation */\n      tag_519\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2870:2907  _setImplementation(newImplementation) */\n      jump\t// in\n    tag_518:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2922:2949  Upgraded(newImplementation) */\n      mload(0x40)\n      sub(shl(0xa0, 0x01), 0x01)\n      dup4\n      and\n      swap1\n      0xbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b\n      swap1\n      0x00\n      swap1\n      log2\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2964:2975  data.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2964:2979  data.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2960:3108  if (data.length > 0) {... */\n      tag_520\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2995:3048  Address.functionDelegateCall(newImplementation, data) */\n      tag_217\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3024:3041  newImplementation */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3043:3047  data */\n      dup3\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2995:3023  Address.functionDelegateCall */\n      tag_522\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2995:3048  Address.functionDelegateCall(newImplementation, data) */\n      jump\t// in\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2960:3108  if (data.length > 0) {... */\n    tag_520:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3079:3097  _checkNonPayable() */\n      tag_259\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3079:3095  _checkNonPayable */\n      tag_525\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":3079:3097  _checkNonPayable() */\n      jump\t// in\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7084:7225  function _checkInitializing() internal view virtual {... */\n    tag_496:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8870:8891  INITIALIZABLE_STORAGE */\n      0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":8560:8600  _getInitializableStorage()._initializing */\n      sload\n      shl(0x40, 0x01)\n      swap1\n      div\n      0xff\n      and\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7146:7219  if (!_isInitializing()) {... */\n      tag_454\n      jumpi\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":7191:7208  NotInitializing() */\n      mload(0x40)\n      shl(0xe3, 0x1afcd79f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1939:2095  function __Pausable_init_unchained() internal onlyInitializing {... */\n    tag_499:\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      tag_531\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6949  _checkInitializing */\n      tag_496\n        /* \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":6931:6951  _checkInitializing() */\n      jump\t// in\n    tag_531:\n      0x00\n      dup1\n      mload\n      0x20\n      data_c0c65a3718f3702d917c44106b91645b509d2e2d0979b70495c3babce192339f\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":2071:2088  $._paused = false */\n      dup1\n      sload\n      not(0xff)\n      and\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":1939:2095  function __Pausable_init_unchained() internal onlyInitializing {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2186:2467  function _setImplementation(address newImplementation) private {... */\n    tag_519:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2263:2280  newImplementation */\n      dup1\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2263:2292  newImplementation.code.length */\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2296:2297  0 */\n      0x00\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2263:2297  newImplementation.code.length == 0 */\n      sub\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2259:2378  if (newImplementation.code.length == 0) {... */\n      tag_536\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2320:2367  ERC1967InvalidImplementation(newImplementation) */\n      mload(0x40)\n      shl(0xe0, 0x4c9c8ce3)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2968:3000   */\n      dup3\n      and\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2320:2367  ERC1967InvalidImplementation(newImplementation) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2950:3001   */\n      mstore\n        /* \"#utility.yul\":2923:2941   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2320:2367  ERC1967InvalidImplementation(newImplementation) */\n      tag_229\n        /* \"#utility.yul\":2779:3007   */\n      jump\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2259:2378  if (newImplementation.code.length == 0) {... */\n    tag_536:\n      0x00\n      dup1\n      mload\n      0x20\n      data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d\n      dup4\n      codecopy\n      dup2\n      mload\n      swap2\n      mstore\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2387:2460  StorageSlot.getAddressSlot(IMPLEMENTATION_SLOT).value = newImplementation */\n      dup1\n      sload\n      not(sub(shl(0xa0, 0x01), 0x01))\n      and\n      sub(shl(0xa0, 0x01), 0x01)\n      swap3\n      swap1\n      swap3\n      and\n      swap2\n      swap1\n      swap2\n      or\n      swap1\n      sstore\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":2186:2467  function _setImplementation(address newImplementation) private {... */\n      jump\t// out\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4106:4359  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n    tag_522:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4189:4201  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4214:4226  bool success */\n      0x00\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4228:4251  bytes memory returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4255:4261  target */\n      dup5\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4255:4274  target.delegatecall */\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4275:4279  data */\n      dup5\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4255:4280  target.delegatecall(data) */\n      mload(0x40)\n      tag_540\n      swap2\n      swap1\n      tag_541\n      jump\t// in\n    tag_540:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup6\n      gas\n      delegatecall\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_544\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_543)\n    tag_544:\n      0x60\n      swap2\n      pop\n    tag_543:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4213:4280  (bool success, bytes memory returndata) = target.delegatecall(data) */\n      swap2\n      pop\n      swap2\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4297:4352  verifyCallResultFromTarget(target, success, returndata) */\n      tag_545\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4324:4330  target */\n      dup6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4332:4339  success */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4341:4351  returndata */\n      dup4\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4297:4323  verifyCallResultFromTarget */\n      tag_546\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4297:4352  verifyCallResultFromTarget(target, success, returndata) */\n      jump\t// in\n    tag_545:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4290:4352  return verifyCallResultFromTarget(target, success, returndata) */\n      swap6\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4106:4359  function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {... */\n      swap5\n      pop\n      pop\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6598:6720  function _checkNonPayable() private {... */\n    tag_525:\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6648:6657  msg.value */\n      callvalue\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6648:6661  msg.value > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6644:6714  if (msg.value > 0) {... */\n      tag_454\n      jumpi\n        /* \"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":6684:6703  ERC1967NonPayable() */\n      mload(0x40)\n      shl(0xe0, 0xb398979f)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4625:5207  function verifyCallResultFromTarget(... */\n    tag_546:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4769:4781  bytes memory */\n      0x60\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4798:4805  success */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      tag_552\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      tag_553\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4829:4839  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4828  _revert */\n      tag_554\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4821:4840  _revert(returndata) */\n      jump\t// in\n    tag_553:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":4793:5201  if (!success) {... */\n      jump(tag_455)\n    tag_552:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5062  returndata.length */\n      dup2\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5067  returndata.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n      dup1\n      iszero\n      tag_556\n      jumpi\n      pop\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5089  target.code.length */\n      dup5\n      and\n      extcodesize\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5071:5094  target.code.length == 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5045:5094  returndata.length == 0 && target.code.length == 0 */\n    tag_556:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n      iszero\n      tag_557\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      mload(0x40)\n      shl(0xe0, 0x9996b315)\n      dup2\n      mstore\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":2968:3000   */\n      dup6\n      and\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      0x04\n      dup3\n      add\n        /* \"#utility.yul\":2950:3001   */\n      mstore\n        /* \"#utility.yul\":2923:2941   */\n      0x24\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5121:5145  AddressEmptyCode(target) */\n      tag_229\n        /* \"#utility.yul\":2779:3007   */\n      jump\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5041:5160  if (returndata.length == 0 && target.code.length == 0) {... */\n    tag_557:\n      pop\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5180:5190  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5173:5190  return returndata */\n      jump(tag_455)\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5743:6259  function _revert(bytes memory returndata) private pure {... */\n    tag_554:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5891  returndata.length */\n      dup1\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5874:5895  returndata.length > 0 */\n      iszero\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n      tag_560\n      jumpi\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6102:6112  returndata */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6096:6113  mload(returndata) */\n      mload\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6158:6173  returndata_size */\n      dup1\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6145:6155  returndata */\n      dup3\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6141:6143  32 */\n      0x20\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6137:6156  add(32, returndata) */\n      add\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6130:6174  revert(add(32, returndata), returndata_size) */\n      revert\n        /* \"@openzeppelin/contracts/utils/Address.sol\":5870:6253  if (returndata.length > 0) {... */\n    tag_560:\n        /* \"@openzeppelin/contracts/utils/Address.sol\":6225:6242  FailedInnerCall() */\n      mload(0x40)\n      shl(0xe1, 0x0a12f521)\n      dup2\n      mstore\n      0x04\n      add\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      revert\n        /* \"#utility.yul\":14:300   */\n    tag_43:\n        /* \"#utility.yul\":72:78   */\n      0x00\n        /* \"#utility.yul\":125:127   */\n      0x20\n        /* \"#utility.yul\":113:122   */\n      dup3\n        /* \"#utility.yul\":104:111   */\n      dup5\n        /* \"#utility.yul\":100:123   */\n      sub\n        /* \"#utility.yul\":96:128   */\n      slt\n        /* \"#utility.yul\":93:145   */\n      iszero\n      tag_567\n      jumpi\n        /* \"#utility.yul\":141:142   */\n      0x00\n        /* \"#utility.yul\":138:139   */\n      dup1\n        /* \"#utility.yul\":131:143   */\n      revert\n        /* \"#utility.yul\":93:145   */\n    tag_567:\n        /* \"#utility.yul\":167:190   */\n      dup2\n      calldataload\n      not(sub(shl(0xe0, 0x01), 0x01))\n        /* \"#utility.yul\":219:251   */\n      dup2\n      and\n        /* \"#utility.yul\":209:252   */\n      dup2\n      eq\n        /* \"#utility.yul\":199:270   */\n      tag_455\n      jumpi\n        /* \"#utility.yul\":266:267   */\n      0x00\n        /* \"#utility.yul\":263:264   */\n      dup1\n        /* \"#utility.yul\":256:268   */\n      revert\n        /* \"#utility.yul\":497:723   */\n    tag_50:\n        /* \"#utility.yul\":556:562   */\n      0x00\n        /* \"#utility.yul\":609:611   */\n      0x20\n        /* \"#utility.yul\":597:606   */\n      dup3\n        /* \"#utility.yul\":588:595   */\n      dup5\n        /* \"#utility.yul\":584:607   */\n      sub\n        /* \"#utility.yul\":580:612   */\n      slt\n        /* \"#utility.yul\":577:629   */\n      iszero\n      tag_571\n      jumpi\n        /* \"#utility.yul\":625:626   */\n      0x00\n        /* \"#utility.yul\":622:623   */\n      dup1\n        /* \"#utility.yul\":615:627   */\n      revert\n        /* \"#utility.yul\":577:629   */\n    tag_571:\n      pop\n        /* \"#utility.yul\":670:693   */\n      calldataload\n      swap2\n        /* \"#utility.yul\":497:723   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":728:859   */\n    tag_562:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":803:834   */\n      dup2\n      and\n        /* \"#utility.yul\":793:835   */\n      dup2\n      eq\n        /* \"#utility.yul\":783:853   */\n      tag_222\n      jumpi\n        /* \"#utility.yul\":849:850   */\n      0x00\n        /* \"#utility.yul\":846:847   */\n      dup1\n        /* \"#utility.yul\":839:851   */\n      revert\n        /* \"#utility.yul\":864:1231   */\n    tag_55:\n        /* \"#utility.yul\":932:938   */\n      0x00\n        /* \"#utility.yul\":940:946   */\n      dup1\n        /* \"#utility.yul\":993:995   */\n      0x40\n        /* \"#utility.yul\":981:990   */\n      dup4\n        /* \"#utility.yul\":972:979   */\n      dup6\n        /* \"#utility.yul\":968:991   */\n      sub\n        /* \"#utility.yul\":964:996   */\n      slt\n        /* \"#utility.yul\":961:1013   */\n      iszero\n      tag_575\n      jumpi\n        /* \"#utility.yul\":1009:1010   */\n      0x00\n        /* \"#utility.yul\":1006:1007   */\n      dup1\n        /* \"#utility.yul\":999:1011   */\n      revert\n        /* \"#utility.yul\":961:1013   */\n    tag_575:\n        /* \"#utility.yul\":1048:1057   */\n      dup3\n        /* \"#utility.yul\":1035:1058   */\n      calldataload\n        /* \"#utility.yul\":1067:1098   */\n      tag_576\n        /* \"#utility.yul\":1092:1097   */\n      dup2\n        /* \"#utility.yul\":1067:1098   */\n      tag_562\n      jump\t// in\n    tag_576:\n        /* \"#utility.yul\":1117:1122   */\n      swap5\n        /* \"#utility.yul\":1195:1197   */\n      0x20\n        /* \"#utility.yul\":1180:1198   */\n      swap4\n      swap1\n      swap4\n      add\n        /* \"#utility.yul\":1167:1199   */\n      calldataload\n      swap4\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":864:1231   */\n      jump\t// out\n        /* \"#utility.yul\":1236:1483   */\n    tag_60:\n        /* \"#utility.yul\":1295:1301   */\n      0x00\n        /* \"#utility.yul\":1348:1350   */\n      0x20\n        /* \"#utility.yul\":1336:1345   */\n      dup3\n        /* \"#utility.yul\":1327:1334   */\n      dup5\n        /* \"#utility.yul\":1323:1346   */\n      sub\n        /* \"#utility.yul\":1319:1351   */\n      slt\n        /* \"#utility.yul\":1316:1368   */\n      iszero\n      tag_578\n      jumpi\n        /* \"#utility.yul\":1364:1365   */\n      0x00\n        /* \"#utility.yul\":1361:1362   */\n      dup1\n        /* \"#utility.yul\":1354:1366   */\n      revert\n        /* \"#utility.yul\":1316:1368   */\n    tag_578:\n        /* \"#utility.yul\":1403:1412   */\n      dup2\n        /* \"#utility.yul\":1390:1413   */\n      calldataload\n        /* \"#utility.yul\":1422:1453   */\n      tag_455\n        /* \"#utility.yul\":1447:1452   */\n      dup2\n        /* \"#utility.yul\":1422:1453   */\n      tag_562\n      jump\t// in\n        /* \"#utility.yul\":2407:2774   */\n    tag_83:\n        /* \"#utility.yul\":2475:2481   */\n      0x00\n        /* \"#utility.yul\":2483:2489   */\n      dup1\n        /* \"#utility.yul\":2536:2538   */\n      0x40\n        /* \"#utility.yul\":2524:2533   */\n      dup4\n        /* \"#utility.yul\":2515:2522   */\n      dup6\n        /* \"#utility.yul\":2511:2534   */\n      sub\n        /* \"#utility.yul\":2507:2539   */\n      slt\n        /* \"#utility.yul\":2504:2556   */\n      iszero\n      tag_586\n      jumpi\n        /* \"#utility.yul\":2552:2553   */\n      0x00\n        /* \"#utility.yul\":2549:2550   */\n      dup1\n        /* \"#utility.yul\":2542:2554   */\n      revert\n        /* \"#utility.yul\":2504:2556   */\n    tag_586:\n        /* \"#utility.yul\":2597:2620   */\n      dup3\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":2696:2698   */\n      0x20\n        /* \"#utility.yul\":2681:2699   */\n      dup4\n      add\n        /* \"#utility.yul\":2668:2700   */\n      calldataload\n        /* \"#utility.yul\":2709:2742   */\n      tag_587\n        /* \"#utility.yul\":2668:2700   */\n      dup2\n        /* \"#utility.yul\":2709:2742   */\n      tag_562\n      jump\t// in\n    tag_587:\n        /* \"#utility.yul\":2761:2768   */\n      dup1\n        /* \"#utility.yul\":2751:2768   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":2407:2774   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":3012:3358   */\n    tag_99:\n        /* \"#utility.yul\":3080:3086   */\n      0x00\n        /* \"#utility.yul\":3088:3094   */\n      dup1\n        /* \"#utility.yul\":3141:3143   */\n      0x40\n        /* \"#utility.yul\":3129:3138   */\n      dup4\n        /* \"#utility.yul\":3120:3127   */\n      dup6\n        /* \"#utility.yul\":3116:3139   */\n      sub\n        /* \"#utility.yul\":3112:3144   */\n      slt\n        /* \"#utility.yul\":3109:3161   */\n      iszero\n      tag_590\n      jumpi\n        /* \"#utility.yul\":3157:3158   */\n      0x00\n        /* \"#utility.yul\":3154:3155   */\n      dup1\n        /* \"#utility.yul\":3147:3159   */\n      revert\n        /* \"#utility.yul\":3109:3161   */\n    tag_590:\n      pop\n      pop\n        /* \"#utility.yul\":3202:3225   */\n      dup1\n      calldataload\n      swap3\n        /* \"#utility.yul\":3322:3324   */\n      0x20\n        /* \"#utility.yul\":3307:3325   */\n      swap1\n      swap2\n      add\n        /* \"#utility.yul\":3294:3326   */\n      calldataload\n      swap2\n      pop\n        /* \"#utility.yul\":3012:3358   */\n      jump\t// out\n        /* \"#utility.yul\":3363:3490   */\n    tag_563:\n        /* \"#utility.yul\":3424:3434   */\n      0x4e487b71\n        /* \"#utility.yul\":3419:3422   */\n      0xe0\n        /* \"#utility.yul\":3415:3435   */\n      shl\n        /* \"#utility.yul\":3412:3413   */\n      0x00\n        /* \"#utility.yul\":3405:3436   */\n      mstore\n        /* \"#utility.yul\":3455:3459   */\n      0x41\n        /* \"#utility.yul\":3452:3453   */\n      0x04\n        /* \"#utility.yul\":3445:3460   */\n      mstore\n        /* \"#utility.yul\":3479:3483   */\n      0x24\n        /* \"#utility.yul\":3476:3477   */\n      0x00\n        /* \"#utility.yul\":3469:3484   */\n      revert\n        /* \"#utility.yul\":3495:4574   */\n    tag_103:\n        /* \"#utility.yul\":3572:3578   */\n      0x00\n        /* \"#utility.yul\":3580:3586   */\n      dup1\n        /* \"#utility.yul\":3633:3635   */\n      0x40\n        /* \"#utility.yul\":3621:3630   */\n      dup4\n        /* \"#utility.yul\":3612:3619   */\n      dup6\n        /* \"#utility.yul\":3608:3631   */\n      sub\n        /* \"#utility.yul\":3604:3636   */\n      slt\n        /* \"#utility.yul\":3601:3653   */\n      iszero\n      tag_593\n      jumpi\n        /* \"#utility.yul\":3649:3650   */\n      0x00\n        /* \"#utility.yul\":3646:3647   */\n      dup1\n        /* \"#utility.yul\":3639:3651   */\n      revert\n        /* \"#utility.yul\":3601:3653   */\n    tag_593:\n        /* \"#utility.yul\":3688:3697   */\n      dup3\n        /* \"#utility.yul\":3675:3698   */\n      calldataload\n        /* \"#utility.yul\":3707:3738   */\n      tag_594\n        /* \"#utility.yul\":3732:3737   */\n      dup2\n        /* \"#utility.yul\":3707:3738   */\n      tag_562\n      jump\t// in\n    tag_594:\n        /* \"#utility.yul\":3757:3762   */\n      swap2\n      pop\n        /* \"#utility.yul\":3813:3815   */\n      0x20\n        /* \"#utility.yul\":3798:3816   */\n      dup4\n      add\n        /* \"#utility.yul\":3785:3817   */\n      calldataload\n        /* \"#utility.yul\":3840:3858   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":3829:3859   */\n      dup2\n      gt\n        /* \"#utility.yul\":3826:3876   */\n      iszero\n      tag_595\n      jumpi\n        /* \"#utility.yul\":3872:3873   */\n      0x00\n        /* \"#utility.yul\":3869:3870   */\n      dup1\n        /* \"#utility.yul\":3862:3874   */\n      revert\n        /* \"#utility.yul\":3826:3876   */\n    tag_595:\n        /* \"#utility.yul\":3895:3917   */\n      dup4\n      add\n        /* \"#utility.yul\":3948:3952   */\n      0x1f\n        /* \"#utility.yul\":3940:3953   */\n      dup2\n      add\n        /* \"#utility.yul\":3936:3963   */\n      dup6\n      sgt\n        /* \"#utility.yul\":3926:3981   */\n      tag_596\n      jumpi\n        /* \"#utility.yul\":3977:3978   */\n      0x00\n        /* \"#utility.yul\":3974:3975   */\n      dup1\n        /* \"#utility.yul\":3967:3979   */\n      revert\n        /* \"#utility.yul\":3926:3981   */\n    tag_596:\n        /* \"#utility.yul\":4017:4019   */\n      dup1\n        /* \"#utility.yul\":4004:4020   */\n      calldataload\n        /* \"#utility.yul\":4043:4061   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4035:4041   */\n      dup2\n        /* \"#utility.yul\":4032:4062   */\n      gt\n        /* \"#utility.yul\":4029:4085   */\n      iszero\n      tag_598\n      jumpi\n        /* \"#utility.yul\":4065:4083   */\n      tag_598\n      tag_563\n      jump\t// in\n    tag_598:\n        /* \"#utility.yul\":4114:4116   */\n      0x40\n        /* \"#utility.yul\":4108:4117   */\n      mload\n        /* \"#utility.yul\":4206:4208   */\n      0x1f\n        /* \"#utility.yul\":4168:4185   */\n      dup3\n      add\n      not(0x1f)\n        /* \"#utility.yul\":4164:4195   */\n      swap1\n      dup2\n      and\n        /* \"#utility.yul\":4197:4199   */\n      0x3f\n        /* \"#utility.yul\":4160:4200   */\n      add\n        /* \"#utility.yul\":4156:4210   */\n      and\n        /* \"#utility.yul\":4144:4211   */\n      dup2\n      add\n        /* \"#utility.yul\":4241:4259   */\n      0xffffffffffffffff\n        /* \"#utility.yul\":4226:4260   */\n      dup2\n      gt\n        /* \"#utility.yul\":4262:4284   */\n      dup3\n      dup3\n      lt\n        /* \"#utility.yul\":4223:4285   */\n      or\n        /* \"#utility.yul\":4220:4308   */\n      iszero\n      tag_600\n      jumpi\n        /* \"#utility.yul\":4288:4306   */\n      tag_600\n      tag_563\n      jump\t// in\n    tag_600:\n        /* \"#utility.yul\":4324:4326   */\n      0x40\n        /* \"#utility.yul\":4317:4339   */\n      mstore\n        /* \"#utility.yul\":4348:4370   */\n      dup2\n      dup2\n      mstore\n        /* \"#utility.yul\":4389:4404   */\n      dup3\n      dup3\n      add\n        /* \"#utility.yul\":4406:4408   */\n      0x20\n        /* \"#utility.yul\":4385:4409   */\n      add\n        /* \"#utility.yul\":4382:4419   */\n      dup8\n      lt\n        /* \"#utility.yul\":4379:4436   */\n      iszero\n      tag_601\n      jumpi\n        /* \"#utility.yul\":4432:4433   */\n      0x00\n        /* \"#utility.yul\":4429:4430   */\n      dup1\n        /* \"#utility.yul\":4422:4434   */\n      revert\n        /* \"#utility.yul\":4379:4436   */\n    tag_601:\n        /* \"#utility.yul\":4488:4494   */\n      dup2\n        /* \"#utility.yul\":4483:4485   */\n      0x20\n        /* \"#utility.yul\":4479:4481   */\n      dup5\n        /* \"#utility.yul\":4475:4486   */\n      add\n        /* \"#utility.yul\":4470:4472   */\n      0x20\n        /* \"#utility.yul\":4462:4468   */\n      dup4\n        /* \"#utility.yul\":4458:4473   */\n      add\n        /* \"#utility.yul\":4445:4495   */\n      calldatacopy\n        /* \"#utility.yul\":4541:4542   */\n      0x00\n        /* \"#utility.yul\":4536:4538   */\n      0x20\n        /* \"#utility.yul\":4527:4533   */\n      dup4\n        /* \"#utility.yul\":4519:4525   */\n      dup4\n        /* \"#utility.yul\":4515:4534   */\n      add\n        /* \"#utility.yul\":4511:4539   */\n      add\n        /* \"#utility.yul\":4504:4543   */\n      mstore\n        /* \"#utility.yul\":4562:4568   */\n      dup1\n        /* \"#utility.yul\":4552:4568   */\n      swap4\n      pop\n      pop\n      pop\n      pop\n        /* \"#utility.yul\":3495:4574   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":4832:5250   */\n    tag_142:\n        /* \"#utility.yul\":4981:4983   */\n      0x20\n        /* \"#utility.yul\":4970:4979   */\n      dup2\n        /* \"#utility.yul\":4963:4984   */\n      mstore\n        /* \"#utility.yul\":4944:4948   */\n      0x00\n        /* \"#utility.yul\":5013:5019   */\n      dup3\n        /* \"#utility.yul\":5007:5020   */\n      mload\n        /* \"#utility.yul\":5056:5062   */\n      dup1\n        /* \"#utility.yul\":5051:5053   */\n      0x20\n        /* \"#utility.yul\":5040:5049   */\n      dup5\n        /* \"#utility.yul\":5036:5054   */\n      add\n        /* \"#utility.yul\":5029:5063   */\n      mstore\n        /* \"#utility.yul\":5115:5121   */\n      dup1\n        /* \"#utility.yul\":5110:5112   */\n      0x20\n        /* \"#utility.yul\":5102:5108   */\n      dup6\n        /* \"#utility.yul\":5098:5113   */\n      add\n        /* \"#utility.yul\":5093:5095   */\n      0x40\n        /* \"#utility.yul\":5082:5091   */\n      dup6\n        /* \"#utility.yul\":5078:5096   */\n      add\n        /* \"#utility.yul\":5072:5122   */\n      mcopy\n        /* \"#utility.yul\":5171:5172   */\n      0x00\n        /* \"#utility.yul\":5166:5168   */\n      0x40\n        /* \"#utility.yul\":5157:5163   */\n      dup3\n        /* \"#utility.yul\":5146:5155   */\n      dup6\n        /* \"#utility.yul\":5142:5164   */\n      add\n        /* \"#utility.yul\":5138:5169   */\n      add\n        /* \"#utility.yul\":5131:5173   */\n      mstore\n        /* \"#utility.yul\":5241:5243   */\n      0x40\n        /* \"#utility.yul\":5234:5236   */\n      0x1f\n        /* \"#utility.yul\":5230:5237   */\n      not\n        /* \"#utility.yul\":5225:5227   */\n      0x1f\n        /* \"#utility.yul\":5217:5223   */\n      dup4\n        /* \"#utility.yul\":5213:5228   */\n      add\n        /* \"#utility.yul\":5209:5238   */\n      and\n        /* \"#utility.yul\":5198:5207   */\n      dup5\n        /* \"#utility.yul\":5194:5239   */\n      add\n        /* \"#utility.yul\":5190:5244   */\n      add\n        /* \"#utility.yul\":5182:5244   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":4832:5250   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5255:5742   */\n    tag_146:\n        /* \"#utility.yul\":5332:5338   */\n      0x00\n        /* \"#utility.yul\":5340:5346   */\n      dup1\n        /* \"#utility.yul\":5348:5354   */\n      0x00\n        /* \"#utility.yul\":5401:5403   */\n      0x60\n        /* \"#utility.yul\":5389:5398   */\n      dup5\n        /* \"#utility.yul\":5380:5387   */\n      dup7\n        /* \"#utility.yul\":5376:5399   */\n      sub\n        /* \"#utility.yul\":5372:5404   */\n      slt\n        /* \"#utility.yul\":5369:5421   */\n      iszero\n      tag_605\n      jumpi\n        /* \"#utility.yul\":5417:5418   */\n      0x00\n        /* \"#utility.yul\":5414:5415   */\n      dup1\n        /* \"#utility.yul\":5407:5419   */\n      revert\n        /* \"#utility.yul\":5369:5421   */\n    tag_605:\n        /* \"#utility.yul\":5456:5465   */\n      dup4\n        /* \"#utility.yul\":5443:5466   */\n      calldataload\n        /* \"#utility.yul\":5475:5506   */\n      tag_606\n        /* \"#utility.yul\":5500:5505   */\n      dup2\n        /* \"#utility.yul\":5475:5506   */\n      tag_562\n      jump\t// in\n    tag_606:\n        /* \"#utility.yul\":5525:5530   */\n      swap6\n        /* \"#utility.yul\":5603:5605   */\n      0x20\n        /* \"#utility.yul\":5588:5606   */\n      dup6\n      add\n        /* \"#utility.yul\":5575:5607   */\n      calldataload\n      swap6\n      pop\n        /* \"#utility.yul\":5706:5708   */\n      0x40\n        /* \"#utility.yul\":5691:5709   */\n      swap1\n      swap5\n      add\n        /* \"#utility.yul\":5678:5710   */\n      calldataload\n      swap4\n        /* \"#utility.yul\":5255:5742   */\n      swap3\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":5747:6702   */\n    tag_151:\n        /* \"#utility.yul\":5851:5857   */\n      0x00\n        /* \"#utility.yul\":5859:5865   */\n      dup1\n        /* \"#utility.yul\":5867:5873   */\n      0x00\n        /* \"#utility.yul\":5875:5881   */\n      dup1\n        /* \"#utility.yul\":5883:5889   */\n      0x00\n        /* \"#utility.yul\":5891:5897   */\n      dup1\n        /* \"#utility.yul\":5944:5947   */\n      0xc0\n        /* \"#utility.yul\":5932:5941   */\n      dup8\n        /* \"#utility.yul\":5923:5930   */\n      dup10\n        /* \"#utility.yul\":5919:5942   */\n      sub\n        /* \"#utility.yul\":5915:5948   */\n      slt\n        /* \"#utility.yul\":5912:5965   */\n      iszero\n      tag_608\n      jumpi\n        /* \"#utility.yul\":5961:5962   */\n      0x00\n        /* \"#utility.yul\":5958:5959   */\n      dup1\n        /* \"#utility.yul\":5951:5963   */\n      revert\n        /* \"#utility.yul\":5912:5965   */\n    tag_608:\n        /* \"#utility.yul\":6000:6009   */\n      dup7\n        /* \"#utility.yul\":5987:6010   */\n      calldataload\n        /* \"#utility.yul\":6019:6050   */\n      tag_609\n        /* \"#utility.yul\":6044:6049   */\n      dup2\n        /* \"#utility.yul\":6019:6050   */\n      tag_562\n      jump\t// in\n    tag_609:\n        /* \"#utility.yul\":6069:6074   */\n      swap6\n      pop\n        /* \"#utility.yul\":6126:6128   */\n      0x20\n        /* \"#utility.yul\":6111:6129   */\n      dup8\n      add\n        /* \"#utility.yul\":6098:6130   */\n      calldataload\n        /* \"#utility.yul\":6139:6172   */\n      tag_610\n        /* \"#utility.yul\":6098:6130   */\n      dup2\n        /* \"#utility.yul\":6139:6172   */\n      tag_562\n      jump\t// in\n    tag_610:\n        /* \"#utility.yul\":6191:6198   */\n      swap5\n      pop\n        /* \"#utility.yul\":6250:6252   */\n      0x40\n        /* \"#utility.yul\":6235:6253   */\n      dup8\n      add\n        /* \"#utility.yul\":6222:6254   */\n      calldataload\n        /* \"#utility.yul\":6263:6296   */\n      tag_611\n        /* \"#utility.yul\":6222:6254   */\n      dup2\n        /* \"#utility.yul\":6263:6296   */\n      tag_562\n      jump\t// in\n    tag_611:\n        /* \"#utility.yul\":6315:6322   */\n      swap4\n      pop\n        /* \"#utility.yul\":6374:6376   */\n      0x60\n        /* \"#utility.yul\":6359:6377   */\n      dup8\n      add\n        /* \"#utility.yul\":6346:6378   */\n      calldataload\n        /* \"#utility.yul\":6387:6420   */\n      tag_612\n        /* \"#utility.yul\":6346:6378   */\n      dup2\n        /* \"#utility.yul\":6387:6420   */\n      tag_562\n      jump\t// in\n    tag_612:\n        /* \"#utility.yul\":6439:6446   */\n      swap3\n      pop\n        /* \"#utility.yul\":6498:6501   */\n      0x80\n        /* \"#utility.yul\":6483:6502   */\n      dup8\n      add\n        /* \"#utility.yul\":6470:6503   */\n      calldataload\n        /* \"#utility.yul\":6512:6545   */\n      tag_613\n        /* \"#utility.yul\":6470:6503   */\n      dup2\n        /* \"#utility.yul\":6512:6545   */\n      tag_562\n      jump\t// in\n    tag_613:\n        /* \"#utility.yul\":6564:6571   */\n      swap2\n      pop\n        /* \"#utility.yul\":6623:6626   */\n      0xa0\n        /* \"#utility.yul\":6608:6627   */\n      dup8\n      add\n        /* \"#utility.yul\":6595:6628   */\n      calldataload\n        /* \"#utility.yul\":6637:6670   */\n      tag_614\n        /* \"#utility.yul\":6595:6628   */\n      dup2\n        /* \"#utility.yul\":6637:6670   */\n      tag_562\n      jump\t// in\n    tag_614:\n        /* \"#utility.yul\":6689:6696   */\n      dup1\n        /* \"#utility.yul\":6679:6696   */\n      swap2\n      pop\n      pop\n        /* \"#utility.yul\":5747:6702   */\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      pop\n      swap3\n      swap6\n      jump\t// out\n        /* \"#utility.yul\":6941:7312   */\n    tag_191:\n      sub(shl(0xa0, 0x01), 0x01)\n        /* \"#utility.yul\":7161:7193   */\n      swap4\n      dup5\n      and\n        /* \"#utility.yul\":7143:7194   */\n      dup2\n      mstore\n        /* \"#utility.yul\":7230:7262   */\n      swap2\n      swap1\n      swap3\n      and\n        /* \"#utility.yul\":7225:7227   */\n      0x20\n        /* \"#utility.yul\":7210:7228   */\n      dup3\n      add\n        /* \"#utility.yul\":7203:7263   */\n      mstore\n        /* \"#utility.yul\":7294:7296   */\n      0x40\n        /* \"#utility.yul\":7279:7297   */\n      dup2\n      add\n        /* \"#utility.yul\":7272:7306   */\n      swap2\n      swap1\n      swap2\n      mstore\n        /* \"#utility.yul\":7131:7133   */\n      0x60\n        /* \"#utility.yul\":7116:7134   */\n      add\n      swap1\n        /* \"#utility.yul\":6941:7312   */\n      jump\t// out\n        /* \"#utility.yul\":7596:7873   */\n    tag_203:\n        /* \"#utility.yul\":7663:7669   */\n      0x00\n        /* \"#utility.yul\":7716:7718   */\n      0x20\n        /* \"#utility.yul\":7704:7713   */\n      dup3\n        /* \"#utility.yul\":7695:7702   */\n      dup5\n        /* \"#utility.yul\":7691:7714   */\n      sub\n        /* \"#utility.yul\":7687:7719   */\n      slt\n        /* \"#utility.yul\":7684:7736   */\n      iszero\n      tag_619\n      jumpi\n        /* \"#utility.yul\":7732:7733   */\n      0x00\n        /* \"#utility.yul\":7729:7730   */\n      dup1\n        /* \"#utility.yul\":7722:7734   */\n      revert\n        /* \"#utility.yul\":7684:7736   */\n    tag_619:\n        /* \"#utility.yul\":7764:7773   */\n      dup2\n        /* \"#utility.yul\":7758:7774   */\n      mload\n        /* \"#utility.yul\":7817:7822   */\n      dup1\n        /* \"#utility.yul\":7810:7823   */\n      iszero\n        /* \"#utility.yul\":7803:7824   */\n      iszero\n        /* \"#utility.yul\":7796:7801   */\n      dup2\n        /* \"#utility.yul\":7793:7825   */\n      eq\n        /* \"#utility.yul\":7783:7843   */\n      tag_455\n      jumpi\n        /* \"#utility.yul\":7839:7840   */\n      0x00\n        /* \"#utility.yul\":7836:7837   */\n      dup1\n        /* \"#utility.yul\":7829:7841   */\n      revert\n        /* \"#utility.yul\":7878:8278   */\n    tag_230:\n        /* \"#utility.yul\":8080:8082   */\n      0x20\n        /* \"#utility.yul\":8062:8083   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":8119:8121   */\n      0x24\n        /* \"#utility.yul\":8099:8117   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":8092:8122   */\n      mstore\n        /* \"#utility.yul\":8158:8192   */\n      0x45544820616d6f756e74206d7573742062652067726561746572207468616e20\n        /* \"#utility.yul\":8153:8155   */\n      0x40\n        /* \"#utility.yul\":8138:8156   */\n      dup3\n      add\n        /* \"#utility.yul\":8131:8193   */\n      mstore\n      shl(0xe0, 0x7a65726f)\n        /* \"#utility.yul\":8224:8226   */\n      0x60\n        /* \"#utility.yul\":8209:8227   */\n      dup3\n      add\n        /* \"#utility.yul\":8202:8236   */\n      mstore\n        /* \"#utility.yul\":8268:8271   */\n      0x80\n        /* \"#utility.yul\":8253:8272   */\n      add\n      swap1\n        /* \"#utility.yul\":7878:8278   */\n      jump\t// out\n        /* \"#utility.yul\":8283:8534   */\n    tag_235:\n        /* \"#utility.yul\":8353:8359   */\n      0x00\n        /* \"#utility.yul\":8406:8408   */\n      0x20\n        /* \"#utility.yul\":8394:8403   */\n      dup3\n        /* \"#utility.yul\":8385:8392   */\n      dup5\n        /* \"#utility.yul\":8381:8404   */\n      sub\n        /* \"#utility.yul\":8377:8409   */\n      slt\n        /* \"#utility.yul\":8374:8426   */\n      iszero\n      tag_623\n      jumpi\n        /* \"#utility.yul\":8422:8423   */\n      0x00\n        /* \"#utility.yul\":8419:8420   */\n      dup1\n        /* \"#utility.yul\":8412:8424   */\n      revert\n        /* \"#utility.yul\":8374:8426   */\n    tag_623:\n        /* \"#utility.yul\":8454:8463   */\n      dup2\n        /* \"#utility.yul\":8448:8464   */\n      mload\n        /* \"#utility.yul\":8473:8504   */\n      tag_455\n        /* \"#utility.yul\":8498:8503   */\n      dup2\n        /* \"#utility.yul\":8473:8504   */\n      tag_562\n      jump\t// in\n        /* \"#utility.yul\":8893:9020   */\n    tag_564:\n        /* \"#utility.yul\":8954:8964   */\n      0x4e487b71\n        /* \"#utility.yul\":8949:8952   */\n      0xe0\n        /* \"#utility.yul\":8945:8965   */\n      shl\n        /* \"#utility.yul\":8942:8943   */\n      0x00\n        /* \"#utility.yul\":8935:8966   */\n      mstore\n        /* \"#utility.yul\":8985:8989   */\n      0x11\n        /* \"#utility.yul\":8982:8983   */\n      0x04\n        /* \"#utility.yul\":8975:8990   */\n      mstore\n        /* \"#utility.yul\":9009:9013   */\n      0x24\n        /* \"#utility.yul\":9006:9007   */\n      0x00\n        /* \"#utility.yul\":8999:9014   */\n      revert\n        /* \"#utility.yul\":9025:9153   */\n    tag_241:\n        /* \"#utility.yul\":9092:9101   */\n      dup2\n      dup2\n      sub\n        /* \"#utility.yul\":9113:9124   */\n      dup2\n      dup2\n      gt\n        /* \"#utility.yul\":9110:9147   */\n      iszero\n      tag_184\n      jumpi\n        /* \"#utility.yul\":9127:9145   */\n      tag_184\n      tag_564\n      jump\t// in\n        /* \"#utility.yul\":9158:9509   */\n    tag_245:\n        /* \"#utility.yul\":9360:9362   */\n      0x20\n        /* \"#utility.yul\":9342:9363   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":9399:9401   */\n      0x1b\n        /* \"#utility.yul\":9379:9397   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9372:9402   */\n      mstore\n        /* \"#utility.yul\":9438:9467   */\n      0x536c69707061676520746f6c6572616e63652065786365656465640000000000\n        /* \"#utility.yul\":9433:9435   */\n      0x40\n        /* \"#utility.yul\":9418:9436   */\n      dup3\n      add\n        /* \"#utility.yul\":9411:9468   */\n      mstore\n        /* \"#utility.yul\":9500:9502   */\n      0x60\n        /* \"#utility.yul\":9485:9503   */\n      add\n      swap1\n        /* \"#utility.yul\":9158:9509   */\n      jump\t// out\n        /* \"#utility.yul\":9514:9860   */\n    tag_269:\n        /* \"#utility.yul\":9716:9718   */\n      0x20\n        /* \"#utility.yul\":9698:9719   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":9755:9757   */\n      0x16\n        /* \"#utility.yul\":9735:9753   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":9728:9758   */\n      mstore\n      shl(0x50, 0x496e73756666696369656e74206c6971756964697479)\n        /* \"#utility.yul\":9789:9791   */\n      0x40\n        /* \"#utility.yul\":9774:9792   */\n      dup3\n      add\n        /* \"#utility.yul\":9767:9819   */\n      mstore\n        /* \"#utility.yul\":9851:9853   */\n      0x60\n        /* \"#utility.yul\":9836:9854   */\n      add\n      swap1\n        /* \"#utility.yul\":9514:9860   */\n      jump\t// out\n        /* \"#utility.yul\":9865:9990   */\n    tag_274:\n        /* \"#utility.yul\":9930:9939   */\n      dup1\n      dup3\n      add\n        /* \"#utility.yul\":9951:9961   */\n      dup1\n      dup3\n      gt\n        /* \"#utility.yul\":9948:9984   */\n      iszero\n      tag_184\n      jumpi\n        /* \"#utility.yul\":9964:9982   */\n      tag_184\n      tag_564\n      jump\t// in\n        /* \"#utility.yul\":9995:10397   */\n    tag_290:\n        /* \"#utility.yul\":10197:10199   */\n      0x20\n        /* \"#utility.yul\":10179:10200   */\n      dup1\n      dup3\n      mstore\n        /* \"#utility.yul\":10236:10238   */\n      0x26\n        /* \"#utility.yul\":10216:10234   */\n      swap1\n      dup3\n      add\n        /* \"#utility.yul\":10209:10239   */\n      mstore\n        /* \"#utility.yul\":10275:10309   */\n      0x546f6b656e20616d6f756e74206d757374206265206772656174657220746861\n        /* \"#utility.yul\":10270:10272   */\n      0x40\n        /* \"#utility.yul\":10255:10273   */\n      dup3\n      add\n        /* \"#utility.yul\":10248:10310   */\n      mstore\n      shl(0xd0, 0x6e207a65726f)\n        /* \"#utility.yul\":10341:10343   */\n      0x60\n        /* \"#utility.yul\":10326:10344   */\n      dup3\n      add\n        /* \"#utility.yul\":10319:10355   */\n      mstore\n        /* \"#utility.yul\":10387:10390   */\n      0x80\n        /* \"#utility.yul\":10372:10391   */\n      add\n      swap1\n        /* \"#utility.yul\":9995:10397   */\n      jump\t// out\n        /* \"#utility.yul\":10749:10917   */\n    tag_304:\n        /* \"#utility.yul\":10822:10831   */\n      dup1\n      dup3\n      mul\n        /* \"#utility.yul\":10853:10862   */\n      dup2\n      iszero\n        /* \"#utility.yul\":10870:10885   */\n      dup3\n      dup3\n      div\n        /* \"#utility.yul\":10864:10886   */\n      dup5\n      eq\n        /* \"#utility.yul\":10850:10887   */\n      or\n        /* \"#utility.yul\":10840:10911   */\n      tag_184\n      jumpi\n        /* \"#utility.yul\":10891:10909   */\n      tag_184\n      tag_564\n      jump\t// in\n        /* \"#utility.yul\":10922:11139   */\n    tag_306:\n        /* \"#utility.yul\":10962:10963   */\n      0x00\n        /* \"#utility.yul\":10988:10989   */\n      dup3\n        /* \"#utility.yul\":10978:11110   */\n      tag_641\n      jumpi\n        /* \"#utility.yul\":11032:11042   */\n      0x4e487b71\n        /* \"#utility.yul\":11027:11030   */\n      0xe0\n        /* \"#utility.yul\":11023:11043   */\n      shl\n        /* \"#utility.yul\":11020:11021   */\n      0x00\n        /* \"#utility.yul\":11013:11044   */\n      mstore\n        /* \"#utility.yul\":11067:11071   */\n      0x12\n        /* \"#utility.yul\":11064:11065   */\n      0x04\n        /* \"#utility.yul\":11057:11072   */\n      mstore\n        /* \"#utility.yul\":11095:11099   */\n      0x24\n        /* \"#utility.yul\":11092:11093   */\n      0x00\n        /* \"#utility.yul\":11085:11100   */\n      revert\n        /* \"#utility.yul\":10978:11110   */\n    tag_641:\n      pop\n        /* \"#utility.yul\":11124:11133   */\n      div\n      swap1\n        /* \"#utility.yul\":10922:11139   */\n      jump\t// out\n        /* \"#utility.yul\":12612:12796   */\n    tag_473:\n        /* \"#utility.yul\":12682:12688   */\n      0x00\n        /* \"#utility.yul\":12735:12737   */\n      0x20\n        /* \"#utility.yul\":12723:12732   */\n      dup3\n        /* \"#utility.yul\":12714:12721   */\n      dup5\n        /* \"#utility.yul\":12710:12733   */\n      sub\n        /* \"#utility.yul\":12706:12738   */\n      slt\n        /* \"#utility.yul\":12703:12755   */\n      iszero\n      tag_648\n      jumpi\n        /* \"#utility.yul\":12751:12752   */\n      0x00\n        /* \"#utility.yul\":12748:12749   */\n      dup1\n        /* \"#utility.yul\":12741:12753   */\n      revert\n        /* \"#utility.yul\":12703:12755   */\n    tag_648:\n      pop\n        /* \"#utility.yul\":12774:12790   */\n      mload\n      swap2\n        /* \"#utility.yul\":12612:12796   */\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":13080:13381   */\n    tag_541:\n        /* \"#utility.yul\":13209:13212   */\n      0x00\n        /* \"#utility.yul\":13247:13253   */\n      dup3\n        /* \"#utility.yul\":13241:13254   */\n      mload\n        /* \"#utility.yul\":13293:13299   */\n      dup1\n        /* \"#utility.yul\":13286:13290   */\n      0x20\n        /* \"#utility.yul\":13278:13284   */\n      dup6\n        /* \"#utility.yul\":13274:13291   */\n      add\n        /* \"#utility.yul\":13269:13272   */\n      dup5\n        /* \"#utility.yul\":13263:13300   */\n      mcopy\n        /* \"#utility.yul\":13355:13356   */\n      0x00\n        /* \"#utility.yul\":13319:13335   */\n      swap3\n      add\n        /* \"#utility.yul\":13344:13357   */\n      swap2\n      dup3\n      mstore\n      pop\n        /* \"#utility.yul\":13319:13335   */\n      swap2\n        /* \"#utility.yul\":13080:13381   */\n      swap1\n      pop\n      jump\t// out\n    stop\n    data_75b20eef8615de99c108b05f0dbda081c91897128caa336d75dffb97c4132b4d 360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc\n    data_9b87106a812d214d41ad9b68a21119e2948eaaf1040375c939ec808b8862455c 65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a\n    data_b3da67d1b252aeab7c8063542d95e75f82a5307a82535949bc38f7cf7ba8897f 02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800\n    data_c0c65a3718f3702d917c44106b91645b509d2e2d0979b70495c3babce192339f cd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300\n\n    auxdata: 0xa26469706673582212203f75604ee134227bbe63f608679c24b94c9ec4a391e502a1d117559bb5f0f07264736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_2156": {
									"entryPoint": null,
									"id": 2156,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_disableInitializers_584": {
									"entryPoint": 33,
									"id": 584,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_getInitializableStorage_615": {
									"entryPoint": null,
									"id": 615,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:216:17",
										"nodeType": "YulBlock",
										"src": "0:216:17",
										"statements": [
											{
												"nativeSrc": "6:3:17",
												"nodeType": "YulBlock",
												"src": "6:3:17",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "113:101:17",
													"nodeType": "YulBlock",
													"src": "113:101:17",
													"statements": [
														{
															"nativeSrc": "123:26:17",
															"nodeType": "YulAssignment",
															"src": "123:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "135:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "135:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "146:2:17",
																		"nodeType": "YulLiteral",
																		"src": "146:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "131:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "131:3:17"
																},
																"nativeSrc": "131:18:17",
																"nodeType": "YulFunctionCall",
																"src": "131:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "123:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "123:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "165:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "165:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "180:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "180:6:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "196:2:17",
																								"nodeType": "YulLiteral",
																								"src": "196:2:17",
																								"type": "",
																								"value": "64"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "200:1:17",
																								"nodeType": "YulLiteral",
																								"src": "200:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "192:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "192:3:17"
																						},
																						"nativeSrc": "192:10:17",
																						"nodeType": "YulFunctionCall",
																						"src": "192:10:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "204:1:17",
																						"nodeType": "YulLiteral",
																						"src": "204:1:17",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "188:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "188:3:17"
																				},
																				"nativeSrc": "188:18:17",
																				"nodeType": "YulFunctionCall",
																				"src": "188:18:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "176:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "176:3:17"
																		},
																		"nativeSrc": "176:31:17",
																		"nodeType": "YulFunctionCall",
																		"src": "176:31:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "158:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "158:6:17"
																},
																"nativeSrc": "158:50:17",
																"nodeType": "YulFunctionCall",
																"src": "158:50:17"
															},
															"nativeSrc": "158:50:17",
															"nodeType": "YulExpressionStatement",
															"src": "158:50:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed",
												"nativeSrc": "14:200:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "82:9:17",
														"nodeType": "YulTypedName",
														"src": "82:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "93:6:17",
														"nodeType": "YulTypedName",
														"src": "93:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "104:4:17",
														"nodeType": "YulTypedName",
														"src": "104:4:17",
														"type": ""
													}
												],
												"src": "14:200:17"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_encode_tuple_t_uint64__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(64, 1), 1)))\n    }\n}",
									"id": 17,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "60a060405230608052348015610013575f80fd5b5061001c610021565b6100d3565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00805468010000000000000000900460ff16156100715760405163f92ee8a960e01b815260040160405180910390fd5b80546001600160401b03908116146100d05780546001600160401b0319166001600160401b0390811782556040519081527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b50565b6080516122a06100f95f395f8181611893015281816118bc0152611a1d01526122a05ff3fe6080604052600436106101d0575f3560e01c806356688700116100fd578063cc2a9a5b11610092578063e15cc8da11610062578063e15cc8da1461056d578063e63ab1e91461058c578063f14210a6146105ac578063f72c0d8b146105cb575f80fd5b8063cc2a9a5b146104f1578063d547741f14610510578063d9a37ad21461052f578063da0696831461054e575f80fd5b8063a201ccf6116100cd578063a201ccf61461044e578063a217fddf14610482578063ad3cb1cc14610495578063c7088313146104d2575f80fd5b806356688700146103e55780635c975abb146103f85780638456cb591461041b57806391d148541461042f575f80fd5b80632f2ff15d1161017357806349f0346e1161014357806349f0346e146103985780634f1ef286146103ab57806351422e97146103be57806352d1902d146103d1575f80fd5b80632f2ff15d1461031057806334aab0641461032f57806336568abe146103655780633f4ba83a14610384575f80fd5b80630b0fd47e116101ae5780630b0fd47e14610248578063242f05511461029c578063248a9ca3146102dd5780632d11c58a146102fc575f80fd5b806301ffc9a7146101d4578063023245d71461020857806306b091f914610229575b5f80fd5b3480156101df575f80fd5b506101f36101ee366004611d5a565b6105fe565b60405190151581526020015b60405180910390f35b348015610213575f80fd5b50610227610222366004611d81565b610634565b005b348015610234575f80fd5b50610227610243366004611dac565b6106a3565b348015610253575f80fd5b50610281610262366004611dd6565b600260208190525f918252604090912080546001820154919092015483565b604080519384526020840192909252908201526060016101ff565b3480156102a7575f80fd5b506102cf7f77e60b99a50d27fb027f6912a507d956105b4148adab27a86d235c8bcca8fa2f81565b6040519081526020016101ff565b3480156102e8575f80fd5b506102cf6102f7366004611d81565b610721565b348015610307575f80fd5b506102cf600381565b34801561031b575f80fd5b5061022761032a366004611df1565b610741565b34801561033a575f80fd5b505f5461034d906001600160a01b031681565b6040516001600160a01b0390911681526020016101ff565b348015610370575f80fd5b5061022761037f366004611df1565b61075d565b34801561038f575f80fd5b50610227610795565b6102276103a6366004611e1f565b6107b7565b6102276103b9366004611e53565b6109b8565b6102276103cc366004611dac565b6109d7565b3480156103dc575f80fd5b506102cf610b63565b6102cf6103f3366004611dac565b610b7e565b348015610403575f80fd5b505f8051602061224b8339815191525460ff166101f3565b348015610426575f80fd5b50610227610e14565b34801561043a575f80fd5b506101f3610449366004611df1565b610e33565b348015610459575f80fd5b5061046d610468366004611dac565b610e69565b604080519283526020830191909152016101ff565b34801561048d575f80fd5b506102cf5f81565b3480156104a0575f80fd5b506104c5604051806040016040528060058152602001640352e302e360dc1b81525081565b6040516101ff9190611f19565b3480156104dd575f80fd5b506102276104ec366004611f4e565b611059565b3480156104fc575f80fd5b5061022761050b366004611f80565b6110a5565b34801561051b575f80fd5b5061022761052a366004611df1565b61126f565b34801561053a575f80fd5b50610227610549366004611e1f565b61128b565b348015610559575f80fd5b5060015461034d906001600160a01b031681565b348015610578575f80fd5b50610227610587366004611f4e565b611443565b348015610597575f80fd5b506102cf5f8051602061220b83398151915281565b3480156105b7575f80fd5b506102276105c6366004611d81565b6115ff565b3480156105d6575f80fd5b506102cf7f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e381565b5f6001600160e01b03198216637965db0b60e01b148061062e57506301ffc9a760e01b6001600160e01b03198316145b92915050565b5f61063e8161167a565b600154604051632142170760e11b81526001600160a01b03909116906342842e0e9061067290309033908790600401611ffe565b5f604051808303815f87803b158015610689575f80fd5b505af115801561069b573d5f803e3d5ffd5b505050505050565b5f6106ad8161167a565b60405163a9059cbb60e01b8152336004820152602481018390526001600160a01b0384169063a9059cbb906044016020604051808303815f875af11580156106f7573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061071b9190612022565b50505050565b5f9081525f8051602061222b833981519152602052604090206001015490565b61074a82610721565b6107538161167a565b61071b8383611684565b6001600160a01b03811633146107865760405163334bd91960e11b815260040160405180910390fd5b6107908282611725565b505050565b5f8051602061220b8339815191526107ac8161167a565b6107b461179e565b50565b6107bf6117fd565b5f34116107e75760405162461bcd60e51b81526004016107de90612041565b60405180910390fd5b6001546040516331a9108f60e11b81526004810184905230916001600160a01b031690636352211e90602401602060405180830381865afa15801561082e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108529190612085565b6001600160a01b0316146108a85760405162461bcd60e51b815260206004820152601960248201527f4e4654206e6f74206f776e656420627920636f6e74726163740000000000000060448201526064016107de565b5f6108be346108b781476120b4565b600161182f565b9050818110156108e05760405162461bcd60e51b81526004016107de906120c7565b604051339082156108fc029083905f818181858888f1935050505015801561090a573d5f803e3d5ffd5b50600154604051632142170760e11b81526001600160a01b03909116906342842e0e9061093f90309033908890600401611ffe565b5f604051808303815f87803b158015610956575f80fd5b505af1158015610968573d5f803e3d5ffd5b50506001546040518481528693506001600160a01b03909116915033907f9181665db8d8d5fcce186f7b2cfebe8fbcdc3a003664bbfce2e790f57b076e65906020015b60405180910390a4505050565b6109c0611888565b6109c98261192c565b6109d38282611956565b5050565b6109df6117fd565b5f34116109fe5760405162461bcd60e51b81526004016107de90612041565b6001600160a01b0382165f908152600260205260409020600181015415801590610a285750805415155b610a445760405162461bcd60e51b81526004016107de906120fe565b5f610a57348360010154845f015461182f565b905082811015610a795760405162461bcd60e51b81526004016107de906120c7565b34826001015f828254610a8c919061212e565b90915550508154819083905f90610aa49084906120b4565b909155505060405163a9059cbb60e01b8152336004820152602481018290526001600160a01b0385169063a9059cbb906044016020604051808303815f875af1158015610af3573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b179190612022565b50604080518281523460208201526001600160a01b0386169133917f30b60ee4dc75c0fb04420331b13e9ad7f8ff8fc51eac9c97d36fb20ccbe09d66910160405180910390a350505050565b5f610b6c611a12565b505f805160206121eb83398151915290565b5f610b876117fd565b5f8211610ba65760405162461bcd60e51b81526004016107de90612141565b5f3411610bc55760405162461bcd60e51b81526004016107de90612041565b6040516323b872dd60e01b81526001600160a01b038416906323b872dd90610bf590339030908790600401611ffe565b6020604051808303815f875af1158015610c11573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c359190612022565b506001600160a01b0383165f9081526002602081905260408220908101549091908103610c6c575082815534600182015582610d82565b5f8260010154118015610c7f5750815415155b610cc05760405162461bcd60e51b8152602060048201526012602482015271496e76616c696420706f6f6c20737461746560701b60448201526064016107de565b5f825f0154858460010154610cd59190612187565b610cdf919061219e565b905080341015610d315760405162461bcd60e51b815260206004820152601760248201527f496e73756666696369656e742045544820616d6f756e7400000000000000000060448201526064016107de565b84835f015f828254610d43919061212e565b9250508190555034836001015f828254610d5d919061212e565b909155505082546002840154610d74908790612187565b610d7e919061219e565b9150505b80826002015f828254610d95919061212e565b9091555050335f90815260038301602052604081208054839290610dba90849061212e565b9091555050604080518581523460208201529081018290526001600160a01b0386169033907f4a1a2a6176e9646d9e3157f7c2ab3c499f18337c0b0828cfb28e0a61de4a11f79060600160405180910390a3949350505050565b5f8051602061220b833981519152610e2b8161167a565b6107b4611a5b565b5f9182525f8051602061222b833981519152602090815260408084206001600160a01b0393909316845291905290205460ff1690565b5f80610e736117fd565b6001600160a01b0384165f9081526002602090815260408083203384526003810190925290912054841115610eba5760405162461bcd60e51b81526004016107de906120fe565b60028101548154610ecc908690612187565b610ed6919061219e565b92508060020154848260010154610eed9190612187565b610ef7919061219e565b915082815f015f828254610f0b91906120b4565b9250508190555081816001015f828254610f2591906120b4565b9250508190555083816002015f828254610f3f91906120b4565b9091555050335f90815260038201602052604081208054869290610f649084906120b4565b909155505060405163a9059cbb60e01b8152336004820152602481018490526001600160a01b0386169063a9059cbb906044016020604051808303815f875af1158015610fb3573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610fd79190612022565b50604051339083156108fc029084905f818181858888f19350505050158015611002573d5f803e3d5ffd5b5060408051848152602081018490529081018590526001600160a01b0386169033907fbc7d19d505c7ec4db83f3b51f19fb98c4c8a99922e7839d1ee608dfbee29501b9060600160405180910390a3509250929050565b7f77e60b99a50d27fb027f6912a507d956105b4148adab27a86d235c8bcca8fa2f6110838161167a565b506001600160a01b039092165f90815260026020526040902090815560010155565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff165f811580156110ea5750825b90505f8267ffffffffffffffff1660011480156111065750303b155b905081158015611114575080155b156111325760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561115c57845460ff60401b1916600160401b1785555b611164611aa3565b61116c611ab3565b611174611ab3565b61117e5f8c611684565b506111965f8051602061220b8339815191528b611684565b506111c17f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e38a611684565b506111ec7f77e60b99a50d27fb027f6912a507d956105b4148adab27a86d235c8bcca8fa2f89611684565b505f80546001600160a01b03808a166001600160a01b0319928316179092556001805492891692909116919091179055831561126257845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b5050505050505050505050565b61127882610721565b6112818161167a565b61071b8383611725565b6112936117fd565b6001546040516331a9108f60e11b81526004810184905233916001600160a01b031690636352211e90602401602060405180830381865afa1580156112da573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112fe9190612085565b6001600160a01b0316146113475760405162461bcd60e51b815260206004820152601060248201526f139bdd081bdddb995c881bd98813919560821b60448201526064016107de565b5f6113546001804761182f565b9050818110156113765760405162461bcd60e51b81526004016107de906120c7565b600154604051632142170760e11b81526001600160a01b03909116906342842e0e906113aa90339030908890600401611ffe565b5f604051808303815f87803b1580156113c1575f80fd5b505af11580156113d3573d5f803e3d5ffd5b505060405133925083156108fc02915083905f818181858888f19350505050158015611401573d5f803e3d5ffd5b5060015460405182815284916001600160a01b03169033907f9181665db8d8d5fcce186f7b2cfebe8fbcdc3a003664bbfce2e790f57b076e65906020016109ab565b61144b6117fd565b5f821161146a5760405162461bcd60e51b81526004016107de90612141565b6001600160a01b0383165f9081526002602052604090206001810154158015906114945750805415155b6114b05760405162461bcd60e51b81526004016107de906120fe565b5f6114c384835f0154846001015461182f565b9050828110156114e55760405162461bcd60e51b81526004016107de906120c7565b83825f015f8282546114f7919061212e565b9250508190555080826001015f82825461151191906120b4565b90915550506040516323b872dd60e01b81526001600160a01b038616906323b872dd9061154690339030908990600401611ffe565b6020604051808303815f875af1158015611562573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906115869190612022565b50604051339082156108fc029083905f818181858888f193505050501580156115b1573d5f803e3d5ffd5b5060408051858152602081018390526001600160a01b0387169133917f30b60ee4dc75c0fb04420331b13e9ad7f8ff8fc51eac9c97d36fb20ccbe09d66910160405180910390a35050505050565b5f6116098161167a565b814710156116505760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b60448201526064016107de565b604051339083156108fc029084905f818181858888f19350505050158015610790573d5f803e3d5ffd5b6107b48133611abb565b5f5f8051602061222b83398151915261169d8484610e33565b61171c575f848152602082815260408083206001600160a01b03871684529091529020805460ff191660011790556116d23390565b6001600160a01b0316836001600160a01b0316857f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4600191505061062e565b5f91505061062e565b5f5f8051602061222b83398151915261173e8484610e33565b1561171c575f848152602082815260408083206001600160a01b0387168085529252808320805460ff1916905551339287917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a4600191505061062e565b6117a6611af4565b5f8051602061224b833981519152805460ff191681557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a150565b5f8051602061224b8339815191525460ff161561182d5760405163d93c066560e01b815260040160405180910390fd5b565b5f8061183e60036103e86120b4565b6118489086612187565b90505f6118558483612187565b90505f82611865876103e8612187565b61186f919061212e565b905061187b818361219e565b93505050505b9392505050565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148061190e57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166119025f805160206121eb833981519152546001600160a01b031690565b6001600160a01b031614155b1561182d5760405163703e46dd60e11b815260040160405180910390fd5b7f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e36109d38161167a565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156119b0575060408051601f3d908101601f191682019092526119ad918101906121bd565b60015b6119d857604051634c9c8ce360e01b81526001600160a01b03831660048201526024016107de565b5f805160206121eb8339815191528114611a0857604051632a87526960e21b8152600481018290526024016107de565b6107908383611b23565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461182d5760405163703e46dd60e11b815260040160405180910390fd5b611a636117fd565b5f8051602061224b833981519152805460ff191660011781557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258336117df565b611aab611b78565b61182d611bc1565b61182d611b78565b611ac58282610e33565b6109d35760405163e2517d3f60e01b81526001600160a01b0382166004820152602481018390526044016107de565b5f8051602061224b8339815191525460ff1661182d57604051638dfc202b60e01b815260040160405180910390fd5b611b2c82611be1565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a2805115611b70576107908282611c44565b6109d3611cb6565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff1661182d57604051631afcd79f60e31b815260040160405180910390fd5b611bc9611b78565b5f8051602061224b833981519152805460ff19169055565b806001600160a01b03163b5f03611c1657604051634c9c8ce360e01b81526001600160a01b03821660048201526024016107de565b5f805160206121eb83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b60605f80846001600160a01b031684604051611c6091906121d4565b5f60405180830381855af49150503d805f8114611c98576040519150601f19603f3d011682016040523d82523d5f602084013e611c9d565b606091505b5091509150611cad858383611cd5565b95945050505050565b341561182d5760405163b398979f60e01b815260040160405180910390fd5b606082611cea57611ce582611d31565b611881565b8151158015611d0157506001600160a01b0384163b155b15611d2a57604051639996b31560e01b81526001600160a01b03851660048201526024016107de565b5080611881565b805115611d415780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b5f60208284031215611d6a575f80fd5b81356001600160e01b031981168114611881575f80fd5b5f60208284031215611d91575f80fd5b5035919050565b6001600160a01b03811681146107b4575f80fd5b5f8060408385031215611dbd575f80fd5b8235611dc881611d98565b946020939093013593505050565b5f60208284031215611de6575f80fd5b813561188181611d98565b5f8060408385031215611e02575f80fd5b823591506020830135611e1481611d98565b809150509250929050565b5f8060408385031215611e30575f80fd5b50508035926020909101359150565b634e487b7160e01b5f52604160045260245ffd5b5f8060408385031215611e64575f80fd5b8235611e6f81611d98565b9150602083013567ffffffffffffffff811115611e8a575f80fd5b8301601f81018513611e9a575f80fd5b803567ffffffffffffffff811115611eb457611eb4611e3f565b604051601f8201601f19908116603f0116810167ffffffffffffffff81118282101715611ee357611ee3611e3f565b604052818152828201602001871015611efa575f80fd5b816020840160208301375f602083830101528093505050509250929050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b5f805f60608486031215611f60575f80fd5b8335611f6b81611d98565b95602085013595506040909401359392505050565b5f805f805f8060c08789031215611f95575f80fd5b8635611fa081611d98565b95506020870135611fb081611d98565b94506040870135611fc081611d98565b93506060870135611fd081611d98565b92506080870135611fe081611d98565b915060a0870135611ff081611d98565b809150509295509295509295565b6001600160a01b039384168152919092166020820152604081019190915260600190565b5f60208284031215612032575f80fd5b81518015158114611881575f80fd5b60208082526024908201527f45544820616d6f756e74206d7573742062652067726561746572207468616e206040820152637a65726f60e01b606082015260800190565b5f60208284031215612095575f80fd5b815161188181611d98565b634e487b7160e01b5f52601160045260245ffd5b8181038181111561062e5761062e6120a0565b6020808252601b908201527f536c69707061676520746f6c6572616e63652065786365656465640000000000604082015260600190565b602080825260169082015275496e73756666696369656e74206c697175696469747960501b604082015260600190565b8082018082111561062e5761062e6120a0565b60208082526026908201527f546f6b656e20616d6f756e74206d7573742062652067726561746572207468616040820152656e207a65726f60d01b606082015260800190565b808202811582820484141761062e5761062e6120a0565b5f826121b857634e487b7160e01b5f52601260045260245ffd5b500490565b5f602082840312156121cd575f80fd5b5051919050565b5f82518060208501845e5f92019182525091905056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800cd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300a26469706673582212203f75604ee134227bbe63f608679c24b94c9ec4a391e502a1d117559bb5f0f07264736f6c634300081a0033",
							"opcodes": "PUSH1 0xA0 PUSH1 0x40 MSTORE ADDRESS PUSH1 0x80 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x13 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1C PUSH2 0x21 JUMP JUMPDEST PUSH2 0xD3 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH9 0x10000000000000000 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x71 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 AND EQ PUSH2 0xD0 JUMPI DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB SWAP1 DUP2 OR DUP3 SSTORE PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP JUMP JUMPDEST PUSH1 0x80 MLOAD PUSH2 0x22A0 PUSH2 0xF9 PUSH0 CODECOPY PUSH0 DUP2 DUP2 PUSH2 0x1893 ADD MSTORE DUP2 DUP2 PUSH2 0x18BC ADD MSTORE PUSH2 0x1A1D ADD MSTORE PUSH2 0x22A0 PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1D0 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x56688700 GT PUSH2 0xFD JUMPI DUP1 PUSH4 0xCC2A9A5B GT PUSH2 0x92 JUMPI DUP1 PUSH4 0xE15CC8DA GT PUSH2 0x62 JUMPI DUP1 PUSH4 0xE15CC8DA EQ PUSH2 0x56D JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x58C JUMPI DUP1 PUSH4 0xF14210A6 EQ PUSH2 0x5AC JUMPI DUP1 PUSH4 0xF72C0D8B EQ PUSH2 0x5CB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xCC2A9A5B EQ PUSH2 0x4F1 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x510 JUMPI DUP1 PUSH4 0xD9A37AD2 EQ PUSH2 0x52F JUMPI DUP1 PUSH4 0xDA069683 EQ PUSH2 0x54E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA201CCF6 GT PUSH2 0xCD JUMPI DUP1 PUSH4 0xA201CCF6 EQ PUSH2 0x44E JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x482 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x495 JUMPI DUP1 PUSH4 0xC7088313 EQ PUSH2 0x4D2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x56688700 EQ PUSH2 0x3E5 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x3F8 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x41B JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x42F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x173 JUMPI DUP1 PUSH4 0x49F0346E GT PUSH2 0x143 JUMPI DUP1 PUSH4 0x49F0346E EQ PUSH2 0x398 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x3AB JUMPI DUP1 PUSH4 0x51422E97 EQ PUSH2 0x3BE JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x3D1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0x34AAB064 EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x365 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x384 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB0FD47E GT PUSH2 0x1AE JUMPI DUP1 PUSH4 0xB0FD47E EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0x242F0551 EQ PUSH2 0x29C JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0x2D11C58A EQ PUSH2 0x2FC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x23245D7 EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0x6B091F9 EQ PUSH2 0x229 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F3 PUSH2 0x1EE CALLDATASIZE PUSH1 0x4 PUSH2 0x1D5A JUMP JUMPDEST PUSH2 0x5FE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x213 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x227 PUSH2 0x222 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D81 JUMP JUMPDEST PUSH2 0x634 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x234 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x227 PUSH2 0x243 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DAC JUMP JUMPDEST PUSH2 0x6A3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x253 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x281 PUSH2 0x262 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DD6 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP2 SWAP1 SWAP3 ADD SLOAD DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x1FF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CF PUSH32 0x77E60B99A50D27FB027F6912A507D956105B4148ADAB27A86D235C8BCCA8FA2F DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CF PUSH2 0x2F7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D81 JUMP JUMPDEST PUSH2 0x721 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x307 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CF PUSH1 0x3 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x227 PUSH2 0x32A CALLDATASIZE PUSH1 0x4 PUSH2 0x1DF1 JUMP JUMPDEST PUSH2 0x741 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH2 0x34D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x370 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x227 PUSH2 0x37F CALLDATASIZE PUSH1 0x4 PUSH2 0x1DF1 JUMP JUMPDEST PUSH2 0x75D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x227 PUSH2 0x795 JUMP JUMPDEST PUSH2 0x227 PUSH2 0x3A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E1F JUMP JUMPDEST PUSH2 0x7B7 JUMP JUMPDEST PUSH2 0x227 PUSH2 0x3B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E53 JUMP JUMPDEST PUSH2 0x9B8 JUMP JUMPDEST PUSH2 0x227 PUSH2 0x3CC CALLDATASIZE PUSH1 0x4 PUSH2 0x1DAC JUMP JUMPDEST PUSH2 0x9D7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CF PUSH2 0xB63 JUMP JUMPDEST PUSH2 0x2CF PUSH2 0x3F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DAC JUMP JUMPDEST PUSH2 0xB7E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x403 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x224B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF AND PUSH2 0x1F3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x426 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x227 PUSH2 0xE14 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F3 PUSH2 0x449 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DF1 JUMP JUMPDEST PUSH2 0xE33 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x459 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x46D PUSH2 0x468 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DAC JUMP JUMPDEST PUSH2 0xE69 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x1FF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CF PUSH0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x352E302E3 PUSH1 0xDC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x1F19 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x227 PUSH2 0x4EC CALLDATASIZE PUSH1 0x4 PUSH2 0x1F4E JUMP JUMPDEST PUSH2 0x1059 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x227 PUSH2 0x50B CALLDATASIZE PUSH1 0x4 PUSH2 0x1F80 JUMP JUMPDEST PUSH2 0x10A5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x227 PUSH2 0x52A CALLDATASIZE PUSH1 0x4 PUSH2 0x1DF1 JUMP JUMPDEST PUSH2 0x126F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x227 PUSH2 0x549 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E1F JUMP JUMPDEST PUSH2 0x128B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x559 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x34D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x578 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x227 PUSH2 0x587 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F4E JUMP JUMPDEST PUSH2 0x1443 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x597 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CF PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x220B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x227 PUSH2 0x5C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D81 JUMP JUMPDEST PUSH2 0x15FF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CF PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x62E JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x63E DUP2 PUSH2 0x167A JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x42842E0E SWAP1 PUSH2 0x672 SWAP1 ADDRESS SWAP1 CALLER SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x1FFE JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x689 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x69B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6AD DUP2 PUSH2 0x167A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6F7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x71B SWAP2 SWAP1 PUSH2 0x2022 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x222B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x74A DUP3 PUSH2 0x721 JUMP JUMPDEST PUSH2 0x753 DUP2 PUSH2 0x167A JUMP JUMPDEST PUSH2 0x71B DUP4 DUP4 PUSH2 0x1684 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x786 JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x790 DUP3 DUP3 PUSH2 0x1725 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x220B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x7AC DUP2 PUSH2 0x167A JUMP JUMPDEST PUSH2 0x7B4 PUSH2 0x179E JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x7BF PUSH2 0x17FD JUMP JUMPDEST PUSH0 CALLVALUE GT PUSH2 0x7E7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DE SWAP1 PUSH2 0x2041 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE ADDRESS SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x82E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x852 SWAP2 SWAP1 PUSH2 0x2085 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x8A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E4654206E6F74206F776E656420627920636F6E747261637400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7DE JUMP JUMPDEST PUSH0 PUSH2 0x8BE CALLVALUE PUSH2 0x8B7 DUP2 SELFBALANCE PUSH2 0x20B4 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x182F JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x8E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DE SWAP1 PUSH2 0x20C7 JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x90A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x42842E0E SWAP1 PUSH2 0x93F SWAP1 ADDRESS SWAP1 CALLER SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1FFE JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x956 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x968 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE DUP7 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 POP CALLER SWAP1 PUSH32 0x9181665DB8D8D5FCCE186F7B2CFEBE8FBCDC3A003664BBFCE2E790F57B076E65 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH2 0x9C0 PUSH2 0x1888 JUMP JUMPDEST PUSH2 0x9C9 DUP3 PUSH2 0x192C JUMP JUMPDEST PUSH2 0x9D3 DUP3 DUP3 PUSH2 0x1956 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x9DF PUSH2 0x17FD JUMP JUMPDEST PUSH0 CALLVALUE GT PUSH2 0x9FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DE SWAP1 PUSH2 0x2041 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0xA28 JUMPI POP DUP1 SLOAD ISZERO ISZERO JUMPDEST PUSH2 0xA44 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DE SWAP1 PUSH2 0x20FE JUMP JUMPDEST PUSH0 PUSH2 0xA57 CALLVALUE DUP4 PUSH1 0x1 ADD SLOAD DUP5 PUSH0 ADD SLOAD PUSH2 0x182F JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0xA79 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DE SWAP1 PUSH2 0x20C7 JUMP JUMPDEST CALLVALUE DUP3 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA8C SWAP2 SWAP1 PUSH2 0x212E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP2 SLOAD DUP2 SWAP1 DUP4 SWAP1 PUSH0 SWAP1 PUSH2 0xAA4 SWAP1 DUP5 SWAP1 PUSH2 0x20B4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAF3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB17 SWAP2 SWAP1 PUSH2 0x2022 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE CALLVALUE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 CALLER SWAP2 PUSH32 0x30B60EE4DC75C0FB04420331B13E9AD7F8FF8FC51EAC9C97D36FB20CCBE09D66 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB6C PUSH2 0x1A12 JUMP JUMPDEST POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x21EB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xB87 PUSH2 0x17FD JUMP JUMPDEST PUSH0 DUP3 GT PUSH2 0xBA6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DE SWAP1 PUSH2 0x2141 JUMP JUMPDEST PUSH0 CALLVALUE GT PUSH2 0xBC5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DE SWAP1 PUSH2 0x2041 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0xBF5 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x1FFE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC11 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC35 SWAP2 SWAP1 PUSH2 0x2022 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP1 DUP2 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP2 SUB PUSH2 0xC6C JUMPI POP DUP3 DUP2 SSTORE CALLVALUE PUSH1 0x1 DUP3 ADD SSTORE DUP3 PUSH2 0xD82 JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1 ADD SLOAD GT DUP1 ISZERO PUSH2 0xC7F JUMPI POP DUP2 SLOAD ISZERO ISZERO JUMPDEST PUSH2 0xCC0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x496E76616C696420706F6F6C207374617465 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7DE JUMP JUMPDEST PUSH0 DUP3 PUSH0 ADD SLOAD DUP6 DUP5 PUSH1 0x1 ADD SLOAD PUSH2 0xCD5 SWAP2 SWAP1 PUSH2 0x2187 JUMP JUMPDEST PUSH2 0xCDF SWAP2 SWAP1 PUSH2 0x219E JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE LT ISZERO PUSH2 0xD31 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742045544820616D6F756E74000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7DE JUMP JUMPDEST DUP5 DUP4 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD43 SWAP2 SWAP1 PUSH2 0x212E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLVALUE DUP4 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD5D SWAP2 SWAP1 PUSH2 0x212E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP3 SLOAD PUSH1 0x2 DUP5 ADD SLOAD PUSH2 0xD74 SWAP1 DUP8 SWAP1 PUSH2 0x2187 JUMP JUMPDEST PUSH2 0xD7E SWAP2 SWAP1 PUSH2 0x219E JUMP JUMPDEST SWAP2 POP POP JUMPDEST DUP1 DUP3 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD95 SWAP2 SWAP1 PUSH2 0x212E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xDBA SWAP1 DUP5 SWAP1 PUSH2 0x212E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE CALLVALUE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 CALLER SWAP1 PUSH32 0x4A1A2A6176E9646D9E3157F7C2AB3C499F18337C0B0828CFB28E0A61DE4A11F7 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x220B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xE2B DUP2 PUSH2 0x167A JUMP JUMPDEST PUSH2 0x7B4 PUSH2 0x1A5B JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x222B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xE73 PUSH2 0x17FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x3 DUP2 ADD SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD DUP5 GT ISZERO PUSH2 0xEBA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DE SWAP1 PUSH2 0x20FE JUMP JUMPDEST PUSH1 0x2 DUP2 ADD SLOAD DUP2 SLOAD PUSH2 0xECC SWAP1 DUP7 SWAP1 PUSH2 0x2187 JUMP JUMPDEST PUSH2 0xED6 SWAP2 SWAP1 PUSH2 0x219E JUMP JUMPDEST SWAP3 POP DUP1 PUSH1 0x2 ADD SLOAD DUP5 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0xEED SWAP2 SWAP1 PUSH2 0x2187 JUMP JUMPDEST PUSH2 0xEF7 SWAP2 SWAP1 PUSH2 0x219E JUMP JUMPDEST SWAP2 POP DUP3 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xF0B SWAP2 SWAP1 PUSH2 0x20B4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 DUP2 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xF25 SWAP2 SWAP1 PUSH2 0x20B4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xF3F SWAP2 SWAP1 PUSH2 0x20B4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0xF64 SWAP1 DUP5 SWAP1 PUSH2 0x20B4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFB3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFD7 SWAP2 SWAP1 PUSH2 0x2022 JUMP JUMPDEST POP PUSH1 0x40 MLOAD CALLER SWAP1 DUP4 ISZERO PUSH2 0x8FC MUL SWAP1 DUP5 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1002 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 CALLER SWAP1 PUSH32 0xBC7D19D505C7EC4DB83F3B51F19FB98C4C8A99922E7839D1EE608DFBEE29501B SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x77E60B99A50D27FB027F6912A507D956105B4148ADAB27A86D235C8BCCA8FA2F PUSH2 0x1083 DUP2 PUSH2 0x167A JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP2 SSTORE PUSH1 0x1 ADD SSTORE JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x10EA JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x1106 JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x1114 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x1132 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x115C JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0x1164 PUSH2 0x1AA3 JUMP JUMPDEST PUSH2 0x116C PUSH2 0x1AB3 JUMP JUMPDEST PUSH2 0x1174 PUSH2 0x1AB3 JUMP JUMPDEST PUSH2 0x117E PUSH0 DUP13 PUSH2 0x1684 JUMP JUMPDEST POP PUSH2 0x1196 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x220B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP12 PUSH2 0x1684 JUMP JUMPDEST POP PUSH2 0x11C1 PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 DUP11 PUSH2 0x1684 JUMP JUMPDEST POP PUSH2 0x11EC PUSH32 0x77E60B99A50D27FB027F6912A507D956105B4148ADAB27A86D235C8BCCA8FA2F DUP10 PUSH2 0x1684 JUMP JUMPDEST POP PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP3 DUP10 AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP4 ISZERO PUSH2 0x1262 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1278 DUP3 PUSH2 0x721 JUMP JUMPDEST PUSH2 0x1281 DUP2 PUSH2 0x167A JUMP JUMPDEST PUSH2 0x71B DUP4 DUP4 PUSH2 0x1725 JUMP JUMPDEST PUSH2 0x1293 PUSH2 0x17FD JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12DA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12FE SWAP2 SWAP1 PUSH2 0x2085 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1347 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x139BDD081BDDDB995C881BD988139195 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7DE JUMP JUMPDEST PUSH0 PUSH2 0x1354 PUSH1 0x1 DUP1 SELFBALANCE PUSH2 0x182F JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1376 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DE SWAP1 PUSH2 0x20C7 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x42842E0E SWAP1 PUSH2 0x13AA SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1FFE JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13C1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13D3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD CALLER SWAP3 POP DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 POP DUP4 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1401 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE DUP5 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 CALLER SWAP1 PUSH32 0x9181665DB8D8D5FCCE186F7B2CFEBE8FBCDC3A003664BBFCE2E790F57B076E65 SWAP1 PUSH1 0x20 ADD PUSH2 0x9AB JUMP JUMPDEST PUSH2 0x144B PUSH2 0x17FD JUMP JUMPDEST PUSH0 DUP3 GT PUSH2 0x146A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DE SWAP1 PUSH2 0x2141 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1494 JUMPI POP DUP1 SLOAD ISZERO ISZERO JUMPDEST PUSH2 0x14B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DE SWAP1 PUSH2 0x20FE JUMP JUMPDEST PUSH0 PUSH2 0x14C3 DUP5 DUP4 PUSH0 ADD SLOAD DUP5 PUSH1 0x1 ADD SLOAD PUSH2 0x182F JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x14E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DE SWAP1 PUSH2 0x20C7 JUMP JUMPDEST DUP4 DUP3 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x14F7 SWAP2 SWAP1 PUSH2 0x212E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP3 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1511 SWAP2 SWAP1 PUSH2 0x20B4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x1546 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x1FFE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1562 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1586 SWAP2 SWAP1 PUSH2 0x2022 JUMP JUMPDEST POP PUSH1 0x40 MLOAD CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x15B1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP2 CALLER SWAP2 PUSH32 0x30B60EE4DC75C0FB04420331B13E9AD7F8FF8FC51EAC9C97D36FB20CCBE09D66 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1609 DUP2 PUSH2 0x167A JUMP JUMPDEST DUP2 SELFBALANCE LT ISZERO PUSH2 0x1650 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7DE JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 DUP4 ISZERO PUSH2 0x8FC MUL SWAP1 DUP5 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x790 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST PUSH2 0x7B4 DUP2 CALLER PUSH2 0x1ABB JUMP JUMPDEST PUSH0 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x222B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x169D DUP5 DUP5 PUSH2 0xE33 JUMP JUMPDEST PUSH2 0x171C JUMPI PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x16D2 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x62E JUMP JUMPDEST PUSH0 SWAP2 POP POP PUSH2 0x62E JUMP JUMPDEST PUSH0 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x222B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x173E DUP5 DUP5 PUSH2 0xE33 JUMP JUMPDEST ISZERO PUSH2 0x171C JUMPI PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP8 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x62E JUMP JUMPDEST PUSH2 0x17A6 PUSH2 0x1AF4 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x224B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x224B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x182D JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x183E PUSH1 0x3 PUSH2 0x3E8 PUSH2 0x20B4 JUMP JUMPDEST PUSH2 0x1848 SWAP1 DUP7 PUSH2 0x2187 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1855 DUP5 DUP4 PUSH2 0x2187 JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH2 0x1865 DUP8 PUSH2 0x3E8 PUSH2 0x2187 JUMP JUMPDEST PUSH2 0x186F SWAP2 SWAP1 PUSH2 0x212E JUMP JUMPDEST SWAP1 POP PUSH2 0x187B DUP2 DUP4 PUSH2 0x219E JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0x190E JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1902 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x21EB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x182D JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 PUSH2 0x9D3 DUP2 PUSH2 0x167A JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x19B0 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x19AD SWAP2 DUP2 ADD SWAP1 PUSH2 0x21BD JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x19D8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7DE JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x21EB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0x1A08 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x7DE JUMP JUMPDEST PUSH2 0x790 DUP4 DUP4 PUSH2 0x1B23 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x182D JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A63 PUSH2 0x17FD JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x224B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR DUP2 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 CALLER PUSH2 0x17DF JUMP JUMPDEST PUSH2 0x1AAB PUSH2 0x1B78 JUMP JUMPDEST PUSH2 0x182D PUSH2 0x1BC1 JUMP JUMPDEST PUSH2 0x182D PUSH2 0x1B78 JUMP JUMPDEST PUSH2 0x1AC5 DUP3 DUP3 PUSH2 0xE33 JUMP JUMPDEST PUSH2 0x9D3 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x7DE JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x224B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF AND PUSH2 0x182D JUMPI PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B2C DUP3 PUSH2 0x1BE1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x1B70 JUMPI PUSH2 0x790 DUP3 DUP3 PUSH2 0x1C44 JUMP JUMPDEST PUSH2 0x9D3 PUSH2 0x1CB6 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x182D JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1BC9 PUSH2 0x1B78 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x224B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH0 SUB PUSH2 0x1C16 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7DE JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x21EB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x1C60 SWAP2 SWAP1 PUSH2 0x21D4 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1C98 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1C9D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1CAD DUP6 DUP4 DUP4 PUSH2 0x1CD5 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x182D JUMPI PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x1CEA JUMPI PUSH2 0x1CE5 DUP3 PUSH2 0x1D31 JUMP JUMPDEST PUSH2 0x1881 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x1D01 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x1D2A JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7DE JUMP JUMPDEST POP DUP1 PUSH2 0x1881 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x1D41 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D6A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1881 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D91 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7B4 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DBD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1DC8 DUP2 PUSH2 0x1D98 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DE6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1881 DUP2 PUSH2 0x1D98 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E02 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1E14 DUP2 PUSH2 0x1D98 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E30 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E64 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1E6F DUP2 PUSH2 0x1D98 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E8A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x1E9A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1EB4 JUMPI PUSH2 0x1EB4 PUSH2 0x1E3F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1EE3 JUMPI PUSH2 0x1EE3 PUSH2 0x1E3F JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 ADD PUSH1 0x20 ADD DUP8 LT ISZERO PUSH2 0x1EFA JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP4 DUP4 ADD ADD MSTORE DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1F60 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1F6B DUP2 PUSH2 0x1D98 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1F95 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0x1FA0 DUP2 PUSH2 0x1D98 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH2 0x1FB0 DUP2 PUSH2 0x1D98 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH2 0x1FC0 DUP2 PUSH2 0x1D98 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH2 0x1FD0 DUP2 PUSH2 0x1D98 JUMP JUMPDEST SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH2 0x1FE0 DUP2 PUSH2 0x1D98 JUMP JUMPDEST SWAP2 POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD PUSH2 0x1FF0 DUP2 PUSH2 0x1D98 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2032 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1881 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x45544820616D6F756E74206D7573742062652067726561746572207468616E20 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x7A65726F PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2095 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1881 DUP2 PUSH2 0x1D98 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x62E JUMPI PUSH2 0x62E PUSH2 0x20A0 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x536C69707061676520746F6C6572616E63652065786365656465640000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x496E73756666696369656E74206C6971756964697479 PUSH1 0x50 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x62E JUMPI PUSH2 0x62E PUSH2 0x20A0 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x546F6B656E20616D6F756E74206D757374206265206772656174657220746861 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x6E207A65726F PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x62E JUMPI PUSH2 0x62E PUSH2 0x20A0 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x21B8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21CD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP6 ADD DUP5 MCOPY PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP INVALID CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC65D7A28E3265B37A647492 SWAP16 CALLER PUSH6 0x21B332C1681B SWAP4 EXTCODEHASH PUSH13 0xB9F3376673440D862A02DD7BC7 0xDE 0xC4 0xDC 0xEE 0xDD 0xA7 PUSH22 0xE58DD541E08A116C6C53815C0BD028192F7B626800CD MCOPY 0xD1 TLOAD PUSH15 0x187E77E9AEE88184C21F4F2182AB58 0x27 0xCB EXTCODESIZE PUSH31 0x7FBEDCD63F03300A26469706673582212203F75604EE134227BBE63F60867 SWAP13 0x24 0xB9 0x4C SWAP15 0xC4 LOG3 SWAP2 0xE5 MUL LOG1 0xD1 OR SSTORE SWAP12 0xB5 CREATE CREATE PUSH19 0x64736F6C634300081A00330000000000000000 ",
							"sourceMap": "638:8141:16:-:0;;;1171:4:2;1128:48;;1901:53:16;;;;;;;;;-1:-1:-1;1925:22:16;:20;:22::i;:::-;638:8141;;7711:422:1;8870:21;7900:15;;;;;;;7896:76;;;7938:23;;-1:-1:-1;;;7938:23:1;;;;;;;;;;;7896:76;7985:14;;-1:-1:-1;;;;;7985:14:1;;;:34;7981:146;;8035:33;;-1:-1:-1;;;;;;8035:33:1;-1:-1:-1;;;;;8035:33:1;;;;;8087:29;;158:50:17;;;8087:29:1;;146:2:17;131:18;8087:29:1;;;;;;;7981:146;7760:373;7711:422::o;14:200:17:-;638:8141:16;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@DEFAULT_ADMIN_ROLE_28": {
									"entryPoint": null,
									"id": 28,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@FEE_RATE_2082": {
									"entryPoint": null,
									"id": 2082,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@LIQUIDITY_MANAGER_ROLE_2079": {
									"entryPoint": null,
									"id": 2079,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@PAUSER_ROLE_2069": {
									"entryPoint": null,
									"id": 2069,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@UPGRADER_ROLE_2074": {
									"entryPoint": null,
									"id": 2074,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@UPGRADE_INTERFACE_VERSION_640": {
									"entryPoint": null,
									"id": 640,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__AccessControl_init_63": {
									"entryPoint": 6835,
									"id": 63,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Pausable_init_1090": {
									"entryPoint": 6819,
									"id": 1090,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__Pausable_init_unchained_1108": {
									"entryPoint": 7105,
									"id": 1108,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@__UUPSUpgradeable_init_670": {
									"entryPoint": null,
									"id": 670,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_authorizeUpgrade_2893": {
									"entryPoint": 6444,
									"id": 2893,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkInitializing_538": {
									"entryPoint": 7032,
									"id": 538,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkNonPayable_1661": {
									"entryPoint": 7350,
									"id": 1661,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkNotDelegated_746": {
									"entryPoint": 6674,
									"id": 746,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkProxy_730": {
									"entryPoint": 6280,
									"id": 730,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_checkRole_129": {
									"entryPoint": 5754,
									"id": 129,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_checkRole_150": {
									"entryPoint": 6843,
									"id": 150,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@_getAccessControlStorage_46": {
									"entryPoint": null,
									"id": 46,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getInitializableStorage_615": {
									"entryPoint": null,
									"id": 615,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_getPausableStorage_1064": {
									"entryPoint": null,
									"id": 1064,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_grantRole_315": {
									"entryPoint": 5764,
									"id": 315,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_isInitializing_606": {
									"entryPoint": null,
									"id": 606,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_msgSender_1020": {
									"entryPoint": null,
									"id": 1020,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@_pause_1189": {
									"entryPoint": 6747,
									"id": 1189,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requireNotPaused_1152": {
									"entryPoint": 6141,
									"id": 1152,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_requirePaused_1165": {
									"entryPoint": 6900,
									"id": 1165,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_revert_1924": {
									"entryPoint": 7473,
									"id": 1924,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_revokeRole_361": {
									"entryPoint": 5925,
									"id": 361,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@_setImplementation_1447": {
									"entryPoint": 7137,
									"id": 1447,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@_unpause_1213": {
									"entryPoint": 6046,
									"id": 1213,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_upgradeToAndCallUUPS_797": {
									"entryPoint": 6486,
									"id": 797,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@addLiquidity_2392": {
									"entryPoint": 2942,
									"id": 2392,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@cqtNFT_2088": {
									"entryPoint": null,
									"id": 2088,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@cqtToken_2085": {
									"entryPoint": null,
									"id": 2085,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@functionDelegateCall_1844": {
									"entryPoint": 7236,
									"id": 1844,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@getAddressSlot_1957": {
									"entryPoint": null,
									"id": 1957,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@getImplementation_1420": {
									"entryPoint": null,
									"id": 1420,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@getOutputAmount_2883": {
									"entryPoint": 6191,
									"id": 2883,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@getRoleAdmin_171": {
									"entryPoint": 1825,
									"id": 171,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@grantRole_190": {
									"entryPoint": 1857,
									"id": 190,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@hasRole_116": {
									"entryPoint": 3635,
									"id": 116,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"@initialize_2215": {
									"entryPoint": 4261,
									"id": 2215,
									"parameterSlots": 6,
									"returnSlots": 0
								},
								"@liquidityPools_2104": {
									"entryPoint": null,
									"id": 2104,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@pause_2225": {
									"entryPoint": 3604,
									"id": 2225,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@paused_1140": {
									"entryPoint": null,
									"id": 1140,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@proxiableUUID_688": {
									"entryPoint": 2915,
									"id": 688,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@removeLiquidity_2500": {
									"entryPoint": 3689,
									"id": 2500,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"@renounceRole_232": {
									"entryPoint": 1885,
									"id": 232,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@revokeRole_209": {
									"entryPoint": 4719,
									"id": 209,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@supportsInterface_1253": {
									"entryPoint": null,
									"id": 1253,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@supportsInterface_91": {
									"entryPoint": 1534,
									"id": 91,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@swapETHForNFT_2771": {
									"entryPoint": 1975,
									"id": 2771,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@swapETHForTokens_2587": {
									"entryPoint": 2519,
									"id": 2587,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@swapNFTForETH_2843": {
									"entryPoint": 4747,
									"id": 2843,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@swapTokensForETH_2685": {
									"entryPoint": 5187,
									"id": 2685,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@unpause_2235": {
									"entryPoint": 1941,
									"id": 2235,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@updateLiquidityPool_2920": {
									"entryPoint": 4185,
									"id": 2920,
									"parameterSlots": 3,
									"returnSlots": 0
								},
								"@upgradeToAndCall_1481": {
									"entryPoint": 6947,
									"id": 1481,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@upgradeToAndCall_708": {
									"entryPoint": 2488,
									"id": 708,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"@verifyCallResultFromTarget_1884": {
									"entryPoint": 7381,
									"id": 1884,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"@withdrawETH_2949": {
									"entryPoint": 5631,
									"id": 2949,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawNFT_2990": {
									"entryPoint": 1588,
									"id": 2990,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@withdrawTokens_2969": {
									"entryPoint": 1699,
									"id": 2969,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 7638,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address_fromMemory": {
									"entryPoint": 8325,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_addresst_addresst_addresst_addresst_address": {
									"entryPoint": 8064,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 6
								},
								"abi_decode_tuple_t_addresst_bytes_memory_ptr": {
									"entryPoint": 7763,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 7596,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_addresst_uint256t_uint256": {
									"entryPoint": 8014,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 3
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 8226,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32_fromMemory": {
									"entryPoint": 8637,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes32t_address": {
									"entryPoint": 7665,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 7514,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 7553,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256t_uint256": {
									"entryPoint": 7711,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 8660,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": 8190,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC20Upgradeable_$876__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_contract$_IERC721Upgradeable_$992__to_t_address__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 7961,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_1a4430203dcf8abbbd3446dbfc36d404c15a36b152eee41d8f82843f3bcf306f__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8513,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_33478ef0b103c4282d20f292429d8895d67f7b692c5602e5085240f8efab8cb9__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_361d91cf655db75c726bec8a3cf71c20e42a2572c8d3e4485f3abe41657f4b10__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8391,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8446,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_58daa56f77f4b6beb09b0245242e50eda058fa68d4bc8e521ae0632363e71e1a__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_6f2e13a40c8d5acc1536a801b548e60d12893ddab9aa84254a90ac0e27771d7b__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 8257,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_c4a43c611968ec7565a8db7967f80ea40a0b06b4f2b3ed8286dbd1bbd126f721__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_e13bed7f8aeefd33ee70192a57e4073346ec44f058c4968b39d9c85f63742e91__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 4,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 8494,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 8606,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_mul_t_uint256": {
									"entryPoint": 8583,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_sub_t_uint256": {
									"entryPoint": 8372,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 8352,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x41": {
									"entryPoint": 7743,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_address": {
									"entryPoint": 7576,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:13383:17",
										"nodeType": "YulBlock",
										"src": "0:13383:17",
										"statements": [
											{
												"nativeSrc": "6:3:17",
												"nodeType": "YulBlock",
												"src": "6:3:17",
												"statements": []
											},
											{
												"body": {
													"nativeSrc": "83:217:17",
													"nodeType": "YulBlock",
													"src": "83:217:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "129:16:17",
																"nodeType": "YulBlock",
																"src": "129:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "138:1:17",
																					"nodeType": "YulLiteral",
																					"src": "138:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "141:1:17",
																					"nodeType": "YulLiteral",
																					"src": "141:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "131:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "131:6:17"
																			},
																			"nativeSrc": "131:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "131:12:17"
																		},
																		"nativeSrc": "131:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "131:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "104:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "104:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "113:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "113:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "100:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "100:3:17"
																		},
																		"nativeSrc": "100:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "100:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "125:2:17",
																		"nodeType": "YulLiteral",
																		"src": "125:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "96:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "96:3:17"
																},
																"nativeSrc": "96:32:17",
																"nodeType": "YulFunctionCall",
																"src": "96:32:17"
															},
															"nativeSrc": "93:52:17",
															"nodeType": "YulIf",
															"src": "93:52:17"
														},
														{
															"nativeSrc": "154:36:17",
															"nodeType": "YulVariableDeclaration",
															"src": "154:36:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "180:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "180:9:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "167:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "167:12:17"
																},
																"nativeSrc": "167:23:17",
																"nodeType": "YulFunctionCall",
																"src": "167:23:17"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "158:5:17",
																	"nodeType": "YulTypedName",
																	"src": "158:5:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "254:16:17",
																"nodeType": "YulBlock",
																"src": "254:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "263:1:17",
																					"nodeType": "YulLiteral",
																					"src": "263:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "266:1:17",
																					"nodeType": "YulLiteral",
																					"src": "266:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "256:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "256:6:17"
																			},
																			"nativeSrc": "256:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "256:12:17"
																		},
																		"nativeSrc": "256:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "256:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "212:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "212:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "223:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "223:5:17"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "234:3:17",
																								"nodeType": "YulLiteral",
																								"src": "234:3:17",
																								"type": "",
																								"value": "224"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "239:10:17",
																								"nodeType": "YulLiteral",
																								"src": "239:10:17",
																								"type": "",
																								"value": "0xffffffff"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "230:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "230:3:17"
																						},
																						"nativeSrc": "230:20:17",
																						"nodeType": "YulFunctionCall",
																						"src": "230:20:17"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "219:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "219:3:17"
																				},
																				"nativeSrc": "219:32:17",
																				"nodeType": "YulFunctionCall",
																				"src": "219:32:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "209:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "209:2:17"
																		},
																		"nativeSrc": "209:43:17",
																		"nodeType": "YulFunctionCall",
																		"src": "209:43:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "202:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "202:6:17"
																},
																"nativeSrc": "202:51:17",
																"nodeType": "YulFunctionCall",
																"src": "202:51:17"
															},
															"nativeSrc": "199:71:17",
															"nodeType": "YulIf",
															"src": "199:71:17"
														},
														{
															"nativeSrc": "279:15:17",
															"nodeType": "YulAssignment",
															"src": "279:15:17",
															"value": {
																"name": "value",
																"nativeSrc": "289:5:17",
																"nodeType": "YulIdentifier",
																"src": "289:5:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "279:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "279:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "14:286:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "49:9:17",
														"nodeType": "YulTypedName",
														"src": "49:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "60:7:17",
														"nodeType": "YulTypedName",
														"src": "60:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "72:6:17",
														"nodeType": "YulTypedName",
														"src": "72:6:17",
														"type": ""
													}
												],
												"src": "14:286:17"
											},
											{
												"body": {
													"nativeSrc": "400:92:17",
													"nodeType": "YulBlock",
													"src": "400:92:17",
													"statements": [
														{
															"nativeSrc": "410:26:17",
															"nodeType": "YulAssignment",
															"src": "410:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "422:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "422:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "433:2:17",
																		"nodeType": "YulLiteral",
																		"src": "433:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "418:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "418:3:17"
																},
																"nativeSrc": "418:18:17",
																"nodeType": "YulFunctionCall",
																"src": "418:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "410:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "410:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "452:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "452:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "value0",
																						"nativeSrc": "477:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "477:6:17"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "470:6:17",
																					"nodeType": "YulIdentifier",
																					"src": "470:6:17"
																				},
																				"nativeSrc": "470:14:17",
																				"nodeType": "YulFunctionCall",
																				"src": "470:14:17"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "463:6:17",
																			"nodeType": "YulIdentifier",
																			"src": "463:6:17"
																		},
																		"nativeSrc": "463:22:17",
																		"nodeType": "YulFunctionCall",
																		"src": "463:22:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "445:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "445:6:17"
																},
																"nativeSrc": "445:41:17",
																"nodeType": "YulFunctionCall",
																"src": "445:41:17"
															},
															"nativeSrc": "445:41:17",
															"nodeType": "YulExpressionStatement",
															"src": "445:41:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "305:187:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "369:9:17",
														"nodeType": "YulTypedName",
														"src": "369:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "380:6:17",
														"nodeType": "YulTypedName",
														"src": "380:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "391:4:17",
														"nodeType": "YulTypedName",
														"src": "391:4:17",
														"type": ""
													}
												],
												"src": "305:187:17"
											},
											{
												"body": {
													"nativeSrc": "567:156:17",
													"nodeType": "YulBlock",
													"src": "567:156:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "613:16:17",
																"nodeType": "YulBlock",
																"src": "613:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "622:1:17",
																					"nodeType": "YulLiteral",
																					"src": "622:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "625:1:17",
																					"nodeType": "YulLiteral",
																					"src": "625:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "615:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "615:6:17"
																			},
																			"nativeSrc": "615:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "615:12:17"
																		},
																		"nativeSrc": "615:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "615:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "588:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "588:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "597:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "597:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "584:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "584:3:17"
																		},
																		"nativeSrc": "584:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "584:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "609:2:17",
																		"nodeType": "YulLiteral",
																		"src": "609:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "580:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "580:3:17"
																},
																"nativeSrc": "580:32:17",
																"nodeType": "YulFunctionCall",
																"src": "580:32:17"
															},
															"nativeSrc": "577:52:17",
															"nodeType": "YulIf",
															"src": "577:52:17"
														},
														{
															"nativeSrc": "638:14:17",
															"nodeType": "YulVariableDeclaration",
															"src": "638:14:17",
															"value": {
																"kind": "number",
																"nativeSrc": "651:1:17",
																"nodeType": "YulLiteral",
																"src": "651:1:17",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "642:5:17",
																	"nodeType": "YulTypedName",
																	"src": "642:5:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "661:32:17",
															"nodeType": "YulAssignment",
															"src": "661:32:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "683:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "683:9:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "670:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "670:12:17"
																},
																"nativeSrc": "670:23:17",
																"nodeType": "YulFunctionCall",
																"src": "670:23:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "661:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "661:5:17"
																}
															]
														},
														{
															"nativeSrc": "702:15:17",
															"nodeType": "YulAssignment",
															"src": "702:15:17",
															"value": {
																"name": "value",
																"nativeSrc": "712:5:17",
																"nodeType": "YulIdentifier",
																"src": "712:5:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "702:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "702:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nativeSrc": "497:226:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "533:9:17",
														"nodeType": "YulTypedName",
														"src": "533:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "544:7:17",
														"nodeType": "YulTypedName",
														"src": "544:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "556:6:17",
														"nodeType": "YulTypedName",
														"src": "556:6:17",
														"type": ""
													}
												],
												"src": "497:226:17"
											},
											{
												"body": {
													"nativeSrc": "773:86:17",
													"nodeType": "YulBlock",
													"src": "773:86:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "837:16:17",
																"nodeType": "YulBlock",
																"src": "837:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "846:1:17",
																					"nodeType": "YulLiteral",
																					"src": "846:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "849:1:17",
																					"nodeType": "YulLiteral",
																					"src": "849:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "839:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "839:6:17"
																			},
																			"nativeSrc": "839:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "839:12:17"
																		},
																		"nativeSrc": "839:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "839:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "796:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "796:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "807:5:17",
																						"nodeType": "YulIdentifier",
																						"src": "807:5:17"
																					},
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "822:3:17",
																										"nodeType": "YulLiteral",
																										"src": "822:3:17",
																										"type": "",
																										"value": "160"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "827:1:17",
																										"nodeType": "YulLiteral",
																										"src": "827:1:17",
																										"type": "",
																										"value": "1"
																									}
																								],
																								"functionName": {
																									"name": "shl",
																									"nativeSrc": "818:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "818:3:17"
																								},
																								"nativeSrc": "818:11:17",
																								"nodeType": "YulFunctionCall",
																								"src": "818:11:17"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "831:1:17",
																								"nodeType": "YulLiteral",
																								"src": "831:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "sub",
																							"nativeSrc": "814:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "814:3:17"
																						},
																						"nativeSrc": "814:19:17",
																						"nodeType": "YulFunctionCall",
																						"src": "814:19:17"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "803:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "803:3:17"
																				},
																				"nativeSrc": "803:31:17",
																				"nodeType": "YulFunctionCall",
																				"src": "803:31:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "793:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "793:2:17"
																		},
																		"nativeSrc": "793:42:17",
																		"nodeType": "YulFunctionCall",
																		"src": "793:42:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "786:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "786:6:17"
																},
																"nativeSrc": "786:50:17",
																"nodeType": "YulFunctionCall",
																"src": "786:50:17"
															},
															"nativeSrc": "783:70:17",
															"nodeType": "YulIf",
															"src": "783:70:17"
														}
													]
												},
												"name": "validator_revert_address",
												"nativeSrc": "728:131:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "762:5:17",
														"nodeType": "YulTypedName",
														"src": "762:5:17",
														"type": ""
													}
												],
												"src": "728:131:17"
											},
											{
												"body": {
													"nativeSrc": "951:280:17",
													"nodeType": "YulBlock",
													"src": "951:280:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "997:16:17",
																"nodeType": "YulBlock",
																"src": "997:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1006:1:17",
																					"nodeType": "YulLiteral",
																					"src": "1006:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1009:1:17",
																					"nodeType": "YulLiteral",
																					"src": "1009:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "999:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "999:6:17"
																			},
																			"nativeSrc": "999:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "999:12:17"
																		},
																		"nativeSrc": "999:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "999:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "972:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "972:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "981:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "981:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "968:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "968:3:17"
																		},
																		"nativeSrc": "968:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "968:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "993:2:17",
																		"nodeType": "YulLiteral",
																		"src": "993:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "964:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "964:3:17"
																},
																"nativeSrc": "964:32:17",
																"nodeType": "YulFunctionCall",
																"src": "964:32:17"
															},
															"nativeSrc": "961:52:17",
															"nodeType": "YulIf",
															"src": "961:52:17"
														},
														{
															"nativeSrc": "1022:36:17",
															"nodeType": "YulVariableDeclaration",
															"src": "1022:36:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1048:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "1048:9:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1035:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "1035:12:17"
																},
																"nativeSrc": "1035:23:17",
																"nodeType": "YulFunctionCall",
																"src": "1035:23:17"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1026:5:17",
																	"nodeType": "YulTypedName",
																	"src": "1026:5:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1092:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "1092:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "1067:24:17",
																	"nodeType": "YulIdentifier",
																	"src": "1067:24:17"
																},
																"nativeSrc": "1067:31:17",
																"nodeType": "YulFunctionCall",
																"src": "1067:31:17"
															},
															"nativeSrc": "1067:31:17",
															"nodeType": "YulExpressionStatement",
															"src": "1067:31:17"
														},
														{
															"nativeSrc": "1107:15:17",
															"nodeType": "YulAssignment",
															"src": "1107:15:17",
															"value": {
																"name": "value",
																"nativeSrc": "1117:5:17",
																"nodeType": "YulIdentifier",
																"src": "1117:5:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1107:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1107:6:17"
																}
															]
														},
														{
															"nativeSrc": "1131:16:17",
															"nodeType": "YulVariableDeclaration",
															"src": "1131:16:17",
															"value": {
																"kind": "number",
																"nativeSrc": "1146:1:17",
																"nodeType": "YulLiteral",
																"src": "1146:1:17",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "1135:7:17",
																	"nodeType": "YulTypedName",
																	"src": "1135:7:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1156:43:17",
															"nodeType": "YulAssignment",
															"src": "1156:43:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1184:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "1184:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1195:2:17",
																				"nodeType": "YulLiteral",
																				"src": "1195:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1180:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "1180:3:17"
																		},
																		"nativeSrc": "1180:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1180:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1167:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "1167:12:17"
																},
																"nativeSrc": "1167:32:17",
																"nodeType": "YulFunctionCall",
																"src": "1167:32:17"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "1156:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "1156:7:17"
																}
															]
														},
														{
															"nativeSrc": "1208:17:17",
															"nodeType": "YulAssignment",
															"src": "1208:17:17",
															"value": {
																"name": "value_1",
																"nativeSrc": "1218:7:17",
																"nodeType": "YulIdentifier",
																"src": "1218:7:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "1208:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1208:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "864:367:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "909:9:17",
														"nodeType": "YulTypedName",
														"src": "909:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "920:7:17",
														"nodeType": "YulTypedName",
														"src": "920:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "932:6:17",
														"nodeType": "YulTypedName",
														"src": "932:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "940:6:17",
														"nodeType": "YulTypedName",
														"src": "940:6:17",
														"type": ""
													}
												],
												"src": "864:367:17"
											},
											{
												"body": {
													"nativeSrc": "1306:177:17",
													"nodeType": "YulBlock",
													"src": "1306:177:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "1352:16:17",
																"nodeType": "YulBlock",
																"src": "1352:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1361:1:17",
																					"nodeType": "YulLiteral",
																					"src": "1361:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1364:1:17",
																					"nodeType": "YulLiteral",
																					"src": "1364:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1354:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "1354:6:17"
																			},
																			"nativeSrc": "1354:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "1354:12:17"
																		},
																		"nativeSrc": "1354:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "1354:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1327:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "1327:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1336:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "1336:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1323:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "1323:3:17"
																		},
																		"nativeSrc": "1323:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1323:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1348:2:17",
																		"nodeType": "YulLiteral",
																		"src": "1348:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1319:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "1319:3:17"
																},
																"nativeSrc": "1319:32:17",
																"nodeType": "YulFunctionCall",
																"src": "1319:32:17"
															},
															"nativeSrc": "1316:52:17",
															"nodeType": "YulIf",
															"src": "1316:52:17"
														},
														{
															"nativeSrc": "1377:36:17",
															"nodeType": "YulVariableDeclaration",
															"src": "1377:36:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1403:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "1403:9:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1390:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "1390:12:17"
																},
																"nativeSrc": "1390:23:17",
																"nodeType": "YulFunctionCall",
																"src": "1390:23:17"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "1381:5:17",
																	"nodeType": "YulTypedName",
																	"src": "1381:5:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1447:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "1447:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "1422:24:17",
																	"nodeType": "YulIdentifier",
																	"src": "1422:24:17"
																},
																"nativeSrc": "1422:31:17",
																"nodeType": "YulFunctionCall",
																"src": "1422:31:17"
															},
															"nativeSrc": "1422:31:17",
															"nodeType": "YulExpressionStatement",
															"src": "1422:31:17"
														},
														{
															"nativeSrc": "1462:15:17",
															"nodeType": "YulAssignment",
															"src": "1462:15:17",
															"value": {
																"name": "value",
																"nativeSrc": "1472:5:17",
																"nodeType": "YulIdentifier",
																"src": "1472:5:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "1462:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1462:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1236:247:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1272:9:17",
														"nodeType": "YulTypedName",
														"src": "1272:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1283:7:17",
														"nodeType": "YulTypedName",
														"src": "1283:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1295:6:17",
														"nodeType": "YulTypedName",
														"src": "1295:6:17",
														"type": ""
													}
												],
												"src": "1236:247:17"
											},
											{
												"body": {
													"nativeSrc": "1645:162:17",
													"nodeType": "YulBlock",
													"src": "1645:162:17",
													"statements": [
														{
															"nativeSrc": "1655:26:17",
															"nodeType": "YulAssignment",
															"src": "1655:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1667:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "1667:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1678:2:17",
																		"nodeType": "YulLiteral",
																		"src": "1678:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1663:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "1663:3:17"
																},
																"nativeSrc": "1663:18:17",
																"nodeType": "YulFunctionCall",
																"src": "1663:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1655:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "1655:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1697:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "1697:9:17"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1708:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "1708:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1690:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1690:6:17"
																},
																"nativeSrc": "1690:25:17",
																"nodeType": "YulFunctionCall",
																"src": "1690:25:17"
															},
															"nativeSrc": "1690:25:17",
															"nodeType": "YulExpressionStatement",
															"src": "1690:25:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1735:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "1735:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1746:2:17",
																				"nodeType": "YulLiteral",
																				"src": "1746:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1731:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "1731:3:17"
																		},
																		"nativeSrc": "1731:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1731:18:17"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "1751:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "1751:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1724:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1724:6:17"
																},
																"nativeSrc": "1724:34:17",
																"nodeType": "YulFunctionCall",
																"src": "1724:34:17"
															},
															"nativeSrc": "1724:34:17",
															"nodeType": "YulExpressionStatement",
															"src": "1724:34:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1778:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "1778:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1789:2:17",
																				"nodeType": "YulLiteral",
																				"src": "1789:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1774:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "1774:3:17"
																		},
																		"nativeSrc": "1774:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "1774:18:17"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "1794:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "1794:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1767:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1767:6:17"
																},
																"nativeSrc": "1767:34:17",
																"nodeType": "YulFunctionCall",
																"src": "1767:34:17"
															},
															"nativeSrc": "1767:34:17",
															"nodeType": "YulExpressionStatement",
															"src": "1767:34:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "1488:319:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1598:9:17",
														"nodeType": "YulTypedName",
														"src": "1598:9:17",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "1609:6:17",
														"nodeType": "YulTypedName",
														"src": "1609:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1617:6:17",
														"nodeType": "YulTypedName",
														"src": "1617:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1625:6:17",
														"nodeType": "YulTypedName",
														"src": "1625:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1636:4:17",
														"nodeType": "YulTypedName",
														"src": "1636:4:17",
														"type": ""
													}
												],
												"src": "1488:319:17"
											},
											{
												"body": {
													"nativeSrc": "1913:76:17",
													"nodeType": "YulBlock",
													"src": "1913:76:17",
													"statements": [
														{
															"nativeSrc": "1923:26:17",
															"nodeType": "YulAssignment",
															"src": "1923:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1935:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "1935:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1946:2:17",
																		"nodeType": "YulLiteral",
																		"src": "1946:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1931:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "1931:3:17"
																},
																"nativeSrc": "1931:18:17",
																"nodeType": "YulFunctionCall",
																"src": "1931:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1923:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "1923:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1965:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "1965:9:17"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "1976:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "1976:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1958:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "1958:6:17"
																},
																"nativeSrc": "1958:25:17",
																"nodeType": "YulFunctionCall",
																"src": "1958:25:17"
															},
															"nativeSrc": "1958:25:17",
															"nodeType": "YulExpressionStatement",
															"src": "1958:25:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
												"nativeSrc": "1812:177:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1882:9:17",
														"nodeType": "YulTypedName",
														"src": "1882:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1893:6:17",
														"nodeType": "YulTypedName",
														"src": "1893:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1904:4:17",
														"nodeType": "YulTypedName",
														"src": "1904:4:17",
														"type": ""
													}
												],
												"src": "1812:177:17"
											},
											{
												"body": {
													"nativeSrc": "2064:156:17",
													"nodeType": "YulBlock",
													"src": "2064:156:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "2110:16:17",
																"nodeType": "YulBlock",
																"src": "2110:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2119:1:17",
																					"nodeType": "YulLiteral",
																					"src": "2119:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2122:1:17",
																					"nodeType": "YulLiteral",
																					"src": "2122:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2112:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "2112:6:17"
																			},
																			"nativeSrc": "2112:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "2112:12:17"
																		},
																		"nativeSrc": "2112:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "2112:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2085:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "2085:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2094:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "2094:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2081:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "2081:3:17"
																		},
																		"nativeSrc": "2081:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2081:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2106:2:17",
																		"nodeType": "YulLiteral",
																		"src": "2106:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2077:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "2077:3:17"
																},
																"nativeSrc": "2077:32:17",
																"nodeType": "YulFunctionCall",
																"src": "2077:32:17"
															},
															"nativeSrc": "2074:52:17",
															"nodeType": "YulIf",
															"src": "2074:52:17"
														},
														{
															"nativeSrc": "2135:14:17",
															"nodeType": "YulVariableDeclaration",
															"src": "2135:14:17",
															"value": {
																"kind": "number",
																"nativeSrc": "2148:1:17",
																"nodeType": "YulLiteral",
																"src": "2148:1:17",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2139:5:17",
																	"nodeType": "YulTypedName",
																	"src": "2139:5:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2158:32:17",
															"nodeType": "YulAssignment",
															"src": "2158:32:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2180:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "2180:9:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2167:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "2167:12:17"
																},
																"nativeSrc": "2167:23:17",
																"nodeType": "YulFunctionCall",
																"src": "2167:23:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2158:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "2158:5:17"
																}
															]
														},
														{
															"nativeSrc": "2199:15:17",
															"nodeType": "YulAssignment",
															"src": "2199:15:17",
															"value": {
																"name": "value",
																"nativeSrc": "2209:5:17",
																"nodeType": "YulIdentifier",
																"src": "2209:5:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2199:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2199:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32",
												"nativeSrc": "1994:226:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2030:9:17",
														"nodeType": "YulTypedName",
														"src": "2030:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2041:7:17",
														"nodeType": "YulTypedName",
														"src": "2041:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2053:6:17",
														"nodeType": "YulTypedName",
														"src": "2053:6:17",
														"type": ""
													}
												],
												"src": "1994:226:17"
											},
											{
												"body": {
													"nativeSrc": "2326:76:17",
													"nodeType": "YulBlock",
													"src": "2326:76:17",
													"statements": [
														{
															"nativeSrc": "2336:26:17",
															"nodeType": "YulAssignment",
															"src": "2336:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2348:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "2348:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2359:2:17",
																		"nodeType": "YulLiteral",
																		"src": "2359:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2344:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "2344:3:17"
																},
																"nativeSrc": "2344:18:17",
																"nodeType": "YulFunctionCall",
																"src": "2344:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2336:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "2336:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2378:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "2378:9:17"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "2389:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "2389:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2371:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2371:6:17"
																},
																"nativeSrc": "2371:25:17",
																"nodeType": "YulFunctionCall",
																"src": "2371:25:17"
															},
															"nativeSrc": "2371:25:17",
															"nodeType": "YulExpressionStatement",
															"src": "2371:25:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "2225:177:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2295:9:17",
														"nodeType": "YulTypedName",
														"src": "2295:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2306:6:17",
														"nodeType": "YulTypedName",
														"src": "2306:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2317:4:17",
														"nodeType": "YulTypedName",
														"src": "2317:4:17",
														"type": ""
													}
												],
												"src": "2225:177:17"
											},
											{
												"body": {
													"nativeSrc": "2494:280:17",
													"nodeType": "YulBlock",
													"src": "2494:280:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "2540:16:17",
																"nodeType": "YulBlock",
																"src": "2540:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2549:1:17",
																					"nodeType": "YulLiteral",
																					"src": "2549:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2552:1:17",
																					"nodeType": "YulLiteral",
																					"src": "2552:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2542:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "2542:6:17"
																			},
																			"nativeSrc": "2542:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "2542:12:17"
																		},
																		"nativeSrc": "2542:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "2542:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2515:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "2515:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2524:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "2524:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2511:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "2511:3:17"
																		},
																		"nativeSrc": "2511:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2511:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2536:2:17",
																		"nodeType": "YulLiteral",
																		"src": "2536:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2507:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "2507:3:17"
																},
																"nativeSrc": "2507:32:17",
																"nodeType": "YulFunctionCall",
																"src": "2507:32:17"
															},
															"nativeSrc": "2504:52:17",
															"nodeType": "YulIf",
															"src": "2504:52:17"
														},
														{
															"nativeSrc": "2565:14:17",
															"nodeType": "YulVariableDeclaration",
															"src": "2565:14:17",
															"value": {
																"kind": "number",
																"nativeSrc": "2578:1:17",
																"nodeType": "YulLiteral",
																"src": "2578:1:17",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "2569:5:17",
																	"nodeType": "YulTypedName",
																	"src": "2569:5:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "2588:32:17",
															"nodeType": "YulAssignment",
															"src": "2588:32:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2610:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "2610:9:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2597:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "2597:12:17"
																},
																"nativeSrc": "2597:23:17",
																"nodeType": "YulFunctionCall",
																"src": "2597:23:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2588:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "2588:5:17"
																}
															]
														},
														{
															"nativeSrc": "2629:15:17",
															"nodeType": "YulAssignment",
															"src": "2629:15:17",
															"value": {
																"name": "value",
																"nativeSrc": "2639:5:17",
																"nodeType": "YulIdentifier",
																"src": "2639:5:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "2629:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2629:6:17"
																}
															]
														},
														{
															"nativeSrc": "2653:47:17",
															"nodeType": "YulVariableDeclaration",
															"src": "2653:47:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2685:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "2685:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2696:2:17",
																				"nodeType": "YulLiteral",
																				"src": "2696:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2681:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "2681:3:17"
																		},
																		"nativeSrc": "2681:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2681:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "2668:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "2668:12:17"
																},
																"nativeSrc": "2668:32:17",
																"nodeType": "YulFunctionCall",
																"src": "2668:32:17"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "2657:7:17",
																	"nodeType": "YulTypedName",
																	"src": "2657:7:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "2734:7:17",
																		"nodeType": "YulIdentifier",
																		"src": "2734:7:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "2709:24:17",
																	"nodeType": "YulIdentifier",
																	"src": "2709:24:17"
																},
																"nativeSrc": "2709:33:17",
																"nodeType": "YulFunctionCall",
																"src": "2709:33:17"
															},
															"nativeSrc": "2709:33:17",
															"nodeType": "YulExpressionStatement",
															"src": "2709:33:17"
														},
														{
															"nativeSrc": "2751:17:17",
															"nodeType": "YulAssignment",
															"src": "2751:17:17",
															"value": {
																"name": "value_1",
																"nativeSrc": "2761:7:17",
																"nodeType": "YulIdentifier",
																"src": "2761:7:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "2751:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2751:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32t_address",
												"nativeSrc": "2407:367:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2452:9:17",
														"nodeType": "YulTypedName",
														"src": "2452:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2463:7:17",
														"nodeType": "YulTypedName",
														"src": "2463:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2475:6:17",
														"nodeType": "YulTypedName",
														"src": "2475:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "2483:6:17",
														"nodeType": "YulTypedName",
														"src": "2483:6:17",
														"type": ""
													}
												],
												"src": "2407:367:17"
											},
											{
												"body": {
													"nativeSrc": "2905:102:17",
													"nodeType": "YulBlock",
													"src": "2905:102:17",
													"statements": [
														{
															"nativeSrc": "2915:26:17",
															"nodeType": "YulAssignment",
															"src": "2915:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2927:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "2927:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2938:2:17",
																		"nodeType": "YulLiteral",
																		"src": "2938:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2923:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "2923:3:17"
																},
																"nativeSrc": "2923:18:17",
																"nodeType": "YulFunctionCall",
																"src": "2923:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2915:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "2915:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2957:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "2957:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "2972:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "2972:6:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "2988:3:17",
																								"nodeType": "YulLiteral",
																								"src": "2988:3:17",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "2993:1:17",
																								"nodeType": "YulLiteral",
																								"src": "2993:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "2984:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "2984:3:17"
																						},
																						"nativeSrc": "2984:11:17",
																						"nodeType": "YulFunctionCall",
																						"src": "2984:11:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "2997:1:17",
																						"nodeType": "YulLiteral",
																						"src": "2997:1:17",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "2980:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "2980:3:17"
																				},
																				"nativeSrc": "2980:19:17",
																				"nodeType": "YulFunctionCall",
																				"src": "2980:19:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "2968:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "2968:3:17"
																		},
																		"nativeSrc": "2968:32:17",
																		"nodeType": "YulFunctionCall",
																		"src": "2968:32:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2950:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "2950:6:17"
																},
																"nativeSrc": "2950:51:17",
																"nodeType": "YulFunctionCall",
																"src": "2950:51:17"
															},
															"nativeSrc": "2950:51:17",
															"nodeType": "YulExpressionStatement",
															"src": "2950:51:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC20Upgradeable_$876__to_t_address__fromStack_reversed",
												"nativeSrc": "2779:228:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2874:9:17",
														"nodeType": "YulTypedName",
														"src": "2874:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2885:6:17",
														"nodeType": "YulTypedName",
														"src": "2885:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2896:4:17",
														"nodeType": "YulTypedName",
														"src": "2896:4:17",
														"type": ""
													}
												],
												"src": "2779:228:17"
											},
											{
												"body": {
													"nativeSrc": "3099:259:17",
													"nodeType": "YulBlock",
													"src": "3099:259:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "3145:16:17",
																"nodeType": "YulBlock",
																"src": "3145:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3154:1:17",
																					"nodeType": "YulLiteral",
																					"src": "3154:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3157:1:17",
																					"nodeType": "YulLiteral",
																					"src": "3157:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3147:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "3147:6:17"
																			},
																			"nativeSrc": "3147:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "3147:12:17"
																		},
																		"nativeSrc": "3147:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "3147:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3120:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "3120:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3129:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "3129:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3116:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "3116:3:17"
																		},
																		"nativeSrc": "3116:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3116:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3141:2:17",
																		"nodeType": "YulLiteral",
																		"src": "3141:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3112:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "3112:3:17"
																},
																"nativeSrc": "3112:32:17",
																"nodeType": "YulFunctionCall",
																"src": "3112:32:17"
															},
															"nativeSrc": "3109:52:17",
															"nodeType": "YulIf",
															"src": "3109:52:17"
														},
														{
															"nativeSrc": "3170:14:17",
															"nodeType": "YulVariableDeclaration",
															"src": "3170:14:17",
															"value": {
																"kind": "number",
																"nativeSrc": "3183:1:17",
																"nodeType": "YulLiteral",
																"src": "3183:1:17",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3174:5:17",
																	"nodeType": "YulTypedName",
																	"src": "3174:5:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3193:32:17",
															"nodeType": "YulAssignment",
															"src": "3193:32:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3215:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "3215:9:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3202:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "3202:12:17"
																},
																"nativeSrc": "3202:23:17",
																"nodeType": "YulFunctionCall",
																"src": "3202:23:17"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "3193:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "3193:5:17"
																}
															]
														},
														{
															"nativeSrc": "3234:15:17",
															"nodeType": "YulAssignment",
															"src": "3234:15:17",
															"value": {
																"name": "value",
																"nativeSrc": "3244:5:17",
																"nodeType": "YulIdentifier",
																"src": "3244:5:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3234:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3234:6:17"
																}
															]
														},
														{
															"nativeSrc": "3258:16:17",
															"nodeType": "YulVariableDeclaration",
															"src": "3258:16:17",
															"value": {
																"kind": "number",
																"nativeSrc": "3273:1:17",
																"nodeType": "YulLiteral",
																"src": "3273:1:17",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "3262:7:17",
																	"nodeType": "YulTypedName",
																	"src": "3262:7:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "3283:43:17",
															"nodeType": "YulAssignment",
															"src": "3283:43:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3311:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "3311:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3322:2:17",
																				"nodeType": "YulLiteral",
																				"src": "3322:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3307:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "3307:3:17"
																		},
																		"nativeSrc": "3307:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3307:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3294:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "3294:12:17"
																},
																"nativeSrc": "3294:32:17",
																"nodeType": "YulFunctionCall",
																"src": "3294:32:17"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "3283:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "3283:7:17"
																}
															]
														},
														{
															"nativeSrc": "3335:17:17",
															"nodeType": "YulAssignment",
															"src": "3335:17:17",
															"value": {
																"name": "value_1",
																"nativeSrc": "3345:7:17",
																"nodeType": "YulIdentifier",
																"src": "3345:7:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "3335:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3335:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256t_uint256",
												"nativeSrc": "3012:346:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3057:9:17",
														"nodeType": "YulTypedName",
														"src": "3057:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3068:7:17",
														"nodeType": "YulTypedName",
														"src": "3068:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3080:6:17",
														"nodeType": "YulTypedName",
														"src": "3080:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3088:6:17",
														"nodeType": "YulTypedName",
														"src": "3088:6:17",
														"type": ""
													}
												],
												"src": "3012:346:17"
											},
											{
												"body": {
													"nativeSrc": "3395:95:17",
													"nodeType": "YulBlock",
													"src": "3395:95:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3412:1:17",
																		"nodeType": "YulLiteral",
																		"src": "3412:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "3419:3:17",
																				"nodeType": "YulLiteral",
																				"src": "3419:3:17",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3424:10:17",
																				"nodeType": "YulLiteral",
																				"src": "3424:10:17",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "3415:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "3415:3:17"
																		},
																		"nativeSrc": "3415:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3415:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3405:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3405:6:17"
																},
																"nativeSrc": "3405:31:17",
																"nodeType": "YulFunctionCall",
																"src": "3405:31:17"
															},
															"nativeSrc": "3405:31:17",
															"nodeType": "YulExpressionStatement",
															"src": "3405:31:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3452:1:17",
																		"nodeType": "YulLiteral",
																		"src": "3452:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3455:4:17",
																		"nodeType": "YulLiteral",
																		"src": "3455:4:17",
																		"type": "",
																		"value": "0x41"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "3445:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3445:6:17"
																},
																"nativeSrc": "3445:15:17",
																"nodeType": "YulFunctionCall",
																"src": "3445:15:17"
															},
															"nativeSrc": "3445:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "3445:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "3476:1:17",
																		"nodeType": "YulLiteral",
																		"src": "3476:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3479:4:17",
																		"nodeType": "YulLiteral",
																		"src": "3479:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "3469:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3469:6:17"
																},
																"nativeSrc": "3469:15:17",
																"nodeType": "YulFunctionCall",
																"src": "3469:15:17"
															},
															"nativeSrc": "3469:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "3469:15:17"
														}
													]
												},
												"name": "panic_error_0x41",
												"nativeSrc": "3363:127:17",
												"nodeType": "YulFunctionDefinition",
												"src": "3363:127:17"
											},
											{
												"body": {
													"nativeSrc": "3591:983:17",
													"nodeType": "YulBlock",
													"src": "3591:983:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "3637:16:17",
																"nodeType": "YulBlock",
																"src": "3637:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3646:1:17",
																					"nodeType": "YulLiteral",
																					"src": "3646:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3649:1:17",
																					"nodeType": "YulLiteral",
																					"src": "3649:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3639:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "3639:6:17"
																			},
																			"nativeSrc": "3639:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "3639:12:17"
																		},
																		"nativeSrc": "3639:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "3639:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3612:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "3612:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "3621:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "3621:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "3608:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "3608:3:17"
																		},
																		"nativeSrc": "3608:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3608:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3633:2:17",
																		"nodeType": "YulLiteral",
																		"src": "3633:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "3604:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "3604:3:17"
																},
																"nativeSrc": "3604:32:17",
																"nodeType": "YulFunctionCall",
																"src": "3604:32:17"
															},
															"nativeSrc": "3601:52:17",
															"nodeType": "YulIf",
															"src": "3601:52:17"
														},
														{
															"nativeSrc": "3662:36:17",
															"nodeType": "YulVariableDeclaration",
															"src": "3662:36:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3688:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "3688:9:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3675:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "3675:12:17"
																},
																"nativeSrc": "3675:23:17",
																"nodeType": "YulFunctionCall",
																"src": "3675:23:17"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "3666:5:17",
																	"nodeType": "YulTypedName",
																	"src": "3666:5:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "3732:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "3732:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "3707:24:17",
																	"nodeType": "YulIdentifier",
																	"src": "3707:24:17"
																},
																"nativeSrc": "3707:31:17",
																"nodeType": "YulFunctionCall",
																"src": "3707:31:17"
															},
															"nativeSrc": "3707:31:17",
															"nodeType": "YulExpressionStatement",
															"src": "3707:31:17"
														},
														{
															"nativeSrc": "3747:15:17",
															"nodeType": "YulAssignment",
															"src": "3747:15:17",
															"value": {
																"name": "value",
																"nativeSrc": "3757:5:17",
																"nodeType": "YulIdentifier",
																"src": "3757:5:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "3747:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3747:6:17"
																}
															]
														},
														{
															"nativeSrc": "3771:46:17",
															"nodeType": "YulVariableDeclaration",
															"src": "3771:46:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "3802:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "3802:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "3813:2:17",
																				"nodeType": "YulLiteral",
																				"src": "3813:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "3798:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "3798:3:17"
																		},
																		"nativeSrc": "3798:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3798:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "3785:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "3785:12:17"
																},
																"nativeSrc": "3785:32:17",
																"nodeType": "YulFunctionCall",
																"src": "3785:32:17"
															},
															"variables": [
																{
																	"name": "offset",
																	"nativeSrc": "3775:6:17",
																	"nodeType": "YulTypedName",
																	"src": "3775:6:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3860:16:17",
																"nodeType": "YulBlock",
																"src": "3860:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3869:1:17",
																					"nodeType": "YulLiteral",
																					"src": "3869:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3872:1:17",
																					"nodeType": "YulLiteral",
																					"src": "3872:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3862:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "3862:6:17"
																			},
																			"nativeSrc": "3862:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "3862:12:17"
																		},
																		"nativeSrc": "3862:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "3862:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "3832:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "3832:6:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "3840:18:17",
																		"nodeType": "YulLiteral",
																		"src": "3840:18:17",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "3829:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "3829:2:17"
																},
																"nativeSrc": "3829:30:17",
																"nodeType": "YulFunctionCall",
																"src": "3829:30:17"
															},
															"nativeSrc": "3826:50:17",
															"nodeType": "YulIf",
															"src": "3826:50:17"
														},
														{
															"nativeSrc": "3885:32:17",
															"nodeType": "YulVariableDeclaration",
															"src": "3885:32:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "3899:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "3899:9:17"
																	},
																	{
																		"name": "offset",
																		"nativeSrc": "3910:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "3910:6:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "3895:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "3895:3:17"
																},
																"nativeSrc": "3895:22:17",
																"nodeType": "YulFunctionCall",
																"src": "3895:22:17"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "3889:2:17",
																	"nodeType": "YulTypedName",
																	"src": "3889:2:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "3965:16:17",
																"nodeType": "YulBlock",
																"src": "3965:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "3974:1:17",
																					"nodeType": "YulLiteral",
																					"src": "3974:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "3977:1:17",
																					"nodeType": "YulLiteral",
																					"src": "3977:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "3967:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "3967:6:17"
																			},
																			"nativeSrc": "3967:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "3967:12:17"
																		},
																		"nativeSrc": "3967:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "3967:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "3944:2:17",
																						"nodeType": "YulIdentifier",
																						"src": "3944:2:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "3948:4:17",
																						"nodeType": "YulLiteral",
																						"src": "3948:4:17",
																						"type": "",
																						"value": "0x1f"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3940:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "3940:3:17"
																				},
																				"nativeSrc": "3940:13:17",
																				"nodeType": "YulFunctionCall",
																				"src": "3940:13:17"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3955:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "3955:7:17"
																			}
																		],
																		"functionName": {
																			"name": "slt",
																			"nativeSrc": "3936:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "3936:3:17"
																		},
																		"nativeSrc": "3936:27:17",
																		"nodeType": "YulFunctionCall",
																		"src": "3936:27:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "3929:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "3929:6:17"
																},
																"nativeSrc": "3929:35:17",
																"nodeType": "YulFunctionCall",
																"src": "3929:35:17"
															},
															"nativeSrc": "3926:55:17",
															"nodeType": "YulIf",
															"src": "3926:55:17"
														},
														{
															"nativeSrc": "3990:30:17",
															"nodeType": "YulVariableDeclaration",
															"src": "3990:30:17",
															"value": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "4017:2:17",
																		"nodeType": "YulIdentifier",
																		"src": "4017:2:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "4004:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "4004:12:17"
																},
																"nativeSrc": "4004:16:17",
																"nodeType": "YulFunctionCall",
																"src": "4004:16:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "3994:6:17",
																	"nodeType": "YulTypedName",
																	"src": "3994:6:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4063:22:17",
																"nodeType": "YulBlock",
																"src": "4063:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4065:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "4065:16:17"
																			},
																			"nativeSrc": "4065:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "4065:18:17"
																		},
																		"nativeSrc": "4065:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "4065:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "length",
																		"nativeSrc": "4035:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "4035:6:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4043:18:17",
																		"nodeType": "YulLiteral",
																		"src": "4043:18:17",
																		"type": "",
																		"value": "0xffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4032:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "4032:2:17"
																},
																"nativeSrc": "4032:30:17",
																"nodeType": "YulFunctionCall",
																"src": "4032:30:17"
															},
															"nativeSrc": "4029:56:17",
															"nodeType": "YulIf",
															"src": "4029:56:17"
														},
														{
															"nativeSrc": "4094:23:17",
															"nodeType": "YulVariableDeclaration",
															"src": "4094:23:17",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4114:2:17",
																		"nodeType": "YulLiteral",
																		"src": "4114:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "4108:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "4108:5:17"
																},
																"nativeSrc": "4108:9:17",
																"nodeType": "YulFunctionCall",
																"src": "4108:9:17"
															},
															"variables": [
																{
																	"name": "memPtr",
																	"nativeSrc": "4098:6:17",
																	"nodeType": "YulTypedName",
																	"src": "4098:6:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "4126:85:17",
															"nodeType": "YulVariableDeclaration",
															"src": "4126:85:17",
															"value": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "4148:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "4148:6:17"
																	},
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"arguments": [
																									{
																										"name": "length",
																										"nativeSrc": "4172:6:17",
																										"nodeType": "YulIdentifier",
																										"src": "4172:6:17"
																									},
																									{
																										"kind": "number",
																										"nativeSrc": "4180:4:17",
																										"nodeType": "YulLiteral",
																										"src": "4180:4:17",
																										"type": "",
																										"value": "0x1f"
																									}
																								],
																								"functionName": {
																									"name": "add",
																									"nativeSrc": "4168:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "4168:3:17"
																								},
																								"nativeSrc": "4168:17:17",
																								"nodeType": "YulFunctionCall",
																								"src": "4168:17:17"
																							},
																							{
																								"arguments": [
																									{
																										"kind": "number",
																										"nativeSrc": "4191:2:17",
																										"nodeType": "YulLiteral",
																										"src": "4191:2:17",
																										"type": "",
																										"value": "31"
																									}
																								],
																								"functionName": {
																									"name": "not",
																									"nativeSrc": "4187:3:17",
																									"nodeType": "YulIdentifier",
																									"src": "4187:3:17"
																								},
																								"nativeSrc": "4187:7:17",
																								"nodeType": "YulFunctionCall",
																								"src": "4187:7:17"
																							}
																						],
																						"functionName": {
																							"name": "and",
																							"nativeSrc": "4164:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "4164:3:17"
																						},
																						"nativeSrc": "4164:31:17",
																						"nodeType": "YulFunctionCall",
																						"src": "4164:31:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "4197:2:17",
																						"nodeType": "YulLiteral",
																						"src": "4197:2:17",
																						"type": "",
																						"value": "63"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4160:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "4160:3:17"
																				},
																				"nativeSrc": "4160:40:17",
																				"nodeType": "YulFunctionCall",
																				"src": "4160:40:17"
																			},
																			{
																				"arguments": [
																					{
																						"kind": "number",
																						"nativeSrc": "4206:2:17",
																						"nodeType": "YulLiteral",
																						"src": "4206:2:17",
																						"type": "",
																						"value": "31"
																					}
																				],
																				"functionName": {
																					"name": "not",
																					"nativeSrc": "4202:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "4202:3:17"
																				},
																				"nativeSrc": "4202:7:17",
																				"nodeType": "YulFunctionCall",
																				"src": "4202:7:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "4156:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "4156:3:17"
																		},
																		"nativeSrc": "4156:54:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4156:54:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4144:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "4144:3:17"
																},
																"nativeSrc": "4144:67:17",
																"nodeType": "YulFunctionCall",
																"src": "4144:67:17"
															},
															"variables": [
																{
																	"name": "newFreePtr",
																	"nativeSrc": "4130:10:17",
																	"nodeType": "YulTypedName",
																	"src": "4130:10:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "4286:22:17",
																"nodeType": "YulBlock",
																"src": "4286:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x41",
																				"nativeSrc": "4288:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "4288:16:17"
																			},
																			"nativeSrc": "4288:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "4288:18:17"
																		},
																		"nativeSrc": "4288:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "4288:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "4229:10:17",
																				"nodeType": "YulIdentifier",
																				"src": "4229:10:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4241:18:17",
																				"nodeType": "YulLiteral",
																				"src": "4241:18:17",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "gt",
																			"nativeSrc": "4226:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "4226:2:17"
																		},
																		"nativeSrc": "4226:34:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4226:34:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "newFreePtr",
																				"nativeSrc": "4265:10:17",
																				"nodeType": "YulIdentifier",
																				"src": "4265:10:17"
																			},
																			{
																				"name": "memPtr",
																				"nativeSrc": "4277:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "4277:6:17"
																			}
																		],
																		"functionName": {
																			"name": "lt",
																			"nativeSrc": "4262:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "4262:2:17"
																		},
																		"nativeSrc": "4262:22:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4262:22:17"
																	}
																],
																"functionName": {
																	"name": "or",
																	"nativeSrc": "4223:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "4223:2:17"
																},
																"nativeSrc": "4223:62:17",
																"nodeType": "YulFunctionCall",
																"src": "4223:62:17"
															},
															"nativeSrc": "4220:88:17",
															"nodeType": "YulIf",
															"src": "4220:88:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "4324:2:17",
																		"nodeType": "YulLiteral",
																		"src": "4324:2:17",
																		"type": "",
																		"value": "64"
																	},
																	{
																		"name": "newFreePtr",
																		"nativeSrc": "4328:10:17",
																		"nodeType": "YulIdentifier",
																		"src": "4328:10:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4317:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4317:6:17"
																},
																"nativeSrc": "4317:22:17",
																"nodeType": "YulFunctionCall",
																"src": "4317:22:17"
															},
															"nativeSrc": "4317:22:17",
															"nodeType": "YulExpressionStatement",
															"src": "4317:22:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "memPtr",
																		"nativeSrc": "4355:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "4355:6:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4363:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "4363:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4348:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4348:6:17"
																},
																"nativeSrc": "4348:22:17",
																"nodeType": "YulFunctionCall",
																"src": "4348:22:17"
															},
															"nativeSrc": "4348:22:17",
															"nodeType": "YulExpressionStatement",
															"src": "4348:22:17"
														},
														{
															"body": {
																"nativeSrc": "4420:16:17",
																"nodeType": "YulBlock",
																"src": "4420:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "4429:1:17",
																					"nodeType": "YulLiteral",
																					"src": "4429:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "4432:1:17",
																					"nodeType": "YulLiteral",
																					"src": "4432:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "4422:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "4422:6:17"
																			},
																			"nativeSrc": "4422:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "4422:12:17"
																		},
																		"nativeSrc": "4422:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "4422:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "_1",
																						"nativeSrc": "4393:2:17",
																						"nodeType": "YulIdentifier",
																						"src": "4393:2:17"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "4397:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "4397:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4389:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "4389:3:17"
																				},
																				"nativeSrc": "4389:15:17",
																				"nodeType": "YulFunctionCall",
																				"src": "4389:15:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4406:2:17",
																				"nodeType": "YulLiteral",
																				"src": "4406:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4385:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "4385:3:17"
																		},
																		"nativeSrc": "4385:24:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4385:24:17"
																	},
																	{
																		"name": "dataEnd",
																		"nativeSrc": "4411:7:17",
																		"nodeType": "YulIdentifier",
																		"src": "4411:7:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "4382:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "4382:2:17"
																},
																"nativeSrc": "4382:37:17",
																"nodeType": "YulFunctionCall",
																"src": "4382:37:17"
															},
															"nativeSrc": "4379:57:17",
															"nodeType": "YulIf",
															"src": "4379:57:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "4462:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "4462:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4470:2:17",
																				"nodeType": "YulLiteral",
																				"src": "4470:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4458:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "4458:3:17"
																		},
																		"nativeSrc": "4458:15:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4458:15:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "_1",
																				"nativeSrc": "4479:2:17",
																				"nodeType": "YulIdentifier",
																				"src": "4479:2:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4483:2:17",
																				"nodeType": "YulLiteral",
																				"src": "4483:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4475:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "4475:3:17"
																		},
																		"nativeSrc": "4475:11:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4475:11:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "4488:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "4488:6:17"
																	}
																],
																"functionName": {
																	"name": "calldatacopy",
																	"nativeSrc": "4445:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "4445:12:17"
																},
																"nativeSrc": "4445:50:17",
																"nodeType": "YulFunctionCall",
																"src": "4445:50:17"
															},
															"nativeSrc": "4445:50:17",
															"nodeType": "YulExpressionStatement",
															"src": "4445:50:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "memPtr",
																						"nativeSrc": "4519:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "4519:6:17"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "4527:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "4527:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "4515:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "4515:3:17"
																				},
																				"nativeSrc": "4515:19:17",
																				"nodeType": "YulFunctionCall",
																				"src": "4515:19:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4536:2:17",
																				"nodeType": "YulLiteral",
																				"src": "4536:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4511:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "4511:3:17"
																		},
																		"nativeSrc": "4511:28:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4511:28:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4541:1:17",
																		"nodeType": "YulLiteral",
																		"src": "4541:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4504:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4504:6:17"
																},
																"nativeSrc": "4504:39:17",
																"nodeType": "YulFunctionCall",
																"src": "4504:39:17"
															},
															"nativeSrc": "4504:39:17",
															"nodeType": "YulExpressionStatement",
															"src": "4504:39:17"
														},
														{
															"nativeSrc": "4552:16:17",
															"nodeType": "YulAssignment",
															"src": "4552:16:17",
															"value": {
																"name": "memPtr",
																"nativeSrc": "4562:6:17",
																"nodeType": "YulIdentifier",
																"src": "4562:6:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "4552:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4552:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_bytes_memory_ptr",
												"nativeSrc": "3495:1079:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "3549:9:17",
														"nodeType": "YulTypedName",
														"src": "3549:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "3560:7:17",
														"nodeType": "YulTypedName",
														"src": "3560:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "3572:6:17",
														"nodeType": "YulTypedName",
														"src": "3572:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "3580:6:17",
														"nodeType": "YulTypedName",
														"src": "3580:6:17",
														"type": ""
													}
												],
												"src": "3495:1079:17"
											},
											{
												"body": {
													"nativeSrc": "4708:119:17",
													"nodeType": "YulBlock",
													"src": "4708:119:17",
													"statements": [
														{
															"nativeSrc": "4718:26:17",
															"nodeType": "YulAssignment",
															"src": "4718:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4730:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "4730:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4741:2:17",
																		"nodeType": "YulLiteral",
																		"src": "4741:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "4726:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "4726:3:17"
																},
																"nativeSrc": "4726:18:17",
																"nodeType": "YulFunctionCall",
																"src": "4726:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "4718:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "4718:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4760:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "4760:9:17"
																	},
																	{
																		"name": "value0",
																		"nativeSrc": "4771:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "4771:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4753:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4753:6:17"
																},
																"nativeSrc": "4753:25:17",
																"nodeType": "YulFunctionCall",
																"src": "4753:25:17"
															},
															"nativeSrc": "4753:25:17",
															"nodeType": "YulExpressionStatement",
															"src": "4753:25:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "4798:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "4798:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "4809:2:17",
																				"nodeType": "YulLiteral",
																				"src": "4809:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "4794:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "4794:3:17"
																		},
																		"nativeSrc": "4794:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "4794:18:17"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "4814:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "4814:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4787:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4787:6:17"
																},
																"nativeSrc": "4787:34:17",
																"nodeType": "YulFunctionCall",
																"src": "4787:34:17"
															},
															"nativeSrc": "4787:34:17",
															"nodeType": "YulExpressionStatement",
															"src": "4787:34:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed",
												"nativeSrc": "4579:248:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4669:9:17",
														"nodeType": "YulTypedName",
														"src": "4669:9:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "4680:6:17",
														"nodeType": "YulTypedName",
														"src": "4680:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4688:6:17",
														"nodeType": "YulTypedName",
														"src": "4688:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4699:4:17",
														"nodeType": "YulTypedName",
														"src": "4699:4:17",
														"type": ""
													}
												],
												"src": "4579:248:17"
											},
											{
												"body": {
													"nativeSrc": "4953:297:17",
													"nodeType": "YulBlock",
													"src": "4953:297:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "4970:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "4970:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "4981:2:17",
																		"nodeType": "YulLiteral",
																		"src": "4981:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "4963:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "4963:6:17"
																},
																"nativeSrc": "4963:21:17",
																"nodeType": "YulFunctionCall",
																"src": "4963:21:17"
															},
															"nativeSrc": "4963:21:17",
															"nodeType": "YulExpressionStatement",
															"src": "4963:21:17"
														},
														{
															"nativeSrc": "4993:27:17",
															"nodeType": "YulVariableDeclaration",
															"src": "4993:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "5013:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "5013:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "5007:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "5007:5:17"
																},
																"nativeSrc": "5007:13:17",
																"nodeType": "YulFunctionCall",
																"src": "5007:13:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "4997:6:17",
																	"nodeType": "YulTypedName",
																	"src": "4997:6:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5040:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "5040:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5051:2:17",
																				"nodeType": "YulLiteral",
																				"src": "5051:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5036:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "5036:3:17"
																		},
																		"nativeSrc": "5036:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5036:18:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5056:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "5056:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5029:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "5029:6:17"
																},
																"nativeSrc": "5029:34:17",
																"nodeType": "YulFunctionCall",
																"src": "5029:34:17"
															},
															"nativeSrc": "5029:34:17",
															"nodeType": "YulExpressionStatement",
															"src": "5029:34:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5082:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "5082:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5093:2:17",
																				"nodeType": "YulLiteral",
																				"src": "5093:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5078:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "5078:3:17"
																		},
																		"nativeSrc": "5078:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5078:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "5102:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "5102:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5110:2:17",
																				"nodeType": "YulLiteral",
																				"src": "5110:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5098:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "5098:3:17"
																		},
																		"nativeSrc": "5098:15:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5098:15:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "5115:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "5115:6:17"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "5072:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "5072:5:17"
																},
																"nativeSrc": "5072:50:17",
																"nodeType": "YulFunctionCall",
																"src": "5072:50:17"
															},
															"nativeSrc": "5072:50:17",
															"nodeType": "YulExpressionStatement",
															"src": "5072:50:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "5146:9:17",
																						"nodeType": "YulIdentifier",
																						"src": "5146:9:17"
																					},
																					{
																						"name": "length",
																						"nativeSrc": "5157:6:17",
																						"nodeType": "YulIdentifier",
																						"src": "5157:6:17"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "5142:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "5142:3:17"
																				},
																				"nativeSrc": "5142:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "5142:22:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5166:2:17",
																				"nodeType": "YulLiteral",
																				"src": "5166:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5138:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "5138:3:17"
																		},
																		"nativeSrc": "5138:31:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5138:31:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5171:1:17",
																		"nodeType": "YulLiteral",
																		"src": "5171:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "5131:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "5131:6:17"
																},
																"nativeSrc": "5131:42:17",
																"nodeType": "YulFunctionCall",
																"src": "5131:42:17"
															},
															"nativeSrc": "5131:42:17",
															"nodeType": "YulExpressionStatement",
															"src": "5131:42:17"
														},
														{
															"nativeSrc": "5182:62:17",
															"nodeType": "YulAssignment",
															"src": "5182:62:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5198:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "5198:9:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "length",
																								"nativeSrc": "5217:6:17",
																								"nodeType": "YulIdentifier",
																								"src": "5217:6:17"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "5225:2:17",
																								"nodeType": "YulLiteral",
																								"src": "5225:2:17",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "add",
																							"nativeSrc": "5213:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "5213:3:17"
																						},
																						"nativeSrc": "5213:15:17",
																						"nodeType": "YulFunctionCall",
																						"src": "5213:15:17"
																					},
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "5234:2:17",
																								"nodeType": "YulLiteral",
																								"src": "5234:2:17",
																								"type": "",
																								"value": "31"
																							}
																						],
																						"functionName": {
																							"name": "not",
																							"nativeSrc": "5230:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "5230:3:17"
																						},
																						"nativeSrc": "5230:7:17",
																						"nodeType": "YulFunctionCall",
																						"src": "5230:7:17"
																					}
																				],
																				"functionName": {
																					"name": "and",
																					"nativeSrc": "5209:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "5209:3:17"
																				},
																				"nativeSrc": "5209:29:17",
																				"nodeType": "YulFunctionCall",
																				"src": "5209:29:17"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5194:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "5194:3:17"
																		},
																		"nativeSrc": "5194:45:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5194:45:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5241:2:17",
																		"nodeType": "YulLiteral",
																		"src": "5241:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "5190:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "5190:3:17"
																},
																"nativeSrc": "5190:54:17",
																"nodeType": "YulFunctionCall",
																"src": "5190:54:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "5182:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "5182:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "4832:418:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "4922:9:17",
														"nodeType": "YulTypedName",
														"src": "4922:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "4933:6:17",
														"nodeType": "YulTypedName",
														"src": "4933:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "4944:4:17",
														"nodeType": "YulTypedName",
														"src": "4944:4:17",
														"type": ""
													}
												],
												"src": "4832:418:17"
											},
											{
												"body": {
													"nativeSrc": "5359:383:17",
													"nodeType": "YulBlock",
													"src": "5359:383:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "5405:16:17",
																"nodeType": "YulBlock",
																"src": "5405:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5414:1:17",
																					"nodeType": "YulLiteral",
																					"src": "5414:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5417:1:17",
																					"nodeType": "YulLiteral",
																					"src": "5417:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5407:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "5407:6:17"
																			},
																			"nativeSrc": "5407:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "5407:12:17"
																		},
																		"nativeSrc": "5407:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "5407:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5380:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "5380:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5389:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "5389:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5376:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "5376:3:17"
																		},
																		"nativeSrc": "5376:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5376:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5401:2:17",
																		"nodeType": "YulLiteral",
																		"src": "5401:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5372:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "5372:3:17"
																},
																"nativeSrc": "5372:32:17",
																"nodeType": "YulFunctionCall",
																"src": "5372:32:17"
															},
															"nativeSrc": "5369:52:17",
															"nodeType": "YulIf",
															"src": "5369:52:17"
														},
														{
															"nativeSrc": "5430:36:17",
															"nodeType": "YulVariableDeclaration",
															"src": "5430:36:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "5456:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "5456:9:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5443:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "5443:12:17"
																},
																"nativeSrc": "5443:23:17",
																"nodeType": "YulFunctionCall",
																"src": "5443:23:17"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "5434:5:17",
																	"nodeType": "YulTypedName",
																	"src": "5434:5:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "5500:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "5500:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "5475:24:17",
																	"nodeType": "YulIdentifier",
																	"src": "5475:24:17"
																},
																"nativeSrc": "5475:31:17",
																"nodeType": "YulFunctionCall",
																"src": "5475:31:17"
															},
															"nativeSrc": "5475:31:17",
															"nodeType": "YulExpressionStatement",
															"src": "5475:31:17"
														},
														{
															"nativeSrc": "5515:15:17",
															"nodeType": "YulAssignment",
															"src": "5515:15:17",
															"value": {
																"name": "value",
																"nativeSrc": "5525:5:17",
																"nodeType": "YulIdentifier",
																"src": "5525:5:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "5515:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "5515:6:17"
																}
															]
														},
														{
															"nativeSrc": "5539:16:17",
															"nodeType": "YulVariableDeclaration",
															"src": "5539:16:17",
															"value": {
																"kind": "number",
																"nativeSrc": "5554:1:17",
																"nodeType": "YulLiteral",
																"src": "5554:1:17",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "5543:7:17",
																	"nodeType": "YulTypedName",
																	"src": "5543:7:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5564:43:17",
															"nodeType": "YulAssignment",
															"src": "5564:43:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5592:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "5592:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5603:2:17",
																				"nodeType": "YulLiteral",
																				"src": "5603:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5588:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "5588:3:17"
																		},
																		"nativeSrc": "5588:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5588:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5575:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "5575:12:17"
																},
																"nativeSrc": "5575:32:17",
																"nodeType": "YulFunctionCall",
																"src": "5575:32:17"
															},
															"variableNames": [
																{
																	"name": "value_1",
																	"nativeSrc": "5564:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "5564:7:17"
																}
															]
														},
														{
															"nativeSrc": "5616:17:17",
															"nodeType": "YulAssignment",
															"src": "5616:17:17",
															"value": {
																"name": "value_1",
																"nativeSrc": "5626:7:17",
																"nodeType": "YulIdentifier",
																"src": "5626:7:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "5616:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "5616:6:17"
																}
															]
														},
														{
															"nativeSrc": "5642:16:17",
															"nodeType": "YulVariableDeclaration",
															"src": "5642:16:17",
															"value": {
																"kind": "number",
																"nativeSrc": "5657:1:17",
																"nodeType": "YulLiteral",
																"src": "5657:1:17",
																"type": "",
																"value": "0"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "5646:7:17",
																	"nodeType": "YulTypedName",
																	"src": "5646:7:17",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "5667:43:17",
															"nodeType": "YulAssignment",
															"src": "5667:43:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "5695:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "5695:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "5706:2:17",
																				"nodeType": "YulLiteral",
																				"src": "5706:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "5691:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "5691:3:17"
																		},
																		"nativeSrc": "5691:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5691:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5678:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "5678:12:17"
																},
																"nativeSrc": "5678:32:17",
																"nodeType": "YulFunctionCall",
																"src": "5678:32:17"
															},
															"variableNames": [
																{
																	"name": "value_2",
																	"nativeSrc": "5667:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "5667:7:17"
																}
															]
														},
														{
															"nativeSrc": "5719:17:17",
															"nodeType": "YulAssignment",
															"src": "5719:17:17",
															"value": {
																"name": "value_2",
																"nativeSrc": "5729:7:17",
																"nodeType": "YulIdentifier",
																"src": "5729:7:17"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "5719:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "5719:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256t_uint256",
												"nativeSrc": "5255:487:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5309:9:17",
														"nodeType": "YulTypedName",
														"src": "5309:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5320:7:17",
														"nodeType": "YulTypedName",
														"src": "5320:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5332:6:17",
														"nodeType": "YulTypedName",
														"src": "5332:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5340:6:17",
														"nodeType": "YulTypedName",
														"src": "5340:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5348:6:17",
														"nodeType": "YulTypedName",
														"src": "5348:6:17",
														"type": ""
													}
												],
												"src": "5255:487:17"
											},
											{
												"body": {
													"nativeSrc": "5902:800:17",
													"nodeType": "YulBlock",
													"src": "5902:800:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "5949:16:17",
																"nodeType": "YulBlock",
																"src": "5949:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "5958:1:17",
																					"nodeType": "YulLiteral",
																					"src": "5958:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "5961:1:17",
																					"nodeType": "YulLiteral",
																					"src": "5961:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5951:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "5951:6:17"
																			},
																			"nativeSrc": "5951:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "5951:12:17"
																		},
																		"nativeSrc": "5951:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "5951:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "5923:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "5923:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "5932:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "5932:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "5919:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "5919:3:17"
																		},
																		"nativeSrc": "5919:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "5919:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "5944:3:17",
																		"nodeType": "YulLiteral",
																		"src": "5944:3:17",
																		"type": "",
																		"value": "192"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "5915:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "5915:3:17"
																},
																"nativeSrc": "5915:33:17",
																"nodeType": "YulFunctionCall",
																"src": "5915:33:17"
															},
															"nativeSrc": "5912:53:17",
															"nodeType": "YulIf",
															"src": "5912:53:17"
														},
														{
															"nativeSrc": "5974:36:17",
															"nodeType": "YulVariableDeclaration",
															"src": "5974:36:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6000:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "6000:9:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "5987:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "5987:12:17"
																},
																"nativeSrc": "5987:23:17",
																"nodeType": "YulFunctionCall",
																"src": "5987:23:17"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "5978:5:17",
																	"nodeType": "YulTypedName",
																	"src": "5978:5:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "6044:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "6044:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "6019:24:17",
																	"nodeType": "YulIdentifier",
																	"src": "6019:24:17"
																},
																"nativeSrc": "6019:31:17",
																"nodeType": "YulFunctionCall",
																"src": "6019:31:17"
															},
															"nativeSrc": "6019:31:17",
															"nodeType": "YulExpressionStatement",
															"src": "6019:31:17"
														},
														{
															"nativeSrc": "6059:15:17",
															"nodeType": "YulAssignment",
															"src": "6059:15:17",
															"value": {
																"name": "value",
																"nativeSrc": "6069:5:17",
																"nodeType": "YulIdentifier",
																"src": "6069:5:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "6059:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "6059:6:17"
																}
															]
														},
														{
															"nativeSrc": "6083:47:17",
															"nodeType": "YulVariableDeclaration",
															"src": "6083:47:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6115:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "6115:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6126:2:17",
																				"nodeType": "YulLiteral",
																				"src": "6126:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6111:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "6111:3:17"
																		},
																		"nativeSrc": "6111:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6111:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6098:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "6098:12:17"
																},
																"nativeSrc": "6098:32:17",
																"nodeType": "YulFunctionCall",
																"src": "6098:32:17"
															},
															"variables": [
																{
																	"name": "value_1",
																	"nativeSrc": "6087:7:17",
																	"nodeType": "YulTypedName",
																	"src": "6087:7:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_1",
																		"nativeSrc": "6164:7:17",
																		"nodeType": "YulIdentifier",
																		"src": "6164:7:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "6139:24:17",
																	"nodeType": "YulIdentifier",
																	"src": "6139:24:17"
																},
																"nativeSrc": "6139:33:17",
																"nodeType": "YulFunctionCall",
																"src": "6139:33:17"
															},
															"nativeSrc": "6139:33:17",
															"nodeType": "YulExpressionStatement",
															"src": "6139:33:17"
														},
														{
															"nativeSrc": "6181:17:17",
															"nodeType": "YulAssignment",
															"src": "6181:17:17",
															"value": {
																"name": "value_1",
																"nativeSrc": "6191:7:17",
																"nodeType": "YulIdentifier",
																"src": "6191:7:17"
															},
															"variableNames": [
																{
																	"name": "value1",
																	"nativeSrc": "6181:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "6181:6:17"
																}
															]
														},
														{
															"nativeSrc": "6207:47:17",
															"nodeType": "YulVariableDeclaration",
															"src": "6207:47:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6239:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "6239:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6250:2:17",
																				"nodeType": "YulLiteral",
																				"src": "6250:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6235:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "6235:3:17"
																		},
																		"nativeSrc": "6235:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6235:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6222:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "6222:12:17"
																},
																"nativeSrc": "6222:32:17",
																"nodeType": "YulFunctionCall",
																"src": "6222:32:17"
															},
															"variables": [
																{
																	"name": "value_2",
																	"nativeSrc": "6211:7:17",
																	"nodeType": "YulTypedName",
																	"src": "6211:7:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_2",
																		"nativeSrc": "6288:7:17",
																		"nodeType": "YulIdentifier",
																		"src": "6288:7:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "6263:24:17",
																	"nodeType": "YulIdentifier",
																	"src": "6263:24:17"
																},
																"nativeSrc": "6263:33:17",
																"nodeType": "YulFunctionCall",
																"src": "6263:33:17"
															},
															"nativeSrc": "6263:33:17",
															"nodeType": "YulExpressionStatement",
															"src": "6263:33:17"
														},
														{
															"nativeSrc": "6305:17:17",
															"nodeType": "YulAssignment",
															"src": "6305:17:17",
															"value": {
																"name": "value_2",
																"nativeSrc": "6315:7:17",
																"nodeType": "YulIdentifier",
																"src": "6315:7:17"
															},
															"variableNames": [
																{
																	"name": "value2",
																	"nativeSrc": "6305:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "6305:6:17"
																}
															]
														},
														{
															"nativeSrc": "6331:47:17",
															"nodeType": "YulVariableDeclaration",
															"src": "6331:47:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6363:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "6363:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6374:2:17",
																				"nodeType": "YulLiteral",
																				"src": "6374:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6359:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "6359:3:17"
																		},
																		"nativeSrc": "6359:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6359:18:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6346:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "6346:12:17"
																},
																"nativeSrc": "6346:32:17",
																"nodeType": "YulFunctionCall",
																"src": "6346:32:17"
															},
															"variables": [
																{
																	"name": "value_3",
																	"nativeSrc": "6335:7:17",
																	"nodeType": "YulTypedName",
																	"src": "6335:7:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_3",
																		"nativeSrc": "6412:7:17",
																		"nodeType": "YulIdentifier",
																		"src": "6412:7:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "6387:24:17",
																	"nodeType": "YulIdentifier",
																	"src": "6387:24:17"
																},
																"nativeSrc": "6387:33:17",
																"nodeType": "YulFunctionCall",
																"src": "6387:33:17"
															},
															"nativeSrc": "6387:33:17",
															"nodeType": "YulExpressionStatement",
															"src": "6387:33:17"
														},
														{
															"nativeSrc": "6429:17:17",
															"nodeType": "YulAssignment",
															"src": "6429:17:17",
															"value": {
																"name": "value_3",
																"nativeSrc": "6439:7:17",
																"nodeType": "YulIdentifier",
																"src": "6439:7:17"
															},
															"variableNames": [
																{
																	"name": "value3",
																	"nativeSrc": "6429:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "6429:6:17"
																}
															]
														},
														{
															"nativeSrc": "6455:48:17",
															"nodeType": "YulVariableDeclaration",
															"src": "6455:48:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6487:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "6487:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6498:3:17",
																				"nodeType": "YulLiteral",
																				"src": "6498:3:17",
																				"type": "",
																				"value": "128"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6483:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "6483:3:17"
																		},
																		"nativeSrc": "6483:19:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6483:19:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6470:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "6470:12:17"
																},
																"nativeSrc": "6470:33:17",
																"nodeType": "YulFunctionCall",
																"src": "6470:33:17"
															},
															"variables": [
																{
																	"name": "value_4",
																	"nativeSrc": "6459:7:17",
																	"nodeType": "YulTypedName",
																	"src": "6459:7:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_4",
																		"nativeSrc": "6537:7:17",
																		"nodeType": "YulIdentifier",
																		"src": "6537:7:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "6512:24:17",
																	"nodeType": "YulIdentifier",
																	"src": "6512:24:17"
																},
																"nativeSrc": "6512:33:17",
																"nodeType": "YulFunctionCall",
																"src": "6512:33:17"
															},
															"nativeSrc": "6512:33:17",
															"nodeType": "YulExpressionStatement",
															"src": "6512:33:17"
														},
														{
															"nativeSrc": "6554:17:17",
															"nodeType": "YulAssignment",
															"src": "6554:17:17",
															"value": {
																"name": "value_4",
																"nativeSrc": "6564:7:17",
																"nodeType": "YulIdentifier",
																"src": "6564:7:17"
															},
															"variableNames": [
																{
																	"name": "value4",
																	"nativeSrc": "6554:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "6554:6:17"
																}
															]
														},
														{
															"nativeSrc": "6580:48:17",
															"nodeType": "YulVariableDeclaration",
															"src": "6580:48:17",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "6612:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "6612:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "6623:3:17",
																				"nodeType": "YulLiteral",
																				"src": "6623:3:17",
																				"type": "",
																				"value": "160"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "6608:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "6608:3:17"
																		},
																		"nativeSrc": "6608:19:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6608:19:17"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "6595:12:17",
																	"nodeType": "YulIdentifier",
																	"src": "6595:12:17"
																},
																"nativeSrc": "6595:33:17",
																"nodeType": "YulFunctionCall",
																"src": "6595:33:17"
															},
															"variables": [
																{
																	"name": "value_5",
																	"nativeSrc": "6584:7:17",
																	"nodeType": "YulTypedName",
																	"src": "6584:7:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value_5",
																		"nativeSrc": "6662:7:17",
																		"nodeType": "YulIdentifier",
																		"src": "6662:7:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "6637:24:17",
																	"nodeType": "YulIdentifier",
																	"src": "6637:24:17"
																},
																"nativeSrc": "6637:33:17",
																"nodeType": "YulFunctionCall",
																"src": "6637:33:17"
															},
															"nativeSrc": "6637:33:17",
															"nodeType": "YulExpressionStatement",
															"src": "6637:33:17"
														},
														{
															"nativeSrc": "6679:17:17",
															"nodeType": "YulAssignment",
															"src": "6679:17:17",
															"value": {
																"name": "value_5",
																"nativeSrc": "6689:7:17",
																"nodeType": "YulIdentifier",
																"src": "6689:7:17"
															},
															"variableNames": [
																{
																	"name": "value5",
																	"nativeSrc": "6679:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "6679:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_addresst_addresst_addresst_addresst_address",
												"nativeSrc": "5747:955:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "5828:9:17",
														"nodeType": "YulTypedName",
														"src": "5828:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "5839:7:17",
														"nodeType": "YulTypedName",
														"src": "5839:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "5851:6:17",
														"nodeType": "YulTypedName",
														"src": "5851:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "5859:6:17",
														"nodeType": "YulTypedName",
														"src": "5859:6:17",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "5867:6:17",
														"nodeType": "YulTypedName",
														"src": "5867:6:17",
														"type": ""
													},
													{
														"name": "value3",
														"nativeSrc": "5875:6:17",
														"nodeType": "YulTypedName",
														"src": "5875:6:17",
														"type": ""
													},
													{
														"name": "value4",
														"nativeSrc": "5883:6:17",
														"nodeType": "YulTypedName",
														"src": "5883:6:17",
														"type": ""
													},
													{
														"name": "value5",
														"nativeSrc": "5891:6:17",
														"nodeType": "YulTypedName",
														"src": "5891:6:17",
														"type": ""
													}
												],
												"src": "5747:955:17"
											},
											{
												"body": {
													"nativeSrc": "6834:102:17",
													"nodeType": "YulBlock",
													"src": "6834:102:17",
													"statements": [
														{
															"nativeSrc": "6844:26:17",
															"nodeType": "YulAssignment",
															"src": "6844:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6856:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "6856:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "6867:2:17",
																		"nodeType": "YulLiteral",
																		"src": "6867:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "6852:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "6852:3:17"
																},
																"nativeSrc": "6852:18:17",
																"nodeType": "YulFunctionCall",
																"src": "6852:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "6844:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "6844:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "6886:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "6886:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "6901:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "6901:6:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "6917:3:17",
																								"nodeType": "YulLiteral",
																								"src": "6917:3:17",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "6922:1:17",
																								"nodeType": "YulLiteral",
																								"src": "6922:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "6913:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "6913:3:17"
																						},
																						"nativeSrc": "6913:11:17",
																						"nodeType": "YulFunctionCall",
																						"src": "6913:11:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "6926:1:17",
																						"nodeType": "YulLiteral",
																						"src": "6926:1:17",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "6909:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "6909:3:17"
																				},
																				"nativeSrc": "6909:19:17",
																				"nodeType": "YulFunctionCall",
																				"src": "6909:19:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "6897:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "6897:3:17"
																		},
																		"nativeSrc": "6897:32:17",
																		"nodeType": "YulFunctionCall",
																		"src": "6897:32:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "6879:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "6879:6:17"
																},
																"nativeSrc": "6879:51:17",
																"nodeType": "YulFunctionCall",
																"src": "6879:51:17"
															},
															"nativeSrc": "6879:51:17",
															"nodeType": "YulExpressionStatement",
															"src": "6879:51:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_contract$_IERC721Upgradeable_$992__to_t_address__fromStack_reversed",
												"nativeSrc": "6707:229:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "6803:9:17",
														"nodeType": "YulTypedName",
														"src": "6803:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "6814:6:17",
														"nodeType": "YulTypedName",
														"src": "6814:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "6825:4:17",
														"nodeType": "YulTypedName",
														"src": "6825:4:17",
														"type": ""
													}
												],
												"src": "6707:229:17"
											},
											{
												"body": {
													"nativeSrc": "7098:214:17",
													"nodeType": "YulBlock",
													"src": "7098:214:17",
													"statements": [
														{
															"nativeSrc": "7108:26:17",
															"nodeType": "YulAssignment",
															"src": "7108:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7120:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "7120:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7131:2:17",
																		"nodeType": "YulLiteral",
																		"src": "7131:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7116:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "7116:3:17"
																},
																"nativeSrc": "7116:18:17",
																"nodeType": "YulFunctionCall",
																"src": "7116:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7108:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "7108:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7150:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "7150:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "7165:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "7165:6:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "7181:3:17",
																								"nodeType": "YulLiteral",
																								"src": "7181:3:17",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "7186:1:17",
																								"nodeType": "YulLiteral",
																								"src": "7186:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "7177:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "7177:3:17"
																						},
																						"nativeSrc": "7177:11:17",
																						"nodeType": "YulFunctionCall",
																						"src": "7177:11:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7190:1:17",
																						"nodeType": "YulLiteral",
																						"src": "7190:1:17",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "7173:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "7173:3:17"
																				},
																				"nativeSrc": "7173:19:17",
																				"nodeType": "YulFunctionCall",
																				"src": "7173:19:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7161:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "7161:3:17"
																		},
																		"nativeSrc": "7161:32:17",
																		"nodeType": "YulFunctionCall",
																		"src": "7161:32:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7143:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "7143:6:17"
																},
																"nativeSrc": "7143:51:17",
																"nodeType": "YulFunctionCall",
																"src": "7143:51:17"
															},
															"nativeSrc": "7143:51:17",
															"nodeType": "YulExpressionStatement",
															"src": "7143:51:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7214:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "7214:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7225:2:17",
																				"nodeType": "YulLiteral",
																				"src": "7225:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7210:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "7210:3:17"
																		},
																		"nativeSrc": "7210:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "7210:18:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value1",
																				"nativeSrc": "7234:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "7234:6:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "7250:3:17",
																								"nodeType": "YulLiteral",
																								"src": "7250:3:17",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "7255:1:17",
																								"nodeType": "YulLiteral",
																								"src": "7255:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "7246:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "7246:3:17"
																						},
																						"nativeSrc": "7246:11:17",
																						"nodeType": "YulFunctionCall",
																						"src": "7246:11:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7259:1:17",
																						"nodeType": "YulLiteral",
																						"src": "7259:1:17",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "7242:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "7242:3:17"
																				},
																				"nativeSrc": "7242:19:17",
																				"nodeType": "YulFunctionCall",
																				"src": "7242:19:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7230:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "7230:3:17"
																		},
																		"nativeSrc": "7230:32:17",
																		"nodeType": "YulFunctionCall",
																		"src": "7230:32:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7203:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "7203:6:17"
																},
																"nativeSrc": "7203:60:17",
																"nodeType": "YulFunctionCall",
																"src": "7203:60:17"
															},
															"nativeSrc": "7203:60:17",
															"nodeType": "YulExpressionStatement",
															"src": "7203:60:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7283:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "7283:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7294:2:17",
																				"nodeType": "YulLiteral",
																				"src": "7294:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7279:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "7279:3:17"
																		},
																		"nativeSrc": "7279:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "7279:18:17"
																	},
																	{
																		"name": "value2",
																		"nativeSrc": "7299:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "7299:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7272:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "7272:6:17"
																},
																"nativeSrc": "7272:34:17",
																"nodeType": "YulFunctionCall",
																"src": "7272:34:17"
															},
															"nativeSrc": "7272:34:17",
															"nodeType": "YulExpressionStatement",
															"src": "7272:34:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "6941:371:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7051:9:17",
														"nodeType": "YulTypedName",
														"src": "7051:9:17",
														"type": ""
													},
													{
														"name": "value2",
														"nativeSrc": "7062:6:17",
														"nodeType": "YulTypedName",
														"src": "7062:6:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7070:6:17",
														"nodeType": "YulTypedName",
														"src": "7070:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7078:6:17",
														"nodeType": "YulTypedName",
														"src": "7078:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7089:4:17",
														"nodeType": "YulTypedName",
														"src": "7089:4:17",
														"type": ""
													}
												],
												"src": "6941:371:17"
											},
											{
												"body": {
													"nativeSrc": "7446:145:17",
													"nodeType": "YulBlock",
													"src": "7446:145:17",
													"statements": [
														{
															"nativeSrc": "7456:26:17",
															"nodeType": "YulAssignment",
															"src": "7456:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7468:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "7468:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7479:2:17",
																		"nodeType": "YulLiteral",
																		"src": "7479:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "7464:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "7464:3:17"
																},
																"nativeSrc": "7464:18:17",
																"nodeType": "YulFunctionCall",
																"src": "7464:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "7456:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "7456:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7498:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "7498:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "7513:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "7513:6:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "7529:3:17",
																								"nodeType": "YulLiteral",
																								"src": "7529:3:17",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "7534:1:17",
																								"nodeType": "YulLiteral",
																								"src": "7534:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "7525:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "7525:3:17"
																						},
																						"nativeSrc": "7525:11:17",
																						"nodeType": "YulFunctionCall",
																						"src": "7525:11:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "7538:1:17",
																						"nodeType": "YulLiteral",
																						"src": "7538:1:17",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "7521:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "7521:3:17"
																				},
																				"nativeSrc": "7521:19:17",
																				"nodeType": "YulFunctionCall",
																				"src": "7521:19:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "7509:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "7509:3:17"
																		},
																		"nativeSrc": "7509:32:17",
																		"nodeType": "YulFunctionCall",
																		"src": "7509:32:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7491:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "7491:6:17"
																},
																"nativeSrc": "7491:51:17",
																"nodeType": "YulFunctionCall",
																"src": "7491:51:17"
															},
															"nativeSrc": "7491:51:17",
															"nodeType": "YulExpressionStatement",
															"src": "7491:51:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "7562:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "7562:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "7573:2:17",
																				"nodeType": "YulLiteral",
																				"src": "7573:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "7558:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "7558:3:17"
																		},
																		"nativeSrc": "7558:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "7558:18:17"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "7578:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "7578:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "7551:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "7551:6:17"
																},
																"nativeSrc": "7551:34:17",
																"nodeType": "YulFunctionCall",
																"src": "7551:34:17"
															},
															"nativeSrc": "7551:34:17",
															"nodeType": "YulExpressionStatement",
															"src": "7551:34:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
												"nativeSrc": "7317:274:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7407:9:17",
														"nodeType": "YulTypedName",
														"src": "7407:9:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "7418:6:17",
														"nodeType": "YulTypedName",
														"src": "7418:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "7426:6:17",
														"nodeType": "YulTypedName",
														"src": "7426:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "7437:4:17",
														"nodeType": "YulTypedName",
														"src": "7437:4:17",
														"type": ""
													}
												],
												"src": "7317:274:17"
											},
											{
												"body": {
													"nativeSrc": "7674:199:17",
													"nodeType": "YulBlock",
													"src": "7674:199:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "7720:16:17",
																"nodeType": "YulBlock",
																"src": "7720:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7729:1:17",
																					"nodeType": "YulLiteral",
																					"src": "7729:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7732:1:17",
																					"nodeType": "YulLiteral",
																					"src": "7732:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7722:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "7722:6:17"
																			},
																			"nativeSrc": "7722:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "7722:12:17"
																		},
																		"nativeSrc": "7722:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "7722:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "7695:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "7695:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "7704:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "7704:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "7691:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "7691:3:17"
																		},
																		"nativeSrc": "7691:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "7691:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "7716:2:17",
																		"nodeType": "YulLiteral",
																		"src": "7716:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "7687:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "7687:3:17"
																},
																"nativeSrc": "7687:32:17",
																"nodeType": "YulFunctionCall",
																"src": "7687:32:17"
															},
															"nativeSrc": "7684:52:17",
															"nodeType": "YulIf",
															"src": "7684:52:17"
														},
														{
															"nativeSrc": "7745:29:17",
															"nodeType": "YulVariableDeclaration",
															"src": "7745:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "7764:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "7764:9:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "7758:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "7758:5:17"
																},
																"nativeSrc": "7758:16:17",
																"nodeType": "YulFunctionCall",
																"src": "7758:16:17"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "7749:5:17",
																	"nodeType": "YulTypedName",
																	"src": "7749:5:17",
																	"type": ""
																}
															]
														},
														{
															"body": {
																"nativeSrc": "7827:16:17",
																"nodeType": "YulBlock",
																"src": "7827:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "7836:1:17",
																					"nodeType": "YulLiteral",
																					"src": "7836:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "7839:1:17",
																					"nodeType": "YulLiteral",
																					"src": "7839:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "7829:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "7829:6:17"
																			},
																			"nativeSrc": "7829:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "7829:12:17"
																		},
																		"nativeSrc": "7829:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "7829:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "7796:5:17",
																				"nodeType": "YulIdentifier",
																				"src": "7796:5:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"name": "value",
																								"nativeSrc": "7817:5:17",
																								"nodeType": "YulIdentifier",
																								"src": "7817:5:17"
																							}
																						],
																						"functionName": {
																							"name": "iszero",
																							"nativeSrc": "7810:6:17",
																							"nodeType": "YulIdentifier",
																							"src": "7810:6:17"
																						},
																						"nativeSrc": "7810:13:17",
																						"nodeType": "YulFunctionCall",
																						"src": "7810:13:17"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "7803:6:17",
																					"nodeType": "YulIdentifier",
																					"src": "7803:6:17"
																				},
																				"nativeSrc": "7803:21:17",
																				"nodeType": "YulFunctionCall",
																				"src": "7803:21:17"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "7793:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "7793:2:17"
																		},
																		"nativeSrc": "7793:32:17",
																		"nodeType": "YulFunctionCall",
																		"src": "7793:32:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "7786:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "7786:6:17"
																},
																"nativeSrc": "7786:40:17",
																"nodeType": "YulFunctionCall",
																"src": "7786:40:17"
															},
															"nativeSrc": "7783:60:17",
															"nodeType": "YulIf",
															"src": "7783:60:17"
														},
														{
															"nativeSrc": "7852:15:17",
															"nodeType": "YulAssignment",
															"src": "7852:15:17",
															"value": {
																"name": "value",
																"nativeSrc": "7862:5:17",
																"nodeType": "YulIdentifier",
																"src": "7862:5:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "7852:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "7852:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "7596:277:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "7640:9:17",
														"nodeType": "YulTypedName",
														"src": "7640:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "7651:7:17",
														"nodeType": "YulTypedName",
														"src": "7651:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "7663:6:17",
														"nodeType": "YulTypedName",
														"src": "7663:6:17",
														"type": ""
													}
												],
												"src": "7596:277:17"
											},
											{
												"body": {
													"nativeSrc": "8052:226:17",
													"nodeType": "YulBlock",
													"src": "8052:226:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8069:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "8069:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8080:2:17",
																		"nodeType": "YulLiteral",
																		"src": "8080:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8062:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "8062:6:17"
																},
																"nativeSrc": "8062:21:17",
																"nodeType": "YulFunctionCall",
																"src": "8062:21:17"
															},
															"nativeSrc": "8062:21:17",
															"nodeType": "YulExpressionStatement",
															"src": "8062:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8103:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "8103:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8114:2:17",
																				"nodeType": "YulLiteral",
																				"src": "8114:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8099:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "8099:3:17"
																		},
																		"nativeSrc": "8099:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8099:18:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8119:2:17",
																		"nodeType": "YulLiteral",
																		"src": "8119:2:17",
																		"type": "",
																		"value": "36"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8092:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "8092:6:17"
																},
																"nativeSrc": "8092:30:17",
																"nodeType": "YulFunctionCall",
																"src": "8092:30:17"
															},
															"nativeSrc": "8092:30:17",
															"nodeType": "YulExpressionStatement",
															"src": "8092:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8142:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "8142:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8153:2:17",
																				"nodeType": "YulLiteral",
																				"src": "8153:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8138:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "8138:3:17"
																		},
																		"nativeSrc": "8138:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8138:18:17"
																	},
																	{
																		"hexValue": "45544820616d6f756e74206d7573742062652067726561746572207468616e20",
																		"kind": "string",
																		"nativeSrc": "8158:34:17",
																		"nodeType": "YulLiteral",
																		"src": "8158:34:17",
																		"type": "",
																		"value": "ETH amount must be greater than "
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8131:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "8131:6:17"
																},
																"nativeSrc": "8131:62:17",
																"nodeType": "YulFunctionCall",
																"src": "8131:62:17"
															},
															"nativeSrc": "8131:62:17",
															"nodeType": "YulExpressionStatement",
															"src": "8131:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8213:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "8213:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8224:2:17",
																				"nodeType": "YulLiteral",
																				"src": "8224:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8209:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "8209:3:17"
																		},
																		"nativeSrc": "8209:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8209:18:17"
																	},
																	{
																		"hexValue": "7a65726f",
																		"kind": "string",
																		"nativeSrc": "8229:6:17",
																		"nodeType": "YulLiteral",
																		"src": "8229:6:17",
																		"type": "",
																		"value": "zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8202:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "8202:6:17"
																},
																"nativeSrc": "8202:34:17",
																"nodeType": "YulFunctionCall",
																"src": "8202:34:17"
															},
															"nativeSrc": "8202:34:17",
															"nodeType": "YulExpressionStatement",
															"src": "8202:34:17"
														},
														{
															"nativeSrc": "8245:27:17",
															"nodeType": "YulAssignment",
															"src": "8245:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8257:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "8257:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8268:3:17",
																		"nodeType": "YulLiteral",
																		"src": "8268:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8253:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "8253:3:17"
																},
																"nativeSrc": "8253:19:17",
																"nodeType": "YulFunctionCall",
																"src": "8253:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8245:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "8245:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_6f2e13a40c8d5acc1536a801b548e60d12893ddab9aa84254a90ac0e27771d7b__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "7878:400:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8029:9:17",
														"nodeType": "YulTypedName",
														"src": "8029:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8043:4:17",
														"nodeType": "YulTypedName",
														"src": "8043:4:17",
														"type": ""
													}
												],
												"src": "7878:400:17"
											},
											{
												"body": {
													"nativeSrc": "8364:170:17",
													"nodeType": "YulBlock",
													"src": "8364:170:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "8410:16:17",
																"nodeType": "YulBlock",
																"src": "8410:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "8419:1:17",
																					"nodeType": "YulLiteral",
																					"src": "8419:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "8422:1:17",
																					"nodeType": "YulLiteral",
																					"src": "8422:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "8412:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "8412:6:17"
																			},
																			"nativeSrc": "8412:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "8412:12:17"
																		},
																		"nativeSrc": "8412:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "8412:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "8385:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "8385:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "8394:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "8394:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "8381:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "8381:3:17"
																		},
																		"nativeSrc": "8381:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8381:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8406:2:17",
																		"nodeType": "YulLiteral",
																		"src": "8406:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "8377:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "8377:3:17"
																},
																"nativeSrc": "8377:32:17",
																"nodeType": "YulFunctionCall",
																"src": "8377:32:17"
															},
															"nativeSrc": "8374:52:17",
															"nodeType": "YulIf",
															"src": "8374:52:17"
														},
														{
															"nativeSrc": "8435:29:17",
															"nodeType": "YulVariableDeclaration",
															"src": "8435:29:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8454:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "8454:9:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "8448:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "8448:5:17"
																},
																"nativeSrc": "8448:16:17",
																"nodeType": "YulFunctionCall",
																"src": "8448:16:17"
															},
															"variables": [
																{
																	"name": "value",
																	"nativeSrc": "8439:5:17",
																	"nodeType": "YulTypedName",
																	"src": "8439:5:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "8498:5:17",
																		"nodeType": "YulIdentifier",
																		"src": "8498:5:17"
																	}
																],
																"functionName": {
																	"name": "validator_revert_address",
																	"nativeSrc": "8473:24:17",
																	"nodeType": "YulIdentifier",
																	"src": "8473:24:17"
																},
																"nativeSrc": "8473:31:17",
																"nodeType": "YulFunctionCall",
																"src": "8473:31:17"
															},
															"nativeSrc": "8473:31:17",
															"nodeType": "YulExpressionStatement",
															"src": "8473:31:17"
														},
														{
															"nativeSrc": "8513:15:17",
															"nodeType": "YulAssignment",
															"src": "8513:15:17",
															"value": {
																"name": "value",
																"nativeSrc": "8523:5:17",
																"nodeType": "YulIdentifier",
																"src": "8523:5:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "8513:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "8513:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address_fromMemory",
												"nativeSrc": "8283:251:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8330:9:17",
														"nodeType": "YulTypedName",
														"src": "8330:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "8341:7:17",
														"nodeType": "YulTypedName",
														"src": "8341:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "8353:6:17",
														"nodeType": "YulTypedName",
														"src": "8353:6:17",
														"type": ""
													}
												],
												"src": "8283:251:17"
											},
											{
												"body": {
													"nativeSrc": "8713:175:17",
													"nodeType": "YulBlock",
													"src": "8713:175:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8730:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "8730:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8741:2:17",
																		"nodeType": "YulLiteral",
																		"src": "8741:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8723:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "8723:6:17"
																},
																"nativeSrc": "8723:21:17",
																"nodeType": "YulFunctionCall",
																"src": "8723:21:17"
															},
															"nativeSrc": "8723:21:17",
															"nodeType": "YulExpressionStatement",
															"src": "8723:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8764:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "8764:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8775:2:17",
																				"nodeType": "YulLiteral",
																				"src": "8775:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8760:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "8760:3:17"
																		},
																		"nativeSrc": "8760:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8760:18:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8780:2:17",
																		"nodeType": "YulLiteral",
																		"src": "8780:2:17",
																		"type": "",
																		"value": "25"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8753:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "8753:6:17"
																},
																"nativeSrc": "8753:30:17",
																"nodeType": "YulFunctionCall",
																"src": "8753:30:17"
															},
															"nativeSrc": "8753:30:17",
															"nodeType": "YulExpressionStatement",
															"src": "8753:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "8803:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "8803:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8814:2:17",
																				"nodeType": "YulLiteral",
																				"src": "8814:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "8799:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "8799:3:17"
																		},
																		"nativeSrc": "8799:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8799:18:17"
																	},
																	{
																		"hexValue": "4e4654206e6f74206f776e656420627920636f6e7472616374",
																		"kind": "string",
																		"nativeSrc": "8819:27:17",
																		"nodeType": "YulLiteral",
																		"src": "8819:27:17",
																		"type": "",
																		"value": "NFT not owned by contract"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8792:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "8792:6:17"
																},
																"nativeSrc": "8792:55:17",
																"nodeType": "YulFunctionCall",
																"src": "8792:55:17"
															},
															"nativeSrc": "8792:55:17",
															"nodeType": "YulExpressionStatement",
															"src": "8792:55:17"
														},
														{
															"nativeSrc": "8856:26:17",
															"nodeType": "YulAssignment",
															"src": "8856:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "8868:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "8868:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8879:2:17",
																		"nodeType": "YulLiteral",
																		"src": "8879:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "8864:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "8864:3:17"
																},
																"nativeSrc": "8864:18:17",
																"nodeType": "YulFunctionCall",
																"src": "8864:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "8856:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "8856:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_58daa56f77f4b6beb09b0245242e50eda058fa68d4bc8e521ae0632363e71e1a__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "8539:349:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "8690:9:17",
														"nodeType": "YulTypedName",
														"src": "8690:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "8704:4:17",
														"nodeType": "YulTypedName",
														"src": "8704:4:17",
														"type": ""
													}
												],
												"src": "8539:349:17"
											},
											{
												"body": {
													"nativeSrc": "8925:95:17",
													"nodeType": "YulBlock",
													"src": "8925:95:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8942:1:17",
																		"nodeType": "YulLiteral",
																		"src": "8942:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nativeSrc": "8949:3:17",
																				"nodeType": "YulLiteral",
																				"src": "8949:3:17",
																				"type": "",
																				"value": "224"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "8954:10:17",
																				"nodeType": "YulLiteral",
																				"src": "8954:10:17",
																				"type": "",
																				"value": "0x4e487b71"
																			}
																		],
																		"functionName": {
																			"name": "shl",
																			"nativeSrc": "8945:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "8945:3:17"
																		},
																		"nativeSrc": "8945:20:17",
																		"nodeType": "YulFunctionCall",
																		"src": "8945:20:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8935:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "8935:6:17"
																},
																"nativeSrc": "8935:31:17",
																"nodeType": "YulFunctionCall",
																"src": "8935:31:17"
															},
															"nativeSrc": "8935:31:17",
															"nodeType": "YulExpressionStatement",
															"src": "8935:31:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "8982:1:17",
																		"nodeType": "YulLiteral",
																		"src": "8982:1:17",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "8985:4:17",
																		"nodeType": "YulLiteral",
																		"src": "8985:4:17",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "8975:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "8975:6:17"
																},
																"nativeSrc": "8975:15:17",
																"nodeType": "YulFunctionCall",
																"src": "8975:15:17"
															},
															"nativeSrc": "8975:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "8975:15:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "9006:1:17",
																		"nodeType": "YulLiteral",
																		"src": "9006:1:17",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9009:4:17",
																		"nodeType": "YulLiteral",
																		"src": "9009:4:17",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "8999:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "8999:6:17"
																},
																"nativeSrc": "8999:15:17",
																"nodeType": "YulFunctionCall",
																"src": "8999:15:17"
															},
															"nativeSrc": "8999:15:17",
															"nodeType": "YulExpressionStatement",
															"src": "8999:15:17"
														}
													]
												},
												"name": "panic_error_0x11",
												"nativeSrc": "8893:127:17",
												"nodeType": "YulFunctionDefinition",
												"src": "8893:127:17"
											},
											{
												"body": {
													"nativeSrc": "9074:79:17",
													"nodeType": "YulBlock",
													"src": "9074:79:17",
													"statements": [
														{
															"nativeSrc": "9084:17:17",
															"nodeType": "YulAssignment",
															"src": "9084:17:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9096:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "9096:1:17"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9099:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "9099:1:17"
																	}
																],
																"functionName": {
																	"name": "sub",
																	"nativeSrc": "9092:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "9092:3:17"
																},
																"nativeSrc": "9092:9:17",
																"nodeType": "YulFunctionCall",
																"src": "9092:9:17"
															},
															"variableNames": [
																{
																	"name": "diff",
																	"nativeSrc": "9084:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "9084:4:17"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9125:22:17",
																"nodeType": "YulBlock",
																"src": "9125:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9127:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "9127:16:17"
																			},
																			"nativeSrc": "9127:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "9127:18:17"
																		},
																		"nativeSrc": "9127:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "9127:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "diff",
																		"nativeSrc": "9116:4:17",
																		"nodeType": "YulIdentifier",
																		"src": "9116:4:17"
																	},
																	{
																		"name": "x",
																		"nativeSrc": "9122:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "9122:1:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9113:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "9113:2:17"
																},
																"nativeSrc": "9113:11:17",
																"nodeType": "YulFunctionCall",
																"src": "9113:11:17"
															},
															"nativeSrc": "9110:37:17",
															"nodeType": "YulIf",
															"src": "9110:37:17"
														}
													]
												},
												"name": "checked_sub_t_uint256",
												"nativeSrc": "9025:128:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9056:1:17",
														"nodeType": "YulTypedName",
														"src": "9056:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9059:1:17",
														"nodeType": "YulTypedName",
														"src": "9059:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "diff",
														"nativeSrc": "9065:4:17",
														"nodeType": "YulTypedName",
														"src": "9065:4:17",
														"type": ""
													}
												],
												"src": "9025:128:17"
											},
											{
												"body": {
													"nativeSrc": "9332:177:17",
													"nodeType": "YulBlock",
													"src": "9332:177:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9349:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "9349:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9360:2:17",
																		"nodeType": "YulLiteral",
																		"src": "9360:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9342:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "9342:6:17"
																},
																"nativeSrc": "9342:21:17",
																"nodeType": "YulFunctionCall",
																"src": "9342:21:17"
															},
															"nativeSrc": "9342:21:17",
															"nodeType": "YulExpressionStatement",
															"src": "9342:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9383:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "9383:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9394:2:17",
																				"nodeType": "YulLiteral",
																				"src": "9394:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9379:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "9379:3:17"
																		},
																		"nativeSrc": "9379:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "9379:18:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9399:2:17",
																		"nodeType": "YulLiteral",
																		"src": "9399:2:17",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9372:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "9372:6:17"
																},
																"nativeSrc": "9372:30:17",
																"nodeType": "YulFunctionCall",
																"src": "9372:30:17"
															},
															"nativeSrc": "9372:30:17",
															"nodeType": "YulExpressionStatement",
															"src": "9372:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9422:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "9422:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9433:2:17",
																				"nodeType": "YulLiteral",
																				"src": "9433:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9418:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "9418:3:17"
																		},
																		"nativeSrc": "9418:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "9418:18:17"
																	},
																	{
																		"hexValue": "536c69707061676520746f6c6572616e6365206578636565646564",
																		"kind": "string",
																		"nativeSrc": "9438:29:17",
																		"nodeType": "YulLiteral",
																		"src": "9438:29:17",
																		"type": "",
																		"value": "Slippage tolerance exceeded"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9411:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "9411:6:17"
																},
																"nativeSrc": "9411:57:17",
																"nodeType": "YulFunctionCall",
																"src": "9411:57:17"
															},
															"nativeSrc": "9411:57:17",
															"nodeType": "YulExpressionStatement",
															"src": "9411:57:17"
														},
														{
															"nativeSrc": "9477:26:17",
															"nodeType": "YulAssignment",
															"src": "9477:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9489:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "9489:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9500:2:17",
																		"nodeType": "YulLiteral",
																		"src": "9500:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9485:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "9485:3:17"
																},
																"nativeSrc": "9485:18:17",
																"nodeType": "YulFunctionCall",
																"src": "9485:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9477:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "9477:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_361d91cf655db75c726bec8a3cf71c20e42a2572c8d3e4485f3abe41657f4b10__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9158:351:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9309:9:17",
														"nodeType": "YulTypedName",
														"src": "9309:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9323:4:17",
														"nodeType": "YulTypedName",
														"src": "9323:4:17",
														"type": ""
													}
												],
												"src": "9158:351:17"
											},
											{
												"body": {
													"nativeSrc": "9688:172:17",
													"nodeType": "YulBlock",
													"src": "9688:172:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9705:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "9705:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9716:2:17",
																		"nodeType": "YulLiteral",
																		"src": "9716:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9698:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "9698:6:17"
																},
																"nativeSrc": "9698:21:17",
																"nodeType": "YulFunctionCall",
																"src": "9698:21:17"
															},
															"nativeSrc": "9698:21:17",
															"nodeType": "YulExpressionStatement",
															"src": "9698:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9739:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "9739:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9750:2:17",
																				"nodeType": "YulLiteral",
																				"src": "9750:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9735:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "9735:3:17"
																		},
																		"nativeSrc": "9735:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "9735:18:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9755:2:17",
																		"nodeType": "YulLiteral",
																		"src": "9755:2:17",
																		"type": "",
																		"value": "22"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9728:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "9728:6:17"
																},
																"nativeSrc": "9728:30:17",
																"nodeType": "YulFunctionCall",
																"src": "9728:30:17"
															},
															"nativeSrc": "9728:30:17",
															"nodeType": "YulExpressionStatement",
															"src": "9728:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "9778:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "9778:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "9789:2:17",
																				"nodeType": "YulLiteral",
																				"src": "9789:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "9774:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "9774:3:17"
																		},
																		"nativeSrc": "9774:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "9774:18:17"
																	},
																	{
																		"hexValue": "496e73756666696369656e74206c6971756964697479",
																		"kind": "string",
																		"nativeSrc": "9794:24:17",
																		"nodeType": "YulLiteral",
																		"src": "9794:24:17",
																		"type": "",
																		"value": "Insufficient liquidity"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "9767:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "9767:6:17"
																},
																"nativeSrc": "9767:52:17",
																"nodeType": "YulFunctionCall",
																"src": "9767:52:17"
															},
															"nativeSrc": "9767:52:17",
															"nodeType": "YulExpressionStatement",
															"src": "9767:52:17"
														},
														{
															"nativeSrc": "9828:26:17",
															"nodeType": "YulAssignment",
															"src": "9828:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "9840:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "9840:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "9851:2:17",
																		"nodeType": "YulLiteral",
																		"src": "9851:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9836:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "9836:3:17"
																},
																"nativeSrc": "9836:18:17",
																"nodeType": "YulFunctionCall",
																"src": "9836:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "9828:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "9828:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9514:346:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "9665:9:17",
														"nodeType": "YulTypedName",
														"src": "9665:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "9679:4:17",
														"nodeType": "YulTypedName",
														"src": "9679:4:17",
														"type": ""
													}
												],
												"src": "9514:346:17"
											},
											{
												"body": {
													"nativeSrc": "9913:77:17",
													"nodeType": "YulBlock",
													"src": "9913:77:17",
													"statements": [
														{
															"nativeSrc": "9923:16:17",
															"nodeType": "YulAssignment",
															"src": "9923:16:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9934:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "9934:1:17"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "9937:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "9937:1:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "9930:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "9930:3:17"
																},
																"nativeSrc": "9930:9:17",
																"nodeType": "YulFunctionCall",
																"src": "9930:9:17"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nativeSrc": "9923:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "9923:3:17"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "9962:22:17",
																"nodeType": "YulBlock",
																"src": "9962:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "9964:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "9964:16:17"
																			},
																			"nativeSrc": "9964:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "9964:18:17"
																		},
																		"nativeSrc": "9964:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "9964:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "9954:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "9954:1:17"
																	},
																	{
																		"name": "sum",
																		"nativeSrc": "9957:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "9957:3:17"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nativeSrc": "9951:2:17",
																	"nodeType": "YulIdentifier",
																	"src": "9951:2:17"
																},
																"nativeSrc": "9951:10:17",
																"nodeType": "YulFunctionCall",
																"src": "9951:10:17"
															},
															"nativeSrc": "9948:36:17",
															"nodeType": "YulIf",
															"src": "9948:36:17"
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nativeSrc": "9865:125:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "9896:1:17",
														"nodeType": "YulTypedName",
														"src": "9896:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "9899:1:17",
														"nodeType": "YulTypedName",
														"src": "9899:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nativeSrc": "9905:3:17",
														"nodeType": "YulTypedName",
														"src": "9905:3:17",
														"type": ""
													}
												],
												"src": "9865:125:17"
											},
											{
												"body": {
													"nativeSrc": "10169:228:17",
													"nodeType": "YulBlock",
													"src": "10169:228:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10186:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "10186:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10197:2:17",
																		"nodeType": "YulLiteral",
																		"src": "10197:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10179:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "10179:6:17"
																},
																"nativeSrc": "10179:21:17",
																"nodeType": "YulFunctionCall",
																"src": "10179:21:17"
															},
															"nativeSrc": "10179:21:17",
															"nodeType": "YulExpressionStatement",
															"src": "10179:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10220:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "10220:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10231:2:17",
																				"nodeType": "YulLiteral",
																				"src": "10231:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10216:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "10216:3:17"
																		},
																		"nativeSrc": "10216:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "10216:18:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10236:2:17",
																		"nodeType": "YulLiteral",
																		"src": "10236:2:17",
																		"type": "",
																		"value": "38"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10209:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "10209:6:17"
																},
																"nativeSrc": "10209:30:17",
																"nodeType": "YulFunctionCall",
																"src": "10209:30:17"
															},
															"nativeSrc": "10209:30:17",
															"nodeType": "YulExpressionStatement",
															"src": "10209:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10259:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "10259:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10270:2:17",
																				"nodeType": "YulLiteral",
																				"src": "10270:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10255:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "10255:3:17"
																		},
																		"nativeSrc": "10255:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "10255:18:17"
																	},
																	{
																		"hexValue": "546f6b656e20616d6f756e74206d757374206265206772656174657220746861",
																		"kind": "string",
																		"nativeSrc": "10275:34:17",
																		"nodeType": "YulLiteral",
																		"src": "10275:34:17",
																		"type": "",
																		"value": "Token amount must be greater tha"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10248:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "10248:6:17"
																},
																"nativeSrc": "10248:62:17",
																"nodeType": "YulFunctionCall",
																"src": "10248:62:17"
															},
															"nativeSrc": "10248:62:17",
															"nodeType": "YulExpressionStatement",
															"src": "10248:62:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10330:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "10330:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10341:2:17",
																				"nodeType": "YulLiteral",
																				"src": "10341:2:17",
																				"type": "",
																				"value": "96"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10326:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "10326:3:17"
																		},
																		"nativeSrc": "10326:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "10326:18:17"
																	},
																	{
																		"hexValue": "6e207a65726f",
																		"kind": "string",
																		"nativeSrc": "10346:8:17",
																		"nodeType": "YulLiteral",
																		"src": "10346:8:17",
																		"type": "",
																		"value": "n zero"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10319:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "10319:6:17"
																},
																"nativeSrc": "10319:36:17",
																"nodeType": "YulFunctionCall",
																"src": "10319:36:17"
															},
															"nativeSrc": "10319:36:17",
															"nodeType": "YulExpressionStatement",
															"src": "10319:36:17"
														},
														{
															"nativeSrc": "10364:27:17",
															"nodeType": "YulAssignment",
															"src": "10364:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10376:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "10376:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10387:3:17",
																		"nodeType": "YulLiteral",
																		"src": "10387:3:17",
																		"type": "",
																		"value": "128"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10372:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "10372:3:17"
																},
																"nativeSrc": "10372:19:17",
																"nodeType": "YulFunctionCall",
																"src": "10372:19:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10364:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "10364:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_1a4430203dcf8abbbd3446dbfc36d404c15a36b152eee41d8f82843f3bcf306f__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "9995:402:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10146:9:17",
														"nodeType": "YulTypedName",
														"src": "10146:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10160:4:17",
														"nodeType": "YulTypedName",
														"src": "10160:4:17",
														"type": ""
													}
												],
												"src": "9995:402:17"
											},
											{
												"body": {
													"nativeSrc": "10576:168:17",
													"nodeType": "YulBlock",
													"src": "10576:168:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10593:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "10593:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10604:2:17",
																		"nodeType": "YulLiteral",
																		"src": "10604:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10586:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "10586:6:17"
																},
																"nativeSrc": "10586:21:17",
																"nodeType": "YulFunctionCall",
																"src": "10586:21:17"
															},
															"nativeSrc": "10586:21:17",
															"nodeType": "YulExpressionStatement",
															"src": "10586:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10627:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "10627:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10638:2:17",
																				"nodeType": "YulLiteral",
																				"src": "10638:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10623:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "10623:3:17"
																		},
																		"nativeSrc": "10623:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "10623:18:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10643:2:17",
																		"nodeType": "YulLiteral",
																		"src": "10643:2:17",
																		"type": "",
																		"value": "18"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10616:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "10616:6:17"
																},
																"nativeSrc": "10616:30:17",
																"nodeType": "YulFunctionCall",
																"src": "10616:30:17"
															},
															"nativeSrc": "10616:30:17",
															"nodeType": "YulExpressionStatement",
															"src": "10616:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "10666:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "10666:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "10677:2:17",
																				"nodeType": "YulLiteral",
																				"src": "10677:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "10662:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "10662:3:17"
																		},
																		"nativeSrc": "10662:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "10662:18:17"
																	},
																	{
																		"hexValue": "496e76616c696420706f6f6c207374617465",
																		"kind": "string",
																		"nativeSrc": "10682:20:17",
																		"nodeType": "YulLiteral",
																		"src": "10682:20:17",
																		"type": "",
																		"value": "Invalid pool state"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "10655:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "10655:6:17"
																},
																"nativeSrc": "10655:48:17",
																"nodeType": "YulFunctionCall",
																"src": "10655:48:17"
															},
															"nativeSrc": "10655:48:17",
															"nodeType": "YulExpressionStatement",
															"src": "10655:48:17"
														},
														{
															"nativeSrc": "10712:26:17",
															"nodeType": "YulAssignment",
															"src": "10712:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "10724:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "10724:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "10735:2:17",
																		"nodeType": "YulLiteral",
																		"src": "10735:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "10720:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "10720:3:17"
																},
																"nativeSrc": "10720:18:17",
																"nodeType": "YulFunctionCall",
																"src": "10720:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "10712:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "10712:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_33478ef0b103c4282d20f292429d8895d67f7b692c5602e5085240f8efab8cb9__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "10402:342:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "10553:9:17",
														"nodeType": "YulTypedName",
														"src": "10553:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "10567:4:17",
														"nodeType": "YulTypedName",
														"src": "10567:4:17",
														"type": ""
													}
												],
												"src": "10402:342:17"
											},
											{
												"body": {
													"nativeSrc": "10801:116:17",
													"nodeType": "YulBlock",
													"src": "10801:116:17",
													"statements": [
														{
															"nativeSrc": "10811:20:17",
															"nodeType": "YulAssignment",
															"src": "10811:20:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "10826:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "10826:1:17"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "10829:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "10829:1:17"
																	}
																],
																"functionName": {
																	"name": "mul",
																	"nativeSrc": "10822:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "10822:3:17"
																},
																"nativeSrc": "10822:9:17",
																"nodeType": "YulFunctionCall",
																"src": "10822:9:17"
															},
															"variableNames": [
																{
																	"name": "product",
																	"nativeSrc": "10811:7:17",
																	"nodeType": "YulIdentifier",
																	"src": "10811:7:17"
																}
															]
														},
														{
															"body": {
																"nativeSrc": "10889:22:17",
																"nodeType": "YulBlock",
																"src": "10889:22:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nativeSrc": "10891:16:17",
																				"nodeType": "YulIdentifier",
																				"src": "10891:16:17"
																			},
																			"nativeSrc": "10891:18:17",
																			"nodeType": "YulFunctionCall",
																			"src": "10891:18:17"
																		},
																		"nativeSrc": "10891:18:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "10891:18:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "x",
																						"nativeSrc": "10860:1:17",
																						"nodeType": "YulIdentifier",
																						"src": "10860:1:17"
																					}
																				],
																				"functionName": {
																					"name": "iszero",
																					"nativeSrc": "10853:6:17",
																					"nodeType": "YulIdentifier",
																					"src": "10853:6:17"
																				},
																				"nativeSrc": "10853:9:17",
																				"nodeType": "YulFunctionCall",
																				"src": "10853:9:17"
																			},
																			{
																				"arguments": [
																					{
																						"name": "y",
																						"nativeSrc": "10867:1:17",
																						"nodeType": "YulIdentifier",
																						"src": "10867:1:17"
																					},
																					{
																						"arguments": [
																							{
																								"name": "product",
																								"nativeSrc": "10874:7:17",
																								"nodeType": "YulIdentifier",
																								"src": "10874:7:17"
																							},
																							{
																								"name": "x",
																								"nativeSrc": "10883:1:17",
																								"nodeType": "YulIdentifier",
																								"src": "10883:1:17"
																							}
																						],
																						"functionName": {
																							"name": "div",
																							"nativeSrc": "10870:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "10870:3:17"
																						},
																						"nativeSrc": "10870:15:17",
																						"nodeType": "YulFunctionCall",
																						"src": "10870:15:17"
																					}
																				],
																				"functionName": {
																					"name": "eq",
																					"nativeSrc": "10864:2:17",
																					"nodeType": "YulIdentifier",
																					"src": "10864:2:17"
																				},
																				"nativeSrc": "10864:22:17",
																				"nodeType": "YulFunctionCall",
																				"src": "10864:22:17"
																			}
																		],
																		"functionName": {
																			"name": "or",
																			"nativeSrc": "10850:2:17",
																			"nodeType": "YulIdentifier",
																			"src": "10850:2:17"
																		},
																		"nativeSrc": "10850:37:17",
																		"nodeType": "YulFunctionCall",
																		"src": "10850:37:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10843:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "10843:6:17"
																},
																"nativeSrc": "10843:45:17",
																"nodeType": "YulFunctionCall",
																"src": "10843:45:17"
															},
															"nativeSrc": "10840:71:17",
															"nodeType": "YulIf",
															"src": "10840:71:17"
														}
													]
												},
												"name": "checked_mul_t_uint256",
												"nativeSrc": "10749:168:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10780:1:17",
														"nodeType": "YulTypedName",
														"src": "10780:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10783:1:17",
														"nodeType": "YulTypedName",
														"src": "10783:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "product",
														"nativeSrc": "10789:7:17",
														"nodeType": "YulTypedName",
														"src": "10789:7:17",
														"type": ""
													}
												],
												"src": "10749:168:17"
											},
											{
												"body": {
													"nativeSrc": "10968:171:17",
													"nodeType": "YulBlock",
													"src": "10968:171:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "10999:111:17",
																"nodeType": "YulBlock",
																"src": "10999:111:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "11020:1:17",
																					"nodeType": "YulLiteral",
																					"src": "11020:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "11027:3:17",
																							"nodeType": "YulLiteral",
																							"src": "11027:3:17",
																							"type": "",
																							"value": "224"
																						},
																						{
																							"kind": "number",
																							"nativeSrc": "11032:10:17",
																							"nodeType": "YulLiteral",
																							"src": "11032:10:17",
																							"type": "",
																							"value": "0x4e487b71"
																						}
																					],
																					"functionName": {
																						"name": "shl",
																						"nativeSrc": "11023:3:17",
																						"nodeType": "YulIdentifier",
																						"src": "11023:3:17"
																					},
																					"nativeSrc": "11023:20:17",
																					"nodeType": "YulFunctionCall",
																					"src": "11023:20:17"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "11013:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "11013:6:17"
																			},
																			"nativeSrc": "11013:31:17",
																			"nodeType": "YulFunctionCall",
																			"src": "11013:31:17"
																		},
																		"nativeSrc": "11013:31:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "11013:31:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "11064:1:17",
																					"nodeType": "YulLiteral",
																					"src": "11064:1:17",
																					"type": "",
																					"value": "4"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11067:4:17",
																					"nodeType": "YulLiteral",
																					"src": "11067:4:17",
																					"type": "",
																					"value": "0x12"
																				}
																			],
																			"functionName": {
																				"name": "mstore",
																				"nativeSrc": "11057:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "11057:6:17"
																			},
																			"nativeSrc": "11057:15:17",
																			"nodeType": "YulFunctionCall",
																			"src": "11057:15:17"
																		},
																		"nativeSrc": "11057:15:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "11057:15:17"
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "11092:1:17",
																					"nodeType": "YulLiteral",
																					"src": "11092:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "11095:4:17",
																					"nodeType": "YulLiteral",
																					"src": "11095:4:17",
																					"type": "",
																					"value": "0x24"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "11085:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "11085:6:17"
																			},
																			"nativeSrc": "11085:15:17",
																			"nodeType": "YulFunctionCall",
																			"src": "11085:15:17"
																		},
																		"nativeSrc": "11085:15:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "11085:15:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nativeSrc": "10988:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "10988:1:17"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "10981:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "10981:6:17"
																},
																"nativeSrc": "10981:9:17",
																"nodeType": "YulFunctionCall",
																"src": "10981:9:17"
															},
															"nativeSrc": "10978:132:17",
															"nodeType": "YulIf",
															"src": "10978:132:17"
														},
														{
															"nativeSrc": "11119:14:17",
															"nodeType": "YulAssignment",
															"src": "11119:14:17",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nativeSrc": "11128:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "11128:1:17"
																	},
																	{
																		"name": "y",
																		"nativeSrc": "11131:1:17",
																		"nodeType": "YulIdentifier",
																		"src": "11131:1:17"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nativeSrc": "11124:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "11124:3:17"
																},
																"nativeSrc": "11124:9:17",
																"nodeType": "YulFunctionCall",
																"src": "11124:9:17"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nativeSrc": "11119:1:17",
																	"nodeType": "YulIdentifier",
																	"src": "11119:1:17"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nativeSrc": "10922:217:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nativeSrc": "10953:1:17",
														"nodeType": "YulTypedName",
														"src": "10953:1:17",
														"type": ""
													},
													{
														"name": "y",
														"nativeSrc": "10956:1:17",
														"nodeType": "YulTypedName",
														"src": "10956:1:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nativeSrc": "10962:1:17",
														"nodeType": "YulTypedName",
														"src": "10962:1:17",
														"type": ""
													}
												],
												"src": "10922:217:17"
											},
											{
												"body": {
													"nativeSrc": "11318:173:17",
													"nodeType": "YulBlock",
													"src": "11318:173:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11335:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "11335:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11346:2:17",
																		"nodeType": "YulLiteral",
																		"src": "11346:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11328:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "11328:6:17"
																},
																"nativeSrc": "11328:21:17",
																"nodeType": "YulFunctionCall",
																"src": "11328:21:17"
															},
															"nativeSrc": "11328:21:17",
															"nodeType": "YulExpressionStatement",
															"src": "11328:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11369:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "11369:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11380:2:17",
																				"nodeType": "YulLiteral",
																				"src": "11380:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11365:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "11365:3:17"
																		},
																		"nativeSrc": "11365:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "11365:18:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11385:2:17",
																		"nodeType": "YulLiteral",
																		"src": "11385:2:17",
																		"type": "",
																		"value": "23"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11358:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "11358:6:17"
																},
																"nativeSrc": "11358:30:17",
																"nodeType": "YulFunctionCall",
																"src": "11358:30:17"
															},
															"nativeSrc": "11358:30:17",
															"nodeType": "YulExpressionStatement",
															"src": "11358:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11408:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "11408:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11419:2:17",
																				"nodeType": "YulLiteral",
																				"src": "11419:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11404:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "11404:3:17"
																		},
																		"nativeSrc": "11404:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "11404:18:17"
																	},
																	{
																		"hexValue": "496e73756666696369656e742045544820616d6f756e74",
																		"kind": "string",
																		"nativeSrc": "11424:25:17",
																		"nodeType": "YulLiteral",
																		"src": "11424:25:17",
																		"type": "",
																		"value": "Insufficient ETH amount"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11397:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "11397:6:17"
																},
																"nativeSrc": "11397:53:17",
																"nodeType": "YulFunctionCall",
																"src": "11397:53:17"
															},
															"nativeSrc": "11397:53:17",
															"nodeType": "YulExpressionStatement",
															"src": "11397:53:17"
														},
														{
															"nativeSrc": "11459:26:17",
															"nodeType": "YulAssignment",
															"src": "11459:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11471:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "11471:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11482:2:17",
																		"nodeType": "YulLiteral",
																		"src": "11482:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11467:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "11467:3:17"
																},
																"nativeSrc": "11467:18:17",
																"nodeType": "YulFunctionCall",
																"src": "11467:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11459:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "11459:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_e13bed7f8aeefd33ee70192a57e4073346ec44f058c4968b39d9c85f63742e91__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11144:347:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11295:9:17",
														"nodeType": "YulTypedName",
														"src": "11295:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11309:4:17",
														"nodeType": "YulTypedName",
														"src": "11309:4:17",
														"type": ""
													}
												],
												"src": "11144:347:17"
											},
											{
												"body": {
													"nativeSrc": "11604:101:17",
													"nodeType": "YulBlock",
													"src": "11604:101:17",
													"statements": [
														{
															"nativeSrc": "11614:26:17",
															"nodeType": "YulAssignment",
															"src": "11614:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11626:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "11626:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11637:2:17",
																		"nodeType": "YulLiteral",
																		"src": "11637:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "11622:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "11622:3:17"
																},
																"nativeSrc": "11622:18:17",
																"nodeType": "YulFunctionCall",
																"src": "11622:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "11614:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "11614:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11656:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "11656:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "11671:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "11671:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11679:18:17",
																				"nodeType": "YulLiteral",
																				"src": "11679:18:17",
																				"type": "",
																				"value": "0xffffffffffffffff"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "11667:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "11667:3:17"
																		},
																		"nativeSrc": "11667:31:17",
																		"nodeType": "YulFunctionCall",
																		"src": "11667:31:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11649:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "11649:6:17"
																},
																"nativeSrc": "11649:50:17",
																"nodeType": "YulFunctionCall",
																"src": "11649:50:17"
															},
															"nativeSrc": "11649:50:17",
															"nodeType": "YulExpressionStatement",
															"src": "11649:50:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed",
												"nativeSrc": "11496:209:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11573:9:17",
														"nodeType": "YulTypedName",
														"src": "11573:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "11584:6:17",
														"nodeType": "YulTypedName",
														"src": "11584:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11595:4:17",
														"nodeType": "YulTypedName",
														"src": "11595:4:17",
														"type": ""
													}
												],
												"src": "11496:209:17"
											},
											{
												"body": {
													"nativeSrc": "11884:166:17",
													"nodeType": "YulBlock",
													"src": "11884:166:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "11901:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "11901:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11912:2:17",
																		"nodeType": "YulLiteral",
																		"src": "11912:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11894:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "11894:6:17"
																},
																"nativeSrc": "11894:21:17",
																"nodeType": "YulFunctionCall",
																"src": "11894:21:17"
															},
															"nativeSrc": "11894:21:17",
															"nodeType": "YulExpressionStatement",
															"src": "11894:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11935:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "11935:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11946:2:17",
																				"nodeType": "YulLiteral",
																				"src": "11946:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11931:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "11931:3:17"
																		},
																		"nativeSrc": "11931:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "11931:18:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "11951:2:17",
																		"nodeType": "YulLiteral",
																		"src": "11951:2:17",
																		"type": "",
																		"value": "16"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11924:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "11924:6:17"
																},
																"nativeSrc": "11924:30:17",
																"nodeType": "YulFunctionCall",
																"src": "11924:30:17"
															},
															"nativeSrc": "11924:30:17",
															"nodeType": "YulExpressionStatement",
															"src": "11924:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "11974:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "11974:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "11985:2:17",
																				"nodeType": "YulLiteral",
																				"src": "11985:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "11970:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "11970:3:17"
																		},
																		"nativeSrc": "11970:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "11970:18:17"
																	},
																	{
																		"hexValue": "4e6f74206f776e6572206f66204e4654",
																		"kind": "string",
																		"nativeSrc": "11990:18:17",
																		"nodeType": "YulLiteral",
																		"src": "11990:18:17",
																		"type": "",
																		"value": "Not owner of NFT"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "11963:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "11963:6:17"
																},
																"nativeSrc": "11963:46:17",
																"nodeType": "YulFunctionCall",
																"src": "11963:46:17"
															},
															"nativeSrc": "11963:46:17",
															"nodeType": "YulExpressionStatement",
															"src": "11963:46:17"
														},
														{
															"nativeSrc": "12018:26:17",
															"nodeType": "YulAssignment",
															"src": "12018:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12030:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "12030:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12041:2:17",
																		"nodeType": "YulLiteral",
																		"src": "12041:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12026:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "12026:3:17"
																},
																"nativeSrc": "12026:18:17",
																"nodeType": "YulFunctionCall",
																"src": "12026:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12018:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "12018:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_c4a43c611968ec7565a8db7967f80ea40a0b06b4f2b3ed8286dbd1bbd126f721__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "11710:340:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "11861:9:17",
														"nodeType": "YulTypedName",
														"src": "11861:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "11875:4:17",
														"nodeType": "YulTypedName",
														"src": "11875:4:17",
														"type": ""
													}
												],
												"src": "11710:340:17"
											},
											{
												"body": {
													"nativeSrc": "12229:170:17",
													"nodeType": "YulBlock",
													"src": "12229:170:17",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12246:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "12246:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12257:2:17",
																		"nodeType": "YulLiteral",
																		"src": "12257:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12239:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "12239:6:17"
																},
																"nativeSrc": "12239:21:17",
																"nodeType": "YulFunctionCall",
																"src": "12239:21:17"
															},
															"nativeSrc": "12239:21:17",
															"nodeType": "YulExpressionStatement",
															"src": "12239:21:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12280:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "12280:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12291:2:17",
																				"nodeType": "YulLiteral",
																				"src": "12291:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12276:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "12276:3:17"
																		},
																		"nativeSrc": "12276:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "12276:18:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12296:2:17",
																		"nodeType": "YulLiteral",
																		"src": "12296:2:17",
																		"type": "",
																		"value": "20"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12269:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "12269:6:17"
																},
																"nativeSrc": "12269:30:17",
																"nodeType": "YulFunctionCall",
																"src": "12269:30:17"
															},
															"nativeSrc": "12269:30:17",
															"nodeType": "YulExpressionStatement",
															"src": "12269:30:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "12319:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "12319:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "12330:2:17",
																				"nodeType": "YulLiteral",
																				"src": "12330:2:17",
																				"type": "",
																				"value": "64"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "12315:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "12315:3:17"
																		},
																		"nativeSrc": "12315:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "12315:18:17"
																	},
																	{
																		"hexValue": "496e73756666696369656e742062616c616e6365",
																		"kind": "string",
																		"nativeSrc": "12335:22:17",
																		"nodeType": "YulLiteral",
																		"src": "12335:22:17",
																		"type": "",
																		"value": "Insufficient balance"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12308:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "12308:6:17"
																},
																"nativeSrc": "12308:50:17",
																"nodeType": "YulFunctionCall",
																"src": "12308:50:17"
															},
															"nativeSrc": "12308:50:17",
															"nodeType": "YulExpressionStatement",
															"src": "12308:50:17"
														},
														{
															"nativeSrc": "12367:26:17",
															"nodeType": "YulAssignment",
															"src": "12367:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12379:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "12379:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12390:2:17",
																		"nodeType": "YulLiteral",
																		"src": "12390:2:17",
																		"type": "",
																		"value": "96"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12375:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "12375:3:17"
																},
																"nativeSrc": "12375:18:17",
																"nodeType": "YulFunctionCall",
																"src": "12375:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12367:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "12367:4:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "12055:344:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12206:9:17",
														"nodeType": "YulTypedName",
														"src": "12206:9:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12220:4:17",
														"nodeType": "YulTypedName",
														"src": "12220:4:17",
														"type": ""
													}
												],
												"src": "12055:344:17"
											},
											{
												"body": {
													"nativeSrc": "12505:102:17",
													"nodeType": "YulBlock",
													"src": "12505:102:17",
													"statements": [
														{
															"nativeSrc": "12515:26:17",
															"nodeType": "YulAssignment",
															"src": "12515:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12527:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "12527:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12538:2:17",
																		"nodeType": "YulLiteral",
																		"src": "12538:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12523:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "12523:3:17"
																},
																"nativeSrc": "12523:18:17",
																"nodeType": "YulFunctionCall",
																"src": "12523:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12515:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "12515:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12557:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "12557:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "12572:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "12572:6:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "12588:3:17",
																								"nodeType": "YulLiteral",
																								"src": "12588:3:17",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "12593:1:17",
																								"nodeType": "YulLiteral",
																								"src": "12593:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "12584:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "12584:3:17"
																						},
																						"nativeSrc": "12584:11:17",
																						"nodeType": "YulFunctionCall",
																						"src": "12584:11:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "12597:1:17",
																						"nodeType": "YulLiteral",
																						"src": "12597:1:17",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "12580:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "12580:3:17"
																				},
																				"nativeSrc": "12580:19:17",
																				"nodeType": "YulFunctionCall",
																				"src": "12580:19:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "12568:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "12568:3:17"
																		},
																		"nativeSrc": "12568:32:17",
																		"nodeType": "YulFunctionCall",
																		"src": "12568:32:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12550:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "12550:6:17"
																},
																"nativeSrc": "12550:51:17",
																"nodeType": "YulFunctionCall",
																"src": "12550:51:17"
															},
															"nativeSrc": "12550:51:17",
															"nodeType": "YulExpressionStatement",
															"src": "12550:51:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "12404:203:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12474:9:17",
														"nodeType": "YulTypedName",
														"src": "12474:9:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12485:6:17",
														"nodeType": "YulTypedName",
														"src": "12485:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12496:4:17",
														"nodeType": "YulTypedName",
														"src": "12496:4:17",
														"type": ""
													}
												],
												"src": "12404:203:17"
											},
											{
												"body": {
													"nativeSrc": "12693:103:17",
													"nodeType": "YulBlock",
													"src": "12693:103:17",
													"statements": [
														{
															"body": {
																"nativeSrc": "12739:16:17",
																"nodeType": "YulBlock",
																"src": "12739:16:17",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "12748:1:17",
																					"nodeType": "YulLiteral",
																					"src": "12748:1:17",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "12751:1:17",
																					"nodeType": "YulLiteral",
																					"src": "12751:1:17",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "12741:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "12741:6:17"
																			},
																			"nativeSrc": "12741:12:17",
																			"nodeType": "YulFunctionCall",
																			"src": "12741:12:17"
																		},
																		"nativeSrc": "12741:12:17",
																		"nodeType": "YulExpressionStatement",
																		"src": "12741:12:17"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "12714:7:17",
																				"nodeType": "YulIdentifier",
																				"src": "12714:7:17"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "12723:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "12723:9:17"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "12710:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "12710:3:17"
																		},
																		"nativeSrc": "12710:23:17",
																		"nodeType": "YulFunctionCall",
																		"src": "12710:23:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12735:2:17",
																		"nodeType": "YulLiteral",
																		"src": "12735:2:17",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "12706:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "12706:3:17"
																},
																"nativeSrc": "12706:32:17",
																"nodeType": "YulFunctionCall",
																"src": "12706:32:17"
															},
															"nativeSrc": "12703:52:17",
															"nodeType": "YulIf",
															"src": "12703:52:17"
														},
														{
															"nativeSrc": "12764:26:17",
															"nodeType": "YulAssignment",
															"src": "12764:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12780:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "12780:9:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "12774:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "12774:5:17"
																},
																"nativeSrc": "12774:16:17",
																"nodeType": "YulFunctionCall",
																"src": "12774:16:17"
															},
															"variableNames": [
																{
																	"name": "value0",
																	"nativeSrc": "12764:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "12764:6:17"
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes32_fromMemory",
												"nativeSrc": "12612:184:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12659:9:17",
														"nodeType": "YulTypedName",
														"src": "12659:9:17",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "12670:7:17",
														"nodeType": "YulTypedName",
														"src": "12670:7:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "12682:6:17",
														"nodeType": "YulTypedName",
														"src": "12682:6:17",
														"type": ""
													}
												],
												"src": "12612:184:17"
											},
											{
												"body": {
													"nativeSrc": "12930:145:17",
													"nodeType": "YulBlock",
													"src": "12930:145:17",
													"statements": [
														{
															"nativeSrc": "12940:26:17",
															"nodeType": "YulAssignment",
															"src": "12940:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12952:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "12952:9:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "12963:2:17",
																		"nodeType": "YulLiteral",
																		"src": "12963:2:17",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "12948:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "12948:3:17"
																},
																"nativeSrc": "12948:18:17",
																"nodeType": "YulFunctionCall",
																"src": "12948:18:17"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "12940:4:17",
																	"nodeType": "YulIdentifier",
																	"src": "12940:4:17"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "12982:9:17",
																		"nodeType": "YulIdentifier",
																		"src": "12982:9:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "12997:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "12997:6:17"
																			},
																			{
																				"arguments": [
																					{
																						"arguments": [
																							{
																								"kind": "number",
																								"nativeSrc": "13013:3:17",
																								"nodeType": "YulLiteral",
																								"src": "13013:3:17",
																								"type": "",
																								"value": "160"
																							},
																							{
																								"kind": "number",
																								"nativeSrc": "13018:1:17",
																								"nodeType": "YulLiteral",
																								"src": "13018:1:17",
																								"type": "",
																								"value": "1"
																							}
																						],
																						"functionName": {
																							"name": "shl",
																							"nativeSrc": "13009:3:17",
																							"nodeType": "YulIdentifier",
																							"src": "13009:3:17"
																						},
																						"nativeSrc": "13009:11:17",
																						"nodeType": "YulFunctionCall",
																						"src": "13009:11:17"
																					},
																					{
																						"kind": "number",
																						"nativeSrc": "13022:1:17",
																						"nodeType": "YulLiteral",
																						"src": "13022:1:17",
																						"type": "",
																						"value": "1"
																					}
																				],
																				"functionName": {
																					"name": "sub",
																					"nativeSrc": "13005:3:17",
																					"nodeType": "YulIdentifier",
																					"src": "13005:3:17"
																				},
																				"nativeSrc": "13005:19:17",
																				"nodeType": "YulFunctionCall",
																				"src": "13005:19:17"
																			}
																		],
																		"functionName": {
																			"name": "and",
																			"nativeSrc": "12993:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "12993:3:17"
																		},
																		"nativeSrc": "12993:32:17",
																		"nodeType": "YulFunctionCall",
																		"src": "12993:32:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "12975:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "12975:6:17"
																},
																"nativeSrc": "12975:51:17",
																"nodeType": "YulFunctionCall",
																"src": "12975:51:17"
															},
															"nativeSrc": "12975:51:17",
															"nodeType": "YulExpressionStatement",
															"src": "12975:51:17"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "13046:9:17",
																				"nodeType": "YulIdentifier",
																				"src": "13046:9:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13057:2:17",
																				"nodeType": "YulLiteral",
																				"src": "13057:2:17",
																				"type": "",
																				"value": "32"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13042:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "13042:3:17"
																		},
																		"nativeSrc": "13042:18:17",
																		"nodeType": "YulFunctionCall",
																		"src": "13042:18:17"
																	},
																	{
																		"name": "value1",
																		"nativeSrc": "13062:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "13062:6:17"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13035:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "13035:6:17"
																},
																"nativeSrc": "13035:34:17",
																"nodeType": "YulFunctionCall",
																"src": "13035:34:17"
															},
															"nativeSrc": "13035:34:17",
															"nodeType": "YulExpressionStatement",
															"src": "13035:34:17"
														}
													]
												},
												"name": "abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed",
												"nativeSrc": "12801:274:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "12891:9:17",
														"nodeType": "YulTypedName",
														"src": "12891:9:17",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "12902:6:17",
														"nodeType": "YulTypedName",
														"src": "12902:6:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "12910:6:17",
														"nodeType": "YulTypedName",
														"src": "12910:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "12921:4:17",
														"nodeType": "YulTypedName",
														"src": "12921:4:17",
														"type": ""
													}
												],
												"src": "12801:274:17"
											},
											{
												"body": {
													"nativeSrc": "13217:164:17",
													"nodeType": "YulBlock",
													"src": "13217:164:17",
													"statements": [
														{
															"nativeSrc": "13227:27:17",
															"nodeType": "YulVariableDeclaration",
															"src": "13227:27:17",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "13247:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "13247:6:17"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "13241:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "13241:5:17"
																},
																"nativeSrc": "13241:13:17",
																"nodeType": "YulFunctionCall",
																"src": "13241:13:17"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "13231:6:17",
																	"nodeType": "YulTypedName",
																	"src": "13231:6:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13269:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "13269:3:17"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value0",
																				"nativeSrc": "13278:6:17",
																				"nodeType": "YulIdentifier",
																				"src": "13278:6:17"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "13286:4:17",
																				"nodeType": "YulLiteral",
																				"src": "13286:4:17",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "13274:3:17",
																			"nodeType": "YulIdentifier",
																			"src": "13274:3:17"
																		},
																		"nativeSrc": "13274:17:17",
																		"nodeType": "YulFunctionCall",
																		"src": "13274:17:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13293:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "13293:6:17"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "13263:5:17",
																	"nodeType": "YulIdentifier",
																	"src": "13263:5:17"
																},
																"nativeSrc": "13263:37:17",
																"nodeType": "YulFunctionCall",
																"src": "13263:37:17"
															},
															"nativeSrc": "13263:37:17",
															"nodeType": "YulExpressionStatement",
															"src": "13263:37:17"
														},
														{
															"nativeSrc": "13309:26:17",
															"nodeType": "YulVariableDeclaration",
															"src": "13309:26:17",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "13323:3:17",
																		"nodeType": "YulIdentifier",
																		"src": "13323:3:17"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "13328:6:17",
																		"nodeType": "YulIdentifier",
																		"src": "13328:6:17"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "13319:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "13319:3:17"
																},
																"nativeSrc": "13319:16:17",
																"nodeType": "YulFunctionCall",
																"src": "13319:16:17"
															},
															"variables": [
																{
																	"name": "_1",
																	"nativeSrc": "13313:2:17",
																	"nodeType": "YulTypedName",
																	"src": "13313:2:17",
																	"type": ""
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "_1",
																		"nativeSrc": "13351:2:17",
																		"nodeType": "YulIdentifier",
																		"src": "13351:2:17"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "13355:1:17",
																		"nodeType": "YulLiteral",
																		"src": "13355:1:17",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "13344:6:17",
																	"nodeType": "YulIdentifier",
																	"src": "13344:6:17"
																},
																"nativeSrc": "13344:13:17",
																"nodeType": "YulFunctionCall",
																"src": "13344:13:17"
															},
															"nativeSrc": "13344:13:17",
															"nodeType": "YulExpressionStatement",
															"src": "13344:13:17"
														},
														{
															"nativeSrc": "13366:9:17",
															"nodeType": "YulAssignment",
															"src": "13366:9:17",
															"value": {
																"name": "_1",
																"nativeSrc": "13373:2:17",
																"nodeType": "YulIdentifier",
																"src": "13373:2:17"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "13366:3:17",
																	"nodeType": "YulIdentifier",
																	"src": "13366:3:17"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "13080:301:17",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "13193:3:17",
														"nodeType": "YulTypedName",
														"src": "13193:3:17",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "13198:6:17",
														"nodeType": "YulTypedName",
														"src": "13198:6:17",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "13209:3:17",
														"nodeType": "YulTypedName",
														"src": "13209:3:17",
														"type": ""
													}
												],
												"src": "13080:301:17"
											}
										]
									},
									"contents": "{\n    { }\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        if iszero(eq(value, and(value, shl(224, 0xffffffff)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function validator_revert_address(value)\n    {\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256_t_uint256_t_uint256__to_t_uint256_t_uint256_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n    }\n    function abi_encode_tuple_t_contract$_IERC20Upgradeable_$876__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := 0\n        value := calldataload(headStart)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_addresst_bytes_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let offset := calldataload(add(headStart, 32))\n        if gt(offset, 0xffffffffffffffff) { revert(0, 0) }\n        let _1 := add(headStart, offset)\n        if iszero(slt(add(_1, 0x1f), dataEnd)) { revert(0, 0) }\n        let length := calldataload(_1)\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(length, 0x1f), not(31)), 63), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, length)\n        if gt(add(add(_1, length), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_1, 32), length)\n        mstore(add(add(memPtr, length), 32), 0)\n        value1 := memPtr\n    }\n    function abi_encode_tuple_t_uint256_t_uint256__to_t_uint256_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        let length := mload(value0)\n        mstore(add(headStart, 32), length)\n        mcopy(add(headStart, 64), add(value0, 32), length)\n        mstore(add(add(headStart, length), 64), 0)\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_decode_tuple_t_addresst_uint256t_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := 0\n        value_1 := calldataload(add(headStart, 32))\n        value1 := value_1\n        let value_2 := 0\n        value_2 := calldataload(add(headStart, 64))\n        value2 := value_2\n    }\n    function abi_decode_tuple_t_addresst_addresst_addresst_addresst_addresst_address(headStart, dataEnd) -> value0, value1, value2, value3, value4, value5\n    {\n        if slt(sub(dataEnd, headStart), 192) { revert(0, 0) }\n        let value := calldataload(headStart)\n        validator_revert_address(value)\n        value0 := value\n        let value_1 := calldataload(add(headStart, 32))\n        validator_revert_address(value_1)\n        value1 := value_1\n        let value_2 := calldataload(add(headStart, 64))\n        validator_revert_address(value_2)\n        value2 := value_2\n        let value_3 := calldataload(add(headStart, 96))\n        validator_revert_address(value_3)\n        value3 := value_3\n        let value_4 := calldataload(add(headStart, 128))\n        validator_revert_address(value_4)\n        value4 := value_4\n        let value_5 := calldataload(add(headStart, 160))\n        validator_revert_address(value_5)\n        value5 := value_5\n    }\n    function abi_encode_tuple_t_contract$_IERC721Upgradeable_$992__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_6f2e13a40c8d5acc1536a801b548e60d12893ddab9aa84254a90ac0e27771d7b__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ETH amount must be greater than \")\n        mstore(add(headStart, 96), \"zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        validator_revert_address(value)\n        value0 := value\n    }\n    function abi_encode_tuple_t_stringliteral_58daa56f77f4b6beb09b0245242e50eda058fa68d4bc8e521ae0632363e71e1a__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 25)\n        mstore(add(headStart, 64), \"NFT not owned by contract\")\n        tail := add(headStart, 96)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        diff := sub(x, y)\n        if gt(diff, x) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_361d91cf655db75c726bec8a3cf71c20e42a2572c8d3e4485f3abe41657f4b10__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 27)\n        mstore(add(headStart, 64), \"Slippage tolerance exceeded\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 22)\n        mstore(add(headStart, 64), \"Insufficient liquidity\")\n        tail := add(headStart, 96)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        sum := add(x, y)\n        if gt(x, sum) { panic_error_0x11() }\n    }\n    function abi_encode_tuple_t_stringliteral_1a4430203dcf8abbbd3446dbfc36d404c15a36b152eee41d8f82843f3bcf306f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Token amount must be greater tha\")\n        mstore(add(headStart, 96), \"n zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_33478ef0b103c4282d20f292429d8895d67f7b692c5602e5085240f8efab8cb9__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Invalid pool state\")\n        tail := add(headStart, 96)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        product := mul(x, y)\n        if iszero(or(iszero(x), eq(y, div(product, x)))) { panic_error_0x11() }\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(0, 0x24)\n        }\n        r := div(x, y)\n    }\n    function abi_encode_tuple_t_stringliteral_e13bed7f8aeefd33ee70192a57e4073346ec44f058c4968b39d9c85f63742e91__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"Insufficient ETH amount\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_rational_1_by_1__to_t_uint64__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xffffffffffffffff))\n    }\n    function abi_encode_tuple_t_stringliteral_c4a43c611968ec7565a8db7967f80ea40a0b06b4f2b3ed8286dbd1bbd126f721__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Not owner of NFT\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"Insufficient balance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_bytes32_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := mload(headStart)\n    }\n    function abi_encode_tuple_t_address_t_bytes32__to_t_address_t_bytes32__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos, value0) -> end\n    {\n        let length := mload(value0)\n        mcopy(pos, add(value0, 0x20), length)\n        let _1 := add(pos, length)\n        mstore(_1, 0)\n        end := _1\n    }\n}",
									"id": 17,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {
								"636": [
									{
										"length": 32,
										"start": 6291
									},
									{
										"length": 32,
										"start": 6332
									},
									{
										"length": 32,
										"start": 6685
									}
								]
							},
							"linkReferences": {},
							"object": "6080604052600436106101d0575f3560e01c806356688700116100fd578063cc2a9a5b11610092578063e15cc8da11610062578063e15cc8da1461056d578063e63ab1e91461058c578063f14210a6146105ac578063f72c0d8b146105cb575f80fd5b8063cc2a9a5b146104f1578063d547741f14610510578063d9a37ad21461052f578063da0696831461054e575f80fd5b8063a201ccf6116100cd578063a201ccf61461044e578063a217fddf14610482578063ad3cb1cc14610495578063c7088313146104d2575f80fd5b806356688700146103e55780635c975abb146103f85780638456cb591461041b57806391d148541461042f575f80fd5b80632f2ff15d1161017357806349f0346e1161014357806349f0346e146103985780634f1ef286146103ab57806351422e97146103be57806352d1902d146103d1575f80fd5b80632f2ff15d1461031057806334aab0641461032f57806336568abe146103655780633f4ba83a14610384575f80fd5b80630b0fd47e116101ae5780630b0fd47e14610248578063242f05511461029c578063248a9ca3146102dd5780632d11c58a146102fc575f80fd5b806301ffc9a7146101d4578063023245d71461020857806306b091f914610229575b5f80fd5b3480156101df575f80fd5b506101f36101ee366004611d5a565b6105fe565b60405190151581526020015b60405180910390f35b348015610213575f80fd5b50610227610222366004611d81565b610634565b005b348015610234575f80fd5b50610227610243366004611dac565b6106a3565b348015610253575f80fd5b50610281610262366004611dd6565b600260208190525f918252604090912080546001820154919092015483565b604080519384526020840192909252908201526060016101ff565b3480156102a7575f80fd5b506102cf7f77e60b99a50d27fb027f6912a507d956105b4148adab27a86d235c8bcca8fa2f81565b6040519081526020016101ff565b3480156102e8575f80fd5b506102cf6102f7366004611d81565b610721565b348015610307575f80fd5b506102cf600381565b34801561031b575f80fd5b5061022761032a366004611df1565b610741565b34801561033a575f80fd5b505f5461034d906001600160a01b031681565b6040516001600160a01b0390911681526020016101ff565b348015610370575f80fd5b5061022761037f366004611df1565b61075d565b34801561038f575f80fd5b50610227610795565b6102276103a6366004611e1f565b6107b7565b6102276103b9366004611e53565b6109b8565b6102276103cc366004611dac565b6109d7565b3480156103dc575f80fd5b506102cf610b63565b6102cf6103f3366004611dac565b610b7e565b348015610403575f80fd5b505f8051602061224b8339815191525460ff166101f3565b348015610426575f80fd5b50610227610e14565b34801561043a575f80fd5b506101f3610449366004611df1565b610e33565b348015610459575f80fd5b5061046d610468366004611dac565b610e69565b604080519283526020830191909152016101ff565b34801561048d575f80fd5b506102cf5f81565b3480156104a0575f80fd5b506104c5604051806040016040528060058152602001640352e302e360dc1b81525081565b6040516101ff9190611f19565b3480156104dd575f80fd5b506102276104ec366004611f4e565b611059565b3480156104fc575f80fd5b5061022761050b366004611f80565b6110a5565b34801561051b575f80fd5b5061022761052a366004611df1565b61126f565b34801561053a575f80fd5b50610227610549366004611e1f565b61128b565b348015610559575f80fd5b5060015461034d906001600160a01b031681565b348015610578575f80fd5b50610227610587366004611f4e565b611443565b348015610597575f80fd5b506102cf5f8051602061220b83398151915281565b3480156105b7575f80fd5b506102276105c6366004611d81565b6115ff565b3480156105d6575f80fd5b506102cf7f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e381565b5f6001600160e01b03198216637965db0b60e01b148061062e57506301ffc9a760e01b6001600160e01b03198316145b92915050565b5f61063e8161167a565b600154604051632142170760e11b81526001600160a01b03909116906342842e0e9061067290309033908790600401611ffe565b5f604051808303815f87803b158015610689575f80fd5b505af115801561069b573d5f803e3d5ffd5b505050505050565b5f6106ad8161167a565b60405163a9059cbb60e01b8152336004820152602481018390526001600160a01b0384169063a9059cbb906044016020604051808303815f875af11580156106f7573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061071b9190612022565b50505050565b5f9081525f8051602061222b833981519152602052604090206001015490565b61074a82610721565b6107538161167a565b61071b8383611684565b6001600160a01b03811633146107865760405163334bd91960e11b815260040160405180910390fd5b6107908282611725565b505050565b5f8051602061220b8339815191526107ac8161167a565b6107b461179e565b50565b6107bf6117fd565b5f34116107e75760405162461bcd60e51b81526004016107de90612041565b60405180910390fd5b6001546040516331a9108f60e11b81526004810184905230916001600160a01b031690636352211e90602401602060405180830381865afa15801561082e573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906108529190612085565b6001600160a01b0316146108a85760405162461bcd60e51b815260206004820152601960248201527f4e4654206e6f74206f776e656420627920636f6e74726163740000000000000060448201526064016107de565b5f6108be346108b781476120b4565b600161182f565b9050818110156108e05760405162461bcd60e51b81526004016107de906120c7565b604051339082156108fc029083905f818181858888f1935050505015801561090a573d5f803e3d5ffd5b50600154604051632142170760e11b81526001600160a01b03909116906342842e0e9061093f90309033908890600401611ffe565b5f604051808303815f87803b158015610956575f80fd5b505af1158015610968573d5f803e3d5ffd5b50506001546040518481528693506001600160a01b03909116915033907f9181665db8d8d5fcce186f7b2cfebe8fbcdc3a003664bbfce2e790f57b076e65906020015b60405180910390a4505050565b6109c0611888565b6109c98261192c565b6109d38282611956565b5050565b6109df6117fd565b5f34116109fe5760405162461bcd60e51b81526004016107de90612041565b6001600160a01b0382165f908152600260205260409020600181015415801590610a285750805415155b610a445760405162461bcd60e51b81526004016107de906120fe565b5f610a57348360010154845f015461182f565b905082811015610a795760405162461bcd60e51b81526004016107de906120c7565b34826001015f828254610a8c919061212e565b90915550508154819083905f90610aa49084906120b4565b909155505060405163a9059cbb60e01b8152336004820152602481018290526001600160a01b0385169063a9059cbb906044016020604051808303815f875af1158015610af3573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610b179190612022565b50604080518281523460208201526001600160a01b0386169133917f30b60ee4dc75c0fb04420331b13e9ad7f8ff8fc51eac9c97d36fb20ccbe09d66910160405180910390a350505050565b5f610b6c611a12565b505f805160206121eb83398151915290565b5f610b876117fd565b5f8211610ba65760405162461bcd60e51b81526004016107de90612141565b5f3411610bc55760405162461bcd60e51b81526004016107de90612041565b6040516323b872dd60e01b81526001600160a01b038416906323b872dd90610bf590339030908790600401611ffe565b6020604051808303815f875af1158015610c11573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610c359190612022565b506001600160a01b0383165f9081526002602081905260408220908101549091908103610c6c575082815534600182015582610d82565b5f8260010154118015610c7f5750815415155b610cc05760405162461bcd60e51b8152602060048201526012602482015271496e76616c696420706f6f6c20737461746560701b60448201526064016107de565b5f825f0154858460010154610cd59190612187565b610cdf919061219e565b905080341015610d315760405162461bcd60e51b815260206004820152601760248201527f496e73756666696369656e742045544820616d6f756e7400000000000000000060448201526064016107de565b84835f015f828254610d43919061212e565b9250508190555034836001015f828254610d5d919061212e565b909155505082546002840154610d74908790612187565b610d7e919061219e565b9150505b80826002015f828254610d95919061212e565b9091555050335f90815260038301602052604081208054839290610dba90849061212e565b9091555050604080518581523460208201529081018290526001600160a01b0386169033907f4a1a2a6176e9646d9e3157f7c2ab3c499f18337c0b0828cfb28e0a61de4a11f79060600160405180910390a3949350505050565b5f8051602061220b833981519152610e2b8161167a565b6107b4611a5b565b5f9182525f8051602061222b833981519152602090815260408084206001600160a01b0393909316845291905290205460ff1690565b5f80610e736117fd565b6001600160a01b0384165f9081526002602090815260408083203384526003810190925290912054841115610eba5760405162461bcd60e51b81526004016107de906120fe565b60028101548154610ecc908690612187565b610ed6919061219e565b92508060020154848260010154610eed9190612187565b610ef7919061219e565b915082815f015f828254610f0b91906120b4565b9250508190555081816001015f828254610f2591906120b4565b9250508190555083816002015f828254610f3f91906120b4565b9091555050335f90815260038201602052604081208054869290610f649084906120b4565b909155505060405163a9059cbb60e01b8152336004820152602481018490526001600160a01b0386169063a9059cbb906044016020604051808303815f875af1158015610fb3573d5f803e3d5ffd5b505050506040513d601f19601f82011682018060405250810190610fd79190612022565b50604051339083156108fc029084905f818181858888f19350505050158015611002573d5f803e3d5ffd5b5060408051848152602081018490529081018590526001600160a01b0386169033907fbc7d19d505c7ec4db83f3b51f19fb98c4c8a99922e7839d1ee608dfbee29501b9060600160405180910390a3509250929050565b7f77e60b99a50d27fb027f6912a507d956105b4148adab27a86d235c8bcca8fa2f6110838161167a565b506001600160a01b039092165f90815260026020526040902090815560010155565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a008054600160401b810460ff16159067ffffffffffffffff165f811580156110ea5750825b90505f8267ffffffffffffffff1660011480156111065750303b155b905081158015611114575080155b156111325760405163f92ee8a960e01b815260040160405180910390fd5b845467ffffffffffffffff19166001178555831561115c57845460ff60401b1916600160401b1785555b611164611aa3565b61116c611ab3565b611174611ab3565b61117e5f8c611684565b506111965f8051602061220b8339815191528b611684565b506111c17f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e38a611684565b506111ec7f77e60b99a50d27fb027f6912a507d956105b4148adab27a86d235c8bcca8fa2f89611684565b505f80546001600160a01b03808a166001600160a01b0319928316179092556001805492891692909116919091179055831561126257845460ff60401b19168555604051600181527fc7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d29060200160405180910390a15b5050505050505050505050565b61127882610721565b6112818161167a565b61071b8383611725565b6112936117fd565b6001546040516331a9108f60e11b81526004810184905233916001600160a01b031690636352211e90602401602060405180830381865afa1580156112da573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906112fe9190612085565b6001600160a01b0316146113475760405162461bcd60e51b815260206004820152601060248201526f139bdd081bdddb995c881bd98813919560821b60448201526064016107de565b5f6113546001804761182f565b9050818110156113765760405162461bcd60e51b81526004016107de906120c7565b600154604051632142170760e11b81526001600160a01b03909116906342842e0e906113aa90339030908890600401611ffe565b5f604051808303815f87803b1580156113c1575f80fd5b505af11580156113d3573d5f803e3d5ffd5b505060405133925083156108fc02915083905f818181858888f19350505050158015611401573d5f803e3d5ffd5b5060015460405182815284916001600160a01b03169033907f9181665db8d8d5fcce186f7b2cfebe8fbcdc3a003664bbfce2e790f57b076e65906020016109ab565b61144b6117fd565b5f821161146a5760405162461bcd60e51b81526004016107de90612141565b6001600160a01b0383165f9081526002602052604090206001810154158015906114945750805415155b6114b05760405162461bcd60e51b81526004016107de906120fe565b5f6114c384835f0154846001015461182f565b9050828110156114e55760405162461bcd60e51b81526004016107de906120c7565b83825f015f8282546114f7919061212e565b9250508190555080826001015f82825461151191906120b4565b90915550506040516323b872dd60e01b81526001600160a01b038616906323b872dd9061154690339030908990600401611ffe565b6020604051808303815f875af1158015611562573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906115869190612022565b50604051339082156108fc029083905f818181858888f193505050501580156115b1573d5f803e3d5ffd5b5060408051858152602081018390526001600160a01b0387169133917f30b60ee4dc75c0fb04420331b13e9ad7f8ff8fc51eac9c97d36fb20ccbe09d66910160405180910390a35050505050565b5f6116098161167a565b814710156116505760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b60448201526064016107de565b604051339083156108fc029084905f818181858888f19350505050158015610790573d5f803e3d5ffd5b6107b48133611abb565b5f5f8051602061222b83398151915261169d8484610e33565b61171c575f848152602082815260408083206001600160a01b03871684529091529020805460ff191660011790556116d23390565b6001600160a01b0316836001600160a01b0316857f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a4600191505061062e565b5f91505061062e565b5f5f8051602061222b83398151915261173e8484610e33565b1561171c575f848152602082815260408083206001600160a01b0387168085529252808320805460ff1916905551339287917ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b9190a4600191505061062e565b6117a6611af4565b5f8051602061224b833981519152805460ff191681557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a150565b5f8051602061224b8339815191525460ff161561182d5760405163d93c066560e01b815260040160405180910390fd5b565b5f8061183e60036103e86120b4565b6118489086612187565b90505f6118558483612187565b90505f82611865876103e8612187565b61186f919061212e565b905061187b818361219e565b93505050505b9392505050565b306001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016148061190e57507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166119025f805160206121eb833981519152546001600160a01b031690565b6001600160a01b031614155b1561182d5760405163703e46dd60e11b815260040160405180910390fd5b7f189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e36109d38161167a565b816001600160a01b03166352d1902d6040518163ffffffff1660e01b8152600401602060405180830381865afa9250505080156119b0575060408051601f3d908101601f191682019092526119ad918101906121bd565b60015b6119d857604051634c9c8ce360e01b81526001600160a01b03831660048201526024016107de565b5f805160206121eb8339815191528114611a0857604051632a87526960e21b8152600481018290526024016107de565b6107908383611b23565b306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461182d5760405163703e46dd60e11b815260040160405180910390fd5b611a636117fd565b5f8051602061224b833981519152805460ff191660011781557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258336117df565b611aab611b78565b61182d611bc1565b61182d611b78565b611ac58282610e33565b6109d35760405163e2517d3f60e01b81526001600160a01b0382166004820152602481018390526044016107de565b5f8051602061224b8339815191525460ff1661182d57604051638dfc202b60e01b815260040160405180910390fd5b611b2c82611be1565b6040516001600160a01b038316907fbc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b905f90a2805115611b70576107908282611c44565b6109d3611cb6565b7ff0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a0054600160401b900460ff1661182d57604051631afcd79f60e31b815260040160405180910390fd5b611bc9611b78565b5f8051602061224b833981519152805460ff19169055565b806001600160a01b03163b5f03611c1657604051634c9c8ce360e01b81526001600160a01b03821660048201526024016107de565b5f805160206121eb83398151915280546001600160a01b0319166001600160a01b0392909216919091179055565b60605f80846001600160a01b031684604051611c6091906121d4565b5f60405180830381855af49150503d805f8114611c98576040519150601f19603f3d011682016040523d82523d5f602084013e611c9d565b606091505b5091509150611cad858383611cd5565b95945050505050565b341561182d5760405163b398979f60e01b815260040160405180910390fd5b606082611cea57611ce582611d31565b611881565b8151158015611d0157506001600160a01b0384163b155b15611d2a57604051639996b31560e01b81526001600160a01b03851660048201526024016107de565b5080611881565b805115611d415780518082602001fd5b604051630a12f52160e11b815260040160405180910390fd5b5f60208284031215611d6a575f80fd5b81356001600160e01b031981168114611881575f80fd5b5f60208284031215611d91575f80fd5b5035919050565b6001600160a01b03811681146107b4575f80fd5b5f8060408385031215611dbd575f80fd5b8235611dc881611d98565b946020939093013593505050565b5f60208284031215611de6575f80fd5b813561188181611d98565b5f8060408385031215611e02575f80fd5b823591506020830135611e1481611d98565b809150509250929050565b5f8060408385031215611e30575f80fd5b50508035926020909101359150565b634e487b7160e01b5f52604160045260245ffd5b5f8060408385031215611e64575f80fd5b8235611e6f81611d98565b9150602083013567ffffffffffffffff811115611e8a575f80fd5b8301601f81018513611e9a575f80fd5b803567ffffffffffffffff811115611eb457611eb4611e3f565b604051601f8201601f19908116603f0116810167ffffffffffffffff81118282101715611ee357611ee3611e3f565b604052818152828201602001871015611efa575f80fd5b816020840160208301375f602083830101528093505050509250929050565b602081525f82518060208401528060208501604085015e5f604082850101526040601f19601f83011684010191505092915050565b5f805f60608486031215611f60575f80fd5b8335611f6b81611d98565b95602085013595506040909401359392505050565b5f805f805f8060c08789031215611f95575f80fd5b8635611fa081611d98565b95506020870135611fb081611d98565b94506040870135611fc081611d98565b93506060870135611fd081611d98565b92506080870135611fe081611d98565b915060a0870135611ff081611d98565b809150509295509295509295565b6001600160a01b039384168152919092166020820152604081019190915260600190565b5f60208284031215612032575f80fd5b81518015158114611881575f80fd5b60208082526024908201527f45544820616d6f756e74206d7573742062652067726561746572207468616e206040820152637a65726f60e01b606082015260800190565b5f60208284031215612095575f80fd5b815161188181611d98565b634e487b7160e01b5f52601160045260245ffd5b8181038181111561062e5761062e6120a0565b6020808252601b908201527f536c69707061676520746f6c6572616e63652065786365656465640000000000604082015260600190565b602080825260169082015275496e73756666696369656e74206c697175696469747960501b604082015260600190565b8082018082111561062e5761062e6120a0565b60208082526026908201527f546f6b656e20616d6f756e74206d7573742062652067726561746572207468616040820152656e207a65726f60d01b606082015260800190565b808202811582820484141761062e5761062e6120a0565b5f826121b857634e487b7160e01b5f52601260045260245ffd5b500490565b5f602082840312156121cd575f80fd5b5051919050565b5f82518060208501845e5f92019182525091905056fe360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800cd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300a26469706673582212203f75604ee134227bbe63f608679c24b94c9ec4a391e502a1d117559bb5f0f07264736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1D0 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x56688700 GT PUSH2 0xFD JUMPI DUP1 PUSH4 0xCC2A9A5B GT PUSH2 0x92 JUMPI DUP1 PUSH4 0xE15CC8DA GT PUSH2 0x62 JUMPI DUP1 PUSH4 0xE15CC8DA EQ PUSH2 0x56D JUMPI DUP1 PUSH4 0xE63AB1E9 EQ PUSH2 0x58C JUMPI DUP1 PUSH4 0xF14210A6 EQ PUSH2 0x5AC JUMPI DUP1 PUSH4 0xF72C0D8B EQ PUSH2 0x5CB JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xCC2A9A5B EQ PUSH2 0x4F1 JUMPI DUP1 PUSH4 0xD547741F EQ PUSH2 0x510 JUMPI DUP1 PUSH4 0xD9A37AD2 EQ PUSH2 0x52F JUMPI DUP1 PUSH4 0xDA069683 EQ PUSH2 0x54E JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA201CCF6 GT PUSH2 0xCD JUMPI DUP1 PUSH4 0xA201CCF6 EQ PUSH2 0x44E JUMPI DUP1 PUSH4 0xA217FDDF EQ PUSH2 0x482 JUMPI DUP1 PUSH4 0xAD3CB1CC EQ PUSH2 0x495 JUMPI DUP1 PUSH4 0xC7088313 EQ PUSH2 0x4D2 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x56688700 EQ PUSH2 0x3E5 JUMPI DUP1 PUSH4 0x5C975ABB EQ PUSH2 0x3F8 JUMPI DUP1 PUSH4 0x8456CB59 EQ PUSH2 0x41B JUMPI DUP1 PUSH4 0x91D14854 EQ PUSH2 0x42F JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F2FF15D GT PUSH2 0x173 JUMPI DUP1 PUSH4 0x49F0346E GT PUSH2 0x143 JUMPI DUP1 PUSH4 0x49F0346E EQ PUSH2 0x398 JUMPI DUP1 PUSH4 0x4F1EF286 EQ PUSH2 0x3AB JUMPI DUP1 PUSH4 0x51422E97 EQ PUSH2 0x3BE JUMPI DUP1 PUSH4 0x52D1902D EQ PUSH2 0x3D1 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x2F2FF15D EQ PUSH2 0x310 JUMPI DUP1 PUSH4 0x34AAB064 EQ PUSH2 0x32F JUMPI DUP1 PUSH4 0x36568ABE EQ PUSH2 0x365 JUMPI DUP1 PUSH4 0x3F4BA83A EQ PUSH2 0x384 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xB0FD47E GT PUSH2 0x1AE JUMPI DUP1 PUSH4 0xB0FD47E EQ PUSH2 0x248 JUMPI DUP1 PUSH4 0x242F0551 EQ PUSH2 0x29C JUMPI DUP1 PUSH4 0x248A9CA3 EQ PUSH2 0x2DD JUMPI DUP1 PUSH4 0x2D11C58A EQ PUSH2 0x2FC JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x1D4 JUMPI DUP1 PUSH4 0x23245D7 EQ PUSH2 0x208 JUMPI DUP1 PUSH4 0x6B091F9 EQ PUSH2 0x229 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F3 PUSH2 0x1EE CALLDATASIZE PUSH1 0x4 PUSH2 0x1D5A JUMP JUMPDEST PUSH2 0x5FE JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x213 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x227 PUSH2 0x222 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D81 JUMP JUMPDEST PUSH2 0x634 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x234 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x227 PUSH2 0x243 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DAC JUMP JUMPDEST PUSH2 0x6A3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x253 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x281 PUSH2 0x262 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DD6 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH0 SWAP2 DUP3 MSTORE PUSH1 0x40 SWAP1 SWAP2 KECCAK256 DUP1 SLOAD PUSH1 0x1 DUP3 ADD SLOAD SWAP2 SWAP1 SWAP3 ADD SLOAD DUP4 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP4 DUP5 MSTORE PUSH1 0x20 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE SWAP1 DUP3 ADD MSTORE PUSH1 0x60 ADD PUSH2 0x1FF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2A7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CF PUSH32 0x77E60B99A50D27FB027F6912A507D956105B4148ADAB27A86D235C8BCCA8FA2F DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2E8 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CF PUSH2 0x2F7 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D81 JUMP JUMPDEST PUSH2 0x721 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x307 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CF PUSH1 0x3 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x31B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x227 PUSH2 0x32A CALLDATASIZE PUSH1 0x4 PUSH2 0x1DF1 JUMP JUMPDEST PUSH2 0x741 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x33A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 SLOAD PUSH2 0x34D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x1FF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x370 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x227 PUSH2 0x37F CALLDATASIZE PUSH1 0x4 PUSH2 0x1DF1 JUMP JUMPDEST PUSH2 0x75D JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x38F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x227 PUSH2 0x795 JUMP JUMPDEST PUSH2 0x227 PUSH2 0x3A6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E1F JUMP JUMPDEST PUSH2 0x7B7 JUMP JUMPDEST PUSH2 0x227 PUSH2 0x3B9 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E53 JUMP JUMPDEST PUSH2 0x9B8 JUMP JUMPDEST PUSH2 0x227 PUSH2 0x3CC CALLDATASIZE PUSH1 0x4 PUSH2 0x1DAC JUMP JUMPDEST PUSH2 0x9D7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3DC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CF PUSH2 0xB63 JUMP JUMPDEST PUSH2 0x2CF PUSH2 0x3F3 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DAC JUMP JUMPDEST PUSH2 0xB7E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x403 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x224B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF AND PUSH2 0x1F3 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x426 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x227 PUSH2 0xE14 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x43A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1F3 PUSH2 0x449 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DF1 JUMP JUMPDEST PUSH2 0xE33 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x459 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x46D PUSH2 0x468 CALLDATASIZE PUSH1 0x4 PUSH2 0x1DAC JUMP JUMPDEST PUSH2 0xE69 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE ADD PUSH2 0x1FF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x48D JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CF PUSH0 DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4A0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x4C5 PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x5 DUP2 MSTORE PUSH1 0x20 ADD PUSH5 0x352E302E3 PUSH1 0xDC SHL DUP2 MSTORE POP DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1FF SWAP2 SWAP1 PUSH2 0x1F19 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4DD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x227 PUSH2 0x4EC CALLDATASIZE PUSH1 0x4 PUSH2 0x1F4E JUMP JUMPDEST PUSH2 0x1059 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4FC JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x227 PUSH2 0x50B CALLDATASIZE PUSH1 0x4 PUSH2 0x1F80 JUMP JUMPDEST PUSH2 0x10A5 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x51B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x227 PUSH2 0x52A CALLDATASIZE PUSH1 0x4 PUSH2 0x1DF1 JUMP JUMPDEST PUSH2 0x126F JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x53A JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x227 PUSH2 0x549 CALLDATASIZE PUSH1 0x4 PUSH2 0x1E1F JUMP JUMPDEST PUSH2 0x128B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x559 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH2 0x34D SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x578 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x227 PUSH2 0x587 CALLDATASIZE PUSH1 0x4 PUSH2 0x1F4E JUMP JUMPDEST PUSH2 0x1443 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x597 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CF PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x220B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5B7 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x227 PUSH2 0x5C6 CALLDATASIZE PUSH1 0x4 PUSH2 0x1D81 JUMP JUMPDEST PUSH2 0x15FF JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x5D6 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2CF PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 DUP2 JUMP JUMPDEST PUSH0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP3 AND PUSH4 0x7965DB0B PUSH1 0xE0 SHL EQ DUP1 PUSH2 0x62E JUMPI POP PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP4 AND EQ JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x63E DUP2 PUSH2 0x167A JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x42842E0E SWAP1 PUSH2 0x672 SWAP1 ADDRESS SWAP1 CALLER SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x1FFE JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x689 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x69B JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x6AD DUP2 PUSH2 0x167A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x6F7 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x71B SWAP2 SWAP1 PUSH2 0x2022 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 SWAP1 DUP2 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x222B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 ADD SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x74A DUP3 PUSH2 0x721 JUMP JUMPDEST PUSH2 0x753 DUP2 PUSH2 0x167A JUMP JUMPDEST PUSH2 0x71B DUP4 DUP4 PUSH2 0x1684 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND CALLER EQ PUSH2 0x786 JUMPI PUSH1 0x40 MLOAD PUSH4 0x334BD919 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x790 DUP3 DUP3 PUSH2 0x1725 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x220B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x7AC DUP2 PUSH2 0x167A JUMP JUMPDEST PUSH2 0x7B4 PUSH2 0x179E JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x7BF PUSH2 0x17FD JUMP JUMPDEST PUSH0 CALLVALUE GT PUSH2 0x7E7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DE SWAP1 PUSH2 0x2041 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE ADDRESS SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x82E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x852 SWAP2 SWAP1 PUSH2 0x2085 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x8A8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x19 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4E4654206E6F74206F776E656420627920636F6E747261637400000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7DE JUMP JUMPDEST PUSH0 PUSH2 0x8BE CALLVALUE PUSH2 0x8B7 DUP2 SELFBALANCE PUSH2 0x20B4 JUMP JUMPDEST PUSH1 0x1 PUSH2 0x182F JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x8E0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DE SWAP1 PUSH2 0x20C7 JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x90A JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x42842E0E SWAP1 PUSH2 0x93F SWAP1 ADDRESS SWAP1 CALLER SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1FFE JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x956 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x968 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD DUP5 DUP2 MSTORE DUP7 SWAP4 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP2 POP CALLER SWAP1 PUSH32 0x9181665DB8D8D5FCCE186F7B2CFEBE8FBCDC3A003664BBFCE2E790F57B076E65 SWAP1 PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 POP POP POP JUMP JUMPDEST PUSH2 0x9C0 PUSH2 0x1888 JUMP JUMPDEST PUSH2 0x9C9 DUP3 PUSH2 0x192C JUMP JUMPDEST PUSH2 0x9D3 DUP3 DUP3 PUSH2 0x1956 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x9DF PUSH2 0x17FD JUMP JUMPDEST PUSH0 CALLVALUE GT PUSH2 0x9FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DE SWAP1 PUSH2 0x2041 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0xA28 JUMPI POP DUP1 SLOAD ISZERO ISZERO JUMPDEST PUSH2 0xA44 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DE SWAP1 PUSH2 0x20FE JUMP JUMPDEST PUSH0 PUSH2 0xA57 CALLVALUE DUP4 PUSH1 0x1 ADD SLOAD DUP5 PUSH0 ADD SLOAD PUSH2 0x182F JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0xA79 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DE SWAP1 PUSH2 0x20C7 JUMP JUMPDEST CALLVALUE DUP3 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xA8C SWAP2 SWAP1 PUSH2 0x212E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP2 SLOAD DUP2 SWAP1 DUP4 SWAP1 PUSH0 SWAP1 PUSH2 0xAA4 SWAP1 DUP5 SWAP1 PUSH2 0x20B4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xAF3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xB17 SWAP2 SWAP1 PUSH2 0x2022 JUMP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP3 DUP2 MSTORE CALLVALUE PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP2 CALLER SWAP2 PUSH32 0x30B60EE4DC75C0FB04420331B13E9AD7F8FF8FC51EAC9C97D36FB20CCBE09D66 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xB6C PUSH2 0x1A12 JUMP JUMPDEST POP PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x21EB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SWAP1 JUMP JUMPDEST PUSH0 PUSH2 0xB87 PUSH2 0x17FD JUMP JUMPDEST PUSH0 DUP3 GT PUSH2 0xBA6 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DE SWAP1 PUSH2 0x2141 JUMP JUMPDEST PUSH0 CALLVALUE GT PUSH2 0xBC5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DE SWAP1 PUSH2 0x2041 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0xBF5 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP8 SWAP1 PUSH1 0x4 ADD PUSH2 0x1FFE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xC11 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xC35 SWAP2 SWAP1 PUSH2 0x2022 JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP3 KECCAK256 SWAP1 DUP2 ADD SLOAD SWAP1 SWAP2 SWAP1 DUP2 SUB PUSH2 0xC6C JUMPI POP DUP3 DUP2 SSTORE CALLVALUE PUSH1 0x1 DUP3 ADD SSTORE DUP3 PUSH2 0xD82 JUMP JUMPDEST PUSH0 DUP3 PUSH1 0x1 ADD SLOAD GT DUP1 ISZERO PUSH2 0xC7F JUMPI POP DUP2 SLOAD ISZERO ISZERO JUMPDEST PUSH2 0xCC0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x496E76616C696420706F6F6C207374617465 PUSH1 0x70 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7DE JUMP JUMPDEST PUSH0 DUP3 PUSH0 ADD SLOAD DUP6 DUP5 PUSH1 0x1 ADD SLOAD PUSH2 0xCD5 SWAP2 SWAP1 PUSH2 0x2187 JUMP JUMPDEST PUSH2 0xCDF SWAP2 SWAP1 PUSH2 0x219E JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE LT ISZERO PUSH2 0xD31 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x17 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x496E73756666696369656E742045544820616D6F756E74000000000000000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7DE JUMP JUMPDEST DUP5 DUP4 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD43 SWAP2 SWAP1 PUSH2 0x212E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP CALLVALUE DUP4 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD5D SWAP2 SWAP1 PUSH2 0x212E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP DUP3 SLOAD PUSH1 0x2 DUP5 ADD SLOAD PUSH2 0xD74 SWAP1 DUP8 SWAP1 PUSH2 0x2187 JUMP JUMPDEST PUSH2 0xD7E SWAP2 SWAP1 PUSH2 0x219E JUMP JUMPDEST SWAP2 POP POP JUMPDEST DUP1 DUP3 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xD95 SWAP2 SWAP1 PUSH2 0x212E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP4 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0xDBA SWAP1 DUP5 SWAP1 PUSH2 0x212E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE CALLVALUE PUSH1 0x20 DUP3 ADD MSTORE SWAP1 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 CALLER SWAP1 PUSH32 0x4A1A2A6176E9646D9E3157F7C2AB3C499F18337C0B0828CFB28E0A61DE4A11F7 SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x220B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0xE2B DUP2 PUSH2 0x167A JUMP JUMPDEST PUSH2 0x7B4 PUSH2 0x1A5B JUMP JUMPDEST PUSH0 SWAP2 DUP3 MSTORE PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x222B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP5 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 SWAP1 SWAP4 AND DUP5 MSTORE SWAP2 SWAP1 MSTORE SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND SWAP1 JUMP JUMPDEST PUSH0 DUP1 PUSH2 0xE73 PUSH2 0x17FD JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 CALLER DUP5 MSTORE PUSH1 0x3 DUP2 ADD SWAP1 SWAP3 MSTORE SWAP1 SWAP2 KECCAK256 SLOAD DUP5 GT ISZERO PUSH2 0xEBA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DE SWAP1 PUSH2 0x20FE JUMP JUMPDEST PUSH1 0x2 DUP2 ADD SLOAD DUP2 SLOAD PUSH2 0xECC SWAP1 DUP7 SWAP1 PUSH2 0x2187 JUMP JUMPDEST PUSH2 0xED6 SWAP2 SWAP1 PUSH2 0x219E JUMP JUMPDEST SWAP3 POP DUP1 PUSH1 0x2 ADD SLOAD DUP5 DUP3 PUSH1 0x1 ADD SLOAD PUSH2 0xEED SWAP2 SWAP1 PUSH2 0x2187 JUMP JUMPDEST PUSH2 0xEF7 SWAP2 SWAP1 PUSH2 0x219E JUMP JUMPDEST SWAP2 POP DUP3 DUP2 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xF0B SWAP2 SWAP1 PUSH2 0x20B4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP2 DUP2 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xF25 SWAP2 SWAP1 PUSH2 0x20B4 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP4 DUP2 PUSH1 0x2 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0xF3F SWAP2 SWAP1 PUSH2 0x20B4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP CALLER PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x3 DUP3 ADD PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP7 SWAP3 SWAP1 PUSH2 0xF64 SWAP1 DUP5 SWAP1 PUSH2 0x20B4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH4 0xA9059CBB PUSH1 0xE0 SHL DUP2 MSTORE CALLER PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0xA9059CBB SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0xFB3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0xFD7 SWAP2 SWAP1 PUSH2 0x2022 JUMP JUMPDEST POP PUSH1 0x40 MLOAD CALLER SWAP1 DUP4 ISZERO PUSH2 0x8FC MUL SWAP1 DUP5 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1002 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP5 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 SWAP1 MSTORE SWAP1 DUP2 ADD DUP6 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 CALLER SWAP1 PUSH32 0xBC7D19D505C7EC4DB83F3B51F19FB98C4C8A99922E7839D1EE608DFBEE29501B SWAP1 PUSH1 0x60 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH32 0x77E60B99A50D27FB027F6912A507D956105B4148ADAB27A86D235C8BCCA8FA2F PUSH2 0x1083 DUP2 PUSH2 0x167A JUMP JUMPDEST POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SWAP1 DUP2 SSTORE PUSH1 0x1 ADD SSTORE JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 DUP1 SLOAD PUSH1 0x1 PUSH1 0x40 SHL DUP2 DIV PUSH1 0xFF AND ISZERO SWAP1 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH0 DUP2 ISZERO DUP1 ISZERO PUSH2 0x10EA JUMPI POP DUP3 JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH8 0xFFFFFFFFFFFFFFFF AND PUSH1 0x1 EQ DUP1 ISZERO PUSH2 0x1106 JUMPI POP ADDRESS EXTCODESIZE ISZERO JUMPDEST SWAP1 POP DUP2 ISZERO DUP1 ISZERO PUSH2 0x1114 JUMPI POP DUP1 ISZERO JUMPDEST ISZERO PUSH2 0x1132 JUMPI PUSH1 0x40 MLOAD PUSH4 0xF92EE8A9 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP5 SLOAD PUSH8 0xFFFFFFFFFFFFFFFF NOT AND PUSH1 0x1 OR DUP6 SSTORE DUP4 ISZERO PUSH2 0x115C JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND PUSH1 0x1 PUSH1 0x40 SHL OR DUP6 SSTORE JUMPDEST PUSH2 0x1164 PUSH2 0x1AA3 JUMP JUMPDEST PUSH2 0x116C PUSH2 0x1AB3 JUMP JUMPDEST PUSH2 0x1174 PUSH2 0x1AB3 JUMP JUMPDEST PUSH2 0x117E PUSH0 DUP13 PUSH2 0x1684 JUMP JUMPDEST POP PUSH2 0x1196 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x220B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP12 PUSH2 0x1684 JUMP JUMPDEST POP PUSH2 0x11C1 PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 DUP11 PUSH2 0x1684 JUMP JUMPDEST POP PUSH2 0x11EC PUSH32 0x77E60B99A50D27FB027F6912A507D956105B4148ADAB27A86D235C8BCCA8FA2F DUP10 PUSH2 0x1684 JUMP JUMPDEST POP PUSH0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP11 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP3 DUP4 AND OR SWAP1 SWAP3 SSTORE PUSH1 0x1 DUP1 SLOAD SWAP3 DUP10 AND SWAP3 SWAP1 SWAP2 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE DUP4 ISZERO PUSH2 0x1262 JUMPI DUP5 SLOAD PUSH1 0xFF PUSH1 0x40 SHL NOT AND DUP6 SSTORE PUSH1 0x40 MLOAD PUSH1 0x1 DUP2 MSTORE PUSH32 0xC7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2 SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 JUMPDEST POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x1278 DUP3 PUSH2 0x721 JUMP JUMPDEST PUSH2 0x1281 DUP2 PUSH2 0x167A JUMP JUMPDEST PUSH2 0x71B DUP4 DUP4 PUSH2 0x1725 JUMP JUMPDEST PUSH2 0x1293 PUSH2 0x17FD JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x31A9108F PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP5 SWAP1 MSTORE CALLER SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 PUSH4 0x6352211E SWAP1 PUSH1 0x24 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x12DA JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x12FE SWAP2 SWAP1 PUSH2 0x2085 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0x1347 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x10 PUSH1 0x24 DUP3 ADD MSTORE PUSH16 0x139BDD081BDDDB995C881BD988139195 PUSH1 0x82 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7DE JUMP JUMPDEST PUSH0 PUSH2 0x1354 PUSH1 0x1 DUP1 SELFBALANCE PUSH2 0x182F JUMP JUMPDEST SWAP1 POP DUP2 DUP2 LT ISZERO PUSH2 0x1376 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DE SWAP1 PUSH2 0x20C7 JUMP JUMPDEST PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH4 0x21421707 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x42842E0E SWAP1 PUSH2 0x13AA SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP9 SWAP1 PUSH1 0x4 ADD PUSH2 0x1FFE JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13C1 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x13D3 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP PUSH1 0x40 MLOAD CALLER SWAP3 POP DUP4 ISZERO PUSH2 0x8FC MUL SWAP2 POP DUP4 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x1401 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE DUP5 SWAP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 CALLER SWAP1 PUSH32 0x9181665DB8D8D5FCCE186F7B2CFEBE8FBCDC3A003664BBFCE2E790F57B076E65 SWAP1 PUSH1 0x20 ADD PUSH2 0x9AB JUMP JUMPDEST PUSH2 0x144B PUSH2 0x17FD JUMP JUMPDEST PUSH0 DUP3 GT PUSH2 0x146A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DE SWAP1 PUSH2 0x2141 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH0 SWAP1 DUP2 MSTORE PUSH1 0x2 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x1 DUP2 ADD SLOAD ISZERO DUP1 ISZERO SWAP1 PUSH2 0x1494 JUMPI POP DUP1 SLOAD ISZERO ISZERO JUMPDEST PUSH2 0x14B0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DE SWAP1 PUSH2 0x20FE JUMP JUMPDEST PUSH0 PUSH2 0x14C3 DUP5 DUP4 PUSH0 ADD SLOAD DUP5 PUSH1 0x1 ADD SLOAD PUSH2 0x182F JUMP JUMPDEST SWAP1 POP DUP3 DUP2 LT ISZERO PUSH2 0x14E5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7DE SWAP1 PUSH2 0x20C7 JUMP JUMPDEST DUP4 DUP3 PUSH0 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x14F7 SWAP2 SWAP1 PUSH2 0x212E JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP1 DUP3 PUSH1 0x1 ADD PUSH0 DUP3 DUP3 SLOAD PUSH2 0x1511 SWAP2 SWAP1 PUSH2 0x20B4 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD PUSH4 0x23B872DD PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND SWAP1 PUSH4 0x23B872DD SWAP1 PUSH2 0x1546 SWAP1 CALLER SWAP1 ADDRESS SWAP1 DUP10 SWAP1 PUSH1 0x4 ADD PUSH2 0x1FFE JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1562 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1586 SWAP2 SWAP1 PUSH2 0x2022 JUMP JUMPDEST POP PUSH1 0x40 MLOAD CALLER SWAP1 DUP3 ISZERO PUSH2 0x8FC MUL SWAP1 DUP4 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x15B1 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP6 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND SWAP2 CALLER SWAP2 PUSH32 0x30B60EE4DC75C0FB04420331B13E9AD7F8FF8FC51EAC9C97D36FB20CCBE09D66 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x1609 DUP2 PUSH2 0x167A JUMP JUMPDEST DUP2 SELFBALANCE LT ISZERO PUSH2 0x1650 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x496E73756666696369656E742062616C616E6365 PUSH1 0x60 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x7DE JUMP JUMPDEST PUSH1 0x40 MLOAD CALLER SWAP1 DUP4 ISZERO PUSH2 0x8FC MUL SWAP1 DUP5 SWAP1 PUSH0 DUP2 DUP2 DUP2 DUP6 DUP9 DUP9 CALL SWAP4 POP POP POP POP ISZERO DUP1 ISZERO PUSH2 0x790 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST PUSH2 0x7B4 DUP2 CALLER PUSH2 0x1ABB JUMP JUMPDEST PUSH0 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x222B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x169D DUP5 DUP5 PUSH2 0xE33 JUMP JUMPDEST PUSH2 0x171C JUMPI PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE SWAP1 SWAP2 MSTORE SWAP1 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR SWAP1 SSTORE PUSH2 0x16D2 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP6 PUSH32 0x2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x62E JUMP JUMPDEST PUSH0 SWAP2 POP POP PUSH2 0x62E JUMP JUMPDEST PUSH0 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x222B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE PUSH2 0x173E DUP5 DUP5 PUSH2 0xE33 JUMP JUMPDEST ISZERO PUSH2 0x171C JUMPI PUSH0 DUP5 DUP2 MSTORE PUSH1 0x20 DUP3 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP1 DUP6 MSTORE SWAP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE MLOAD CALLER SWAP3 DUP8 SWAP2 PUSH32 0xF6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B SWAP2 SWAP1 LOG4 PUSH1 0x1 SWAP2 POP POP PUSH2 0x62E JUMP JUMPDEST PUSH2 0x17A6 PUSH2 0x1AF4 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x224B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0xFF NOT AND DUP2 SSTORE PUSH32 0x5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA CALLER JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x224B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF AND ISZERO PUSH2 0x182D JUMPI PUSH1 0x40 MLOAD PUSH4 0xD93C0665 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH0 DUP1 PUSH2 0x183E PUSH1 0x3 PUSH2 0x3E8 PUSH2 0x20B4 JUMP JUMPDEST PUSH2 0x1848 SWAP1 DUP7 PUSH2 0x2187 JUMP JUMPDEST SWAP1 POP PUSH0 PUSH2 0x1855 DUP5 DUP4 PUSH2 0x2187 JUMP JUMPDEST SWAP1 POP PUSH0 DUP3 PUSH2 0x1865 DUP8 PUSH2 0x3E8 PUSH2 0x2187 JUMP JUMPDEST PUSH2 0x186F SWAP2 SWAP1 PUSH2 0x212E JUMP JUMPDEST SWAP1 POP PUSH2 0x187B DUP2 DUP4 PUSH2 0x219E JUMP JUMPDEST SWAP4 POP POP POP POP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ DUP1 PUSH2 0x190E JUMPI POP PUSH32 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x1902 PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x21EB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ ISZERO JUMPDEST ISZERO PUSH2 0x182D JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH32 0x189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3 PUSH2 0x9D3 DUP2 PUSH2 0x167A JUMP JUMPDEST DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x52D1902D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL SWAP3 POP POP POP DUP1 ISZERO PUSH2 0x19B0 JUMPI POP PUSH1 0x40 DUP1 MLOAD PUSH1 0x1F RETURNDATASIZE SWAP1 DUP2 ADD PUSH1 0x1F NOT AND DUP3 ADD SWAP1 SWAP3 MSTORE PUSH2 0x19AD SWAP2 DUP2 ADD SWAP1 PUSH2 0x21BD JUMP JUMPDEST PUSH1 0x1 JUMPDEST PUSH2 0x19D8 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7DE JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x21EB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP2 EQ PUSH2 0x1A08 JUMPI PUSH1 0x40 MLOAD PUSH4 0x2A875269 PUSH1 0xE2 SHL DUP2 MSTORE PUSH1 0x4 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x24 ADD PUSH2 0x7DE JUMP JUMPDEST PUSH2 0x790 DUP4 DUP4 PUSH2 0x1B23 JUMP JUMPDEST ADDRESS PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB PUSH32 0x0 AND EQ PUSH2 0x182D JUMPI PUSH1 0x40 MLOAD PUSH4 0x703E46DD PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1A63 PUSH2 0x17FD JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x224B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0xFF NOT AND PUSH1 0x1 OR DUP2 SSTORE PUSH32 0x62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258 CALLER PUSH2 0x17DF JUMP JUMPDEST PUSH2 0x1AAB PUSH2 0x1B78 JUMP JUMPDEST PUSH2 0x182D PUSH2 0x1BC1 JUMP JUMPDEST PUSH2 0x182D PUSH2 0x1B78 JUMP JUMPDEST PUSH2 0x1AC5 DUP3 DUP3 PUSH2 0xE33 JUMP JUMPDEST PUSH2 0x9D3 JUMPI PUSH1 0x40 MLOAD PUSH4 0xE2517D3F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x44 ADD PUSH2 0x7DE JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x224B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE SLOAD PUSH1 0xFF AND PUSH2 0x182D JUMPI PUSH1 0x40 MLOAD PUSH4 0x8DFC202B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1B2C DUP3 PUSH2 0x1BE1 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH32 0xBC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B SWAP1 PUSH0 SWAP1 LOG2 DUP1 MLOAD ISZERO PUSH2 0x1B70 JUMPI PUSH2 0x790 DUP3 DUP3 PUSH2 0x1C44 JUMP JUMPDEST PUSH2 0x9D3 PUSH2 0x1CB6 JUMP JUMPDEST PUSH32 0xF0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00 SLOAD PUSH1 0x1 PUSH1 0x40 SHL SWAP1 DIV PUSH1 0xFF AND PUSH2 0x182D JUMPI PUSH1 0x40 MLOAD PUSH4 0x1AFCD79F PUSH1 0xE3 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x1BC9 PUSH2 0x1B78 JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x224B DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0xFF NOT AND SWAP1 SSTORE JUMP JUMPDEST DUP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EXTCODESIZE PUSH0 SUB PUSH2 0x1C16 JUMPI PUSH1 0x40 MLOAD PUSH4 0x4C9C8CE3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7DE JUMP JUMPDEST PUSH0 DUP1 MLOAD PUSH1 0x20 PUSH2 0x21EB DUP4 CODECOPY DUP2 MLOAD SWAP2 MSTORE DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE JUMP JUMPDEST PUSH1 0x60 PUSH0 DUP1 DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x40 MLOAD PUSH2 0x1C60 SWAP2 SWAP1 PUSH2 0x21D4 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP6 GAS DELEGATECALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0x1C98 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0x1C9D JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP SWAP2 POP SWAP2 POP PUSH2 0x1CAD DUP6 DUP4 DUP4 PUSH2 0x1CD5 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST CALLVALUE ISZERO PUSH2 0x182D JUMPI PUSH1 0x40 MLOAD PUSH4 0xB398979F PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x60 DUP3 PUSH2 0x1CEA JUMPI PUSH2 0x1CE5 DUP3 PUSH2 0x1D31 JUMP JUMPDEST PUSH2 0x1881 JUMP JUMPDEST DUP2 MLOAD ISZERO DUP1 ISZERO PUSH2 0x1D01 JUMPI POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP5 AND EXTCODESIZE ISZERO JUMPDEST ISZERO PUSH2 0x1D2A JUMPI PUSH1 0x40 MLOAD PUSH4 0x9996B315 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 ADD PUSH2 0x7DE JUMP JUMPDEST POP DUP1 PUSH2 0x1881 JUMP JUMPDEST DUP1 MLOAD ISZERO PUSH2 0x1D41 JUMPI DUP1 MLOAD DUP1 DUP3 PUSH1 0x20 ADD REVERT JUMPDEST PUSH1 0x40 MLOAD PUSH4 0xA12F521 PUSH1 0xE1 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D6A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT DUP2 AND DUP2 EQ PUSH2 0x1881 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1D91 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x7B4 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1DBD JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1DC8 DUP2 PUSH2 0x1D98 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1DE6 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x1881 DUP2 PUSH2 0x1D98 JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E02 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH2 0x1E14 DUP2 PUSH2 0x1D98 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E30 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x1E64 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH2 0x1E6F DUP2 PUSH2 0x1D98 JUMP JUMPDEST SWAP2 POP PUSH1 0x20 DUP4 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1E8A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 ADD PUSH1 0x1F DUP2 ADD DUP6 SGT PUSH2 0x1E9A JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x1EB4 JUMPI PUSH2 0x1EB4 PUSH2 0x1E3F JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x1EE3 JUMPI PUSH2 0x1EE3 PUSH2 0x1E3F JUMP JUMPDEST PUSH1 0x40 MSTORE DUP2 DUP2 MSTORE DUP3 DUP3 ADD PUSH1 0x20 ADD DUP8 LT ISZERO PUSH2 0x1EFA JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP5 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY PUSH0 PUSH1 0x20 DUP4 DUP4 ADD ADD MSTORE DUP1 SWAP4 POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP5 ADD MSTORE DUP1 PUSH1 0x20 DUP6 ADD PUSH1 0x40 DUP6 ADD MCOPY PUSH0 PUSH1 0x40 DUP3 DUP6 ADD ADD MSTORE PUSH1 0x40 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND DUP5 ADD ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x1F60 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP4 CALLDATALOAD PUSH2 0x1F6B DUP2 PUSH2 0x1D98 JUMP JUMPDEST SWAP6 PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP6 POP PUSH1 0x40 SWAP1 SWAP5 ADD CALLDATALOAD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH0 DUP1 PUSH0 DUP1 PUSH1 0xC0 DUP8 DUP10 SUB SLT ISZERO PUSH2 0x1F95 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP7 CALLDATALOAD PUSH2 0x1FA0 DUP2 PUSH2 0x1D98 JUMP JUMPDEST SWAP6 POP PUSH1 0x20 DUP8 ADD CALLDATALOAD PUSH2 0x1FB0 DUP2 PUSH2 0x1D98 JUMP JUMPDEST SWAP5 POP PUSH1 0x40 DUP8 ADD CALLDATALOAD PUSH2 0x1FC0 DUP2 PUSH2 0x1D98 JUMP JUMPDEST SWAP4 POP PUSH1 0x60 DUP8 ADD CALLDATALOAD PUSH2 0x1FD0 DUP2 PUSH2 0x1D98 JUMP JUMPDEST SWAP3 POP PUSH1 0x80 DUP8 ADD CALLDATALOAD PUSH2 0x1FE0 DUP2 PUSH2 0x1D98 JUMP JUMPDEST SWAP2 POP PUSH1 0xA0 DUP8 ADD CALLDATALOAD PUSH2 0x1FF0 DUP2 PUSH2 0x1D98 JUMP JUMPDEST DUP1 SWAP2 POP POP SWAP3 SWAP6 POP SWAP3 SWAP6 POP SWAP3 SWAP6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP4 DUP5 AND DUP2 MSTORE SWAP2 SWAP1 SWAP3 AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2032 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x1881 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x24 SWAP1 DUP3 ADD MSTORE PUSH32 0x45544820616D6F756E74206D7573742062652067726561746572207468616E20 PUSH1 0x40 DUP3 ADD MSTORE PUSH4 0x7A65726F PUSH1 0xE0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2095 JUMPI PUSH0 DUP1 REVERT JUMPDEST DUP2 MLOAD PUSH2 0x1881 DUP2 PUSH2 0x1D98 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST DUP2 DUP2 SUB DUP2 DUP2 GT ISZERO PUSH2 0x62E JUMPI PUSH2 0x62E PUSH2 0x20A0 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x1B SWAP1 DUP3 ADD MSTORE PUSH32 0x536C69707061676520746F6C6572616E63652065786365656465640000000000 PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x16 SWAP1 DUP3 ADD MSTORE PUSH22 0x496E73756666696369656E74206C6971756964697479 PUSH1 0x50 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 ADD DUP1 DUP3 GT ISZERO PUSH2 0x62E JUMPI PUSH2 0x62E PUSH2 0x20A0 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x26 SWAP1 DUP3 ADD MSTORE PUSH32 0x546F6B656E20616D6F756E74206D757374206265206772656174657220746861 PUSH1 0x40 DUP3 ADD MSTORE PUSH6 0x6E207A65726F PUSH1 0xD0 SHL PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x80 ADD SWAP1 JUMP JUMPDEST DUP1 DUP3 MUL DUP2 ISZERO DUP3 DUP3 DIV DUP5 EQ OR PUSH2 0x62E JUMPI PUSH2 0x62E PUSH2 0x20A0 JUMP JUMPDEST PUSH0 DUP3 PUSH2 0x21B8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x21CD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP3 MLOAD DUP1 PUSH1 0x20 DUP6 ADD DUP5 MCOPY PUSH0 SWAP3 ADD SWAP2 DUP3 MSTORE POP SWAP2 SWAP1 POP JUMP INVALID CALLDATASIZE ADDMOD SWAP5 LOG1 EXTCODESIZE LOG1 LOG3 0x21 MOD PUSH8 0xC828492DB98DCA3E KECCAK256 PUSH23 0xCC3735A920A3CA505D382BBC65D7A28E3265B37A647492 SWAP16 CALLER PUSH6 0x21B332C1681B SWAP4 EXTCODEHASH PUSH13 0xB9F3376673440D862A02DD7BC7 0xDE 0xC4 0xDC 0xEE 0xDD 0xA7 PUSH22 0xE58DD541E08A116C6C53815C0BD028192F7B626800CD MCOPY 0xD1 TLOAD PUSH15 0x187E77E9AEE88184C21F4F2182AB58 0x27 0xCB EXTCODESIZE PUSH31 0x7FBEDCD63F03300A26469706673582212203F75604EE134227BBE63F60867 SWAP13 0x24 0xB9 0x4C SWAP15 0xC4 LOG3 SWAP2 0xE5 MUL LOG1 0xD1 OR SSTORE SWAP12 0xB5 CREATE CREATE PUSH19 0x64736F6C634300081A00330000000000000000 ",
							"sourceMap": "638:8141:16:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3443:202:0;;;;;;;;;;-1:-1:-1;3443:202:0;;;;;:::i;:::-;;:::i;:::-;;;470:14:17;;463:22;445:41;;433:2;418:18;3443:202:0;;;;;;;;8625:152:16;;;;;;;;;;-1:-1:-1;8625:152:16;;;;;:::i;:::-;;:::i;:::-;;8456:163;;;;;;;;;;-1:-1:-1;8456:163:16;;;;;:::i;:::-;;:::i;1283:55::-;;;;;;;;;;-1:-1:-1;1283:55:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1690:25:17;;;1746:2;1731:18;;1724:34;;;;1774:18;;;1767:34;1678:2;1663:18;1283:55:16;1488:319:17;890:84:16;;;;;;;;;;;;939:35;890:84;;;;;1958:25:17;;;1946:2;1931:18;890:84:16;1812:177:17;4759:191:0;;;;;;;;;;-1:-1:-1;4759:191:0;;;;;:::i;:::-;;:::i;981:36:16:-;;;;;;;;;;;;1016:1;981:36;;5246:136:0;;;;;;;;;;-1:-1:-1;5246:136:0;;;;;:::i;:::-;;:::i;1036:33:16:-;;;;;;;;;;-1:-1:-1;1036:33:16;;;;-1:-1:-1;;;;;1036:33:16;;;;;;-1:-1:-1;;;;;2968:32:17;;;2950:51;;2938:2;2923:18;1036:33:16;2779:228:17;6348:245:0;;;;;;;;;;-1:-1:-1;6348:245:0;;;;;:::i;:::-;;:::i;2677:75:16:-;;;;;;;;;;;;;:::i;6319:641::-;;;;;;:::i;:::-;;:::i;4158:214:2:-;;;;;;:::i;:::-;;:::i;4824:703:16:-;;;;;;:::i;:::-;;:::i;3705:134:2:-;;;;;;;;;;;;;:::i;2758:1249:16:-;;;;;;:::i;:::-;;:::i;2692:145:6:-;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;2821:9:6;;;2692:145;;2600:71:16;;;;;;;;;;;;;:::i;3732:207:0:-;;;;;;;;;;-1:-1:-1;3732:207:0;;;;;:::i;:::-;;:::i;4013:805:16:-;;;;;;;;;;-1:-1:-1;4013:805:16;;;;;:::i;:::-;;:::i;:::-;;;;4753:25:17;;;4809:2;4794:18;;4787:34;;;;4726:18;4013:805:16;4579:248:17;2317:49:0;;;;;;;;;;-1:-1:-1;2317:49:0;2362:4;2317:49;;1819:58:2;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1819:58:2;;;;;;;;;;;;:::i;7987:255:16:-;;;;;;;;;;-1:-1:-1;7987:255:16;;;;;:::i;:::-;;:::i;1960:634::-;;;;;;;;;;-1:-1:-1;1960:634:16;;;;;:::i;:::-;;:::i;5662:138:0:-;;;;;;;;;;-1:-1:-1;5662:138:0;;;;;:::i;:::-;;:::i;6966:527:16:-;;;;;;;;;;-1:-1:-1;6966:527:16;;;;;:::i;:::-;;:::i;1075:32::-;;;;;;;;;;-1:-1:-1;1075:32:16;;;;-1:-1:-1;;;;;1075:32:16;;;5533:780;;;;;;;;;;-1:-1:-1;5533:780:16;;;;;:::i;:::-;;:::i;750:62::-;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;750:62:16;;8248:202;;;;;;;;;;-1:-1:-1;8248:202:16;;;;;:::i;:::-;;:::i;818:66::-;;;;;;;;;;;;858:26;818:66;;3443:202:0;3528:4;-1:-1:-1;;;;;;3551:47:0;;-1:-1:-1;;;3551:47:0;;:87;;-1:-1:-1;;;;;;;;;;1133:40:7;;;3602:36:0;3544:94;3443:202;-1:-1:-1;;3443:202:0:o;8625:152:16:-;2362:4:0;3191:16;2362:4;3191:10;:16::i;:::-;8711:6:16::1;::::0;:59:::1;::::0;-1:-1:-1;;;8711:59:16;;-1:-1:-1;;;;;8711:6:16;;::::1;::::0;:23:::1;::::0;:59:::1;::::0;8743:4:::1;::::0;8750:10:::1;::::0;8762:7;;8711:59:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;8625:152:::0;;:::o;8456:163::-;2362:4:0;3191:16;2362:4;3191:10;:16::i;:::-;8559:53:16::1;::::0;-1:-1:-1;;;8559:53:16;;8593:10:::1;8559:53;::::0;::::1;7491:51:17::0;7558:18;;;7551:34;;;-1:-1:-1;;;;;8559:33:16;::::1;::::0;::::1;::::0;7464:18:17;;8559:53:16::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;8456:163:::0;;;:::o;4759:191:0:-;4824:7;4919:14;;;-1:-1:-1;;;;;;;;;;;4919:14:0;;;;;:24;;;;4759:191::o;5246:136::-;5320:18;5333:4;5320:12;:18::i;:::-;3191:16;3202:4;3191:10;:16::i;:::-;5350:25:::1;5361:4;5367:7;5350:10;:25::i;6348:245::-:0;-1:-1:-1;;;;;6441:34:0;;966:10:5;6441:34:0;6437:102;;6498:30;;-1:-1:-1;;;6498:30:0;;;;;;;;;;;6437:102;6549:37;6561:4;6567:18;6549:11;:37::i;:::-;;6348:245;;:::o;2677:75:16:-;-1:-1:-1;;;;;;;;;;;3191:16:0;3202:4;3191:10;:16::i;:::-;2735:10:16::1;:8;:10::i;:::-;2677:75:::0;:::o;6319:641::-;2316:19:6;:17;:19::i;:::-;6436:1:16::1;6424:9;:13;6416:62;;;;-1:-1:-1::0;;;6416:62:16::1;;;;;;;:::i;:::-;;;;;;;;;6496:6;::::0;:23:::1;::::0;-1:-1:-1;;;6496:23:16;;::::1;::::0;::::1;1958:25:17::0;;;6531:4:16::1;::::0;-1:-1:-1;;;;;6496:6:16::1;::::0;:14:::1;::::0;1931:18:17;;6496:23:16::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;6496:40:16::1;;6488:78;;;::::0;-1:-1:-1;;;6488:78:16;;8741:2:17;6488:78:16::1;::::0;::::1;8723:21:17::0;8780:2;8760:18;;;8753:30;8819:27;8799:18;;;8792:55;8864:18;;6488:78:16::1;8539:349:17::0;6488:78:16::1;6577:17;6597:64;6613:9;6624:33;6613:9:::0;6624:21:::1;:33;:::i;:::-;6659:1;6597:15;:64::i;:::-;6577:84;;6721:6;6708:9;:19;;6700:59;;;;-1:-1:-1::0;;;6700:59:16::1;;;;;;;:::i;:::-;6770:39;::::0;6778:10:::1;::::0;6770:39;::::1;;;::::0;6799:9;;6770:39:::1;::::0;;;6799:9;6778:10;6770:39;::::1;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;6819:6:16::1;::::0;:59:::1;::::0;-1:-1:-1;;;6819:59:16;;-1:-1:-1;;;;;6819:6:16;;::::1;::::0;:23:::1;::::0;:59:::1;::::0;6851:4:::1;::::0;6858:10:::1;::::0;6870:7;;6819:59:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;6925:6:16::1;::::0;6894:59:::1;::::0;1958:25:17;;;6934:7:16;;-1:-1:-1;;;;;;6925:6:16;;::::1;::::0;-1:-1:-1;6905:10:16::1;::::0;6894:59:::1;::::0;1946:2:17;1931:18;6894:59:16::1;;;;;;;;6406:554;6319:641:::0;;:::o;4158:214:2:-;2653:13;:11;:13::i;:::-;4273:36:::1;4291:17;4273;:36::i;:::-;4319:46;4341:17;4360:4;4319:21;:46::i;:::-;4158:214:::0;;:::o;4824:703:16:-;2316:19:6;:17;:19::i;:::-;4945:1:16::1;4933:9;:13;4925:62;;;;-1:-1:-1::0;;;4925:62:16::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;5026:21:16;::::1;4997:26;5026:21:::0;;;:14:::1;:21;::::0;;;;5065:14:::1;::::0;::::1;::::0;:18;;;;:42:::1;;-1:-1:-1::0;5087:16:16;;:20;;5065:42:::1;5057:77;;;;-1:-1:-1::0;;;5057:77:16::1;;;;;;;:::i;:::-;5145:19;5167:60;5183:9;5194:4;:14;;;5210:4;:16;;;5167:15;:60::i;:::-;5145:82;;5260:9;5245:11;:24;;5237:64;;;;-1:-1:-1::0;;;5237:64:16::1;;;;;;;:::i;:::-;5330:9;5312:4;:14;;;:27;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;5349:31:16;;5369:11;;5349:4;;:16:::1;::::0;:31:::1;::::0;5369:11;;5349:31:::1;:::i;:::-;::::0;;;-1:-1:-1;;5391:58:16::1;::::0;-1:-1:-1;;;5391:58:16;;5425:10:::1;5391:58;::::0;::::1;7491:51:17::0;7558:18;;;7551:34;;;-1:-1:-1;;;;;5391:33:16;::::1;::::0;::::1;::::0;7464:18:17;;5391:58:16::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;5465:55:16::1;::::0;;4753:25:17;;;5510:9:16::1;4809:2:17::0;4794:18;;4787:34;-1:-1:-1;;;;;5465:55:16;::::1;::::0;5478:10:::1;::::0;5465:55:::1;::::0;4726:18:17;5465:55:16::1;;;;;;;4915:612;;4824:703:::0;;:::o;3705:134:2:-;3774:7;2924:20;:18;:20::i;:::-;-1:-1:-1;;;;;;;;;;;;3705:134:2;:::o;2758:1249:16:-;2856:7;2316:19:6;:17;:19::i;:::-;2897:1:16::1;2883:11;:15;2875:66;;;;-1:-1:-1::0;;;2875:66:16::1;;;;;;;:::i;:::-;2971:1;2959:9;:13;2951:62;;;;-1:-1:-1::0;;;2951:62:16::1;;;;;;;:::i;:::-;3024:77;::::0;-1:-1:-1;;;3024:77:16;;-1:-1:-1;;;;;3024:37:16;::::1;::::0;::::1;::::0;:77:::1;::::0;3062:10:::1;::::0;3082:4:::1;::::0;3089:11;;3024:77:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;;3141:21:16;::::1;3112:26;3141:21:::0;;;:14:::1;:21;::::0;;;;;;3204:19;;::::1;::::0;3141:21;;3112:26;3204:24;;3200:599:::1;;-1:-1:-1::0;3244:30:16;;;3305:9:::1;3288:14;::::0;::::1;:26:::0;3263:11;3200:599:::1;;;3407:1;3390:4;:14;;;:18;:42;;;;-1:-1:-1::0;3412:16:16;;:20;;3390:42:::1;3382:73;;;::::0;-1:-1:-1;;;3382:73:16;;10604:2:17;3382:73:16::1;::::0;::::1;10586:21:17::0;10643:2;10623:18;;;10616:30;-1:-1:-1;;;10662:18:17;;;10655:48;10720:18;;3382:73:16::1;10402:342:17::0;3382:73:16::1;3470:22;3528:4;:16;;;3513:11;3496:4;:14;;;:28;;;;:::i;:::-;3495:49;;;;:::i;:::-;3470:74;;3579:14;3566:9;:27;;3558:63;;;::::0;-1:-1:-1;;;3558:63:16;;11346:2:17;3558:63:16::1;::::0;::::1;11328:21:17::0;11385:2;11365:18;;;11358:30;11424:25;11404:18;;;11397:53;11467:18;;3558:63:16::1;11144:347:17::0;3558:63:16::1;3656:11;3636:4;:16;;;:31;;;;;;;:::i;:::-;;;;;;;;3699:9;3681:4;:14;;;:27;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;3772:16:16;;3735:19:::1;::::0;::::1;::::0;:33:::1;::::0;3757:11;;3735:33:::1;:::i;:::-;3734:54;;;;:::i;:::-;3722:66;;3368:431;3200:599;3832:9;3809:4;:19;;;:32;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;3866:10:16::1;3851:26;::::0;;;:14:::1;::::0;::::1;:26;::::0;;;;:39;;3881:9;;3851:26;:39:::1;::::0;3881:9;;3851:39:::1;:::i;:::-;::::0;;;-1:-1:-1;;3906:68:16::1;::::0;;1690:25:17;;;3953:9:16::1;1746:2:17::0;1731:18;;1724:34;1774:18;;;1767:34;;;-1:-1:-1;;;;;3906:68:16;::::1;::::0;3921:10:::1;::::0;3906:68:::1;::::0;1678:2:17;1663:18;3906:68:16::1;;;;;;;3991:9:::0;2758:1249;-1:-1:-1;;;;2758:1249:16:o;2600:71::-;-1:-1:-1;;;;;;;;;;;3191:16:0;3202:4;3191:10;:16::i;:::-;2656:8:16::1;:6;:8::i;3732:207:0:-:0;3809:4;3901:14;;;-1:-1:-1;;;;;;;;;;;3901:14:0;;;;;;;;-1:-1:-1;;;;;3901:31:0;;;;;;;;;;;;;;;3732:207::o;4013:805:16:-;4104:19;4125:17;2316:19:6;:17;:19::i;:::-;-1:-1:-1;;;;;4183:21:16;::::1;4154:26;4183:21:::0;;;:14:::1;:21;::::0;;;;;;;4237:10:::1;4222:26:::0;;:14:::1;::::0;::::1;:26:::0;;;;;;;:39;-1:-1:-1;4222:39:16::1;4214:74;;;;-1:-1:-1::0;;;4214:74:16::1;;;;;;;:::i;:::-;4346:19;::::0;::::1;::::0;4314:16;;:28:::1;::::0;4333:9;;4314:28:::1;:::i;:::-;4313:52;;;;:::i;:::-;4299:66;;4418:4;:19;;;4405:9;4388:4;:14;;;:26;;;;:::i;:::-;4387:50;;;;:::i;:::-;4375:62;;4468:11;4448:4;:16;;;:31;;;;;;;:::i;:::-;;;;;;;;4507:9;4489:4;:14;;;:27;;;;;;;:::i;:::-;;;;;;;;4549:9;4526:4;:19;;;:32;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;4583:10:16::1;4568:26;::::0;;;:14:::1;::::0;::::1;:26;::::0;;;;:39;;4598:9;;4568:26;:39:::1;::::0;4598:9;;4568:39:::1;:::i;:::-;::::0;;;-1:-1:-1;;4618:58:16::1;::::0;-1:-1:-1;;;4618:58:16;;4652:10:::1;4618:58;::::0;::::1;7491:51:17::0;7558:18;;;7551:34;;;-1:-1:-1;;;;;4618:33:16;::::1;::::0;::::1;::::0;7464:18:17;;4618:58:16::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;4686:39:16::1;::::0;4694:10:::1;::::0;4686:39;::::1;;;::::0;4715:9;;4686:39:::1;::::0;;;4715:9;4694:10;4686:39;::::1;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;4741:70:16::1;::::0;;1690:25:17;;;1746:2;1731:18;;1724:34;;;1774:18;;;1767:34;;;-1:-1:-1;;;;;4741:70:16;::::1;::::0;4758:10:::1;::::0;4741:70:::1;::::0;1678:2:17;1663:18;4741:70:16::1;;;;;;;4144:674;4013:805:::0;;;;;:::o;7987:255::-;939:35;3191:16:0;3202:4;3191:10;:16::i;:::-;-1:-1:-1;;;;;;8129:21:16;;::::1;;::::0;;;:14:::1;:21;::::0;;;;:50;;;8189:31:::1;;:46:::0;7987:255::o;1960:634::-;8870:21:1;4302:15;;-1:-1:-1;;;4302:15:1;;;;4301:16;;4348:14;;4158:30;4726:16;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4790:11;:16;;4805:1;4790:16;:50;;;;-1:-1:-1;4818:4:1;4810:25;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;-1:-1:-1;;;4908:23:1;;;;;;;;;;;4851:91;4951:18;;-1:-1:-1;;4951:18:1;4968:1;4951:18;;;4979:67;;;;5013:22;;-1:-1:-1;;;;5013:22:1;-1:-1:-1;;;5013:22:1;;;4979:67;2193:17:16::1;:15;:17::i;:::-;2220:22;:20;:22::i;:::-;2252:24;:22;:24::i;:::-;2287:44;2362:4:0;2318:12:16::0;2287:10:::1;:44::i;:::-;;2341:31;-1:-1:-1::0;;;;;;;;;;;2365:6:16::1;2341:10;:31::i;:::-;;2382:35;858:26;2408:8;2382:10;:35::i;:::-;;2427:52;939:35;2462:16;2427:10;:52::i;:::-;-1:-1:-1::0;2490:8:16::1;:45:::0;;-1:-1:-1;;;;;2490:45:16;;::::1;-1:-1:-1::0;;;;;;2490:45:16;;::::1;;::::0;;;;2545:42;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;5066:101:1;;;;5100:23;;-1:-1:-1;;;;5100:23:1;;;5142:14;;-1:-1:-1;11649:50:17;;5142:14:1;;11637:2:17;11622:18;5142:14:1;;;;;;;5066:101;4092:1081;;;;;1960:634:16;;;;;;:::o;5662:138:0:-;5737:18;5750:4;5737:12;:18::i;:::-;3191:16;3202:4;3191:10;:16::i;:::-;5767:26:::1;5779:4;5785:7;5767:11;:26::i;6966:527:16:-:0;2316:19:6;:17;:19::i;:::-;7063:6:16::1;::::0;:23:::1;::::0;-1:-1:-1;;;7063:23:16;;::::1;::::0;::::1;1958:25:17::0;;;7090:10:16::1;::::0;-1:-1:-1;;;;;7063:6:16::1;::::0;:14:::1;::::0;1931:18:17;;7063:23:16::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;7063:37:16::1;;7055:66;;;::::0;-1:-1:-1;;;7055:66:16;;11912:2:17;7055:66:16::1;::::0;::::1;11894:21:17::0;11951:2;11931:18;;;11924:30;-1:-1:-1;;;11970:18:17;;;11963:46;12026:18;;7055:66:16::1;11710:340:17::0;7055:66:16::1;7132:17;7152:44;7168:1;7171::::0;7174:21:::1;7152:15;:44::i;:::-;7132:64;;7254:6;7241:9;:19;;7233:59;;;;-1:-1:-1::0;;;7233:59:16::1;;;;;;;:::i;:::-;7303:6;::::0;:59:::1;::::0;-1:-1:-1;;;7303:59:16;;-1:-1:-1;;;;;7303:6:16;;::::1;::::0;:23:::1;::::0;:59:::1;::::0;7327:10:::1;::::0;7347:4:::1;::::0;7354:7;;7303:59:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;;7372:39:16::1;::::0;7380:10:::1;::::0;-1:-1:-1;7372:39:16;::::1;;;::::0;-1:-1:-1;7401:9:16;;7372:39:::1;::::0;;;7401:9;7380:10;7372:39;::::1;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;7458:6:16::1;::::0;7427:59:::1;::::0;1958:25:17;;;7467:7:16;;-1:-1:-1;;;;;7458:6:16::1;::::0;7438:10:::1;::::0;7427:59:::1;::::0;1946:2:17;1931:18;7427:59:16::1;1812:177:17::0;5533:780:16;2316:19:6;:17;:19::i;:::-;5666:1:16::1;5652:11;:15;5644:66;;;;-1:-1:-1::0;;;5644:66:16::1;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;5749:21:16;::::1;5720:26;5749:21:::0;;;:14:::1;:21;::::0;;;;5788:14:::1;::::0;::::1;::::0;:18;;;;:42:::1;;-1:-1:-1::0;5810:16:16;;:20;;5788:42:::1;5780:77;;;;-1:-1:-1::0;;;5780:77:16::1;;;;;;;:::i;:::-;5868:17;5888:62;5904:11;5917:4;:16;;;5935:4;:14;;;5888:15;:62::i;:::-;5868:82;;5981:6;5968:9;:19;;5960:59;;;;-1:-1:-1::0;;;5960:59:16::1;;;;;;;:::i;:::-;6050:11;6030:4;:16;;;:31;;;;;;;:::i;:::-;;;;;;;;6089:9;6071:4;:14;;;:27;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;6109:77:16::1;::::0;-1:-1:-1;;;6109:77:16;;-1:-1:-1;;;;;6109:37:16;::::1;::::0;::::1;::::0;:77:::1;::::0;6147:10:::1;::::0;6167:4:::1;::::0;6174:11;;6109:77:::1;;;:::i;:::-;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;6196:39:16::1;::::0;6204:10:::1;::::0;6196:39;::::1;;;::::0;6225:9;;6196:39:::1;::::0;;;6225:9;6204:10;6196:39;::::1;;;;;;;;;;;;;::::0;::::1;;;;;-1:-1:-1::0;6251:55:16::1;::::0;;4753:25:17;;;4809:2;4794:18;;4787:34;;;-1:-1:-1;;;;;6251:55:16;::::1;::::0;6264:10:::1;::::0;6251:55:::1;::::0;4726:18:17;6251:55:16::1;;;;;;;5634:679;;5533:780:::0;;;:::o;8248:202::-;2362:4:0;3191:16;2362:4;3191:10;:16::i;:::-;8366:6:16::1;8341:21;:31;;8333:64;;;::::0;-1:-1:-1;;;8333:64:16;;12257:2:17;8333:64:16::1;::::0;::::1;12239:21:17::0;12296:2;12276:18;;;12269:30;-1:-1:-1;;;12315:18:17;;;12308:50;12375:18;;8333:64:16::1;12055:344:17::0;8333:64:16::1;8407:36;::::0;8415:10:::1;::::0;8407:36;::::1;;;::::0;8436:6;;8407:36:::1;::::0;;;8436:6;8415:10;8407:36;::::1;;;;;;;;;;;;;::::0;::::1;;;;4148:103:0::0;4214:30;4225:4;966:10:5;4214::0;:30::i;7270:387::-;7347:4;-1:-1:-1;;;;;;;;;;;7437:22:0;7445:4;7451:7;7437;:22::i;:::-;7432:219;;7475:8;:14;;;;;;;;;;;-1:-1:-1;;;;;7475:31:0;;;;;;;;;:38;;-1:-1:-1;;7475:38:0;7509:4;7475:38;;;7559:12;966:10:5;;887:96;7559:12:0;-1:-1:-1;;;;;7532:40:0;7550:7;-1:-1:-1;;;;;7532:40:0;7544:4;7532:40;;;;;;;;;;7593:4;7586:11;;;;;7432:219;7635:5;7628:12;;;;;7892:388;7970:4;-1:-1:-1;;;;;;;;;;;8059:22:0;8067:4;8073:7;8059;:22::i;:::-;8055:219;;;8131:5;8097:14;;;;;;;;;;;-1:-1:-1;;;;;8097:31:0;;;;;;;;;;:39;;-1:-1:-1;;8097:39:0;;;8155:40;966:10:5;;8097:14:0;;8155:40;;8131:5;8155:40;8216:4;8209:11;;;;;3674:178:6;2563:16;:14;:16::i;:::-;-1:-1:-1;;;;;;;;;;;3791:17:6;;-1:-1:-1;;3791:17:6::1;::::0;;3823:22:::1;966:10:5::0;3832:12:6::1;3823:22;::::0;-1:-1:-1;;;;;2968:32:17;;;2950:51;;2938:2;2923:18;3823:22:6::1;;;;;;;3722:130;3674:178::o:0;2905:128::-;-1:-1:-1;;;;;;;;;;;2821:9:6;;;2966:61;;;3001:15;;-1:-1:-1;;;3001:15:6;;;;;;;;;;;2966:61;2905:128::o;7499:378:16:-;7613:7;;7676:15;1016:1;7676:4;:15;:::i;:::-;7661:31;;:11;:31;:::i;:::-;7632:60;-1:-1:-1;7702:17:16;7722:34;7743:13;7632:60;7722:34;:::i;:::-;7702:54;-1:-1:-1;7766:19:16;7812:18;7789:19;:12;7804:4;7789:19;:::i;:::-;7788:42;;;;:::i;:::-;7766:64;-1:-1:-1;7847:23:16;7766:64;7847:9;:23;:::i;:::-;7840:30;;;;;7499:378;;;;;;:::o;4599:312:2:-;4679:4;-1:-1:-1;;;;;4688:6:2;4671:23;;;:120;;;4785:6;-1:-1:-1;;;;;4749:42:2;:32;-1:-1:-1;;;;;;;;;;;2035:53:11;-1:-1:-1;;;;;2035:53:11;;1957:138;4749:32:2;-1:-1:-1;;;;;4749:42:2;;;4671:120;4654:251;;;4865:29;;-1:-1:-1;;;4865:29:2;;;;;;;;;;;7883:98:16;858:26;3191:16:0;3202:4;3191:10;:16::i;6052:538:2:-;6169:17;-1:-1:-1;;;;;6151:50:2;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6151:52:2;;;;;;;;-1:-1:-1;;6151:52:2;;;;;;;;;;;;:::i;:::-;;;6147:437;;6513:60;;-1:-1:-1;;;6513:60:2;;-1:-1:-1;;;;;2968:32:17;;6513:60:2;;;2950:51:17;2923:18;;6513:60:2;2779:228:17;6147:437:2;-1:-1:-1;;;;;;;;;;;6245:40:2;;6241:120;;6312:34;;-1:-1:-1;;;6312:34:2;;;;;1958:25:17;;;1931:18;;6312:34:2;1812:177:17;6241:120:2;6374:54;6404:17;6423:4;6374:29;:54::i;5028:213::-;5102:4;-1:-1:-1;;;;;5111:6:2;5094:23;;5090:145;;5195:29;;-1:-1:-1;;;5195:29:2;;;;;;;;;;;3366:176:6;2316:19;:17;:19::i;:::-;-1:-1:-1;;;;;;;;;;;3484:16:6;;-1:-1:-1;;3484:16:6::1;3496:4;3484:16;::::0;;3515:20:::1;966:10:5::0;3522:12:6::1;887:96:5::0;1836:97:6;6931:20:1;:18;:20::i;:::-;1899:27:6::1;:25;:27::i;3231:65:0:-:0;6931:20:1;:18;:20::i;4381:197:0:-;4469:22;4477:4;4483:7;4469;:22::i;:::-;4464:108;;4514:47;;-1:-1:-1;;;4514:47:0;;-1:-1:-1;;;;;7509:32:17;;4514:47:0;;;7491:51:17;7558:18;;;7551:34;;;7464:18;;4514:47:0;7317:274:17;3105:126:6;-1:-1:-1;;;;;;;;;;;2821:9:6;;;3163:62;;3199:15;;-1:-1:-1;;;3199:15:6;;;;;;;;;;;2779:335:11;2870:37;2889:17;2870:18;:37::i;:::-;2922:27;;-1:-1:-1;;;;;2922:27:11;;;;;;;;2964:11;;:15;2960:148;;2995:53;3024:17;3043:4;2995:28;:53::i;2960:148::-;3079:18;:16;:18::i;7084:141:1:-;8870:21;8560:40;-1:-1:-1;;;8560:40:1;;;;7146:73;;7191:17;;-1:-1:-1;;;7191:17:1;;;;;;;;;;;1939:156:6;6931:20:1;:18;:20::i;:::-;-1:-1:-1;;;;;;;;;;;2071:17:6;;-1:-1:-1;;2071:17:6::1;::::0;;1939:156::o;2186:281:11:-;2263:17;-1:-1:-1;;;;;2263:29:11;;2296:1;2263:34;2259:119;;2320:47;;-1:-1:-1;;;2320:47:11;;-1:-1:-1;;;;;2968:32:17;;2320:47:11;;;2950:51:17;2923:18;;2320:47:11;2779:228:17;2259:119:11;-1:-1:-1;;;;;;;;;;;2387:73:11;;-1:-1:-1;;;;;;2387:73:11;-1:-1:-1;;;;;2387:73:11;;;;;;;;;;2186:281::o;4106:253:13:-;4189:12;4214;4228:23;4255:6;-1:-1:-1;;;;;4255:19:13;4275:4;4255:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4213:67;;;;4297:55;4324:6;4332:7;4341:10;4297:26;:55::i;:::-;4290:62;4106:253;-1:-1:-1;;;;;4106:253:13:o;6598:122:11:-;6648:9;:13;6644:70;;6684:19;;-1:-1:-1;;;6684:19:11;;;;;;;;;;;4625:582:13;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5045:17;;:22;:49;;;;-1:-1:-1;;;;;;5071:18:13;;;:23;5045:49;5041:119;;;5121:24;;-1:-1:-1;;;5121:24:13;;-1:-1:-1;;;;;2968:32:17;;5121:24:13;;;2950:51:17;2923:18;;5121:24:13;2779:228:17;5041:119:13;-1:-1:-1;5180:10:13;5173:17;;5743:516;5874:17;;:21;5870:383;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;-1:-1:-1;;;6225:17:13;;;;;;;;;;;14:286:17;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;167:23;;-1:-1:-1;;;;;;219:32:17;;209:43;;199:71;;266:1;263;256:12;497:226;556:6;609:2;597:9;588:7;584:23;580:32;577:52;;;625:1;622;615:12;577:52;-1:-1:-1;670:23:17;;497:226;-1:-1:-1;497:226:17:o;728:131::-;-1:-1:-1;;;;;803:31:17;;793:42;;783:70;;849:1;846;839:12;864:367;932:6;940;993:2;981:9;972:7;968:23;964:32;961:52;;;1009:1;1006;999:12;961:52;1048:9;1035:23;1067:31;1092:5;1067:31;:::i;:::-;1117:5;1195:2;1180:18;;;;1167:32;;-1:-1:-1;;;864:367:17:o;1236:247::-;1295:6;1348:2;1336:9;1327:7;1323:23;1319:32;1316:52;;;1364:1;1361;1354:12;1316:52;1403:9;1390:23;1422:31;1447:5;1422:31;:::i;2407:367::-;2475:6;2483;2536:2;2524:9;2515:7;2511:23;2507:32;2504:52;;;2552:1;2549;2542:12;2504:52;2597:23;;;-1:-1:-1;2696:2:17;2681:18;;2668:32;2709:33;2668:32;2709:33;:::i;:::-;2761:7;2751:17;;;2407:367;;;;;:::o;3012:346::-;3080:6;3088;3141:2;3129:9;3120:7;3116:23;3112:32;3109:52;;;3157:1;3154;3147:12;3109:52;-1:-1:-1;;3202:23:17;;;3322:2;3307:18;;;3294:32;;-1:-1:-1;3012:346:17:o;3363:127::-;3424:10;3419:3;3415:20;3412:1;3405:31;3455:4;3452:1;3445:15;3479:4;3476:1;3469:15;3495:1079;3572:6;3580;3633:2;3621:9;3612:7;3608:23;3604:32;3601:52;;;3649:1;3646;3639:12;3601:52;3688:9;3675:23;3707:31;3732:5;3707:31;:::i;:::-;3757:5;-1:-1:-1;3813:2:17;3798:18;;3785:32;3840:18;3829:30;;3826:50;;;3872:1;3869;3862:12;3826:50;3895:22;;3948:4;3940:13;;3936:27;-1:-1:-1;3926:55:17;;3977:1;3974;3967:12;3926:55;4017:2;4004:16;4043:18;4035:6;4032:30;4029:56;;;4065:18;;:::i;:::-;4114:2;4108:9;4206:2;4168:17;;-1:-1:-1;;4164:31:17;;;4197:2;4160:40;4156:54;4144:67;;4241:18;4226:34;;4262:22;;;4223:62;4220:88;;;4288:18;;:::i;:::-;4324:2;4317:22;4348;;;4389:15;;;4406:2;4385:24;4382:37;-1:-1:-1;4379:57:17;;;4432:1;4429;4422:12;4379:57;4488:6;4483:2;4479;4475:11;4470:2;4462:6;4458:15;4445:50;4541:1;4536:2;4527:6;4519;4515:19;4511:28;4504:39;4562:6;4552:16;;;;;3495:1079;;;;;:::o;4832:418::-;4981:2;4970:9;4963:21;4944:4;5013:6;5007:13;5056:6;5051:2;5040:9;5036:18;5029:34;5115:6;5110:2;5102:6;5098:15;5093:2;5082:9;5078:18;5072:50;5171:1;5166:2;5157:6;5146:9;5142:22;5138:31;5131:42;5241:2;5234;5230:7;5225:2;5217:6;5213:15;5209:29;5198:9;5194:45;5190:54;5182:62;;;4832:418;;;;:::o;5255:487::-;5332:6;5340;5348;5401:2;5389:9;5380:7;5376:23;5372:32;5369:52;;;5417:1;5414;5407:12;5369:52;5456:9;5443:23;5475:31;5500:5;5475:31;:::i;:::-;5525:5;5603:2;5588:18;;5575:32;;-1:-1:-1;5706:2:17;5691:18;;;5678:32;;5255:487;-1:-1:-1;;;5255:487:17:o;5747:955::-;5851:6;5859;5867;5875;5883;5891;5944:3;5932:9;5923:7;5919:23;5915:33;5912:53;;;5961:1;5958;5951:12;5912:53;6000:9;5987:23;6019:31;6044:5;6019:31;:::i;:::-;6069:5;-1:-1:-1;6126:2:17;6111:18;;6098:32;6139:33;6098:32;6139:33;:::i;:::-;6191:7;-1:-1:-1;6250:2:17;6235:18;;6222:32;6263:33;6222:32;6263:33;:::i;:::-;6315:7;-1:-1:-1;6374:2:17;6359:18;;6346:32;6387:33;6346:32;6387:33;:::i;:::-;6439:7;-1:-1:-1;6498:3:17;6483:19;;6470:33;6512;6470;6512;:::i;:::-;6564:7;-1:-1:-1;6623:3:17;6608:19;;6595:33;6637;6595;6637;:::i;:::-;6689:7;6679:17;;;5747:955;;;;;;;;:::o;6941:371::-;-1:-1:-1;;;;;7161:32:17;;;7143:51;;7230:32;;;;7225:2;7210:18;;7203:60;7294:2;7279:18;;7272:34;;;;7131:2;7116:18;;6941:371::o;7596:277::-;7663:6;7716:2;7704:9;7695:7;7691:23;7687:32;7684:52;;;7732:1;7729;7722:12;7684:52;7764:9;7758:16;7817:5;7810:13;7803:21;7796:5;7793:32;7783:60;;7839:1;7836;7829:12;7878:400;8080:2;8062:21;;;8119:2;8099:18;;;8092:30;8158:34;8153:2;8138:18;;8131:62;-1:-1:-1;;;8224:2:17;8209:18;;8202:34;8268:3;8253:19;;7878:400::o;8283:251::-;8353:6;8406:2;8394:9;8385:7;8381:23;8377:32;8374:52;;;8422:1;8419;8412:12;8374:52;8454:9;8448:16;8473:31;8498:5;8473:31;:::i;8893:127::-;8954:10;8949:3;8945:20;8942:1;8935:31;8985:4;8982:1;8975:15;9009:4;9006:1;8999:15;9025:128;9092:9;;;9113:11;;;9110:37;;;9127:18;;:::i;9158:351::-;9360:2;9342:21;;;9399:2;9379:18;;;9372:30;9438:29;9433:2;9418:18;;9411:57;9500:2;9485:18;;9158:351::o;9514:346::-;9716:2;9698:21;;;9755:2;9735:18;;;9728:30;-1:-1:-1;;;9789:2:17;9774:18;;9767:52;9851:2;9836:18;;9514:346::o;9865:125::-;9930:9;;;9951:10;;;9948:36;;;9964:18;;:::i;9995:402::-;10197:2;10179:21;;;10236:2;10216:18;;;10209:30;10275:34;10270:2;10255:18;;10248:62;-1:-1:-1;;;10341:2:17;10326:18;;10319:36;10387:3;10372:19;;9995:402::o;10749:168::-;10822:9;;;10853;;10870:15;;;10864:22;;10850:37;10840:71;;10891:18;;:::i;10922:217::-;10962:1;10988;10978:132;;11032:10;11027:3;11023:20;11020:1;11013:31;11067:4;11064:1;11057:15;11095:4;11092:1;11085:15;10978:132;-1:-1:-1;11124:9:17;;10922:217::o;12612:184::-;12682:6;12735:2;12723:9;12714:7;12710:23;12706:32;12703:52;;;12751:1;12748;12741:12;12703:52;-1:-1:-1;12774:16:17;;12612:184;-1:-1:-1;12612:184:17:o;13080:301::-;13209:3;13247:6;13241:13;13293:6;13286:4;13278:6;13274:17;13269:3;13263:37;13355:1;13319:16;;13344:13;;;-1:-1:-1;13319:16:17;13080:301;-1:-1:-1;13080:301:17:o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "1772800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"DEFAULT_ADMIN_ROLE()": "260",
								"FEE_RATE()": "306",
								"LIQUIDITY_MANAGER_ROLE()": "262",
								"PAUSER_ROLE()": "infinite",
								"UPGRADER_ROLE()": "304",
								"UPGRADE_INTERFACE_VERSION()": "infinite",
								"addLiquidity(address,uint256)": "infinite",
								"cqtNFT()": "2447",
								"cqtToken()": "2403",
								"getRoleAdmin(bytes32)": "infinite",
								"grantRole(bytes32,address)": "infinite",
								"hasRole(bytes32,address)": "infinite",
								"initialize(address,address,address,address,address,address)": "infinite",
								"liquidityPools(address)": "6831",
								"pause()": "infinite",
								"paused()": "infinite",
								"proxiableUUID()": "infinite",
								"removeLiquidity(address,uint256)": "infinite",
								"renounceRole(bytes32,address)": "29182",
								"revokeRole(bytes32,address)": "infinite",
								"supportsInterface(bytes4)": "470",
								"swapETHForNFT(uint256,uint256)": "infinite",
								"swapETHForTokens(address,uint256)": "infinite",
								"swapNFTForETH(uint256,uint256)": "infinite",
								"swapTokensForETH(address,uint256,uint256)": "infinite",
								"unpause()": "infinite",
								"updateLiquidityPool(address,uint256,uint256)": "infinite",
								"upgradeToAndCall(address,bytes)": "infinite",
								"withdrawETH(uint256)": "infinite",
								"withdrawNFT(uint256)": "infinite",
								"withdrawTokens(address,uint256)": "infinite"
							},
							"internal": {
								"_authorizeUpgrade(address)": "infinite",
								"getOutputAmount(uint256,uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 638,
									"end": 8779,
									"name": "PUSH",
									"source": 16,
									"value": "A0"
								},
								{
									"begin": 638,
									"end": 8779,
									"name": "PUSH",
									"source": 16,
									"value": "40"
								},
								{
									"begin": 638,
									"end": 8779,
									"name": "MSTORE",
									"source": 16
								},
								{
									"begin": 1171,
									"end": 1175,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "PUSH",
									"source": 2,
									"value": "80"
								},
								{
									"begin": 1128,
									"end": 1176,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1901,
									"end": 1954,
									"name": "CALLVALUE",
									"source": 16
								},
								{
									"begin": 1901,
									"end": 1954,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1901,
									"end": 1954,
									"name": "ISZERO",
									"source": 16
								},
								{
									"begin": 1901,
									"end": 1954,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 1901,
									"end": 1954,
									"name": "JUMPI",
									"source": 16
								},
								{
									"begin": 1901,
									"end": 1954,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 1901,
									"end": 1954,
									"name": "DUP1",
									"source": 16
								},
								{
									"begin": 1901,
									"end": 1954,
									"name": "REVERT",
									"source": 16
								},
								{
									"begin": 1901,
									"end": 1954,
									"name": "tag",
									"source": 16,
									"value": "1"
								},
								{
									"begin": 1901,
									"end": 1954,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": -1,
									"end": -1,
									"name": "POP",
									"source": -1
								},
								{
									"begin": 1925,
									"end": 1947,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 1925,
									"end": 1945,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "5"
								},
								{
									"begin": 1925,
									"end": 1947,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 1925,
									"end": 1947,
									"name": "tag",
									"source": 16,
									"value": "4"
								},
								{
									"begin": 1925,
									"end": 1947,
									"name": "JUMPDEST",
									"source": 16
								},
								{
									"begin": 638,
									"end": 8779,
									"name": "PUSH [tag]",
									"source": 16,
									"value": "15"
								},
								{
									"begin": 638,
									"end": 8779,
									"name": "JUMP",
									"source": 16
								},
								{
									"begin": 7711,
									"end": 8133,
									"name": "tag",
									"source": 1,
									"value": "5"
								},
								{
									"begin": 7711,
									"end": 8133,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 8870,
									"end": 8891,
									"name": "PUSH",
									"source": 1,
									"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "PUSH",
									"source": 1,
									"value": "10000000000000000"
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "DIV",
									"source": 1
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "PUSH",
									"source": 1,
									"value": "FF"
								},
								{
									"begin": 7900,
									"end": 7915,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "ISZERO",
									"source": 1
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "F92EE8A9"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "E0"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "ADD",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7938,
									"end": 7961,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "tag",
									"source": 1,
									"value": "10"
								},
								{
									"begin": 7896,
									"end": 7972,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 7999,
									"name": "AND",
									"source": 1
								},
								{
									"begin": 7985,
									"end": 8019,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 7981,
									"end": 8127,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 7981,
									"end": 8127,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "SLOAD",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "NOT",
									"source": -1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "AND",
									"source": 1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "1"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "PUSH",
									"source": -1,
									"value": "40"
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SHL",
									"source": -1
								},
								{
									"begin": -1,
									"end": -1,
									"name": "SUB",
									"source": -1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "OR",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 8035,
									"end": 8068,
									"name": "SSTORE",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 158,
									"end": 208,
									"name": "SWAP1",
									"source": 17
								},
								{
									"begin": 158,
									"end": 208,
									"name": "DUP2",
									"source": 17
								},
								{
									"begin": 158,
									"end": 208,
									"name": "MSTORE",
									"source": 17
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "PUSH",
									"source": 1,
									"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 146,
									"end": 148,
									"name": "PUSH",
									"source": 17,
									"value": "20"
								},
								{
									"begin": 131,
									"end": 149,
									"name": "ADD",
									"source": 17
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "PUSH",
									"source": 1,
									"value": "40"
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SWAP2",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SUB",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "SWAP1",
									"source": 1
								},
								{
									"begin": 8087,
									"end": 8116,
									"name": "LOG1",
									"source": 1
								},
								{
									"begin": 7981,
									"end": 8127,
									"name": "tag",
									"source": 1,
									"value": "11"
								},
								{
									"begin": 7981,
									"end": 8127,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 7760,
									"end": 8133,
									"name": "POP",
									"source": 1
								},
								{
									"begin": 7711,
									"end": 8133,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 1
								},
								{
									"begin": 14,
									"end": 214,
									"name": "tag",
									"source": 17,
									"value": "15"
								},
								{
									"begin": 14,
									"end": 214,
									"name": "JUMPDEST",
									"source": 17
								},
								{
									"begin": 638,
									"end": 8779,
									"name": "PUSH",
									"source": 16,
									"value": "80"
								},
								{
									"begin": 638,
									"end": 8779,
									"name": "MLOAD",
									"source": 16
								},
								{
									"begin": 638,
									"end": 8779,
									"name": "PUSH #[$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 638,
									"end": 8779,
									"name": "PUSH [$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 638,
									"end": 8779,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 638,
									"end": 8779,
									"name": "CODECOPY",
									"source": 16
								},
								{
									"begin": 638,
									"end": 8779,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 638,
									"end": 8779,
									"name": "ASSIGNIMMUTABLE",
									"source": 16,
									"value": "636"
								},
								{
									"begin": 638,
									"end": 8779,
									"name": "PUSH #[$]",
									"source": 16,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 638,
									"end": 8779,
									"name": "PUSH",
									"source": 16,
									"value": "0"
								},
								{
									"begin": 638,
									"end": 8779,
									"name": "RETURN",
									"source": 16
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203f75604ee134227bbe63f608679c24b94c9ec4a391e502a1d117559bb5f0f07264736f6c634300081a0033",
									".code": [
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "80"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "CALLDATALOAD",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "E0"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "SHR",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "56688700"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "33"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "CC2A9A5B"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "34"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "E15CC8DA"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "35"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "E15CC8DA"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "29"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "E63AB1E9"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "30"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "F14210A6"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "31"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "F72C0D8B"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "32"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "tag",
											"source": 16,
											"value": "35"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "CC2A9A5B"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "25"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "D547741F"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "26"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "D9A37AD2"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "27"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "DA069683"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "28"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "tag",
											"source": 16,
											"value": "34"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "A201CCF6"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "36"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "A201CCF6"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "21"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "A217FDDF"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "22"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "AD3CB1CC"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "23"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "C7088313"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "tag",
											"source": 16,
											"value": "36"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "56688700"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "17"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "5C975ABB"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "18"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "8456CB59"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "19"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "91D14854"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "tag",
											"source": 16,
											"value": "33"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "2F2FF15D"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "37"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "49F0346E"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "38"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "49F0346E"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "13"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "4F1EF286"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "14"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "51422E97"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "15"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "52D1902D"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "16"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "tag",
											"source": 16,
											"value": "38"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "2F2FF15D"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "9"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "34AAB064"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "10"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "36568ABE"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "11"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "3F4BA83A"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "12"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "tag",
											"source": 16,
											"value": "37"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "B0FD47E"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "39"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "B0FD47E"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "5"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "242F0551"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "6"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "248A9CA3"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "7"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "2D11C58A"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "8"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "tag",
											"source": 16,
											"value": "39"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "1FFC9A7"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "23245D7"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "3"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "6B091F9"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "tag",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 638,
											"end": 8779,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "tag",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "43"
										},
										{
											"begin": 3443,
											"end": 3645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "tag",
											"source": 0,
											"value": "42"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3443,
											"end": 3645,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "tag",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 470,
											"end": 484,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 470,
											"end": 484,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 463,
											"end": 485,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 445,
											"end": 486,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 445,
											"end": 486,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 433,
											"end": 435,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 418,
											"end": 436,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "tag",
											"source": 0,
											"value": "45"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 8625,
											"end": 8777,
											"name": "tag",
											"source": 16,
											"value": "3"
										},
										{
											"begin": 8625,
											"end": 8777,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8625,
											"end": 8777,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 8625,
											"end": 8777,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 8625,
											"end": 8777,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 8625,
											"end": 8777,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "47"
										},
										{
											"begin": 8625,
											"end": 8777,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 8625,
											"end": 8777,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8625,
											"end": 8777,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 8625,
											"end": 8777,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 8625,
											"end": 8777,
											"name": "tag",
											"source": 16,
											"value": "47"
										},
										{
											"begin": 8625,
											"end": 8777,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8625,
											"end": 8777,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "48"
										},
										{
											"begin": 8625,
											"end": 8777,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "49"
										},
										{
											"begin": 8625,
											"end": 8777,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 8625,
											"end": 8777,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 8625,
											"end": 8777,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "50"
										},
										{
											"begin": 8625,
											"end": 8777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8625,
											"end": 8777,
											"name": "tag",
											"source": 16,
											"value": "49"
										},
										{
											"begin": 8625,
											"end": 8777,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8625,
											"end": 8777,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "51"
										},
										{
											"begin": 8625,
											"end": 8777,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8625,
											"end": 8777,
											"name": "tag",
											"source": 16,
											"value": "48"
										},
										{
											"begin": 8625,
											"end": 8777,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8625,
											"end": 8777,
											"name": "STOP",
											"source": 16
										},
										{
											"begin": 8456,
											"end": 8619,
											"name": "tag",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 8456,
											"end": 8619,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8456,
											"end": 8619,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 8456,
											"end": 8619,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 8456,
											"end": 8619,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 8456,
											"end": 8619,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "52"
										},
										{
											"begin": 8456,
											"end": 8619,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 8456,
											"end": 8619,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8456,
											"end": 8619,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 8456,
											"end": 8619,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 8456,
											"end": 8619,
											"name": "tag",
											"source": 16,
											"value": "52"
										},
										{
											"begin": 8456,
											"end": 8619,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8456,
											"end": 8619,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "48"
										},
										{
											"begin": 8456,
											"end": 8619,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "54"
										},
										{
											"begin": 8456,
											"end": 8619,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 8456,
											"end": 8619,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 8456,
											"end": 8619,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "55"
										},
										{
											"begin": 8456,
											"end": 8619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8456,
											"end": 8619,
											"name": "tag",
											"source": 16,
											"value": "54"
										},
										{
											"begin": 8456,
											"end": 8619,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8456,
											"end": 8619,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "56"
										},
										{
											"begin": 8456,
											"end": 8619,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "tag",
											"source": 16,
											"value": "5"
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "57"
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "tag",
											"source": 16,
											"value": "57"
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "58"
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "59"
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "60"
										},
										{
											"begin": 1283,
											"end": 1338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "tag",
											"source": 16,
											"value": "59"
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "tag",
											"source": 16,
											"value": "58"
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1690,
											"end": 1715,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 1690,
											"end": 1715,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1690,
											"end": 1715,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1746,
											"end": 1748,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1731,
											"end": 1749,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1731,
											"end": 1749,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1724,
											"end": 1758,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1724,
											"end": 1758,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1724,
											"end": 1758,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 1724,
											"end": 1758,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1774,
											"end": 1792,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1774,
											"end": 1792,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1774,
											"end": 1792,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1767,
											"end": 1801,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1678,
											"end": 1680,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 1663,
											"end": 1681,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1283,
											"end": 1338,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "45"
										},
										{
											"begin": 1488,
											"end": 1807,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 890,
											"end": 974,
											"name": "tag",
											"source": 16,
											"value": "6"
										},
										{
											"begin": 890,
											"end": 974,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 890,
											"end": 974,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 890,
											"end": 974,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 890,
											"end": 974,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 890,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 890,
											"end": 974,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 890,
											"end": 974,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 890,
											"end": 974,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 890,
											"end": 974,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 890,
											"end": 974,
											"name": "tag",
											"source": 16,
											"value": "64"
										},
										{
											"begin": 890,
											"end": 974,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 890,
											"end": 974,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 890,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "65"
										},
										{
											"begin": 939,
											"end": 974,
											"name": "PUSH",
											"source": 16,
											"value": "77E60B99A50D27FB027F6912A507D956105B4148ADAB27A86D235C8BCCA8FA2F"
										},
										{
											"begin": 890,
											"end": 974,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 890,
											"end": 974,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 890,
											"end": 974,
											"name": "tag",
											"source": 16,
											"value": "65"
										},
										{
											"begin": 890,
											"end": 974,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 890,
											"end": 974,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 890,
											"end": 974,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1958,
											"end": 1983,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1958,
											"end": 1983,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1958,
											"end": 1983,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1946,
											"end": 1948,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1931,
											"end": 1949,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 890,
											"end": 974,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "45"
										},
										{
											"begin": 1812,
											"end": 1989,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "tag",
											"source": 0,
											"value": "69"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "50"
										},
										{
											"begin": 4759,
											"end": 4950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "tag",
											"source": 0,
											"value": "71"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4759,
											"end": 4950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 981,
											"end": 1017,
											"name": "tag",
											"source": 16,
											"value": "8"
										},
										{
											"begin": 981,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 981,
											"end": 1017,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 981,
											"end": 1017,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 981,
											"end": 1017,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 981,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "75"
										},
										{
											"begin": 981,
											"end": 1017,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 981,
											"end": 1017,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 981,
											"end": 1017,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 981,
											"end": 1017,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 981,
											"end": 1017,
											"name": "tag",
											"source": 16,
											"value": "75"
										},
										{
											"begin": 981,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 981,
											"end": 1017,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 981,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "65"
										},
										{
											"begin": 1016,
											"end": 1017,
											"name": "PUSH",
											"source": 16,
											"value": "3"
										},
										{
											"begin": 981,
											"end": 1017,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 981,
											"end": 1017,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "tag",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 5246,
											"end": 5382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "tag",
											"source": 0,
											"value": "82"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 5246,
											"end": 5382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1036,
											"end": 1069,
											"name": "tag",
											"source": 16,
											"value": "10"
										},
										{
											"begin": 1036,
											"end": 1069,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1036,
											"end": 1069,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 1036,
											"end": 1069,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1036,
											"end": 1069,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1036,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "85"
										},
										{
											"begin": 1036,
											"end": 1069,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1036,
											"end": 1069,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1036,
											"end": 1069,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1036,
											"end": 1069,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1036,
											"end": 1069,
											"name": "tag",
											"source": 16,
											"value": "85"
										},
										{
											"begin": 1036,
											"end": 1069,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1036,
											"end": 1069,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1036,
											"end": 1069,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 1036,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "86"
										},
										{
											"begin": 1036,
											"end": 1069,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1036,
											"end": 1069,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1036,
											"end": 1069,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1036,
											"end": 1069,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1036,
											"end": 1069,
											"name": "tag",
											"source": 16,
											"value": "86"
										},
										{
											"begin": 1036,
											"end": 1069,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1036,
											"end": 1069,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 1036,
											"end": 1069,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2968,
											"end": 3000,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2968,
											"end": 3000,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2968,
											"end": 3000,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2950,
											"end": 3001,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2950,
											"end": 3001,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2938,
											"end": 2940,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2923,
											"end": 2941,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1036,
											"end": 1069,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "45"
										},
										{
											"begin": 2779,
											"end": 3007,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "tag",
											"source": 0,
											"value": "90"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 6348,
											"end": 6593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "tag",
											"source": 0,
											"value": "92"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 6348,
											"end": 6593,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2677,
											"end": 2752,
											"name": "tag",
											"source": 16,
											"value": "12"
										},
										{
											"begin": 2677,
											"end": 2752,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2677,
											"end": 2752,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 2677,
											"end": 2752,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2677,
											"end": 2752,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2677,
											"end": 2752,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "94"
										},
										{
											"begin": 2677,
											"end": 2752,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2677,
											"end": 2752,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2677,
											"end": 2752,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2677,
											"end": 2752,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2677,
											"end": 2752,
											"name": "tag",
											"source": 16,
											"value": "94"
										},
										{
											"begin": 2677,
											"end": 2752,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2677,
											"end": 2752,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2677,
											"end": 2752,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "48"
										},
										{
											"begin": 2677,
											"end": 2752,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "96"
										},
										{
											"begin": 2677,
											"end": 2752,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6319,
											"end": 6960,
											"name": "tag",
											"source": 16,
											"value": "13"
										},
										{
											"begin": 6319,
											"end": 6960,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6319,
											"end": 6960,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "48"
										},
										{
											"begin": 6319,
											"end": 6960,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "98"
										},
										{
											"begin": 6319,
											"end": 6960,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 6319,
											"end": 6960,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 6319,
											"end": 6960,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "99"
										},
										{
											"begin": 6319,
											"end": 6960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6319,
											"end": 6960,
											"name": "tag",
											"source": 16,
											"value": "98"
										},
										{
											"begin": 6319,
											"end": 6960,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6319,
											"end": 6960,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 6319,
											"end": 6960,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "tag",
											"source": 2,
											"value": "14"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "48"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "103"
										},
										{
											"begin": 4158,
											"end": 4372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "tag",
											"source": 2,
											"value": "102"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 4158,
											"end": 4372,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4824,
											"end": 5527,
											"name": "tag",
											"source": 16,
											"value": "15"
										},
										{
											"begin": 4824,
											"end": 5527,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4824,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "48"
										},
										{
											"begin": 4824,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "106"
										},
										{
											"begin": 4824,
											"end": 5527,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 4824,
											"end": 5527,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 4824,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "55"
										},
										{
											"begin": 4824,
											"end": 5527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4824,
											"end": 5527,
											"name": "tag",
											"source": 16,
											"value": "106"
										},
										{
											"begin": 4824,
											"end": 5527,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4824,
											"end": 5527,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "107"
										},
										{
											"begin": 4824,
											"end": 5527,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "tag",
											"source": 2,
											"value": "16"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "tag",
											"source": 2,
											"value": "108"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "65"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 3705,
											"end": 3839,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2758,
											"end": 4007,
											"name": "tag",
											"source": 16,
											"value": "17"
										},
										{
											"begin": 2758,
											"end": 4007,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2758,
											"end": 4007,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "65"
										},
										{
											"begin": 2758,
											"end": 4007,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "113"
										},
										{
											"begin": 2758,
											"end": 4007,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 2758,
											"end": 4007,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 2758,
											"end": 4007,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "55"
										},
										{
											"begin": 2758,
											"end": 4007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2758,
											"end": 4007,
											"name": "tag",
											"source": 16,
											"value": "113"
										},
										{
											"begin": 2758,
											"end": 4007,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2758,
											"end": 4007,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "114"
										},
										{
											"begin": 2758,
											"end": 4007,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "tag",
											"source": 6,
											"value": "18"
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "CALLVALUE",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "PUSH",
											"source": 6,
											"value": "0"
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "tag",
											"source": 6,
											"value": "116"
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "C0C65A3718F3702D917C44106B91645B509D2E2D0979B70495C3BABCE192339F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "41"
										},
										{
											"begin": 2692,
											"end": 2837,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2600,
											"end": 2671,
											"name": "tag",
											"source": 16,
											"value": "19"
										},
										{
											"begin": 2600,
											"end": 2671,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2600,
											"end": 2671,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 2600,
											"end": 2671,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2600,
											"end": 2671,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 2600,
											"end": 2671,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "120"
										},
										{
											"begin": 2600,
											"end": 2671,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2600,
											"end": 2671,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2600,
											"end": 2671,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2600,
											"end": 2671,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 2600,
											"end": 2671,
											"name": "tag",
											"source": 16,
											"value": "120"
										},
										{
											"begin": 2600,
											"end": 2671,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2600,
											"end": 2671,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2600,
											"end": 2671,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "48"
										},
										{
											"begin": 2600,
											"end": 2671,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "122"
										},
										{
											"begin": 2600,
											"end": 2671,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "tag",
											"source": 0,
											"value": "123"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "41"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 3732,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "tag",
											"source": 0,
											"value": "125"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 3732,
											"end": 3939,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "tag",
											"source": 16,
											"value": "21"
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "128"
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "tag",
											"source": 16,
											"value": "128"
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "129"
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "130"
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "55"
										},
										{
											"begin": 4013,
											"end": 4818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "tag",
											"source": 16,
											"value": "130"
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "131"
										},
										{
											"begin": 4013,
											"end": 4818,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "tag",
											"source": 16,
											"value": "129"
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 4753,
											"end": 4778,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4753,
											"end": 4778,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4753,
											"end": 4778,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4809,
											"end": 4811,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4794,
											"end": 4812,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4794,
											"end": 4812,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4787,
											"end": 4821,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4787,
											"end": 4821,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4787,
											"end": 4821,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4787,
											"end": 4821,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4726,
											"end": 4744,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "45"
										},
										{
											"begin": 4579,
											"end": 4827,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "tag",
											"source": 0,
											"value": "134"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "65"
										},
										{
											"begin": 2362,
											"end": 2366,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 2317,
											"end": 2366,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "CALLVALUE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "138"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "352E302E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "DC"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "tag",
											"source": 2,
											"value": "139"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "45"
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1819,
											"end": 1877,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "142"
										},
										{
											"begin": 1819,
											"end": 1877,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 7987,
											"end": 8242,
											"name": "tag",
											"source": 16,
											"value": "24"
										},
										{
											"begin": 7987,
											"end": 8242,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7987,
											"end": 8242,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 7987,
											"end": 8242,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 7987,
											"end": 8242,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 7987,
											"end": 8242,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "143"
										},
										{
											"begin": 7987,
											"end": 8242,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 7987,
											"end": 8242,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7987,
											"end": 8242,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 7987,
											"end": 8242,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 7987,
											"end": 8242,
											"name": "tag",
											"source": 16,
											"value": "143"
										},
										{
											"begin": 7987,
											"end": 8242,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7987,
											"end": 8242,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "48"
										},
										{
											"begin": 7987,
											"end": 8242,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "145"
										},
										{
											"begin": 7987,
											"end": 8242,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 7987,
											"end": 8242,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 7987,
											"end": 8242,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "146"
										},
										{
											"begin": 7987,
											"end": 8242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7987,
											"end": 8242,
											"name": "tag",
											"source": 16,
											"value": "145"
										},
										{
											"begin": 7987,
											"end": 8242,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7987,
											"end": 8242,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "147"
										},
										{
											"begin": 7987,
											"end": 8242,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1960,
											"end": 2594,
											"name": "tag",
											"source": 16,
											"value": "25"
										},
										{
											"begin": 1960,
											"end": 2594,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1960,
											"end": 2594,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 1960,
											"end": 2594,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1960,
											"end": 2594,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1960,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "148"
										},
										{
											"begin": 1960,
											"end": 2594,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1960,
											"end": 2594,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1960,
											"end": 2594,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1960,
											"end": 2594,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1960,
											"end": 2594,
											"name": "tag",
											"source": 16,
											"value": "148"
										},
										{
											"begin": 1960,
											"end": 2594,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1960,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "48"
										},
										{
											"begin": 1960,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "150"
										},
										{
											"begin": 1960,
											"end": 2594,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 1960,
											"end": 2594,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 1960,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "151"
										},
										{
											"begin": 1960,
											"end": 2594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1960,
											"end": 2594,
											"name": "tag",
											"source": 16,
											"value": "150"
										},
										{
											"begin": 1960,
											"end": 2594,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1960,
											"end": 2594,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "152"
										},
										{
											"begin": 1960,
											"end": 2594,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "tag",
											"source": 0,
											"value": "26"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "tag",
											"source": 0,
											"value": "153"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "48"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "83"
										},
										{
											"begin": 5662,
											"end": 5800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "tag",
											"source": 0,
											"value": "155"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 5662,
											"end": 5800,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6966,
											"end": 7493,
											"name": "tag",
											"source": 16,
											"value": "27"
										},
										{
											"begin": 6966,
											"end": 7493,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6966,
											"end": 7493,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 6966,
											"end": 7493,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6966,
											"end": 7493,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 6966,
											"end": 7493,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "157"
										},
										{
											"begin": 6966,
											"end": 7493,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 6966,
											"end": 7493,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6966,
											"end": 7493,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6966,
											"end": 7493,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 6966,
											"end": 7493,
											"name": "tag",
											"source": 16,
											"value": "157"
										},
										{
											"begin": 6966,
											"end": 7493,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6966,
											"end": 7493,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "48"
										},
										{
											"begin": 6966,
											"end": 7493,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "159"
										},
										{
											"begin": 6966,
											"end": 7493,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 6966,
											"end": 7493,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 6966,
											"end": 7493,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "99"
										},
										{
											"begin": 6966,
											"end": 7493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6966,
											"end": 7493,
											"name": "tag",
											"source": 16,
											"value": "159"
										},
										{
											"begin": 6966,
											"end": 7493,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6966,
											"end": 7493,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "160"
										},
										{
											"begin": 6966,
											"end": 7493,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1075,
											"end": 1107,
											"name": "tag",
											"source": 16,
											"value": "28"
										},
										{
											"begin": 1075,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 1075,
											"end": 1107,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 1075,
											"end": 1107,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1075,
											"end": 1107,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 1075,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "161"
										},
										{
											"begin": 1075,
											"end": 1107,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 1075,
											"end": 1107,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 1075,
											"end": 1107,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 1075,
											"end": 1107,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 1075,
											"end": 1107,
											"name": "tag",
											"source": 16,
											"value": "161"
										},
										{
											"begin": 1075,
											"end": 1107,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 1075,
											"end": 1107,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 1075,
											"end": 1107,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 1075,
											"end": 1107,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "86"
										},
										{
											"begin": 1075,
											"end": 1107,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 1075,
											"end": 1107,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 1075,
											"end": 1107,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 1075,
											"end": 1107,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5533,
											"end": 6313,
											"name": "tag",
											"source": 16,
											"value": "29"
										},
										{
											"begin": 5533,
											"end": 6313,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5533,
											"end": 6313,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 5533,
											"end": 6313,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5533,
											"end": 6313,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5533,
											"end": 6313,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "166"
										},
										{
											"begin": 5533,
											"end": 6313,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5533,
											"end": 6313,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5533,
											"end": 6313,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5533,
											"end": 6313,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 5533,
											"end": 6313,
											"name": "tag",
											"source": 16,
											"value": "166"
										},
										{
											"begin": 5533,
											"end": 6313,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5533,
											"end": 6313,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "48"
										},
										{
											"begin": 5533,
											"end": 6313,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "168"
										},
										{
											"begin": 5533,
											"end": 6313,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 5533,
											"end": 6313,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 5533,
											"end": 6313,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "146"
										},
										{
											"begin": 5533,
											"end": 6313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5533,
											"end": 6313,
											"name": "tag",
											"source": 16,
											"value": "168"
										},
										{
											"begin": 5533,
											"end": 6313,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5533,
											"end": 6313,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "169"
										},
										{
											"begin": 5533,
											"end": 6313,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 750,
											"end": 812,
											"name": "tag",
											"source": 16,
											"value": "30"
										},
										{
											"begin": 750,
											"end": 812,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 750,
											"end": 812,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 750,
											"end": 812,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 750,
											"end": 812,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 750,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "170"
										},
										{
											"begin": 750,
											"end": 812,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 750,
											"end": 812,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 750,
											"end": 812,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 750,
											"end": 812,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 750,
											"end": 812,
											"name": "tag",
											"source": 16,
											"value": "170"
										},
										{
											"begin": 750,
											"end": 812,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 750,
											"end": 812,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 750,
											"end": 812,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "65"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9B87106A812D214D41AD9B68A21119E2948EAAF1040375C939EC808B8862455C"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 750,
											"end": 812,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 750,
											"end": 812,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8248,
											"end": 8450,
											"name": "tag",
											"source": 16,
											"value": "31"
										},
										{
											"begin": 8248,
											"end": 8450,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8248,
											"end": 8450,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 8248,
											"end": 8450,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 8248,
											"end": 8450,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 8248,
											"end": 8450,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "174"
										},
										{
											"begin": 8248,
											"end": 8450,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 8248,
											"end": 8450,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8248,
											"end": 8450,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 8248,
											"end": 8450,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 8248,
											"end": 8450,
											"name": "tag",
											"source": 16,
											"value": "174"
										},
										{
											"begin": 8248,
											"end": 8450,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 8248,
											"end": 8450,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "48"
										},
										{
											"begin": 8248,
											"end": 8450,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "176"
										},
										{
											"begin": 8248,
											"end": 8450,
											"name": "CALLDATASIZE",
											"source": 16
										},
										{
											"begin": 8248,
											"end": 8450,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 8248,
											"end": 8450,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "50"
										},
										{
											"begin": 8248,
											"end": 8450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8248,
											"end": 8450,
											"name": "tag",
											"source": 16,
											"value": "176"
										},
										{
											"begin": 8248,
											"end": 8450,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8248,
											"end": 8450,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "177"
										},
										{
											"begin": 8248,
											"end": 8450,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 818,
											"end": 884,
											"name": "tag",
											"source": 16,
											"value": "32"
										},
										{
											"begin": 818,
											"end": 884,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 818,
											"end": 884,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 818,
											"end": 884,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 818,
											"end": 884,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 818,
											"end": 884,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "178"
										},
										{
											"begin": 818,
											"end": 884,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 818,
											"end": 884,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 818,
											"end": 884,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 818,
											"end": 884,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 818,
											"end": 884,
											"name": "tag",
											"source": 16,
											"value": "178"
										},
										{
											"begin": 818,
											"end": 884,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 818,
											"end": 884,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 818,
											"end": 884,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "65"
										},
										{
											"begin": 858,
											"end": 884,
											"name": "PUSH",
											"source": 16,
											"value": "189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3"
										},
										{
											"begin": 818,
											"end": 884,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 818,
											"end": 884,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "tag",
											"source": 0,
											"value": "44"
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3528,
											"end": 3532,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3551,
											"end": 3598,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3598,
											"name": "AND",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7965DB0B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3551,
											"end": 3598,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3598,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3551,
											"end": 3638,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 3551,
											"end": 3638,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1FFC9A7"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 1133,
											"end": 1173,
											"name": "DUP4",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1173,
											"name": "AND",
											"source": 7
										},
										{
											"begin": 1133,
											"end": 1173,
											"name": "EQ",
											"source": 7
										},
										{
											"begin": 3602,
											"end": 3638,
											"name": "tag",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 3602,
											"end": 3638,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3544,
											"end": 3638,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 3443,
											"end": 3645,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3443,
											"end": 3645,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8625,
											"end": 8777,
											"name": "tag",
											"source": 16,
											"value": "51"
										},
										{
											"begin": 8625,
											"end": 8777,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2362,
											"end": 2366,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 2362,
											"end": 2366,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "187"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8711,
											"end": 8717,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 8711,
											"end": 8717,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 8711,
											"end": 8770,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "21421707"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8711,
											"end": 8770,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8711,
											"end": 8717,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8717,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8717,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8717,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8734,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "42842E0E"
										},
										{
											"begin": 8711,
											"end": 8734,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "190"
										},
										{
											"begin": 8711,
											"end": 8770,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8743,
											"end": 8747,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 16
										},
										{
											"begin": 8743,
											"end": 8747,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8750,
											"end": 8760,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 8750,
											"end": 8760,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8762,
											"end": 8769,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 8762,
											"end": 8769,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "191"
										},
										{
											"begin": 8711,
											"end": 8770,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "190"
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "192"
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8711,
											"end": 8770,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "192"
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "194"
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8711,
											"end": 8770,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "194"
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8711,
											"end": 8770,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8625,
											"end": 8777,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8625,
											"end": 8777,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8625,
											"end": 8777,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8456,
											"end": 8619,
											"name": "tag",
											"source": 16,
											"value": "56"
										},
										{
											"begin": 8456,
											"end": 8619,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2362,
											"end": 2366,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 2362,
											"end": 2366,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "196"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 8559,
											"end": 8612,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8559,
											"end": 8612,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8593,
											"end": 8603,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 8559,
											"end": 8612,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7491,
											"end": 7542,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7558,
											"end": 7576,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 7558,
											"end": 7576,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7558,
											"end": 7576,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7551,
											"end": 7585,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 7551,
											"end": 7585,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7551,
											"end": 7585,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8559,
											"end": 8592,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8592,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8592,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8592,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "A9059CBB"
										},
										{
											"begin": 8559,
											"end": 8592,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7464,
											"end": 7482,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 7464,
											"end": 7482,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "201"
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8559,
											"end": 8612,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "201"
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "202"
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "203"
										},
										{
											"begin": 8559,
											"end": 8612,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "202"
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8559,
											"end": 8612,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8456,
											"end": 8619,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8456,
											"end": 8619,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8456,
											"end": 8619,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8456,
											"end": 8619,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "tag",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 4759,
											"end": 4950,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4824,
											"end": 4831,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "B3DA67D1B252AEAB7C8063542D95E75F82A5307A82535949BC38F7CF7BA8897F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4933,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4943,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 4919,
											"end": 4943,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4943,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 4919,
											"end": 4943,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 4759,
											"end": 4950,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "tag",
											"source": 0,
											"value": "84"
										},
										{
											"begin": 5246,
											"end": 5382,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5338,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 5333,
											"end": 5337,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5332,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 5320,
											"end": 5338,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5320,
											"end": 5338,
											"name": "tag",
											"source": 0,
											"value": "207"
										},
										{
											"begin": 5320,
											"end": 5338,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "209"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5350,
											"end": 5375,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 5361,
											"end": 5365,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5367,
											"end": 5374,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5350,
											"end": 5360,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 5350,
											"end": 5375,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "tag",
											"source": 0,
											"value": "93"
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6441,
											"end": 6475,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6441,
											"end": 6475,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 6441,
											"end": 6475,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 6437,
											"end": 6539,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 6437,
											"end": 6539,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "334BD919"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 6498,
											"end": 6528,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 6437,
											"end": 6539,
											"name": "tag",
											"source": 0,
											"value": "216"
										},
										{
											"begin": 6437,
											"end": 6539,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6549,
											"end": 6586,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 6561,
											"end": 6565,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6567,
											"end": 6585,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 6549,
											"end": 6560,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 6549,
											"end": 6586,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6549,
											"end": 6586,
											"name": "tag",
											"source": 0,
											"value": "217"
										},
										{
											"begin": 6549,
											"end": 6586,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6549,
											"end": 6586,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 6348,
											"end": 6593,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 2677,
											"end": 2752,
											"name": "tag",
											"source": 16,
											"value": "96"
										},
										{
											"begin": 2677,
											"end": 2752,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9B87106A812D214D41AD9B68A21119E2948EAAF1040375C939EC808B8862455C"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "220"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2735,
											"end": 2745,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "222"
										},
										{
											"begin": 2735,
											"end": 2743,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "223"
										},
										{
											"begin": 2735,
											"end": 2745,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2735,
											"end": 2745,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "222"
										},
										{
											"begin": 2735,
											"end": 2745,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2677,
											"end": 2752,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2677,
											"end": 2752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6319,
											"end": 6960,
											"name": "tag",
											"source": 16,
											"value": "100"
										},
										{
											"begin": 6319,
											"end": 6960,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 2316,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 2316,
											"end": 2335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "tag",
											"source": 6,
											"value": "225"
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6436,
											"end": 6437,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6424,
											"end": 6433,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 6424,
											"end": 6437,
											"modifierDepth": 1,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 6416,
											"end": 6478,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "228"
										},
										{
											"begin": 6416,
											"end": 6478,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 6416,
											"end": 6478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 6416,
											"end": 6478,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6416,
											"end": 6478,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6416,
											"end": 6478,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6416,
											"end": 6478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 6416,
											"end": 6478,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6416,
											"end": 6478,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "229"
										},
										{
											"begin": 6416,
											"end": 6478,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6416,
											"end": 6478,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "230"
										},
										{
											"begin": 6416,
											"end": 6478,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6416,
											"end": 6478,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "229"
										},
										{
											"begin": 6416,
											"end": 6478,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6416,
											"end": 6478,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 6416,
											"end": 6478,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 6416,
											"end": 6478,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6416,
											"end": 6478,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6416,
											"end": 6478,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 6416,
											"end": 6478,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6416,
											"end": 6478,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 6416,
											"end": 6478,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "228"
										},
										{
											"begin": 6416,
											"end": 6478,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6502,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 6496,
											"end": 6502,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 6496,
											"end": 6519,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "31A9108F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6496,
											"end": 6519,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 6496,
											"end": 6519,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1958,
											"end": 1983,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1958,
											"end": 1983,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1958,
											"end": 1983,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6531,
											"end": 6535,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 16
										},
										{
											"begin": 6531,
											"end": 6535,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6496,
											"end": 6502,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6502,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "6352211E"
										},
										{
											"begin": 6496,
											"end": 6510,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1931,
											"end": 1949,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 1931,
											"end": 1949,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "233"
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6519,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "233"
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "234"
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "235"
										},
										{
											"begin": 6496,
											"end": 6519,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "234"
										},
										{
											"begin": 6496,
											"end": 6519,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6496,
											"end": 6536,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 6496,
											"end": 6536,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 6488,
											"end": 6566,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "236"
										},
										{
											"begin": 6488,
											"end": 6566,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 6488,
											"end": 6566,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 6488,
											"end": 6566,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6488,
											"end": 6566,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6488,
											"end": 6566,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8741,
											"end": 8743,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6488,
											"end": 6566,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 6488,
											"end": 6566,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6488,
											"end": 6566,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8723,
											"end": 8744,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8780,
											"end": 8782,
											"name": "PUSH",
											"source": 17,
											"value": "19"
										},
										{
											"begin": 8760,
											"end": 8778,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 8760,
											"end": 8778,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8760,
											"end": 8778,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8753,
											"end": 8783,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8819,
											"end": 8846,
											"name": "PUSH",
											"source": 17,
											"value": "4E4654206E6F74206F776E656420627920636F6E747261637400000000000000"
										},
										{
											"begin": 8799,
											"end": 8817,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 8799,
											"end": 8817,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8799,
											"end": 8817,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8792,
											"end": 8847,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8864,
											"end": 8882,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 8864,
											"end": 8882,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6488,
											"end": 6566,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "229"
										},
										{
											"begin": 8539,
											"end": 8888,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6488,
											"end": 6566,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "236"
										},
										{
											"begin": 6488,
											"end": 6566,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6577,
											"end": 6594,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6597,
											"end": 6661,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "239"
										},
										{
											"begin": 6613,
											"end": 6622,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 6624,
											"end": 6657,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "240"
										},
										{
											"begin": 6613,
											"end": 6622,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6624,
											"end": 6645,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 16
										},
										{
											"begin": 6624,
											"end": 6657,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "241"
										},
										{
											"begin": 6624,
											"end": 6657,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6624,
											"end": 6657,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "240"
										},
										{
											"begin": 6624,
											"end": 6657,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6659,
											"end": 6660,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 6597,
											"end": 6612,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "242"
										},
										{
											"begin": 6597,
											"end": 6661,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6597,
											"end": 6661,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "239"
										},
										{
											"begin": 6597,
											"end": 6661,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6577,
											"end": 6661,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6577,
											"end": 6661,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6721,
											"end": 6727,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6708,
											"end": 6717,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6708,
											"end": 6727,
											"modifierDepth": 1,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 6708,
											"end": 6727,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 6700,
											"end": 6759,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "243"
										},
										{
											"begin": 6700,
											"end": 6759,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 6700,
											"end": 6759,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 6700,
											"end": 6759,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6700,
											"end": 6759,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6700,
											"end": 6759,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6700,
											"end": 6759,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 6700,
											"end": 6759,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6700,
											"end": 6759,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "229"
										},
										{
											"begin": 6700,
											"end": 6759,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6700,
											"end": 6759,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "245"
										},
										{
											"begin": 6700,
											"end": 6759,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6700,
											"end": 6759,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "243"
										},
										{
											"begin": 6700,
											"end": 6759,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6770,
											"end": 6809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 6770,
											"end": 6809,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 6778,
											"end": 6788,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 6778,
											"end": 6788,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6770,
											"end": 6809,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6770,
											"end": 6809,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 6770,
											"end": 6809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "8FC"
										},
										{
											"begin": 6770,
											"end": 6809,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 6770,
											"end": 6809,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6799,
											"end": 6808,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 6799,
											"end": 6808,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6770,
											"end": 6809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6770,
											"end": 6809,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6770,
											"end": 6809,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6770,
											"end": 6809,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6799,
											"end": 6808,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 6778,
											"end": 6788,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 6770,
											"end": 6809,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 6770,
											"end": 6809,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 16
										},
										{
											"begin": 6770,
											"end": 6809,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 6770,
											"end": 6809,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6770,
											"end": 6809,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6770,
											"end": 6809,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6770,
											"end": 6809,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6770,
											"end": 6809,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 6770,
											"end": 6809,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6770,
											"end": 6809,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 6770,
											"end": 6809,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "247"
										},
										{
											"begin": 6770,
											"end": 6809,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 6770,
											"end": 6809,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 6770,
											"end": 6809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6770,
											"end": 6809,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6770,
											"end": 6809,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 16
										},
										{
											"begin": 6770,
											"end": 6809,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 6770,
											"end": 6809,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6770,
											"end": 6809,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 6770,
											"end": 6809,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "247"
										},
										{
											"begin": 6770,
											"end": 6809,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6819,
											"end": 6825,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 6819,
											"end": 6825,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 6819,
											"end": 6878,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "21421707"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6819,
											"end": 6878,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6819,
											"end": 6825,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6825,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6825,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6825,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6842,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "42842E0E"
										},
										{
											"begin": 6819,
											"end": 6842,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "248"
										},
										{
											"begin": 6819,
											"end": 6878,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6851,
											"end": 6855,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 16
										},
										{
											"begin": 6851,
											"end": 6855,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6858,
											"end": 6868,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 6858,
											"end": 6868,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6870,
											"end": 6877,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 6870,
											"end": 6877,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "191"
										},
										{
											"begin": 6819,
											"end": 6878,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "248"
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "249"
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6819,
											"end": 6878,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "249"
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "251"
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6819,
											"end": 6878,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "251"
										},
										{
											"begin": 6819,
											"end": 6878,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6925,
											"end": 6931,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 6925,
											"end": 6931,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 6894,
											"end": 6953,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 6894,
											"end": 6953,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1958,
											"end": 1983,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1958,
											"end": 1983,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1958,
											"end": 1983,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 6934,
											"end": 6941,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 6934,
											"end": 6941,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6925,
											"end": 6931,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6925,
											"end": 6931,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6925,
											"end": 6931,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 6925,
											"end": 6931,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6905,
											"end": 6915,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 6905,
											"end": 6915,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6894,
											"end": 6953,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "9181665DB8D8D5FCCE186F7B2CFEBE8FBCDC3A003664BBFCE2E790F57B076E65"
										},
										{
											"begin": 6894,
											"end": 6953,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1946,
											"end": 1948,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1931,
											"end": 1949,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6894,
											"end": 6953,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "252"
										},
										{
											"begin": 6894,
											"end": 6953,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6894,
											"end": 6953,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 6894,
											"end": 6953,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 6894,
											"end": 6953,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6894,
											"end": 6953,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6894,
											"end": 6953,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 6894,
											"end": 6953,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6894,
											"end": 6953,
											"modifierDepth": 1,
											"name": "LOG4",
											"source": 16
										},
										{
											"begin": 6406,
											"end": 6960,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6319,
											"end": 6960,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6319,
											"end": 6960,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6319,
											"end": 6960,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "tag",
											"source": 2,
											"value": "104"
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 2653,
											"end": 2666,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 2653,
											"end": 2664,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 2653,
											"end": 2666,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2653,
											"end": 2666,
											"name": "tag",
											"source": 2,
											"value": "254"
										},
										{
											"begin": 2653,
											"end": 2666,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4309,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 4291,
											"end": 4308,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4290,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "258"
										},
										{
											"begin": 4273,
											"end": 4309,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4273,
											"end": 4309,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "257"
										},
										{
											"begin": 4273,
											"end": 4309,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4319,
											"end": 4365,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 4341,
											"end": 4358,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4360,
											"end": 4364,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 4319,
											"end": 4340,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 4319,
											"end": 4365,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4319,
											"end": 4365,
											"modifierDepth": 1,
											"name": "tag",
											"source": 2,
											"value": "259"
										},
										{
											"begin": 4319,
											"end": 4365,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4158,
											"end": 4372,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 4824,
											"end": 5527,
											"name": "tag",
											"source": 16,
											"value": "107"
										},
										{
											"begin": 4824,
											"end": 5527,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 2316,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 2316,
											"end": 2335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "tag",
											"source": 6,
											"value": "262"
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 4945,
											"end": 4946,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4933,
											"end": 4942,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 4933,
											"end": 4946,
											"modifierDepth": 1,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 4925,
											"end": 4987,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "264"
										},
										{
											"begin": 4925,
											"end": 4987,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 4925,
											"end": 4987,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4925,
											"end": 4987,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4925,
											"end": 4987,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4925,
											"end": 4987,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4925,
											"end": 4987,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 4925,
											"end": 4987,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4925,
											"end": 4987,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "229"
										},
										{
											"begin": 4925,
											"end": 4987,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4925,
											"end": 4987,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "230"
										},
										{
											"begin": 4925,
											"end": 4987,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4925,
											"end": 4987,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "264"
										},
										{
											"begin": 4925,
											"end": 4987,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5026,
											"end": 5047,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5026,
											"end": 5047,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 4997,
											"end": 5023,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5026,
											"end": 5047,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5026,
											"end": 5047,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5026,
											"end": 5047,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5026,
											"end": 5040,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 5026,
											"end": 5047,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 5026,
											"end": 5047,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5026,
											"end": 5047,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 5026,
											"end": 5047,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5026,
											"end": 5047,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 5065,
											"end": 5079,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 5065,
											"end": 5079,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5065,
											"end": 5079,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5065,
											"end": 5079,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 5065,
											"end": 5083,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5065,
											"end": 5083,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5065,
											"end": 5083,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5065,
											"end": 5083,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5065,
											"end": 5107,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "266"
										},
										{
											"begin": 5065,
											"end": 5107,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5087,
											"end": 5103,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5087,
											"end": 5103,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 5087,
											"end": 5107,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5087,
											"end": 5107,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5065,
											"end": 5107,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "266"
										},
										{
											"begin": 5065,
											"end": 5107,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5057,
											"end": 5134,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "267"
										},
										{
											"begin": 5057,
											"end": 5134,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5057,
											"end": 5134,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 5057,
											"end": 5134,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5057,
											"end": 5134,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5057,
											"end": 5134,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5057,
											"end": 5134,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 5057,
											"end": 5134,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5057,
											"end": 5134,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "229"
										},
										{
											"begin": 5057,
											"end": 5134,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5057,
											"end": 5134,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "269"
										},
										{
											"begin": 5057,
											"end": 5134,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5057,
											"end": 5134,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "267"
										},
										{
											"begin": 5057,
											"end": 5134,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5145,
											"end": 5164,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5167,
											"end": 5227,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "270"
										},
										{
											"begin": 5183,
											"end": 5192,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 5194,
											"end": 5198,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 5194,
											"end": 5208,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 5194,
											"end": 5208,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5194,
											"end": 5208,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 5210,
											"end": 5214,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 5210,
											"end": 5226,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5210,
											"end": 5226,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5210,
											"end": 5226,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 5167,
											"end": 5182,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "242"
										},
										{
											"begin": 5167,
											"end": 5227,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5167,
											"end": 5227,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "270"
										},
										{
											"begin": 5167,
											"end": 5227,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5145,
											"end": 5227,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5145,
											"end": 5227,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5260,
											"end": 5269,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5245,
											"end": 5256,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5245,
											"end": 5269,
											"modifierDepth": 1,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 5245,
											"end": 5269,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5237,
											"end": 5301,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "271"
										},
										{
											"begin": 5237,
											"end": 5301,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5237,
											"end": 5301,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 5237,
											"end": 5301,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5237,
											"end": 5301,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5237,
											"end": 5301,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5237,
											"end": 5301,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 5237,
											"end": 5301,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5237,
											"end": 5301,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "229"
										},
										{
											"begin": 5237,
											"end": 5301,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5237,
											"end": 5301,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "245"
										},
										{
											"begin": 5237,
											"end": 5301,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5237,
											"end": 5301,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "271"
										},
										{
											"begin": 5237,
											"end": 5301,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5330,
											"end": 5339,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 5312,
											"end": 5316,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5312,
											"end": 5326,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 5312,
											"end": 5326,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5312,
											"end": 5326,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5312,
											"end": 5339,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5312,
											"end": 5339,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5312,
											"end": 5339,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 5312,
											"end": 5339,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "273"
										},
										{
											"begin": 5312,
											"end": 5339,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5312,
											"end": 5339,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5312,
											"end": 5339,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "274"
										},
										{
											"begin": 5312,
											"end": 5339,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5312,
											"end": 5339,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "273"
										},
										{
											"begin": 5312,
											"end": 5339,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5312,
											"end": 5339,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5312,
											"end": 5339,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5312,
											"end": 5339,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5349,
											"end": 5380,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5380,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 5369,
											"end": 5380,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5369,
											"end": 5380,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5353,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5353,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5365,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5349,
											"end": 5365,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5380,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "275"
										},
										{
											"begin": 5349,
											"end": 5380,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5369,
											"end": 5380,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 5369,
											"end": 5380,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5380,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "241"
										},
										{
											"begin": 5349,
											"end": 5380,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5380,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "275"
										},
										{
											"begin": 5349,
											"end": 5380,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5380,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5380,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5349,
											"end": 5380,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 5391,
											"end": 5449,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5391,
											"end": 5449,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5425,
											"end": 5435,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 5391,
											"end": 5449,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7491,
											"end": 7542,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7558,
											"end": 7576,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 7558,
											"end": 7576,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7558,
											"end": 7576,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7551,
											"end": 7585,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7551,
											"end": 7585,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7551,
											"end": 7585,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5391,
											"end": 5424,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5424,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5424,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5424,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "A9059CBB"
										},
										{
											"begin": 5391,
											"end": 5424,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7464,
											"end": 7482,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 7464,
											"end": 7482,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "278"
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5391,
											"end": 5449,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "278"
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "279"
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "203"
										},
										{
											"begin": 5391,
											"end": 5449,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "279"
										},
										{
											"begin": 5391,
											"end": 5449,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5465,
											"end": 5520,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 5465,
											"end": 5520,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5465,
											"end": 5520,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 4753,
											"end": 4778,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4753,
											"end": 4778,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4753,
											"end": 4778,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5510,
											"end": 5519,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 4809,
											"end": 4811,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4794,
											"end": 4812,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4794,
											"end": 4812,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4787,
											"end": 4821,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5465,
											"end": 5520,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 5465,
											"end": 5520,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 5465,
											"end": 5520,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5478,
											"end": 5488,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 5478,
											"end": 5488,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5465,
											"end": 5520,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "30B60EE4DC75C0FB04420331B13E9AD7F8FF8FC51EAC9C97D36FB20CCBE09D66"
										},
										{
											"begin": 5465,
											"end": 5520,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4726,
											"end": 4744,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5465,
											"end": 5520,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 5465,
											"end": 5520,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 5465,
											"end": 5520,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5465,
											"end": 5520,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 5465,
											"end": 5520,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 5465,
											"end": 5520,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5465,
											"end": 5520,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 16
										},
										{
											"begin": 4915,
											"end": 5527,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4915,
											"end": 5527,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4824,
											"end": 5527,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4824,
											"end": 5527,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4824,
											"end": 5527,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "tag",
											"source": 2,
											"value": "110"
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 3774,
											"end": 3781,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 2924,
											"end": 2944,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 2924,
											"end": 2942,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 2924,
											"end": 2944,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2924,
											"end": 2944,
											"name": "tag",
											"source": 2,
											"value": "282"
										},
										{
											"begin": 2924,
											"end": 2944,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3705,
											"end": 3839,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 3705,
											"end": 3839,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 2758,
											"end": 4007,
											"name": "tag",
											"source": 16,
											"value": "114"
										},
										{
											"begin": 2758,
											"end": 4007,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2856,
											"end": 2863,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 2316,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 2316,
											"end": 2335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "tag",
											"source": 6,
											"value": "286"
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2897,
											"end": 2898,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2883,
											"end": 2894,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 2883,
											"end": 2898,
											"modifierDepth": 1,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 2875,
											"end": 2941,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "288"
										},
										{
											"begin": 2875,
											"end": 2941,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2875,
											"end": 2941,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2875,
											"end": 2941,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2875,
											"end": 2941,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2875,
											"end": 2941,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2875,
											"end": 2941,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 2875,
											"end": 2941,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2875,
											"end": 2941,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "229"
										},
										{
											"begin": 2875,
											"end": 2941,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2875,
											"end": 2941,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "290"
										},
										{
											"begin": 2875,
											"end": 2941,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2875,
											"end": 2941,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "288"
										},
										{
											"begin": 2875,
											"end": 2941,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2971,
											"end": 2972,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2959,
											"end": 2968,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 2959,
											"end": 2972,
											"modifierDepth": 1,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 2951,
											"end": 3013,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "291"
										},
										{
											"begin": 2951,
											"end": 3013,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 2951,
											"end": 3013,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 2951,
											"end": 3013,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2951,
											"end": 3013,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 2951,
											"end": 3013,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 2951,
											"end": 3013,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 2951,
											"end": 3013,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 2951,
											"end": 3013,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "229"
										},
										{
											"begin": 2951,
											"end": 3013,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2951,
											"end": 3013,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "230"
										},
										{
											"begin": 2951,
											"end": 3013,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2951,
											"end": 3013,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "291"
										},
										{
											"begin": 2951,
											"end": 3013,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3024,
											"end": 3101,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3024,
											"end": 3101,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3024,
											"end": 3061,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3061,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3061,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3061,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "23B872DD"
										},
										{
											"begin": 3024,
											"end": 3061,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "293"
										},
										{
											"begin": 3024,
											"end": 3101,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3062,
											"end": 3072,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 3062,
											"end": 3072,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3082,
											"end": 3086,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 16
										},
										{
											"begin": 3082,
											"end": 3086,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3089,
											"end": 3100,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 3089,
											"end": 3100,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "191"
										},
										{
											"begin": 3024,
											"end": 3101,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "293"
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "295"
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3101,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "295"
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "296"
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "203"
										},
										{
											"begin": 3024,
											"end": 3101,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "296"
										},
										{
											"begin": 3024,
											"end": 3101,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3141,
											"end": 3162,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3141,
											"end": 3162,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3112,
											"end": 3138,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3141,
											"end": 3162,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3141,
											"end": 3162,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3141,
											"end": 3162,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3141,
											"end": 3155,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 3141,
											"end": 3162,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3141,
											"end": 3162,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3141,
											"end": 3162,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3141,
											"end": 3162,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3141,
											"end": 3162,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3141,
											"end": 3162,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3141,
											"end": 3162,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 3204,
											"end": 3223,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3204,
											"end": 3223,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3204,
											"end": 3223,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3204,
											"end": 3223,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 3141,
											"end": 3162,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3141,
											"end": 3162,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3112,
											"end": 3138,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3204,
											"end": 3228,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3204,
											"end": 3228,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 3200,
											"end": 3799,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "297"
										},
										{
											"begin": 3200,
											"end": 3799,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3244,
											"end": 3274,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3244,
											"end": 3274,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3244,
											"end": 3274,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 3305,
											"end": 3314,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 3288,
											"end": 3302,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 3288,
											"end": 3302,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3288,
											"end": 3302,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3288,
											"end": 3314,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 3263,
											"end": 3274,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3200,
											"end": 3799,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "298"
										},
										{
											"begin": 3200,
											"end": 3799,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3200,
											"end": 3799,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "297"
										},
										{
											"begin": 3200,
											"end": 3799,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3407,
											"end": 3408,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3390,
											"end": 3394,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3390,
											"end": 3404,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 3390,
											"end": 3404,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3390,
											"end": 3404,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 3390,
											"end": 3408,
											"modifierDepth": 1,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 3390,
											"end": 3432,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3390,
											"end": 3432,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3390,
											"end": 3432,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "299"
										},
										{
											"begin": 3390,
											"end": 3432,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3412,
											"end": 3428,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3412,
											"end": 3428,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 3412,
											"end": 3432,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3412,
											"end": 3432,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3390,
											"end": 3432,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "299"
										},
										{
											"begin": 3390,
											"end": 3432,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3382,
											"end": 3455,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "300"
										},
										{
											"begin": 3382,
											"end": 3455,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3382,
											"end": 3455,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 10604,
											"end": 10606,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3382,
											"end": 3455,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 3382,
											"end": 3455,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3382,
											"end": 3455,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 10586,
											"end": 10607,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10643,
											"end": 10645,
											"name": "PUSH",
											"source": 17,
											"value": "12"
										},
										{
											"begin": 10623,
											"end": 10641,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 10623,
											"end": 10641,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10623,
											"end": 10641,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10616,
											"end": 10646,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E76616C696420706F6F6C207374617465"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "70"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10662,
											"end": 10680,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 10662,
											"end": 10680,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10662,
											"end": 10680,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10655,
											"end": 10703,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10720,
											"end": 10738,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 10720,
											"end": 10738,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3382,
											"end": 3455,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "229"
										},
										{
											"begin": 10402,
											"end": 10744,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3382,
											"end": 3455,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "300"
										},
										{
											"begin": 3382,
											"end": 3455,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3470,
											"end": 3492,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3528,
											"end": 3532,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3528,
											"end": 3544,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3528,
											"end": 3544,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3528,
											"end": 3544,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 3513,
											"end": 3524,
											"modifierDepth": 1,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 3496,
											"end": 3500,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3496,
											"end": 3510,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 3496,
											"end": 3510,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3496,
											"end": 3510,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 3496,
											"end": 3524,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "303"
										},
										{
											"begin": 3496,
											"end": 3524,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3496,
											"end": 3524,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3496,
											"end": 3524,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "304"
										},
										{
											"begin": 3496,
											"end": 3524,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3496,
											"end": 3524,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "303"
										},
										{
											"begin": 3496,
											"end": 3524,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3495,
											"end": 3544,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "305"
										},
										{
											"begin": 3495,
											"end": 3544,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3495,
											"end": 3544,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3495,
											"end": 3544,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "306"
										},
										{
											"begin": 3495,
											"end": 3544,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3495,
											"end": 3544,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "305"
										},
										{
											"begin": 3495,
											"end": 3544,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3470,
											"end": 3544,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3470,
											"end": 3544,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3579,
											"end": 3593,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3566,
											"end": 3575,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 3566,
											"end": 3593,
											"modifierDepth": 1,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 3566,
											"end": 3593,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 3558,
											"end": 3621,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "307"
										},
										{
											"begin": 3558,
											"end": 3621,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 3558,
											"end": 3621,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3558,
											"end": 3621,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3558,
											"end": 3621,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3558,
											"end": 3621,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 11346,
											"end": 11348,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3558,
											"end": 3621,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 3558,
											"end": 3621,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3558,
											"end": 3621,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11328,
											"end": 11349,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11385,
											"end": 11387,
											"name": "PUSH",
											"source": 17,
											"value": "17"
										},
										{
											"begin": 11365,
											"end": 11383,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 11365,
											"end": 11383,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11365,
											"end": 11383,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11358,
											"end": 11388,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11424,
											"end": 11449,
											"name": "PUSH",
											"source": 17,
											"value": "496E73756666696369656E742045544820616D6F756E74000000000000000000"
										},
										{
											"begin": 11404,
											"end": 11422,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 11404,
											"end": 11422,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11404,
											"end": 11422,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11397,
											"end": 11450,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11467,
											"end": 11485,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 11467,
											"end": 11485,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3558,
											"end": 3621,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "229"
										},
										{
											"begin": 11144,
											"end": 11491,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3558,
											"end": 3621,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "307"
										},
										{
											"begin": 3558,
											"end": 3621,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3656,
											"end": 3667,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3636,
											"end": 3640,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3636,
											"end": 3652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3636,
											"end": 3652,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3636,
											"end": 3652,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3636,
											"end": 3667,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3636,
											"end": 3667,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3636,
											"end": 3667,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 3636,
											"end": 3667,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "310"
										},
										{
											"begin": 3636,
											"end": 3667,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3636,
											"end": 3667,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3636,
											"end": 3667,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "274"
										},
										{
											"begin": 3636,
											"end": 3667,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3636,
											"end": 3667,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "310"
										},
										{
											"begin": 3636,
											"end": 3667,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3636,
											"end": 3667,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3636,
											"end": 3667,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3636,
											"end": 3667,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3636,
											"end": 3667,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3636,
											"end": 3667,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3636,
											"end": 3667,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 3636,
											"end": 3667,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3699,
											"end": 3708,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 3681,
											"end": 3685,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3681,
											"end": 3695,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 3681,
											"end": 3695,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3681,
											"end": 3695,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3681,
											"end": 3708,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3681,
											"end": 3708,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3681,
											"end": 3708,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 3681,
											"end": 3708,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "311"
										},
										{
											"begin": 3681,
											"end": 3708,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3681,
											"end": 3708,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3681,
											"end": 3708,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "274"
										},
										{
											"begin": 3681,
											"end": 3708,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3681,
											"end": 3708,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "311"
										},
										{
											"begin": 3681,
											"end": 3708,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3681,
											"end": 3708,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3681,
											"end": 3708,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3681,
											"end": 3708,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3772,
											"end": 3788,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3772,
											"end": 3788,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 3735,
											"end": 3754,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 3735,
											"end": 3754,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3735,
											"end": 3754,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3735,
											"end": 3754,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 3735,
											"end": 3768,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "312"
										},
										{
											"begin": 3735,
											"end": 3768,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3757,
											"end": 3768,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 3757,
											"end": 3768,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3735,
											"end": 3768,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "304"
										},
										{
											"begin": 3735,
											"end": 3768,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3735,
											"end": 3768,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "312"
										},
										{
											"begin": 3735,
											"end": 3768,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3734,
											"end": 3788,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "313"
										},
										{
											"begin": 3734,
											"end": 3788,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3734,
											"end": 3788,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3734,
											"end": 3788,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "306"
										},
										{
											"begin": 3734,
											"end": 3788,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3734,
											"end": 3788,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "313"
										},
										{
											"begin": 3734,
											"end": 3788,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3722,
											"end": 3788,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3722,
											"end": 3788,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3368,
											"end": 3799,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 3200,
											"end": 3799,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "298"
										},
										{
											"begin": 3200,
											"end": 3799,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3832,
											"end": 3841,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3809,
											"end": 3813,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3809,
											"end": 3828,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 3809,
											"end": 3828,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3809,
											"end": 3828,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3809,
											"end": 3841,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3809,
											"end": 3841,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 3809,
											"end": 3841,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 3809,
											"end": 3841,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "314"
										},
										{
											"begin": 3809,
											"end": 3841,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3809,
											"end": 3841,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3809,
											"end": 3841,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "274"
										},
										{
											"begin": 3809,
											"end": 3841,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3809,
											"end": 3841,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "314"
										},
										{
											"begin": 3809,
											"end": 3841,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3809,
											"end": 3841,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3809,
											"end": 3841,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3809,
											"end": 3841,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3866,
											"end": 3876,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 3851,
											"end": 3877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 3851,
											"end": 3877,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3851,
											"end": 3877,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3851,
											"end": 3877,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3851,
											"end": 3865,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "3"
										},
										{
											"begin": 3851,
											"end": 3865,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3851,
											"end": 3865,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 3851,
											"end": 3877,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 3851,
											"end": 3877,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 3851,
											"end": 3877,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3851,
											"end": 3877,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 3851,
											"end": 3877,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 3851,
											"end": 3890,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3851,
											"end": 3890,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 3881,
											"end": 3890,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 3881,
											"end": 3890,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 3851,
											"end": 3877,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3851,
											"end": 3890,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "315"
										},
										{
											"begin": 3851,
											"end": 3890,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3881,
											"end": 3890,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 3881,
											"end": 3890,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3851,
											"end": 3890,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "274"
										},
										{
											"begin": 3851,
											"end": 3890,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3851,
											"end": 3890,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "315"
										},
										{
											"begin": 3851,
											"end": 3890,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 3851,
											"end": 3890,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3851,
											"end": 3890,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3851,
											"end": 3890,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3906,
											"end": 3974,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3906,
											"end": 3974,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3906,
											"end": 3974,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1690,
											"end": 1715,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 1690,
											"end": 1715,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1690,
											"end": 1715,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3953,
											"end": 3962,
											"modifierDepth": 1,
											"name": "CALLVALUE",
											"source": 16
										},
										{
											"begin": 1746,
											"end": 1748,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1731,
											"end": 1749,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1731,
											"end": 1749,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1724,
											"end": 1758,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1774,
											"end": 1792,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1774,
											"end": 1792,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1774,
											"end": 1792,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1767,
											"end": 1801,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1767,
											"end": 1801,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1767,
											"end": 1801,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3906,
											"end": 3974,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 3906,
											"end": 3974,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 3906,
											"end": 3974,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3921,
											"end": 3931,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 3921,
											"end": 3931,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3906,
											"end": 3974,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "4A1A2A6176E9646D9E3157F7C2AB3C499F18337C0B0828CFB28E0A61DE4A11F7"
										},
										{
											"begin": 3906,
											"end": 3974,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1678,
											"end": 1680,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 1663,
											"end": 1681,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3906,
											"end": 3974,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 3906,
											"end": 3974,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 3906,
											"end": 3974,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 3906,
											"end": 3974,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 3906,
											"end": 3974,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 3906,
											"end": 3974,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 3906,
											"end": 3974,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 16
										},
										{
											"begin": 3991,
											"end": 4000,
											"name": "SWAP5",
											"source": 16
										},
										{
											"begin": 2758,
											"end": 4007,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2758,
											"end": 4007,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2600,
											"end": 2671,
											"name": "tag",
											"source": 16,
											"value": "122"
										},
										{
											"begin": 2600,
											"end": 2671,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9B87106A812D214D41AD9B68A21119E2948EAAF1040375C939EC808B8862455C"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "321"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 2656,
											"end": 2664,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "222"
										},
										{
											"begin": 2656,
											"end": 2662,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "324"
										},
										{
											"begin": 2656,
											"end": 2664,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "tag",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 3732,
											"end": 3939,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3809,
											"end": 3813,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "B3DA67D1B252AEAB7C8063542D95E75F82A5307A82535949BC38F7CF7BA8897F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3915,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SWAP4",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 3901,
											"end": 3932,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 3732,
											"end": 3939,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "tag",
											"source": 16,
											"value": "131"
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4104,
											"end": 4123,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4125,
											"end": 4142,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 2316,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 2316,
											"end": 2335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "tag",
											"source": 6,
											"value": "328"
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4183,
											"end": 4204,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 4183,
											"end": 4204,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 4154,
											"end": 4180,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4183,
											"end": 4204,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4183,
											"end": 4204,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4183,
											"end": 4204,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4183,
											"end": 4197,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 4183,
											"end": 4204,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4183,
											"end": 4204,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4183,
											"end": 4204,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4183,
											"end": 4204,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4183,
											"end": 4204,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4183,
											"end": 4204,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4183,
											"end": 4204,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 4183,
											"end": 4204,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 4237,
											"end": 4247,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 4222,
											"end": 4248,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 4222,
											"end": 4248,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4222,
											"end": 4236,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "3"
										},
										{
											"begin": 4222,
											"end": 4236,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4222,
											"end": 4236,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4222,
											"end": 4248,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4222,
											"end": 4248,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4222,
											"end": 4248,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4222,
											"end": 4248,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4222,
											"end": 4248,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4222,
											"end": 4248,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 4222,
											"end": 4248,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 4222,
											"end": 4261,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "GT",
											"source": -1
										},
										{
											"begin": 4222,
											"end": 4261,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 4214,
											"end": 4288,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "330"
										},
										{
											"begin": 4214,
											"end": 4288,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 4214,
											"end": 4288,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4214,
											"end": 4288,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4214,
											"end": 4288,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4214,
											"end": 4288,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4214,
											"end": 4288,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 4214,
											"end": 4288,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4214,
											"end": 4288,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "229"
										},
										{
											"begin": 4214,
											"end": 4288,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4214,
											"end": 4288,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "269"
										},
										{
											"begin": 4214,
											"end": 4288,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4214,
											"end": 4288,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "330"
										},
										{
											"begin": 4214,
											"end": 4288,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4346,
											"end": 4365,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 4346,
											"end": 4365,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4346,
											"end": 4365,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4346,
											"end": 4365,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 4314,
											"end": 4330,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4314,
											"end": 4330,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 4314,
											"end": 4342,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "332"
										},
										{
											"begin": 4314,
											"end": 4342,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4333,
											"end": 4342,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 4333,
											"end": 4342,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4314,
											"end": 4342,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "304"
										},
										{
											"begin": 4314,
											"end": 4342,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4314,
											"end": 4342,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "332"
										},
										{
											"begin": 4314,
											"end": 4342,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4313,
											"end": 4365,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "333"
										},
										{
											"begin": 4313,
											"end": 4365,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4313,
											"end": 4365,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4313,
											"end": 4365,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "306"
										},
										{
											"begin": 4313,
											"end": 4365,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4313,
											"end": 4365,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "333"
										},
										{
											"begin": 4313,
											"end": 4365,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4299,
											"end": 4365,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4299,
											"end": 4365,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4418,
											"end": 4422,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4418,
											"end": 4437,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 4418,
											"end": 4437,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4418,
											"end": 4437,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 4405,
											"end": 4414,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 4388,
											"end": 4392,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4388,
											"end": 4402,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 4388,
											"end": 4402,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4388,
											"end": 4402,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 4388,
											"end": 4414,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "334"
										},
										{
											"begin": 4388,
											"end": 4414,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4388,
											"end": 4414,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4388,
											"end": 4414,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "304"
										},
										{
											"begin": 4388,
											"end": 4414,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4388,
											"end": 4414,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "334"
										},
										{
											"begin": 4388,
											"end": 4414,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4387,
											"end": 4437,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "335"
										},
										{
											"begin": 4387,
											"end": 4437,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4387,
											"end": 4437,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4387,
											"end": 4437,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "306"
										},
										{
											"begin": 4387,
											"end": 4437,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4387,
											"end": 4437,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "335"
										},
										{
											"begin": 4387,
											"end": 4437,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4375,
											"end": 4437,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4375,
											"end": 4437,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4468,
											"end": 4479,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4448,
											"end": 4452,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4448,
											"end": 4464,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4448,
											"end": 4464,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4448,
											"end": 4464,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4448,
											"end": 4479,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4448,
											"end": 4479,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4448,
											"end": 4479,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 4448,
											"end": 4479,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "336"
										},
										{
											"begin": 4448,
											"end": 4479,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4448,
											"end": 4479,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4448,
											"end": 4479,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "241"
										},
										{
											"begin": 4448,
											"end": 4479,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4448,
											"end": 4479,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "336"
										},
										{
											"begin": 4448,
											"end": 4479,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4448,
											"end": 4479,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4448,
											"end": 4479,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4448,
											"end": 4479,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4448,
											"end": 4479,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4448,
											"end": 4479,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4448,
											"end": 4479,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 4448,
											"end": 4479,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4507,
											"end": 4516,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4489,
											"end": 4493,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4489,
											"end": 4503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 4489,
											"end": 4503,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4489,
											"end": 4503,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4489,
											"end": 4516,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4489,
											"end": 4516,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4489,
											"end": 4516,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 4489,
											"end": 4516,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "337"
										},
										{
											"begin": 4489,
											"end": 4516,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4489,
											"end": 4516,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4489,
											"end": 4516,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "241"
										},
										{
											"begin": 4489,
											"end": 4516,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4489,
											"end": 4516,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "337"
										},
										{
											"begin": 4489,
											"end": 4516,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4489,
											"end": 4516,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4489,
											"end": 4516,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4489,
											"end": 4516,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4489,
											"end": 4516,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4489,
											"end": 4516,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4489,
											"end": 4516,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 4489,
											"end": 4516,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4549,
											"end": 4558,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 4526,
											"end": 4530,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4526,
											"end": 4545,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 4526,
											"end": 4545,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4526,
											"end": 4545,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4526,
											"end": 4558,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4526,
											"end": 4558,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4526,
											"end": 4558,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 4526,
											"end": 4558,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "338"
										},
										{
											"begin": 4526,
											"end": 4558,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4526,
											"end": 4558,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4526,
											"end": 4558,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "241"
										},
										{
											"begin": 4526,
											"end": 4558,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4526,
											"end": 4558,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "338"
										},
										{
											"begin": 4526,
											"end": 4558,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4526,
											"end": 4558,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4526,
											"end": 4558,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4526,
											"end": 4558,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4583,
											"end": 4593,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 4568,
											"end": 4594,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4568,
											"end": 4594,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4568,
											"end": 4594,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4568,
											"end": 4594,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4568,
											"end": 4582,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "3"
										},
										{
											"begin": 4568,
											"end": 4582,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4568,
											"end": 4582,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4568,
											"end": 4594,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4568,
											"end": 4594,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4568,
											"end": 4594,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4568,
											"end": 4594,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4568,
											"end": 4594,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 4568,
											"end": 4607,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4568,
											"end": 4607,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 4598,
											"end": 4607,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 4598,
											"end": 4607,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4568,
											"end": 4594,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4568,
											"end": 4607,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "339"
										},
										{
											"begin": 4568,
											"end": 4607,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4598,
											"end": 4607,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 4598,
											"end": 4607,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4568,
											"end": 4607,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "241"
										},
										{
											"begin": 4568,
											"end": 4607,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4568,
											"end": 4607,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "339"
										},
										{
											"begin": 4568,
											"end": 4607,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4568,
											"end": 4607,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4568,
											"end": 4607,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4568,
											"end": 4607,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4618,
											"end": 4676,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A9059CBB"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4618,
											"end": 4676,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4652,
											"end": 4662,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 4618,
											"end": 4676,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7491,
											"end": 7542,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7558,
											"end": 7576,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 7558,
											"end": 7576,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7558,
											"end": 7576,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7551,
											"end": 7585,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 7551,
											"end": 7585,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7551,
											"end": 7585,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4618,
											"end": 4651,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4651,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4651,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4651,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "A9059CBB"
										},
										{
											"begin": 4618,
											"end": 4651,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7464,
											"end": 7482,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 7464,
											"end": 7482,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "342"
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4618,
											"end": 4676,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "342"
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "343"
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "203"
										},
										{
											"begin": 4618,
											"end": 4676,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "343"
										},
										{
											"begin": 4618,
											"end": 4676,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4686,
											"end": 4725,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4686,
											"end": 4725,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 4694,
											"end": 4704,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 4694,
											"end": 4704,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4686,
											"end": 4725,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 4686,
											"end": 4725,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 4686,
											"end": 4725,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "8FC"
										},
										{
											"begin": 4686,
											"end": 4725,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 4686,
											"end": 4725,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4715,
											"end": 4724,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 4715,
											"end": 4724,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4686,
											"end": 4725,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4686,
											"end": 4725,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4686,
											"end": 4725,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4686,
											"end": 4725,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 4715,
											"end": 4724,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 4694,
											"end": 4704,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 4686,
											"end": 4725,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 4686,
											"end": 4725,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 16
										},
										{
											"begin": 4686,
											"end": 4725,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 4686,
											"end": 4725,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4686,
											"end": 4725,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4686,
											"end": 4725,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4686,
											"end": 4725,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4686,
											"end": 4725,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 4686,
											"end": 4725,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4686,
											"end": 4725,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 4686,
											"end": 4725,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "345"
										},
										{
											"begin": 4686,
											"end": 4725,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 4686,
											"end": 4725,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 4686,
											"end": 4725,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4686,
											"end": 4725,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4686,
											"end": 4725,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 16
										},
										{
											"begin": 4686,
											"end": 4725,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 4686,
											"end": 4725,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 4686,
											"end": 4725,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 4686,
											"end": 4725,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "345"
										},
										{
											"begin": 4686,
											"end": 4725,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4741,
											"end": 4811,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4741,
											"end": 4811,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4741,
											"end": 4811,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1690,
											"end": 1715,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1690,
											"end": 1715,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1690,
											"end": 1715,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1746,
											"end": 1748,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1731,
											"end": 1749,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1731,
											"end": 1749,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1724,
											"end": 1758,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1724,
											"end": 1758,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1724,
											"end": 1758,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1774,
											"end": 1792,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1774,
											"end": 1792,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1774,
											"end": 1792,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1767,
											"end": 1801,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 1767,
											"end": 1801,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1767,
											"end": 1801,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4741,
											"end": 4811,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 4741,
											"end": 4811,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 4741,
											"end": 4811,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4758,
											"end": 4768,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 4758,
											"end": 4768,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4741,
											"end": 4811,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "BC7D19D505C7EC4DB83F3B51F19FB98C4C8A99922E7839D1EE608DFBEE29501B"
										},
										{
											"begin": 4741,
											"end": 4811,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1678,
											"end": 1680,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 1663,
											"end": 1681,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4741,
											"end": 4811,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 4741,
											"end": 4811,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 4741,
											"end": 4811,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 4741,
											"end": 4811,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4741,
											"end": 4811,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 4741,
											"end": 4811,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4741,
											"end": 4811,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 16
										},
										{
											"begin": 4144,
											"end": 4818,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 4013,
											"end": 4818,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 4013,
											"end": 4818,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7987,
											"end": 8242,
											"name": "tag",
											"source": 16,
											"value": "147"
										},
										{
											"begin": 7987,
											"end": 8242,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 939,
											"end": 974,
											"name": "PUSH",
											"source": 16,
											"value": "77E60B99A50D27FB027F6912A507D956105B4148ADAB27A86D235C8BCCA8FA2F"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "348"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8129,
											"end": 8150,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8129,
											"end": 8150,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 8129,
											"end": 8150,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 8129,
											"end": 8150,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8129,
											"end": 8150,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8129,
											"end": 8150,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8129,
											"end": 8150,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8129,
											"end": 8143,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 8129,
											"end": 8150,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 8129,
											"end": 8150,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 8129,
											"end": 8150,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 8129,
											"end": 8150,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8129,
											"end": 8150,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 8129,
											"end": 8179,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8129,
											"end": 8179,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8129,
											"end": 8179,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 8189,
											"end": 8220,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 8189,
											"end": 8220,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 8189,
											"end": 8235,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 7987,
											"end": 8242,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 1960,
											"end": 2594,
											"name": "tag",
											"source": 16,
											"value": "152"
										},
										{
											"begin": 1960,
											"end": 2594,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "PUSH",
											"source": 1,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 4302,
											"end": 4317,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4301,
											"end": 4317,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4348,
											"end": 4362,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4158,
											"end": 4188,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4742,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4746,
											"end": 4760,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "tag",
											"source": 1,
											"value": "353"
										},
										{
											"begin": 4726,
											"end": 4760,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4706,
											"end": 4760,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4787,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 4790,
											"end": 4801,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4805,
											"end": 4806,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4790,
											"end": 4806,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4818,
											"end": 4822,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4835,
											"name": "EXTCODESIZE",
											"source": 1
										},
										{
											"begin": 4810,
											"end": 4840,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "tag",
											"source": 1,
											"value": "354"
										},
										{
											"begin": 4790,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4770,
											"end": 4840,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4856,
											"end": 4868,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4868,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4873,
											"end": 4885,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4872,
											"end": 4885,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "tag",
											"source": 1,
											"value": "355"
										},
										{
											"begin": 4855,
											"end": 4885,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "F92EE8A9"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 4908,
											"end": 4931,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "tag",
											"source": 1,
											"value": "356"
										},
										{
											"begin": 4851,
											"end": 4942,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 4968,
											"end": 4969,
											"name": "PUSH",
											"source": 1,
											"value": "1"
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 4951,
											"end": 4969,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "AND",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "OR",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5013,
											"end": 5035,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "tag",
											"source": 1,
											"value": "357"
										},
										{
											"begin": 4979,
											"end": 5046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2193,
											"end": 2210,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "359"
										},
										{
											"begin": 2193,
											"end": 2208,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "360"
										},
										{
											"begin": 2193,
											"end": 2210,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2193,
											"end": 2210,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "359"
										},
										{
											"begin": 2193,
											"end": 2210,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2220,
											"end": 2242,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "361"
										},
										{
											"begin": 2220,
											"end": 2240,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "362"
										},
										{
											"begin": 2220,
											"end": 2242,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2220,
											"end": 2242,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "361"
										},
										{
											"begin": 2220,
											"end": 2242,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2252,
											"end": 2276,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "363"
										},
										{
											"begin": 2252,
											"end": 2274,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "362"
										},
										{
											"begin": 2252,
											"end": 2276,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2252,
											"end": 2276,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "363"
										},
										{
											"begin": 2252,
											"end": 2276,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2287,
											"end": 2331,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "365"
										},
										{
											"begin": 2362,
											"end": 2366,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 2318,
											"end": 2330,
											"name": "DUP13",
											"source": 16
										},
										{
											"begin": 2287,
											"end": 2297,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "212"
										},
										{
											"begin": 2287,
											"end": 2331,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2287,
											"end": 2331,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "365"
										},
										{
											"begin": 2287,
											"end": 2331,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2287,
											"end": 2331,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2341,
											"end": 2372,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "366"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "9B87106A812D214D41AD9B68A21119E2948EAAF1040375C939EC808B8862455C"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2365,
											"end": 2371,
											"modifierDepth": 1,
											"name": "DUP12",
											"source": 16
										},
										{
											"begin": 2341,
											"end": 2351,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "212"
										},
										{
											"begin": 2341,
											"end": 2372,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2341,
											"end": 2372,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "366"
										},
										{
											"begin": 2341,
											"end": 2372,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2341,
											"end": 2372,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2382,
											"end": 2417,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "367"
										},
										{
											"begin": 858,
											"end": 884,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3"
										},
										{
											"begin": 2408,
											"end": 2416,
											"modifierDepth": 1,
											"name": "DUP11",
											"source": 16
										},
										{
											"begin": 2382,
											"end": 2392,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "212"
										},
										{
											"begin": 2382,
											"end": 2417,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2382,
											"end": 2417,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "367"
										},
										{
											"begin": 2382,
											"end": 2417,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2382,
											"end": 2417,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 2427,
											"end": 2479,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "368"
										},
										{
											"begin": 939,
											"end": 974,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "77E60B99A50D27FB027F6912A507D956105B4148ADAB27A86D235C8BCCA8FA2F"
										},
										{
											"begin": 2462,
											"end": 2478,
											"modifierDepth": 1,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 2427,
											"end": 2437,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "212"
										},
										{
											"begin": 2427,
											"end": 2479,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 2427,
											"end": 2479,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "368"
										},
										{
											"begin": 2427,
											"end": 2479,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2490,
											"end": 2498,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 2490,
											"end": 2535,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2535,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2490,
											"end": 2535,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2535,
											"name": "DUP11",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2535,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2490,
											"end": 2535,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2535,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2535,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2535,
											"modifierDepth": 1,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2535,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2535,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2535,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 2490,
											"end": 2535,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 2545,
											"end": 2587,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 2545,
											"end": 2587,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 2545,
											"end": 2587,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2545,
											"end": 2587,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 2545,
											"end": 2587,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2545,
											"end": 2587,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 2545,
											"end": 2587,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2545,
											"end": 2587,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2545,
											"end": 2587,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 2545,
											"end": 2587,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2545,
											"end": 2587,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2545,
											"end": 2587,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 2545,
											"end": 2587,
											"modifierDepth": 1,
											"name": "OR",
											"source": 16
										},
										{
											"begin": 2545,
											"end": 2587,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 2545,
											"end": 2587,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 5100,
											"end": 5123,
											"name": "SSTORE",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": 11649,
											"end": 11699,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 11649,
											"end": 11699,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "C7F505B2F371AE2175EE4913F4499E1F2633A7B5936321EED1CDAEB6115181D2"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 11637,
											"end": 11639,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 11622,
											"end": 11640,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 5142,
											"end": 5156,
											"name": "LOG1",
											"source": 1
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "tag",
											"source": 1,
											"value": "369"
										},
										{
											"begin": 5066,
											"end": 5167,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 4092,
											"end": 5173,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1960,
											"end": 2594,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1960,
											"end": 2594,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1960,
											"end": 2594,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1960,
											"end": 2594,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1960,
											"end": 2594,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1960,
											"end": 2594,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 1960,
											"end": 2594,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "tag",
											"source": 0,
											"value": "156"
										},
										{
											"begin": 5662,
											"end": 5800,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5737,
											"end": 5755,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 5750,
											"end": 5754,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 5737,
											"end": 5749,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "73"
										},
										{
											"begin": 5737,
											"end": 5755,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 5737,
											"end": 5755,
											"name": "tag",
											"source": 0,
											"value": "372"
										},
										{
											"begin": 5737,
											"end": 5755,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "374"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 5767,
											"end": 5793,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "202"
										},
										{
											"begin": 5779,
											"end": 5783,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5785,
											"end": 5792,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 5767,
											"end": 5778,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 5767,
											"end": 5793,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6966,
											"end": 7493,
											"name": "tag",
											"source": 16,
											"value": "160"
										},
										{
											"begin": 6966,
											"end": 7493,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "378"
										},
										{
											"begin": 2316,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 2316,
											"end": 2335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "tag",
											"source": 6,
											"value": "378"
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 7063,
											"end": 7069,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 7063,
											"end": 7069,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 7063,
											"end": 7086,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "31A9108F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7063,
											"end": 7086,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 7063,
											"end": 7086,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 1958,
											"end": 1983,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1958,
											"end": 1983,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1958,
											"end": 1983,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7090,
											"end": 7100,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 7090,
											"end": 7100,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7063,
											"end": 7069,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7069,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7077,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "6352211E"
										},
										{
											"begin": 7063,
											"end": 7077,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1931,
											"end": 1949,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 1931,
											"end": 1949,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "STATICCALL",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "382"
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7063,
											"end": 7086,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "382"
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "383"
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "235"
										},
										{
											"begin": 7063,
											"end": 7086,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "383"
										},
										{
											"begin": 7063,
											"end": 7086,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7063,
											"end": 7100,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 7063,
											"end": 7100,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 16
										},
										{
											"begin": 7055,
											"end": 7121,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "384"
										},
										{
											"begin": 7055,
											"end": 7121,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 7055,
											"end": 7121,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 7055,
											"end": 7121,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7055,
											"end": 7121,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7055,
											"end": 7121,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 11912,
											"end": 11914,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 7055,
											"end": 7121,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 7055,
											"end": 7121,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7055,
											"end": 7121,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 11894,
											"end": 11915,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11951,
											"end": 11953,
											"name": "PUSH",
											"source": 17,
											"value": "10"
										},
										{
											"begin": 11931,
											"end": 11949,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 11931,
											"end": 11949,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11931,
											"end": 11949,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11924,
											"end": 11954,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "139BDD081BDDDB995C881BD988139195"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "82"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 11970,
											"end": 11988,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 11970,
											"end": 11988,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 11970,
											"end": 11988,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 11963,
											"end": 12009,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 12026,
											"end": 12044,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 12026,
											"end": 12044,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7055,
											"end": 7121,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "229"
										},
										{
											"begin": 11710,
											"end": 12050,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7055,
											"end": 7121,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "384"
										},
										{
											"begin": 7055,
											"end": 7121,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7132,
											"end": 7149,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7152,
											"end": 7196,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "387"
										},
										{
											"begin": 7168,
											"end": 7169,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 7171,
											"end": 7172,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 7174,
											"end": 7195,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 16
										},
										{
											"begin": 7152,
											"end": 7167,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "242"
										},
										{
											"begin": 7152,
											"end": 7196,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7152,
											"end": 7196,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "387"
										},
										{
											"begin": 7152,
											"end": 7196,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7132,
											"end": 7196,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7132,
											"end": 7196,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7254,
											"end": 7260,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7241,
											"end": 7250,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7241,
											"end": 7260,
											"modifierDepth": 1,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 7241,
											"end": 7260,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 7233,
											"end": 7292,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "388"
										},
										{
											"begin": 7233,
											"end": 7292,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 7233,
											"end": 7292,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 7233,
											"end": 7292,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7233,
											"end": 7292,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7233,
											"end": 7292,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 7233,
											"end": 7292,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 7233,
											"end": 7292,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7233,
											"end": 7292,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "229"
										},
										{
											"begin": 7233,
											"end": 7292,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7233,
											"end": 7292,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "245"
										},
										{
											"begin": 7233,
											"end": 7292,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7233,
											"end": 7292,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "388"
										},
										{
											"begin": 7233,
											"end": 7292,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7309,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 7303,
											"end": 7309,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 7303,
											"end": 7362,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "21421707"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7303,
											"end": 7362,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7303,
											"end": 7309,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7309,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7309,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7309,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7326,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "42842E0E"
										},
										{
											"begin": 7303,
											"end": 7326,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "390"
										},
										{
											"begin": 7303,
											"end": 7362,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7327,
											"end": 7337,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 7327,
											"end": 7337,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7347,
											"end": 7351,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 16
										},
										{
											"begin": 7347,
											"end": 7351,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7354,
											"end": 7361,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 7354,
											"end": 7361,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "191"
										},
										{
											"begin": 7303,
											"end": 7362,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "390"
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "EXTCODESIZE",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "391"
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7303,
											"end": 7362,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "391"
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "393"
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7303,
											"end": 7362,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "393"
										},
										{
											"begin": 7303,
											"end": 7362,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7372,
											"end": 7411,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 7372,
											"end": 7411,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 7380,
											"end": 7390,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 7380,
											"end": 7390,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7372,
											"end": 7411,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 7372,
											"end": 7411,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 7372,
											"end": 7411,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "8FC"
										},
										{
											"begin": 7372,
											"end": 7411,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 7372,
											"end": 7411,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7401,
											"end": 7410,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 7401,
											"end": 7410,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7372,
											"end": 7411,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7372,
											"end": 7411,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7372,
											"end": 7411,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7372,
											"end": 7411,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7401,
											"end": 7410,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 7380,
											"end": 7390,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 7372,
											"end": 7411,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 7372,
											"end": 7411,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 16
										},
										{
											"begin": 7372,
											"end": 7411,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 7372,
											"end": 7411,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7372,
											"end": 7411,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7372,
											"end": 7411,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7372,
											"end": 7411,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7372,
											"end": 7411,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 7372,
											"end": 7411,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 7372,
											"end": 7411,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 7372,
											"end": 7411,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "395"
										},
										{
											"begin": 7372,
											"end": 7411,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 7372,
											"end": 7411,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 7372,
											"end": 7411,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7372,
											"end": 7411,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 7372,
											"end": 7411,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 16
										},
										{
											"begin": 7372,
											"end": 7411,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 7372,
											"end": 7411,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7372,
											"end": 7411,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 7372,
											"end": 7411,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "395"
										},
										{
											"begin": 7372,
											"end": 7411,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7458,
											"end": 7464,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 7458,
											"end": 7464,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 7427,
											"end": 7486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 7427,
											"end": 7486,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 1958,
											"end": 1983,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1958,
											"end": 1983,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1958,
											"end": 1983,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7467,
											"end": 7474,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 7467,
											"end": 7474,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7458,
											"end": 7464,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 7458,
											"end": 7464,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7438,
											"end": 7448,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 7438,
											"end": 7448,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7427,
											"end": 7486,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "9181665DB8D8D5FCCE186F7B2CFEBE8FBCDC3A003664BBFCE2E790F57B076E65"
										},
										{
											"begin": 7427,
											"end": 7486,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 1946,
											"end": 1948,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1931,
											"end": 1949,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7427,
											"end": 7486,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "252"
										},
										{
											"begin": 1812,
											"end": 1989,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5533,
											"end": 6313,
											"name": "tag",
											"source": 16,
											"value": "169"
										},
										{
											"begin": 5533,
											"end": 6313,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "398"
										},
										{
											"begin": 2316,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 2316,
											"end": 2335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "tag",
											"source": 6,
											"value": "398"
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 5666,
											"end": 5667,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5652,
											"end": 5663,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5652,
											"end": 5667,
											"modifierDepth": 1,
											"name": "GT",
											"source": 16
										},
										{
											"begin": 5644,
											"end": 5710,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "400"
										},
										{
											"begin": 5644,
											"end": 5710,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5644,
											"end": 5710,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 5644,
											"end": 5710,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5644,
											"end": 5710,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5644,
											"end": 5710,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5644,
											"end": 5710,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 5644,
											"end": 5710,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5644,
											"end": 5710,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "229"
										},
										{
											"begin": 5644,
											"end": 5710,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5644,
											"end": 5710,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "290"
										},
										{
											"begin": 5644,
											"end": 5710,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5644,
											"end": 5710,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "400"
										},
										{
											"begin": 5644,
											"end": 5710,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5749,
											"end": 5770,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 5749,
											"end": 5770,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 5720,
											"end": 5746,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5749,
											"end": 5770,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5749,
											"end": 5770,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5749,
											"end": 5770,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5749,
											"end": 5763,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "2"
										},
										{
											"begin": 5749,
											"end": 5770,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 5749,
											"end": 5770,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5749,
											"end": 5770,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 5749,
											"end": 5770,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5749,
											"end": 5770,
											"name": "KECCAK256",
											"source": 16
										},
										{
											"begin": 5788,
											"end": 5802,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 5788,
											"end": 5802,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5788,
											"end": 5802,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5788,
											"end": 5802,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 5788,
											"end": 5806,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5788,
											"end": 5806,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5788,
											"end": 5806,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5788,
											"end": 5806,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5788,
											"end": 5830,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "402"
										},
										{
											"begin": 5788,
											"end": 5830,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5810,
											"end": 5826,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 5810,
											"end": 5826,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 5810,
											"end": 5830,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5810,
											"end": 5830,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5788,
											"end": 5830,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "402"
										},
										{
											"begin": 5788,
											"end": 5830,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5780,
											"end": 5857,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "403"
										},
										{
											"begin": 5780,
											"end": 5857,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5780,
											"end": 5857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 5780,
											"end": 5857,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5780,
											"end": 5857,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5780,
											"end": 5857,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5780,
											"end": 5857,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 5780,
											"end": 5857,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5780,
											"end": 5857,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "229"
										},
										{
											"begin": 5780,
											"end": 5857,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5780,
											"end": 5857,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "269"
										},
										{
											"begin": 5780,
											"end": 5857,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5780,
											"end": 5857,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "403"
										},
										{
											"begin": 5780,
											"end": 5857,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5868,
											"end": 5885,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5888,
											"end": 5950,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "405"
										},
										{
											"begin": 5904,
											"end": 5915,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 5917,
											"end": 5921,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 5917,
											"end": 5933,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 5917,
											"end": 5933,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5917,
											"end": 5933,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 5935,
											"end": 5939,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 5935,
											"end": 5949,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 5935,
											"end": 5949,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5935,
											"end": 5949,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 5888,
											"end": 5903,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "242"
										},
										{
											"begin": 5888,
											"end": 5950,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5888,
											"end": 5950,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "405"
										},
										{
											"begin": 5888,
											"end": 5950,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 5868,
											"end": 5950,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5868,
											"end": 5950,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5981,
											"end": 5987,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 5968,
											"end": 5977,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5968,
											"end": 5987,
											"modifierDepth": 1,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 5968,
											"end": 5987,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 5960,
											"end": 6019,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "406"
										},
										{
											"begin": 5960,
											"end": 6019,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 5960,
											"end": 6019,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 5960,
											"end": 6019,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5960,
											"end": 6019,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 5960,
											"end": 6019,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 5960,
											"end": 6019,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 5960,
											"end": 6019,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 5960,
											"end": 6019,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "229"
										},
										{
											"begin": 5960,
											"end": 6019,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 5960,
											"end": 6019,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "245"
										},
										{
											"begin": 5960,
											"end": 6019,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 5960,
											"end": 6019,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "406"
										},
										{
											"begin": 5960,
											"end": 6019,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6050,
											"end": 6061,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 6030,
											"end": 6034,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6030,
											"end": 6046,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6030,
											"end": 6046,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6030,
											"end": 6046,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6030,
											"end": 6061,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6030,
											"end": 6061,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6030,
											"end": 6061,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 6030,
											"end": 6061,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "408"
										},
										{
											"begin": 6030,
											"end": 6061,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6030,
											"end": 6061,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6030,
											"end": 6061,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "274"
										},
										{
											"begin": 6030,
											"end": 6061,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6030,
											"end": 6061,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "408"
										},
										{
											"begin": 6030,
											"end": 6061,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6030,
											"end": 6061,
											"modifierDepth": 1,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 6030,
											"end": 6061,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6030,
											"end": 6061,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6030,
											"end": 6061,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6030,
											"end": 6061,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6030,
											"end": 6061,
											"modifierDepth": 1,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": 6030,
											"end": 6061,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6089,
											"end": 6098,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6071,
											"end": 6075,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6071,
											"end": 6085,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1"
										},
										{
											"begin": 6071,
											"end": 6085,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6071,
											"end": 6085,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6071,
											"end": 6098,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6071,
											"end": 6098,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6071,
											"end": 6098,
											"modifierDepth": 1,
											"name": "SLOAD",
											"source": 16
										},
										{
											"begin": 6071,
											"end": 6098,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "409"
										},
										{
											"begin": 6071,
											"end": 6098,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6071,
											"end": 6098,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6071,
											"end": 6098,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "241"
										},
										{
											"begin": 6071,
											"end": 6098,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6071,
											"end": 6098,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "409"
										},
										{
											"begin": 6071,
											"end": 6098,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6071,
											"end": 6098,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6071,
											"end": 6098,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6071,
											"end": 6098,
											"name": "SSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 6109,
											"end": 6186,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "23B872DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6109,
											"end": 6186,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6109,
											"end": 6146,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6146,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6146,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6146,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "23B872DD"
										},
										{
											"begin": 6109,
											"end": 6146,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "410"
										},
										{
											"begin": 6109,
											"end": 6186,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6147,
											"end": 6157,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 6147,
											"end": 6157,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6167,
											"end": 6171,
											"modifierDepth": 1,
											"name": "ADDRESS",
											"source": 16
										},
										{
											"begin": 6167,
											"end": 6171,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6174,
											"end": 6185,
											"name": "DUP10",
											"source": 16
										},
										{
											"begin": 6174,
											"end": 6185,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "191"
										},
										{
											"begin": 6109,
											"end": 6186,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "410"
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "20"
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "412"
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6109,
											"end": 6186,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "412"
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "1F"
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "413"
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "203"
										},
										{
											"begin": 6109,
											"end": 6186,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "413"
										},
										{
											"begin": 6109,
											"end": 6186,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6196,
											"end": 6235,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 6196,
											"end": 6235,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 6204,
											"end": 6214,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 6204,
											"end": 6214,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6196,
											"end": 6235,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 6196,
											"end": 6235,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 6196,
											"end": 6235,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "8FC"
										},
										{
											"begin": 6196,
											"end": 6235,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 6196,
											"end": 6235,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6225,
											"end": 6234,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 6225,
											"end": 6234,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6196,
											"end": 6235,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6196,
											"end": 6235,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6196,
											"end": 6235,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6196,
											"end": 6235,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 6225,
											"end": 6234,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 6204,
											"end": 6214,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 6196,
											"end": 6235,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 6196,
											"end": 6235,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 16
										},
										{
											"begin": 6196,
											"end": 6235,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 6196,
											"end": 6235,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6196,
											"end": 6235,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6196,
											"end": 6235,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6196,
											"end": 6235,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 6196,
											"end": 6235,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 6196,
											"end": 6235,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6196,
											"end": 6235,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 6196,
											"end": 6235,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "415"
										},
										{
											"begin": 6196,
											"end": 6235,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 6196,
											"end": 6235,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 6196,
											"end": 6235,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6196,
											"end": 6235,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6196,
											"end": 6235,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 16
										},
										{
											"begin": 6196,
											"end": 6235,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 6196,
											"end": 6235,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 6196,
											"end": 6235,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 6196,
											"end": 6235,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "415"
										},
										{
											"begin": 6196,
											"end": 6235,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6251,
											"end": 6306,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 6251,
											"end": 6306,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6251,
											"end": 6306,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 4753,
											"end": 4778,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 4753,
											"end": 4778,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4753,
											"end": 4778,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4809,
											"end": 4811,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4794,
											"end": 4812,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4794,
											"end": 4812,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4787,
											"end": 4821,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4787,
											"end": 4821,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4787,
											"end": 4821,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6251,
											"end": 6306,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 6251,
											"end": 6306,
											"modifierDepth": 1,
											"name": "AND",
											"source": 16
										},
										{
											"begin": 6251,
											"end": 6306,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6264,
											"end": 6274,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 6264,
											"end": 6274,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6251,
											"end": 6306,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "30B60EE4DC75C0FB04420331B13E9AD7F8FF8FC51EAC9C97D36FB20CCBE09D66"
										},
										{
											"begin": 6251,
											"end": 6306,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 4726,
											"end": 4744,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6251,
											"end": 6306,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 6251,
											"end": 6306,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 6251,
											"end": 6306,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 6251,
											"end": 6306,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 6251,
											"end": 6306,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 16
										},
										{
											"begin": 6251,
											"end": 6306,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 6251,
											"end": 6306,
											"modifierDepth": 1,
											"name": "LOG3",
											"source": 16
										},
										{
											"begin": 5634,
											"end": 6313,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5634,
											"end": 6313,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5533,
											"end": 6313,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5533,
											"end": 6313,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5533,
											"end": 6313,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 5533,
											"end": 6313,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 8248,
											"end": 8450,
											"name": "tag",
											"source": 16,
											"value": "177"
										},
										{
											"begin": 8248,
											"end": 8450,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 2362,
											"end": 2366,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 2362,
											"end": 2366,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "tag",
											"source": 0,
											"value": "418"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8366,
											"end": 8372,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8341,
											"end": 8362,
											"modifierDepth": 1,
											"name": "SELFBALANCE",
											"source": 16
										},
										{
											"begin": 8341,
											"end": 8372,
											"modifierDepth": 1,
											"name": "LT",
											"source": 16
										},
										{
											"begin": 8341,
											"end": 8372,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 8333,
											"end": 8397,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "420"
										},
										{
											"begin": 8333,
											"end": 8397,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 8333,
											"end": 8397,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 8333,
											"end": 8397,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "461BCD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E5"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8333,
											"end": 8397,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8333,
											"end": 8397,
											"name": "MSTORE",
											"source": 16
										},
										{
											"begin": 12257,
											"end": 12259,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 8333,
											"end": 8397,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "4"
										},
										{
											"begin": 8333,
											"end": 8397,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 8333,
											"end": 8397,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 16
										},
										{
											"begin": 12239,
											"end": 12260,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 12296,
											"end": 12298,
											"name": "PUSH",
											"source": 17,
											"value": "14"
										},
										{
											"begin": 12276,
											"end": 12294,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 12276,
											"end": 12294,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12276,
											"end": 12294,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12269,
											"end": 12299,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E73756666696369656E742062616C616E6365"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "60"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 12315,
											"end": 12333,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 12315,
											"end": 12333,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12315,
											"end": 12333,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 12308,
											"end": 12358,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 12375,
											"end": 12393,
											"name": "PUSH",
											"source": 17,
											"value": "64"
										},
										{
											"begin": 12375,
											"end": 12393,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8333,
											"end": 8397,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "229"
										},
										{
											"begin": 12055,
											"end": 12399,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8333,
											"end": 8397,
											"modifierDepth": 1,
											"name": "tag",
											"source": 16,
											"value": "420"
										},
										{
											"begin": 8333,
											"end": 8397,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 8407,
											"end": 8443,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "40"
										},
										{
											"begin": 8407,
											"end": 8443,
											"name": "MLOAD",
											"source": 16
										},
										{
											"begin": 8415,
											"end": 8425,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 16
										},
										{
											"begin": 8415,
											"end": 8425,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8407,
											"end": 8443,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 8407,
											"end": 8443,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 8407,
											"end": 8443,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "8FC"
										},
										{
											"begin": 8407,
											"end": 8443,
											"modifierDepth": 1,
											"name": "MUL",
											"source": 16
										},
										{
											"begin": 8407,
											"end": 8443,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8436,
											"end": 8442,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 8436,
											"end": 8442,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 8407,
											"end": 8443,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8407,
											"end": 8443,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8407,
											"end": 8443,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8407,
											"end": 8443,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 8436,
											"end": 8442,
											"name": "DUP6",
											"source": 16
										},
										{
											"begin": 8415,
											"end": 8425,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 8407,
											"end": 8443,
											"name": "DUP9",
											"source": 16
										},
										{
											"begin": 8407,
											"end": 8443,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 16
										},
										{
											"begin": 8407,
											"end": 8443,
											"modifierDepth": 1,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 8407,
											"end": 8443,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8407,
											"end": 8443,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8407,
											"end": 8443,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8407,
											"end": 8443,
											"modifierDepth": 1,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 8407,
											"end": 8443,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 8407,
											"end": 8443,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 8407,
											"end": 8443,
											"modifierDepth": 1,
											"name": "ISZERO",
											"source": 16
										},
										{
											"begin": 8407,
											"end": 8443,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "217"
										},
										{
											"begin": 8407,
											"end": 8443,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 16
										},
										{
											"begin": 8407,
											"end": 8443,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 8407,
											"end": 8443,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8407,
											"end": 8443,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 8407,
											"end": 8443,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 16
										},
										{
											"begin": 8407,
											"end": 8443,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 16
										},
										{
											"begin": 8407,
											"end": 8443,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 8407,
											"end": 8443,
											"modifierDepth": 1,
											"name": "REVERT",
											"source": 16
										},
										{
											"begin": 4148,
											"end": 4251,
											"name": "tag",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 4148,
											"end": 4251,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4214,
											"end": 4244,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "222"
										},
										{
											"begin": 4225,
											"end": 4229,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 4214,
											"end": 4224,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "429"
										},
										{
											"begin": 4214,
											"end": 4244,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7270,
											"end": 7657,
											"name": "tag",
											"source": 0,
											"value": "212"
										},
										{
											"begin": 7270,
											"end": 7657,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7347,
											"end": 7351,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "B3DA67D1B252AEAB7C8063542D95E75F82A5307A82535949BC38F7CF7BA8897F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 7437,
											"end": 7459,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "433"
										},
										{
											"begin": 7445,
											"end": 7449,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7451,
											"end": 7458,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7437,
											"end": 7444,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 7437,
											"end": 7459,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7437,
											"end": 7459,
											"name": "tag",
											"source": 0,
											"value": "433"
										},
										{
											"begin": 7437,
											"end": 7459,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7432,
											"end": 7651,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 7432,
											"end": 7651,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7483,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7489,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7506,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7509,
											"end": 7513,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "OR",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7475,
											"end": 7513,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 7559,
											"end": 7571,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "435"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 966,
											"end": 976,
											"name": "SWAP1",
											"source": 5
										},
										{
											"begin": 887,
											"end": 983,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 7559,
											"end": 7571,
											"name": "tag",
											"source": 0,
											"value": "435"
										},
										{
											"begin": 7559,
											"end": 7571,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7550,
											"end": 7557,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 7544,
											"end": 7548,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "PUSH",
											"source": 0,
											"value": "2F8788117E7EFF1D82E926EC794901D17C78024A50270940304540A733656F0D"
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 7532,
											"end": 7572,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 7593,
											"end": 7597,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 7586,
											"end": 7597,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7586,
											"end": 7597,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7586,
											"end": 7597,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7586,
											"end": 7597,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 7586,
											"end": 7597,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7432,
											"end": 7651,
											"name": "tag",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 7432,
											"end": 7651,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7635,
											"end": 7640,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 7628,
											"end": 7640,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 7628,
											"end": 7640,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7628,
											"end": 7640,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 7628,
											"end": 7640,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 7628,
											"end": 7640,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7892,
											"end": 8280,
											"name": "tag",
											"source": 0,
											"value": "218"
										},
										{
											"begin": 7892,
											"end": 8280,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 7970,
											"end": 7974,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "B3DA67D1B252AEAB7C8063542D95E75F82A5307A82535949BC38F7CF7BA8897F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 8059,
											"end": 8081,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 8067,
											"end": 8071,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8073,
											"end": 8080,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8066,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 8059,
											"end": 8081,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 8059,
											"end": 8081,
											"name": "tag",
											"source": 0,
											"value": "440"
										},
										{
											"begin": 8059,
											"end": 8081,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 8055,
											"end": 8274,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 8055,
											"end": 8274,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "434"
										},
										{
											"begin": 8055,
											"end": 8274,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 8131,
											"end": 8136,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "DUP6",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8128,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8136,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8136,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 8097,
											"end": 8136,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8136,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8136,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 8155,
											"end": 8195,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 966,
											"end": 976,
											"name": "SWAP3",
											"source": 5
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 8097,
											"end": 8111,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8155,
											"end": 8195,
											"name": "PUSH",
											"source": 0,
											"value": "F6391F5C32D9C69D2A47EA670B442974B53935D1EDC7FD64EB21E047A839171B"
										},
										{
											"begin": 8155,
											"end": 8195,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8131,
											"end": 8136,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 8155,
											"end": 8195,
											"name": "LOG4",
											"source": 0
										},
										{
											"begin": 8216,
											"end": 8220,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 8209,
											"end": 8220,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 8209,
											"end": 8220,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8209,
											"end": 8220,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 8209,
											"end": 8220,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "184"
										},
										{
											"begin": 8209,
											"end": 8220,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 3674,
											"end": 3852,
											"name": "tag",
											"source": 6,
											"value": "223"
										},
										{
											"begin": 3674,
											"end": 3852,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2563,
											"end": 2579,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "445"
										},
										{
											"begin": 2563,
											"end": 2577,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "446"
										},
										{
											"begin": 2563,
											"end": 2579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2563,
											"end": 2579,
											"name": "tag",
											"source": 6,
											"value": "445"
										},
										{
											"begin": 2563,
											"end": 2579,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "C0C65A3718F3702D917C44106B91645B509D2E2D0979B70495C3BABCE192339F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3791,
											"end": 3808,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3791,
											"end": 3808,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3791,
											"end": 3808,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3791,
											"end": 3808,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3791,
											"end": 3808,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "5DB9EE0A495BF2E6FF9C91A7834C1BA4FDD244A5E8AA4E537BD38AEAE4B073AA"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3832,
											"end": 3844,
											"modifierDepth": 1,
											"name": "tag",
											"source": 6,
											"value": "449"
										},
										{
											"begin": 3832,
											"end": 3844,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3823,
											"end": 3845,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2968,
											"end": 3000,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2968,
											"end": 3000,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2968,
											"end": 3000,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2950,
											"end": 3001,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2950,
											"end": 3001,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2938,
											"end": 2940,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2923,
											"end": 2941,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3823,
											"end": 3845,
											"modifierDepth": 1,
											"name": "LOG1",
											"source": 6
										},
										{
											"begin": 3722,
											"end": 3852,
											"modifierDepth": 1,
											"name": "POP",
											"source": 6
										},
										{
											"begin": 3674,
											"end": 3852,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2905,
											"end": 3033,
											"name": "tag",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 2905,
											"end": 3033,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "C0C65A3718F3702D917C44106B91645B509D2E2D0979B70495C3BABCE192339F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2966,
											"end": 3027,
											"name": "ISZERO",
											"source": 6
										},
										{
											"begin": 2966,
											"end": 3027,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "454"
										},
										{
											"begin": 2966,
											"end": 3027,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D93C0665"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3001,
											"end": 3016,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2966,
											"end": 3027,
											"name": "tag",
											"source": 6,
											"value": "454"
										},
										{
											"begin": 2966,
											"end": 3027,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2905,
											"end": 3033,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 7499,
											"end": 7877,
											"name": "tag",
											"source": 16,
											"value": "242"
										},
										{
											"begin": 7499,
											"end": 7877,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7613,
											"end": 7620,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7613,
											"end": 7620,
											"name": "DUP1",
											"source": 16
										},
										{
											"begin": 7676,
											"end": 7691,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "456"
										},
										{
											"begin": 1016,
											"end": 1017,
											"name": "PUSH",
											"source": 16,
											"value": "3"
										},
										{
											"begin": 7676,
											"end": 7680,
											"name": "PUSH",
											"source": 16,
											"value": "3E8"
										},
										{
											"begin": 7676,
											"end": 7691,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "241"
										},
										{
											"begin": 7676,
											"end": 7691,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7676,
											"end": 7691,
											"name": "tag",
											"source": 16,
											"value": "456"
										},
										{
											"begin": 7676,
											"end": 7691,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7661,
											"end": 7692,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "457"
										},
										{
											"begin": 7661,
											"end": 7692,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7661,
											"end": 7672,
											"name": "DUP7",
											"source": 16
										},
										{
											"begin": 7661,
											"end": 7692,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "304"
										},
										{
											"begin": 7661,
											"end": 7692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7661,
											"end": 7692,
											"name": "tag",
											"source": 16,
											"value": "457"
										},
										{
											"begin": 7661,
											"end": 7692,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7632,
											"end": 7692,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7702,
											"end": 7719,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7722,
											"end": 7756,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "458"
										},
										{
											"begin": 7743,
											"end": 7756,
											"name": "DUP5",
											"source": 16
										},
										{
											"begin": 7632,
											"end": 7692,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 7722,
											"end": 7756,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "304"
										},
										{
											"begin": 7722,
											"end": 7756,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7722,
											"end": 7756,
											"name": "tag",
											"source": 16,
											"value": "458"
										},
										{
											"begin": 7722,
											"end": 7756,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7702,
											"end": 7756,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7766,
											"end": 7785,
											"name": "PUSH",
											"source": 16,
											"value": "0"
										},
										{
											"begin": 7812,
											"end": 7830,
											"name": "DUP3",
											"source": 16
										},
										{
											"begin": 7789,
											"end": 7808,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "459"
										},
										{
											"begin": 7789,
											"end": 7801,
											"name": "DUP8",
											"source": 16
										},
										{
											"begin": 7804,
											"end": 7808,
											"name": "PUSH",
											"source": 16,
											"value": "3E8"
										},
										{
											"begin": 7789,
											"end": 7808,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "304"
										},
										{
											"begin": 7789,
											"end": 7808,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7789,
											"end": 7808,
											"name": "tag",
											"source": 16,
											"value": "459"
										},
										{
											"begin": 7789,
											"end": 7808,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7788,
											"end": 7830,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "460"
										},
										{
											"begin": 7788,
											"end": 7830,
											"name": "SWAP2",
											"source": 16
										},
										{
											"begin": 7788,
											"end": 7830,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": 7788,
											"end": 7830,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "274"
										},
										{
											"begin": 7788,
											"end": 7830,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7788,
											"end": 7830,
											"name": "tag",
											"source": 16,
											"value": "460"
										},
										{
											"begin": 7788,
											"end": 7830,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7766,
											"end": 7830,
											"name": "SWAP1",
											"source": 16
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 7847,
											"end": 7870,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "461"
										},
										{
											"begin": 7766,
											"end": 7830,
											"name": "DUP2",
											"source": 16
										},
										{
											"begin": 7847,
											"end": 7856,
											"name": "DUP4",
											"source": 16
										},
										{
											"begin": 7847,
											"end": 7870,
											"name": "PUSH [tag]",
											"source": 16,
											"value": "306"
										},
										{
											"begin": 7847,
											"end": 7870,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 7847,
											"end": 7870,
											"name": "tag",
											"source": 16,
											"value": "461"
										},
										{
											"begin": 7847,
											"end": 7870,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7840,
											"end": 7870,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 7840,
											"end": 7870,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7840,
											"end": 7870,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7840,
											"end": 7870,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7840,
											"end": 7870,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7499,
											"end": 7877,
											"name": "tag",
											"source": 16,
											"value": "455"
										},
										{
											"begin": 7499,
											"end": 7877,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 7499,
											"end": 7877,
											"name": "SWAP4",
											"source": 16
										},
										{
											"begin": 7499,
											"end": 7877,
											"name": "SWAP3",
											"source": 16
										},
										{
											"begin": 7499,
											"end": 7877,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7499,
											"end": 7877,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7499,
											"end": 7877,
											"name": "POP",
											"source": 16
										},
										{
											"begin": 7499,
											"end": 7877,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 16
										},
										{
											"begin": 4599,
											"end": 4911,
											"name": "tag",
											"source": 2,
											"value": "255"
										},
										{
											"begin": 4599,
											"end": 4911,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4679,
											"end": 4683,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4688,
											"end": 4694,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "636"
										},
										{
											"begin": 4671,
											"end": 4694,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4694,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4694,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "463"
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 4785,
											"end": 4791,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "636"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4749,
											"end": 4791,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4749,
											"end": 4781,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "464"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2035,
											"end": 2088,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 1957,
											"end": 2095,
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4749,
											"end": 4781,
											"name": "tag",
											"source": 2,
											"value": "464"
										},
										{
											"begin": 4749,
											"end": 4781,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4749,
											"end": 4791,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 4749,
											"end": 4791,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 4749,
											"end": 4791,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "tag",
											"source": 2,
											"value": "463"
										},
										{
											"begin": 4671,
											"end": 4791,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4905,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 4654,
											"end": 4905,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "454"
										},
										{
											"begin": 4654,
											"end": 4905,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "703E46DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 4865,
											"end": 4894,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 7883,
											"end": 7981,
											"name": "tag",
											"source": 16,
											"value": "258"
										},
										{
											"begin": 7883,
											"end": 7981,
											"name": "JUMPDEST",
											"source": 16
										},
										{
											"begin": 858,
											"end": 884,
											"name": "PUSH",
											"source": 16,
											"value": "189AB7A9244DF0848122154315AF71FE140F3DB0FE014031783B0946B8C9D2E3"
										},
										{
											"begin": 3191,
											"end": 3207,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 3202,
											"end": 3206,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 3191,
											"end": 3201,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "188"
										},
										{
											"begin": 3191,
											"end": 3207,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 6052,
											"end": 6590,
											"name": "tag",
											"source": 2,
											"value": "260"
										},
										{
											"begin": 6052,
											"end": 6590,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6169,
											"end": 6186,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 6151,
											"end": 6201,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6201,
											"name": "PUSH",
											"source": 2,
											"value": "52D1902D"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SHL",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP7",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "GAS",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "STATICCALL",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "471"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "1F"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "RETURNDATASIZE",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "472"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "473"
										},
										{
											"begin": 6151,
											"end": 6203,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "tag",
											"source": 2,
											"value": "472"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "PUSH",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "tag",
											"source": 2,
											"value": "471"
										},
										{
											"begin": 6151,
											"end": 6203,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6147,
											"end": 6584,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "474"
										},
										{
											"begin": 6147,
											"end": 6584,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4C9C8CE3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2968,
											"end": 3000,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2968,
											"end": 3000,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 2950,
											"end": 3001,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2923,
											"end": 2941,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 2923,
											"end": 2941,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6513,
											"end": 6573,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 2779,
											"end": 3007,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6147,
											"end": 6584,
											"name": "tag",
											"source": 2,
											"value": "474"
										},
										{
											"begin": 6147,
											"end": 6584,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 6245,
											"end": 6285,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6245,
											"end": 6285,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 6241,
											"end": 6361,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "480"
										},
										{
											"begin": 6241,
											"end": 6361,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "2A875269"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1958,
											"end": 1983,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1958,
											"end": 1983,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1958,
											"end": 1983,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 1931,
											"end": 1949,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 1931,
											"end": 1949,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6312,
											"end": 6346,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "229"
										},
										{
											"begin": 1812,
											"end": 1989,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6241,
											"end": 6361,
											"name": "tag",
											"source": 2,
											"value": "480"
										},
										{
											"begin": 6241,
											"end": 6361,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 6374,
											"end": 6428,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "217"
										},
										{
											"begin": 6404,
											"end": 6421,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6423,
											"end": 6427,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 6374,
											"end": 6403,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "483"
										},
										{
											"begin": 6374,
											"end": 6428,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 5028,
											"end": 5241,
											"name": "tag",
											"source": 2,
											"value": "283"
										},
										{
											"begin": 5028,
											"end": 5241,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 5102,
											"end": 5106,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5111,
											"end": 5117,
											"name": "PUSHIMMUTABLE",
											"source": 2,
											"value": "636"
										},
										{
											"begin": 5094,
											"end": 5117,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 5094,
											"end": 5117,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 5090,
											"end": 5235,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "454"
										},
										{
											"begin": 5090,
											"end": 5235,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "703E46DD"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 5195,
											"end": 5224,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 3366,
											"end": 3542,
											"name": "tag",
											"source": 6,
											"value": "324"
										},
										{
											"begin": 3366,
											"end": 3542,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "488"
										},
										{
											"begin": 2316,
											"end": 2333,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "226"
										},
										{
											"begin": 2316,
											"end": 2335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "tag",
											"source": 6,
											"value": "488"
										},
										{
											"begin": 2316,
											"end": 2335,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "C0C65A3718F3702D917C44106B91645B509D2E2D0979B70495C3BABCE192339F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 3484,
											"end": 3500,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3500,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3496,
											"end": 3500,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "1"
										},
										{
											"begin": 3484,
											"end": 3500,
											"modifierDepth": 1,
											"name": "OR",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3500,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3484,
											"end": 3500,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 3515,
											"end": 3535,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 6,
											"value": "62E78CEA01BEE320CD4E420270B5EA74000D11B0C9F74754EBDBFC544B05A258"
										},
										{
											"begin": 966,
											"end": 976,
											"name": "CALLER",
											"source": 5
										},
										{
											"begin": 3522,
											"end": 3534,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "449"
										},
										{
											"begin": 887,
											"end": 983,
											"name": "JUMP",
											"source": 5
										},
										{
											"begin": 1836,
											"end": 1933,
											"name": "tag",
											"source": 6,
											"value": "360"
										},
										{
											"begin": 1836,
											"end": 1933,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "495"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "496"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "495"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1899,
											"end": 1926,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "454"
										},
										{
											"begin": 1899,
											"end": 1924,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "499"
										},
										{
											"begin": 1899,
											"end": 1926,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 3231,
											"end": 3296,
											"name": "tag",
											"source": 0,
											"value": "362"
										},
										{
											"begin": 3231,
											"end": 3296,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "454"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "496"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 4381,
											"end": 4578,
											"name": "tag",
											"source": 0,
											"value": "429"
										},
										{
											"begin": 4381,
											"end": 4578,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4491,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "507"
										},
										{
											"begin": 4477,
											"end": 4481,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4483,
											"end": 4490,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4476,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "126"
										},
										{
											"begin": 4469,
											"end": 4491,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 4469,
											"end": 4491,
											"name": "tag",
											"source": 0,
											"value": "507"
										},
										{
											"begin": 4469,
											"end": 4491,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 4464,
											"end": 4572,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "259"
										},
										{
											"begin": 4464,
											"end": 4572,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E2517D3F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7509,
											"end": 7541,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7509,
											"end": 7541,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 7491,
											"end": 7542,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7558,
											"end": 7576,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 7558,
											"end": 7576,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7558,
											"end": 7576,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7551,
											"end": 7585,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 7551,
											"end": 7585,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7551,
											"end": 7585,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7464,
											"end": 7482,
											"name": "PUSH",
											"source": 17,
											"value": "44"
										},
										{
											"begin": 7464,
											"end": 7482,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4514,
											"end": 4561,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "229"
										},
										{
											"begin": 7317,
											"end": 7591,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3105,
											"end": 3231,
											"name": "tag",
											"source": 6,
											"value": "446"
										},
										{
											"begin": 3105,
											"end": 3231,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "C0C65A3718F3702D917C44106B91645B509D2E2D0979B70495C3BABCE192339F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "PUSH",
											"source": 6,
											"value": "FF"
										},
										{
											"begin": 2821,
											"end": 2830,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 3163,
											"end": 3225,
											"name": "PUSH [tag]",
											"source": 6,
											"value": "454"
										},
										{
											"begin": 3163,
											"end": 3225,
											"name": "JUMPI",
											"source": 6
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "8DFC202B"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "DUP2",
											"source": 6
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "MSTORE",
											"source": 6
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "PUSH",
											"source": 6,
											"value": "4"
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "ADD",
											"source": 6
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "PUSH",
											"source": 6,
											"value": "40"
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "MLOAD",
											"source": 6
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "SWAP2",
											"source": 6
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "SUB",
											"source": 6
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 3199,
											"end": 3214,
											"name": "REVERT",
											"source": 6
										},
										{
											"begin": 2779,
											"end": 3114,
											"name": "tag",
											"source": 11,
											"value": "483"
										},
										{
											"begin": 2779,
											"end": 3114,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2870,
											"end": 2907,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "518"
										},
										{
											"begin": 2889,
											"end": 2906,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2870,
											"end": 2888,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "519"
										},
										{
											"begin": 2870,
											"end": 2907,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2870,
											"end": 2907,
											"name": "tag",
											"source": 11,
											"value": "518"
										},
										{
											"begin": 2870,
											"end": 2907,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "DUP4",
											"source": 11
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "PUSH",
											"source": 11,
											"value": "BC7CD75A20EE27FD9ADEBAB32041F755214DBC6BFFA90CC0225B39DA2E5C2D3B"
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2922,
											"end": 2949,
											"name": "LOG2",
											"source": 11
										},
										{
											"begin": 2964,
											"end": 2975,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2964,
											"end": 2975,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 2964,
											"end": 2979,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "520"
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2995,
											"end": 3048,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "217"
										},
										{
											"begin": 3024,
											"end": 3041,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 3043,
											"end": 3047,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2995,
											"end": 3023,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "522"
										},
										{
											"begin": 2995,
											"end": 3048,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "tag",
											"source": 11,
											"value": "520"
										},
										{
											"begin": 2960,
											"end": 3108,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 3079,
											"end": 3097,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "259"
										},
										{
											"begin": 3079,
											"end": 3095,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "525"
										},
										{
											"begin": 3079,
											"end": 3097,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "tag",
											"source": 1,
											"value": "496"
										},
										{
											"begin": 7084,
											"end": 7225,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 8870,
											"end": 8891,
											"name": "PUSH",
											"source": 1,
											"value": "F0C57E16840DF040F15088DC2F81FE391C3923BEC73E23A9662EFC9C229C6A00"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "40"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "PUSH",
											"source": 1,
											"value": "FF"
										},
										{
											"begin": 8560,
											"end": 8600,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "454"
										},
										{
											"begin": 7146,
											"end": 7219,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1AFCD79F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7191,
											"end": 7208,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1939,
											"end": 2095,
											"name": "tag",
											"source": 6,
											"value": "499"
										},
										{
											"begin": 1939,
											"end": 2095,
											"name": "JUMPDEST",
											"source": 6
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "531"
										},
										{
											"begin": 6931,
											"end": 6949,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "496"
										},
										{
											"begin": 6931,
											"end": 6951,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "tag",
											"source": 1,
											"value": "531"
										},
										{
											"begin": 6931,
											"end": 6951,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "C0C65A3718F3702D917C44106B91645B509D2E2D0979B70495C3BABCE192339F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2071,
											"end": 2088,
											"name": "DUP1",
											"source": 6
										},
										{
											"begin": 2071,
											"end": 2088,
											"name": "SLOAD",
											"source": 6
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "FF"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2071,
											"end": 2088,
											"modifierDepth": 1,
											"name": "AND",
											"source": 6
										},
										{
											"begin": 2071,
											"end": 2088,
											"name": "SWAP1",
											"source": 6
										},
										{
											"begin": 2071,
											"end": 2088,
											"name": "SSTORE",
											"source": 6
										},
										{
											"begin": 1939,
											"end": 2095,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 6
										},
										{
											"begin": 2186,
											"end": 2467,
											"name": "tag",
											"source": 11,
											"value": "519"
										},
										{
											"begin": 2186,
											"end": 2467,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 2263,
											"end": 2280,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2263,
											"end": 2292,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2263,
											"end": 2292,
											"name": "EXTCODESIZE",
											"source": 11
										},
										{
											"begin": 2296,
											"end": 2297,
											"name": "PUSH",
											"source": 11,
											"value": "0"
										},
										{
											"begin": 2263,
											"end": 2297,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "536"
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "4C9C8CE3"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2968,
											"end": 3000,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2968,
											"end": 3000,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "DUP3",
											"source": 11
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 2950,
											"end": 3001,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2923,
											"end": 2941,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 2923,
											"end": 2941,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2320,
											"end": 2367,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "229"
										},
										{
											"begin": 2779,
											"end": 3007,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "tag",
											"source": 11,
											"value": "536"
										},
										{
											"begin": 2259,
											"end": 2378,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP1",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "20"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH data",
											"source": -1,
											"value": "75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP4",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "CODECOPY",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "DUP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MLOAD",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SWAP2",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "MSTORE",
											"source": -1
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "AND",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP3",
											"source": 11
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "AND",
											"source": 11
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "OR",
											"source": 11
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 2387,
											"end": 2460,
											"name": "SSTORE",
											"source": 11
										},
										{
											"begin": 2186,
											"end": 2467,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 11
										},
										{
											"begin": 4106,
											"end": 4359,
											"name": "tag",
											"source": 13,
											"value": "522"
										},
										{
											"begin": 4106,
											"end": 4359,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4189,
											"end": 4201,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 4214,
											"end": 4226,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4228,
											"end": 4251,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4261,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 4255,
											"end": 4274,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4275,
											"end": 4279,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "540"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "541"
										},
										{
											"begin": 4255,
											"end": 4280,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "tag",
											"source": 13,
											"value": "540"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "GAS",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DELEGATECALL",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "EQ",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "544"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 13,
											"value": "1F"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "NOT",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 13,
											"value": "3F"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATASIZE",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 13,
											"value": "0"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "RETURNDATACOPY",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "543"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "tag",
											"source": 13,
											"value": "544"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "tag",
											"source": 13,
											"value": "543"
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4255,
											"end": 4280,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4213,
											"end": 4280,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4213,
											"end": 4280,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4213,
											"end": 4280,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 4213,
											"end": 4280,
											"name": "POP",
											"source": 13
										},
										{
											"begin": 4297,
											"end": 4352,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "545"
										},
										{
											"begin": 4324,
											"end": 4330,
											"name": "DUP6",
											"source": 13
										},
										{
											"begin": 4332,
											"end": 4339,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4341,
											"end": 4351,
											"name": "DUP4",
											"source": 13
										},
										{
											"begin": 4297,
											"end": 4323,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "546"
										},
										{
											"begin": 4297,
											"end": 4352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4297,
											"end": 4352,
											"name": "tag",
											"source": 13,
											"value": "545"
										},
										{
											"begin": 4297,
											"end": 4352,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4290,
											"end": 4352,
											"name": "SWAP6",
											"source": 13
										},
										{
											"begin": 4106,
											"end": 4359,
											"name": "SWAP5",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 4106,
											"end": 4359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 6598,
											"end": 6720,
											"name": "tag",
											"source": 11,
											"value": "525"
										},
										{
											"begin": 6598,
											"end": 6720,
											"name": "JUMPDEST",
											"source": 11
										},
										{
											"begin": 6648,
											"end": 6657,
											"name": "CALLVALUE",
											"source": 11
										},
										{
											"begin": 6648,
											"end": 6661,
											"name": "ISZERO",
											"source": 11
										},
										{
											"begin": 6644,
											"end": 6714,
											"name": "PUSH [tag]",
											"source": 11,
											"value": "454"
										},
										{
											"begin": 6644,
											"end": 6714,
											"name": "JUMPI",
											"source": 11
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "B398979F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "DUP2",
											"source": 11
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "MSTORE",
											"source": 11
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "PUSH",
											"source": 11,
											"value": "4"
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "ADD",
											"source": 11
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "PUSH",
											"source": 11,
											"value": "40"
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "MLOAD",
											"source": 11
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "DUP1",
											"source": 11
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "SWAP2",
											"source": 11
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "SUB",
											"source": 11
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "SWAP1",
											"source": 11
										},
										{
											"begin": 6684,
											"end": 6703,
											"name": "REVERT",
											"source": 11
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "tag",
											"source": 13,
											"value": "546"
										},
										{
											"begin": 4625,
											"end": 5207,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4769,
											"end": 4781,
											"name": "PUSH",
											"source": 13,
											"value": "60"
										},
										{
											"begin": 4798,
											"end": 4805,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "552"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "553"
										},
										{
											"begin": 4829,
											"end": 4839,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 4821,
											"end": 4828,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "554"
										},
										{
											"begin": 4821,
											"end": 4840,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "tag",
											"source": 13,
											"value": "553"
										},
										{
											"begin": 4821,
											"end": 4840,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "455"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "tag",
											"source": 13,
											"value": "552"
										},
										{
											"begin": 4793,
											"end": 5201,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5045,
											"end": 5062,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5045,
											"end": 5067,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "556"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "DUP5",
											"source": 13
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "AND",
											"source": 13
										},
										{
											"begin": 5071,
											"end": 5089,
											"name": "EXTCODESIZE",
											"source": 13
										},
										{
											"begin": 5071,
											"end": 5094,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "tag",
											"source": 13,
											"value": "556"
										},
										{
											"begin": 5045,
											"end": 5094,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "557"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "9996B315"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 2968,
											"end": 3000,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 2968,
											"end": 3000,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 2950,
											"end": 3001,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 2923,
											"end": 2941,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 2923,
											"end": 2941,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5121,
											"end": 5145,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "229"
										},
										{
											"begin": 2779,
											"end": 3007,
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "tag",
											"source": 13,
											"value": "557"
										},
										{
											"begin": 5041,
											"end": 5160,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5180,
											"end": 5190,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "455"
										},
										{
											"begin": 5173,
											"end": 5190,
											"name": "JUMP",
											"source": 13
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "tag",
											"source": 13,
											"value": "554"
										},
										{
											"begin": 5743,
											"end": 6259,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 5874,
											"end": 5891,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 5874,
											"end": 5895,
											"name": "ISZERO",
											"source": 13
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "PUSH [tag]",
											"source": 13,
											"value": "560"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPI",
											"source": 13
										},
										{
											"begin": 6102,
											"end": 6112,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6096,
											"end": 6113,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6158,
											"end": 6173,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6145,
											"end": 6155,
											"name": "DUP3",
											"source": 13
										},
										{
											"begin": 6141,
											"end": 6143,
											"name": "PUSH",
											"source": 13,
											"value": "20"
										},
										{
											"begin": 6137,
											"end": 6156,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6130,
											"end": 6174,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "tag",
											"source": 13,
											"value": "560"
										},
										{
											"begin": 5870,
											"end": 6253,
											"name": "JUMPDEST",
											"source": 13
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A12F521"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP2",
											"source": 13
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MSTORE",
											"source": 13
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 13,
											"value": "4"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "ADD",
											"source": 13
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "PUSH",
											"source": 13,
											"value": "40"
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "MLOAD",
											"source": 13
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "DUP1",
											"source": 13
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP2",
											"source": 13
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SUB",
											"source": 13
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "SWAP1",
											"source": 13
										},
										{
											"begin": 6225,
											"end": 6242,
											"name": "REVERT",
											"source": 13
										},
										{
											"begin": 14,
											"end": 300,
											"name": "tag",
											"source": 17,
											"value": "43"
										},
										{
											"begin": 14,
											"end": 300,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 72,
											"end": 78,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 125,
											"end": 127,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 113,
											"end": 122,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 104,
											"end": 111,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 100,
											"end": 123,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 96,
											"end": 128,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 93,
											"end": 145,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 93,
											"end": 145,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "567"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 141,
											"end": 142,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 138,
											"end": 139,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 131,
											"end": 143,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 93,
											"end": 145,
											"name": "tag",
											"source": 17,
											"value": "567"
										},
										{
											"begin": 93,
											"end": 145,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 167,
											"end": 190,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 167,
											"end": 190,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 219,
											"end": 251,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 219,
											"end": 251,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 209,
											"end": 252,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 209,
											"end": 252,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 199,
											"end": 270,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "455"
										},
										{
											"begin": 199,
											"end": 270,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 266,
											"end": 267,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 263,
											"end": 264,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 256,
											"end": 268,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 497,
											"end": 723,
											"name": "tag",
											"source": 17,
											"value": "50"
										},
										{
											"begin": 497,
											"end": 723,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 556,
											"end": 562,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 609,
											"end": 611,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 597,
											"end": 606,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 588,
											"end": 595,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 584,
											"end": 607,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 580,
											"end": 612,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 577,
											"end": 629,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 577,
											"end": 629,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "571"
										},
										{
											"begin": 577,
											"end": 629,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 625,
											"end": 626,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 622,
											"end": 623,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 615,
											"end": 627,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 577,
											"end": 629,
											"name": "tag",
											"source": 17,
											"value": "571"
										},
										{
											"begin": 577,
											"end": 629,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 670,
											"end": 693,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 670,
											"end": 693,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 497,
											"end": 723,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 497,
											"end": 723,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 728,
											"end": 859,
											"name": "tag",
											"source": 17,
											"value": "562"
										},
										{
											"begin": 728,
											"end": 859,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 803,
											"end": 834,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 803,
											"end": 834,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 793,
											"end": 835,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 793,
											"end": 835,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 783,
											"end": 853,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "222"
										},
										{
											"begin": 783,
											"end": 853,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 849,
											"end": 850,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 846,
											"end": 847,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 839,
											"end": 851,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 864,
											"end": 1231,
											"name": "tag",
											"source": 17,
											"value": "55"
										},
										{
											"begin": 864,
											"end": 1231,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 932,
											"end": 938,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 940,
											"end": 946,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 993,
											"end": 995,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 981,
											"end": 990,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 972,
											"end": 979,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 968,
											"end": 991,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 964,
											"end": 996,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 961,
											"end": 1013,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 961,
											"end": 1013,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "575"
										},
										{
											"begin": 961,
											"end": 1013,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1009,
											"end": 1010,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1006,
											"end": 1007,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 999,
											"end": 1011,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 961,
											"end": 1013,
											"name": "tag",
											"source": 17,
											"value": "575"
										},
										{
											"begin": 961,
											"end": 1013,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1048,
											"end": 1057,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1035,
											"end": 1058,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 1067,
											"end": 1098,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "576"
										},
										{
											"begin": 1092,
											"end": 1097,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1067,
											"end": 1098,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "562"
										},
										{
											"begin": 1067,
											"end": 1098,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1067,
											"end": 1098,
											"name": "tag",
											"source": 17,
											"value": "576"
										},
										{
											"begin": 1067,
											"end": 1098,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1117,
											"end": 1122,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 1195,
											"end": 1197,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1180,
											"end": 1198,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 1180,
											"end": 1198,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 1180,
											"end": 1198,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 1180,
											"end": 1198,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 1167,
											"end": 1199,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 1167,
											"end": 1199,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 864,
											"end": 1231,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 1236,
											"end": 1483,
											"name": "tag",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 1236,
											"end": 1483,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1295,
											"end": 1301,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1348,
											"end": 1350,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 1336,
											"end": 1345,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 1327,
											"end": 1334,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 1323,
											"end": 1346,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 1319,
											"end": 1351,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "578"
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 1364,
											"end": 1365,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 1361,
											"end": 1362,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 1354,
											"end": 1366,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "tag",
											"source": 17,
											"value": "578"
										},
										{
											"begin": 1316,
											"end": 1368,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 1403,
											"end": 1412,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1390,
											"end": 1413,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 1422,
											"end": 1453,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "455"
										},
										{
											"begin": 1447,
											"end": 1452,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 1422,
											"end": 1453,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "562"
										},
										{
											"begin": 1422,
											"end": 1453,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2407,
											"end": 2774,
											"name": "tag",
											"source": 17,
											"value": "83"
										},
										{
											"begin": 2407,
											"end": 2774,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2475,
											"end": 2481,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2483,
											"end": 2489,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2536,
											"end": 2538,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 2524,
											"end": 2533,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2515,
											"end": 2522,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 2511,
											"end": 2534,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 2507,
											"end": 2539,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 2504,
											"end": 2556,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 2504,
											"end": 2556,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "586"
										},
										{
											"begin": 2504,
											"end": 2556,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 2552,
											"end": 2553,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 2549,
											"end": 2550,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2542,
											"end": 2554,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 2504,
											"end": 2556,
											"name": "tag",
											"source": 17,
											"value": "586"
										},
										{
											"begin": 2504,
											"end": 2556,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2597,
											"end": 2620,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 2597,
											"end": 2620,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 2597,
											"end": 2620,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 2696,
											"end": 2698,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 2681,
											"end": 2699,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 2681,
											"end": 2699,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 2668,
											"end": 2700,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 2709,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "587"
										},
										{
											"begin": 2668,
											"end": 2700,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 2709,
											"end": 2742,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "562"
										},
										{
											"begin": 2709,
											"end": 2742,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 2709,
											"end": 2742,
											"name": "tag",
											"source": 17,
											"value": "587"
										},
										{
											"begin": 2709,
											"end": 2742,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 2761,
											"end": 2768,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 2751,
											"end": 2768,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 2751,
											"end": 2768,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2751,
											"end": 2768,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2407,
											"end": 2774,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2407,
											"end": 2774,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2407,
											"end": 2774,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 2407,
											"end": 2774,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 2407,
											"end": 2774,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 2407,
											"end": 2774,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3012,
											"end": 3358,
											"name": "tag",
											"source": 17,
											"value": "99"
										},
										{
											"begin": 3012,
											"end": 3358,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3080,
											"end": 3086,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3088,
											"end": 3094,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3141,
											"end": 3143,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3129,
											"end": 3138,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3120,
											"end": 3127,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 3116,
											"end": 3139,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3112,
											"end": 3144,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 3109,
											"end": 3161,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3109,
											"end": 3161,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "590"
										},
										{
											"begin": 3109,
											"end": 3161,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3157,
											"end": 3158,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3154,
											"end": 3155,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3147,
											"end": 3159,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3109,
											"end": 3161,
											"name": "tag",
											"source": 17,
											"value": "590"
										},
										{
											"begin": 3109,
											"end": 3161,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3202,
											"end": 3225,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3202,
											"end": 3225,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 3202,
											"end": 3225,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3322,
											"end": 3324,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3307,
											"end": 3325,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3307,
											"end": 3325,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 3307,
											"end": 3325,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3294,
											"end": 3326,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 3294,
											"end": 3326,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3012,
											"end": 3358,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3363,
											"end": 3490,
											"name": "tag",
											"source": 17,
											"value": "563"
										},
										{
											"begin": 3363,
											"end": 3490,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3424,
											"end": 3434,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B71"
										},
										{
											"begin": 3419,
											"end": 3422,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 3415,
											"end": 3435,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 3412,
											"end": 3413,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3405,
											"end": 3436,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3455,
											"end": 3459,
											"name": "PUSH",
											"source": 17,
											"value": "41"
										},
										{
											"begin": 3452,
											"end": 3453,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 3445,
											"end": 3460,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 3479,
											"end": 3483,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 3476,
											"end": 3477,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3469,
											"end": 3484,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3495,
											"end": 4574,
											"name": "tag",
											"source": 17,
											"value": "103"
										},
										{
											"begin": 3495,
											"end": 4574,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3572,
											"end": 3578,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3580,
											"end": 3586,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3633,
											"end": 3635,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 3621,
											"end": 3630,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3612,
											"end": 3619,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 3608,
											"end": 3631,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 3604,
											"end": 3636,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 3601,
											"end": 3653,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3601,
											"end": 3653,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "593"
										},
										{
											"begin": 3601,
											"end": 3653,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3649,
											"end": 3650,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3646,
											"end": 3647,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3639,
											"end": 3651,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3601,
											"end": 3653,
											"name": "tag",
											"source": 17,
											"value": "593"
										},
										{
											"begin": 3601,
											"end": 3653,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3688,
											"end": 3697,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 3675,
											"end": 3698,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 3707,
											"end": 3738,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "594"
										},
										{
											"begin": 3732,
											"end": 3737,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3707,
											"end": 3738,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "562"
										},
										{
											"begin": 3707,
											"end": 3738,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 3707,
											"end": 3738,
											"name": "tag",
											"source": 17,
											"value": "594"
										},
										{
											"begin": 3707,
											"end": 3738,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3757,
											"end": 3762,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 3813,
											"end": 3815,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 3798,
											"end": 3816,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3798,
											"end": 3816,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3785,
											"end": 3817,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 3840,
											"end": 3858,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 3829,
											"end": 3859,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3829,
											"end": 3859,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 3826,
											"end": 3876,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 3826,
											"end": 3876,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "595"
										},
										{
											"begin": 3826,
											"end": 3876,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3872,
											"end": 3873,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3869,
											"end": 3870,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3862,
											"end": 3874,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3826,
											"end": 3876,
											"name": "tag",
											"source": 17,
											"value": "595"
										},
										{
											"begin": 3826,
											"end": 3876,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 3895,
											"end": 3917,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 3895,
											"end": 3917,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3948,
											"end": 3952,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 3940,
											"end": 3953,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 3940,
											"end": 3953,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 3936,
											"end": 3963,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SGT",
											"source": -1
										},
										{
											"begin": 3926,
											"end": 3981,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "596"
										},
										{
											"begin": 3926,
											"end": 3981,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 3977,
											"end": 3978,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 3974,
											"end": 3975,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 3967,
											"end": 3979,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 3926,
											"end": 3981,
											"name": "tag",
											"source": 17,
											"value": "596"
										},
										{
											"begin": 3926,
											"end": 3981,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4017,
											"end": 4019,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4004,
											"end": 4020,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 4043,
											"end": 4061,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4035,
											"end": 4041,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4032,
											"end": 4062,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 4029,
											"end": 4085,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4029,
											"end": 4085,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "598"
										},
										{
											"begin": 4029,
											"end": 4085,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4065,
											"end": 4083,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "598"
										},
										{
											"begin": 4065,
											"end": 4083,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "563"
										},
										{
											"begin": 4065,
											"end": 4083,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4065,
											"end": 4083,
											"name": "tag",
											"source": 17,
											"value": "598"
										},
										{
											"begin": 4065,
											"end": 4083,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4114,
											"end": 4116,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4108,
											"end": 4117,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 4206,
											"end": 4208,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 4168,
											"end": 4185,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4168,
											"end": 4185,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "NOT",
											"source": -1
										},
										{
											"begin": 4164,
											"end": 4195,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 4164,
											"end": 4195,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4164,
											"end": 4195,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4197,
											"end": 4199,
											"name": "PUSH",
											"source": 17,
											"value": "3F"
										},
										{
											"begin": 4160,
											"end": 4200,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4156,
											"end": 4210,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 4144,
											"end": 4211,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4144,
											"end": 4211,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4241,
											"end": 4259,
											"name": "PUSH",
											"source": 17,
											"value": "FFFFFFFFFFFFFFFF"
										},
										{
											"begin": 4226,
											"end": 4260,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4226,
											"end": 4260,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 4262,
											"end": 4284,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4262,
											"end": 4284,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4262,
											"end": 4284,
											"name": "LT",
											"source": 17
										},
										{
											"begin": 4223,
											"end": 4285,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 4220,
											"end": 4308,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4220,
											"end": 4308,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "600"
										},
										{
											"begin": 4220,
											"end": 4308,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4288,
											"end": 4306,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "600"
										},
										{
											"begin": 4288,
											"end": 4306,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "563"
										},
										{
											"begin": 4288,
											"end": 4306,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4288,
											"end": 4306,
											"name": "tag",
											"source": 17,
											"value": "600"
										},
										{
											"begin": 4288,
											"end": 4306,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4324,
											"end": 4326,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 4317,
											"end": 4339,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4348,
											"end": 4370,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4348,
											"end": 4370,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4348,
											"end": 4370,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4389,
											"end": 4404,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4389,
											"end": 4404,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 4389,
											"end": 4404,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4406,
											"end": 4408,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4385,
											"end": 4409,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4382,
											"end": 4419,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "LT",
											"source": -1
										},
										{
											"begin": 4379,
											"end": 4436,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 4379,
											"end": 4436,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "601"
										},
										{
											"begin": 4379,
											"end": 4436,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 4432,
											"end": 4433,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4429,
											"end": 4430,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4422,
											"end": 4434,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 4379,
											"end": 4436,
											"name": "tag",
											"source": 17,
											"value": "601"
										},
										{
											"begin": 4379,
											"end": 4436,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4488,
											"end": 4494,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4483,
											"end": 4485,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4479,
											"end": 4481,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 4475,
											"end": 4486,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4470,
											"end": 4472,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4462,
											"end": 4468,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4458,
											"end": 4473,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4445,
											"end": 4495,
											"name": "CALLDATACOPY",
											"source": 17
										},
										{
											"begin": 4541,
											"end": 4542,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 4536,
											"end": 4538,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4527,
											"end": 4533,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4519,
											"end": 4525,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 4515,
											"end": 4534,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4511,
											"end": 4539,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 4504,
											"end": 4543,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4562,
											"end": 4568,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 4552,
											"end": 4568,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 4552,
											"end": 4568,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4552,
											"end": 4568,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4552,
											"end": 4568,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4552,
											"end": 4568,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3495,
											"end": 4574,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3495,
											"end": 4574,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3495,
											"end": 4574,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 3495,
											"end": 4574,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 3495,
											"end": 4574,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 3495,
											"end": 4574,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 4832,
											"end": 5250,
											"name": "tag",
											"source": 17,
											"value": "142"
										},
										{
											"begin": 4832,
											"end": 5250,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 4981,
											"end": 4983,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 4970,
											"end": 4979,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 4963,
											"end": 4984,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 4944,
											"end": 4948,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5013,
											"end": 5019,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5007,
											"end": 5020,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 5056,
											"end": 5062,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5051,
											"end": 5053,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5040,
											"end": 5049,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 5036,
											"end": 5054,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5029,
											"end": 5063,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5115,
											"end": 5121,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5110,
											"end": 5112,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5102,
											"end": 5108,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 5098,
											"end": 5113,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5093,
											"end": 5095,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5082,
											"end": 5091,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 5078,
											"end": 5096,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5072,
											"end": 5122,
											"name": "MCOPY",
											"source": 17
										},
										{
											"begin": 5171,
											"end": 5172,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5166,
											"end": 5168,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5157,
											"end": 5163,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 5146,
											"end": 5155,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 5142,
											"end": 5164,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5138,
											"end": 5169,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5131,
											"end": 5173,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 5241,
											"end": 5243,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5234,
											"end": 5236,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 5230,
											"end": 5237,
											"name": "NOT",
											"source": 17
										},
										{
											"begin": 5225,
											"end": 5227,
											"name": "PUSH",
											"source": 17,
											"value": "1F"
										},
										{
											"begin": 5217,
											"end": 5223,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5213,
											"end": 5228,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5209,
											"end": 5238,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 5198,
											"end": 5207,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 5194,
											"end": 5239,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5190,
											"end": 5244,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5182,
											"end": 5244,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 5182,
											"end": 5244,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5182,
											"end": 5244,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4832,
											"end": 5250,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 4832,
											"end": 5250,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 4832,
											"end": 5250,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4832,
											"end": 5250,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 4832,
											"end": 5250,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5255,
											"end": 5742,
											"name": "tag",
											"source": 17,
											"value": "146"
										},
										{
											"begin": 5255,
											"end": 5742,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5332,
											"end": 5338,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5340,
											"end": 5346,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5348,
											"end": 5354,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5401,
											"end": 5403,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 5389,
											"end": 5398,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 5380,
											"end": 5387,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 5376,
											"end": 5399,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 5372,
											"end": 5404,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 5369,
											"end": 5421,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5369,
											"end": 5421,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "605"
										},
										{
											"begin": 5369,
											"end": 5421,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5417,
											"end": 5418,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5414,
											"end": 5415,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5407,
											"end": 5419,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 5369,
											"end": 5421,
											"name": "tag",
											"source": 17,
											"value": "605"
										},
										{
											"begin": 5369,
											"end": 5421,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5456,
											"end": 5465,
											"name": "DUP4",
											"source": 17
										},
										{
											"begin": 5443,
											"end": 5466,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 5475,
											"end": 5506,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "606"
										},
										{
											"begin": 5500,
											"end": 5505,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 5475,
											"end": 5506,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "562"
										},
										{
											"begin": 5475,
											"end": 5506,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5475,
											"end": 5506,
											"name": "tag",
											"source": 17,
											"value": "606"
										},
										{
											"begin": 5475,
											"end": 5506,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5525,
											"end": 5530,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 5603,
											"end": 5605,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 5588,
											"end": 5606,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 5588,
											"end": 5606,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5575,
											"end": 5607,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 5575,
											"end": 5607,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5706,
											"end": 5708,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 5691,
											"end": 5709,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 5691,
											"end": 5709,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": 5691,
											"end": 5709,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 5678,
											"end": 5710,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 5678,
											"end": 5710,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 5255,
											"end": 5742,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 5255,
											"end": 5742,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 5747,
											"end": 6702,
											"name": "tag",
											"source": 17,
											"value": "151"
										},
										{
											"begin": 5747,
											"end": 6702,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 5851,
											"end": 5857,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5859,
											"end": 5865,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5867,
											"end": 5873,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5875,
											"end": 5881,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5883,
											"end": 5889,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5891,
											"end": 5897,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5944,
											"end": 5947,
											"name": "PUSH",
											"source": 17,
											"value": "C0"
										},
										{
											"begin": 5932,
											"end": 5941,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 5923,
											"end": 5930,
											"name": "DUP10",
											"source": 17
										},
										{
											"begin": 5919,
											"end": 5942,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 5915,
											"end": 5948,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 5912,
											"end": 5965,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 5912,
											"end": 5965,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "608"
										},
										{
											"begin": 5912,
											"end": 5965,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 5961,
											"end": 5962,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 5958,
											"end": 5959,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 5951,
											"end": 5963,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 5912,
											"end": 5965,
											"name": "tag",
											"source": 17,
											"value": "608"
										},
										{
											"begin": 5912,
											"end": 5965,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6000,
											"end": 6009,
											"name": "DUP7",
											"source": 17
										},
										{
											"begin": 5987,
											"end": 6010,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 6019,
											"end": 6050,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "609"
										},
										{
											"begin": 6044,
											"end": 6049,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6019,
											"end": 6050,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "562"
										},
										{
											"begin": 6019,
											"end": 6050,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6019,
											"end": 6050,
											"name": "tag",
											"source": 17,
											"value": "609"
										},
										{
											"begin": 6019,
											"end": 6050,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6069,
											"end": 6074,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6126,
											"end": 6128,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 6111,
											"end": 6129,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 6111,
											"end": 6129,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6098,
											"end": 6130,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 6139,
											"end": 6172,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "610"
										},
										{
											"begin": 6098,
											"end": 6130,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6139,
											"end": 6172,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "562"
										},
										{
											"begin": 6139,
											"end": 6172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6139,
											"end": 6172,
											"name": "tag",
											"source": 17,
											"value": "610"
										},
										{
											"begin": 6139,
											"end": 6172,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6191,
											"end": 6198,
											"name": "SWAP5",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6250,
											"end": 6252,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 6235,
											"end": 6253,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 6235,
											"end": 6253,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6222,
											"end": 6254,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 6263,
											"end": 6296,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "611"
										},
										{
											"begin": 6222,
											"end": 6254,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6263,
											"end": 6296,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "562"
										},
										{
											"begin": 6263,
											"end": 6296,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6263,
											"end": 6296,
											"name": "tag",
											"source": 17,
											"value": "611"
										},
										{
											"begin": 6263,
											"end": 6296,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6315,
											"end": 6322,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6374,
											"end": 6376,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 6359,
											"end": 6377,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 6359,
											"end": 6377,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6346,
											"end": 6378,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 6387,
											"end": 6420,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "612"
										},
										{
											"begin": 6346,
											"end": 6378,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6387,
											"end": 6420,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "562"
										},
										{
											"begin": 6387,
											"end": 6420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6387,
											"end": 6420,
											"name": "tag",
											"source": 17,
											"value": "612"
										},
										{
											"begin": 6387,
											"end": 6420,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6439,
											"end": 6446,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6498,
											"end": 6501,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 6483,
											"end": 6502,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 6483,
											"end": 6502,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6470,
											"end": 6503,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 6512,
											"end": 6545,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "613"
										},
										{
											"begin": 6470,
											"end": 6503,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6512,
											"end": 6545,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "562"
										},
										{
											"begin": 6512,
											"end": 6545,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6512,
											"end": 6545,
											"name": "tag",
											"source": 17,
											"value": "613"
										},
										{
											"begin": 6512,
											"end": 6545,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6564,
											"end": 6571,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 6623,
											"end": 6626,
											"name": "PUSH",
											"source": 17,
											"value": "A0"
										},
										{
											"begin": 6608,
											"end": 6627,
											"name": "DUP8",
											"source": 17
										},
										{
											"begin": 6608,
											"end": 6627,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 6595,
											"end": 6628,
											"name": "CALLDATALOAD",
											"source": 17
										},
										{
											"begin": 6637,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "614"
										},
										{
											"begin": 6595,
											"end": 6628,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 6637,
											"end": 6670,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "562"
										},
										{
											"begin": 6637,
											"end": 6670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6637,
											"end": 6670,
											"name": "tag",
											"source": 17,
											"value": "614"
										},
										{
											"begin": 6637,
											"end": 6670,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 6689,
											"end": 6696,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 6679,
											"end": 6696,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 6679,
											"end": 6696,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 6679,
											"end": 6696,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5747,
											"end": 6702,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5747,
											"end": 6702,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 5747,
											"end": 6702,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5747,
											"end": 6702,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5747,
											"end": 6702,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 5747,
											"end": 6702,
											"name": "POP",
											"source": 17
										},
										{
											"begin": 5747,
											"end": 6702,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 5747,
											"end": 6702,
											"name": "SWAP6",
											"source": 17
										},
										{
											"begin": 5747,
											"end": 6702,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 6941,
											"end": 7312,
											"name": "tag",
											"source": 17,
											"value": "191"
										},
										{
											"begin": 6941,
											"end": 7312,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "1"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "A0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SUB",
											"source": -1
										},
										{
											"begin": 7161,
											"end": 7193,
											"name": "SWAP4",
											"source": 17
										},
										{
											"begin": 7161,
											"end": 7193,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 7161,
											"end": 7193,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 7143,
											"end": 7194,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7143,
											"end": 7194,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7230,
											"end": 7262,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7230,
											"end": 7262,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7230,
											"end": 7262,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 7230,
											"end": 7262,
											"name": "AND",
											"source": 17
										},
										{
											"begin": 7225,
											"end": 7227,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 7210,
											"end": 7228,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7210,
											"end": 7228,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7203,
											"end": 7263,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7294,
											"end": 7296,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 7279,
											"end": 7297,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7279,
											"end": 7297,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7272,
											"end": 7306,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7272,
											"end": 7306,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7272,
											"end": 7306,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 7272,
											"end": 7306,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 7131,
											"end": 7133,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 7116,
											"end": 7134,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 7116,
											"end": 7134,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 6941,
											"end": 7312,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 7596,
											"end": 7873,
											"name": "tag",
											"source": 17,
											"value": "203"
										},
										{
											"begin": 7596,
											"end": 7873,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7663,
											"end": 7669,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7716,
											"end": 7718,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 7704,
											"end": 7713,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 7695,
											"end": 7702,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 7691,
											"end": 7714,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 7687,
											"end": 7719,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 7684,
											"end": 7736,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 7684,
											"end": 7736,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "619"
										},
										{
											"begin": 7684,
											"end": 7736,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 7732,
											"end": 7733,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7729,
											"end": 7730,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7722,
											"end": 7734,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 7684,
											"end": 7736,
											"name": "tag",
											"source": 17,
											"value": "619"
										},
										{
											"begin": 7684,
											"end": 7736,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 7764,
											"end": 7773,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7758,
											"end": 7774,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 7817,
											"end": 7822,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7810,
											"end": 7823,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 7803,
											"end": 7824,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 7796,
											"end": 7801,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 7793,
											"end": 7825,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 7783,
											"end": 7843,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "455"
										},
										{
											"begin": 7783,
											"end": 7843,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 7839,
											"end": 7840,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 7836,
											"end": 7837,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 7829,
											"end": 7841,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 7878,
											"end": 8278,
											"name": "tag",
											"source": 17,
											"value": "230"
										},
										{
											"begin": 7878,
											"end": 8278,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8080,
											"end": 8082,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 8062,
											"end": 8083,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 8062,
											"end": 8083,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8062,
											"end": 8083,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8119,
											"end": 8121,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 8099,
											"end": 8117,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 8099,
											"end": 8117,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8099,
											"end": 8117,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8092,
											"end": 8122,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8158,
											"end": 8192,
											"name": "PUSH",
											"source": 17,
											"value": "45544820616D6F756E74206D7573742062652067726561746572207468616E20"
										},
										{
											"begin": 8153,
											"end": 8155,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 8138,
											"end": 8156,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8138,
											"end": 8156,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8131,
											"end": 8193,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "7A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "E0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 8224,
											"end": 8226,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 8209,
											"end": 8227,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8209,
											"end": 8227,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8202,
											"end": 8236,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8268,
											"end": 8271,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 8253,
											"end": 8272,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 8253,
											"end": 8272,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 7878,
											"end": 8278,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8283,
											"end": 8534,
											"name": "tag",
											"source": 17,
											"value": "235"
										},
										{
											"begin": 8283,
											"end": 8534,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8353,
											"end": 8359,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8406,
											"end": 8408,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 8394,
											"end": 8403,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 8385,
											"end": 8392,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 8381,
											"end": 8404,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 8377,
											"end": 8409,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 8374,
											"end": 8426,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 8374,
											"end": 8426,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "623"
										},
										{
											"begin": 8374,
											"end": 8426,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 8422,
											"end": 8423,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8419,
											"end": 8420,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 8412,
											"end": 8424,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 8374,
											"end": 8426,
											"name": "tag",
											"source": 17,
											"value": "623"
										},
										{
											"begin": 8374,
											"end": 8426,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8454,
											"end": 8463,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8448,
											"end": 8464,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 8473,
											"end": 8504,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "455"
										},
										{
											"begin": 8498,
											"end": 8503,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 8473,
											"end": 8504,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "562"
										},
										{
											"begin": 8473,
											"end": 8504,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 8893,
											"end": 9020,
											"name": "tag",
											"source": 17,
											"value": "564"
										},
										{
											"begin": 8893,
											"end": 9020,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 8954,
											"end": 8964,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B71"
										},
										{
											"begin": 8949,
											"end": 8952,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 8945,
											"end": 8965,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 8942,
											"end": 8943,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8935,
											"end": 8966,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 8985,
											"end": 8989,
											"name": "PUSH",
											"source": 17,
											"value": "11"
										},
										{
											"begin": 8982,
											"end": 8983,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 8975,
											"end": 8990,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9009,
											"end": 9013,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 9006,
											"end": 9007,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 8999,
											"end": 9014,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 9025,
											"end": 9153,
											"name": "tag",
											"source": 17,
											"value": "241"
										},
										{
											"begin": 9025,
											"end": 9153,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9092,
											"end": 9101,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9092,
											"end": 9101,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9092,
											"end": 9101,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 9113,
											"end": 9124,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9113,
											"end": 9124,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 9113,
											"end": 9124,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 9110,
											"end": 9147,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 9110,
											"end": 9147,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "184"
										},
										{
											"begin": 9110,
											"end": 9147,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 9127,
											"end": 9145,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "184"
										},
										{
											"begin": 9127,
											"end": 9145,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "564"
										},
										{
											"begin": 9127,
											"end": 9145,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9158,
											"end": 9509,
											"name": "tag",
											"source": 17,
											"value": "245"
										},
										{
											"begin": 9158,
											"end": 9509,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9360,
											"end": 9362,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 9342,
											"end": 9363,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9342,
											"end": 9363,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9342,
											"end": 9363,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9399,
											"end": 9401,
											"name": "PUSH",
											"source": 17,
											"value": "1B"
										},
										{
											"begin": 9379,
											"end": 9397,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9379,
											"end": 9397,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9379,
											"end": 9397,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9372,
											"end": 9402,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9438,
											"end": 9467,
											"name": "PUSH",
											"source": 17,
											"value": "536C69707061676520746F6C6572616E63652065786365656465640000000000"
										},
										{
											"begin": 9433,
											"end": 9435,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 9418,
											"end": 9436,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9418,
											"end": 9436,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9411,
											"end": 9468,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9500,
											"end": 9502,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9485,
											"end": 9503,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9158,
											"end": 9509,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9514,
											"end": 9860,
											"name": "tag",
											"source": 17,
											"value": "269"
										},
										{
											"begin": 9514,
											"end": 9860,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9716,
											"end": 9718,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 9698,
											"end": 9719,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9698,
											"end": 9719,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9698,
											"end": 9719,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9755,
											"end": 9757,
											"name": "PUSH",
											"source": 17,
											"value": "16"
										},
										{
											"begin": 9735,
											"end": 9753,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9735,
											"end": 9753,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9735,
											"end": 9753,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9728,
											"end": 9758,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "496E73756666696369656E74206C6971756964697479"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "50"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 9789,
											"end": 9791,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 9774,
											"end": 9792,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9774,
											"end": 9792,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9767,
											"end": 9819,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 9851,
											"end": 9853,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 9836,
											"end": 9854,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9836,
											"end": 9854,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9514,
											"end": 9860,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9865,
											"end": 9990,
											"name": "tag",
											"source": 17,
											"value": "274"
										},
										{
											"begin": 9865,
											"end": 9990,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 9930,
											"end": 9939,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9930,
											"end": 9939,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9930,
											"end": 9939,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 9951,
											"end": 9961,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 9951,
											"end": 9961,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 9951,
											"end": 9961,
											"name": "GT",
											"source": 17
										},
										{
											"begin": 9948,
											"end": 9984,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 9948,
											"end": 9984,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "184"
										},
										{
											"begin": 9948,
											"end": 9984,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 9964,
											"end": 9982,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "184"
										},
										{
											"begin": 9964,
											"end": 9982,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "564"
										},
										{
											"begin": 9964,
											"end": 9982,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 9995,
											"end": 10397,
											"name": "tag",
											"source": 17,
											"value": "290"
										},
										{
											"begin": 9995,
											"end": 10397,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10197,
											"end": 10199,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 10179,
											"end": 10200,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 10179,
											"end": 10200,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10179,
											"end": 10200,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10236,
											"end": 10238,
											"name": "PUSH",
											"source": 17,
											"value": "26"
										},
										{
											"begin": 10216,
											"end": 10234,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10216,
											"end": 10234,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10216,
											"end": 10234,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10209,
											"end": 10239,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10275,
											"end": 10309,
											"name": "PUSH",
											"source": 17,
											"value": "546F6B656E20616D6F756E74206D757374206265206772656174657220746861"
										},
										{
											"begin": 10270,
											"end": 10272,
											"name": "PUSH",
											"source": 17,
											"value": "40"
										},
										{
											"begin": 10255,
											"end": 10273,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10255,
											"end": 10273,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10248,
											"end": 10310,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "6E207A65726F"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "PUSH",
											"source": -1,
											"value": "D0"
										},
										{
											"begin": -1,
											"end": -1,
											"name": "SHL",
											"source": -1
										},
										{
											"begin": 10341,
											"end": 10343,
											"name": "PUSH",
											"source": 17,
											"value": "60"
										},
										{
											"begin": 10326,
											"end": 10344,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10326,
											"end": 10344,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10319,
											"end": 10355,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 10387,
											"end": 10390,
											"name": "PUSH",
											"source": 17,
											"value": "80"
										},
										{
											"begin": 10372,
											"end": 10391,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 10372,
											"end": 10391,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 9995,
											"end": 10397,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10749,
											"end": 10917,
											"name": "tag",
											"source": 17,
											"value": "304"
										},
										{
											"begin": 10749,
											"end": 10917,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10822,
											"end": 10831,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 10822,
											"end": 10831,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10822,
											"end": 10831,
											"name": "MUL",
											"source": 17
										},
										{
											"begin": 10853,
											"end": 10862,
											"name": "DUP2",
											"source": 17
										},
										{
											"begin": 10853,
											"end": 10862,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 10870,
											"end": 10885,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10870,
											"end": 10885,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10870,
											"end": 10885,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 10864,
											"end": 10886,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 10864,
											"end": 10886,
											"name": "EQ",
											"source": 17
										},
										{
											"begin": 10850,
											"end": 10887,
											"name": "OR",
											"source": 17
										},
										{
											"begin": 10840,
											"end": 10911,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "184"
										},
										{
											"begin": 10840,
											"end": 10911,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 10891,
											"end": 10909,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "184"
										},
										{
											"begin": 10891,
											"end": 10909,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "564"
										},
										{
											"begin": 10891,
											"end": 10909,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 10922,
											"end": 11139,
											"name": "tag",
											"source": 17,
											"value": "306"
										},
										{
											"begin": 10922,
											"end": 11139,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 10962,
											"end": 10963,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 10988,
											"end": 10989,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 10978,
											"end": 11110,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "641"
										},
										{
											"begin": 10978,
											"end": 11110,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 11032,
											"end": 11042,
											"name": "PUSH",
											"source": 17,
											"value": "4E487B71"
										},
										{
											"begin": 11027,
											"end": 11030,
											"name": "PUSH",
											"source": 17,
											"value": "E0"
										},
										{
											"begin": 11023,
											"end": 11043,
											"name": "SHL",
											"source": 17
										},
										{
											"begin": 11020,
											"end": 11021,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11013,
											"end": 11044,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11067,
											"end": 11071,
											"name": "PUSH",
											"source": 17,
											"value": "12"
										},
										{
											"begin": 11064,
											"end": 11065,
											"name": "PUSH",
											"source": 17,
											"value": "4"
										},
										{
											"begin": 11057,
											"end": 11072,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": 11095,
											"end": 11099,
											"name": "PUSH",
											"source": 17,
											"value": "24"
										},
										{
											"begin": 11092,
											"end": 11093,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 11085,
											"end": 11100,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 10978,
											"end": 11110,
											"name": "tag",
											"source": 17,
											"value": "641"
										},
										{
											"begin": 10978,
											"end": 11110,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 11124,
											"end": 11133,
											"name": "DIV",
											"source": 17
										},
										{
											"begin": 11124,
											"end": 11133,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": 10922,
											"end": 11139,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 12612,
											"end": 12796,
											"name": "tag",
											"source": 17,
											"value": "473"
										},
										{
											"begin": 12612,
											"end": 12796,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 12682,
											"end": 12688,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 12735,
											"end": 12737,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 12723,
											"end": 12732,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 12714,
											"end": 12721,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 12710,
											"end": 12733,
											"name": "SUB",
											"source": 17
										},
										{
											"begin": 12706,
											"end": 12738,
											"name": "SLT",
											"source": 17
										},
										{
											"begin": 12703,
											"end": 12755,
											"name": "ISZERO",
											"source": 17
										},
										{
											"begin": 12703,
											"end": 12755,
											"name": "PUSH [tag]",
											"source": 17,
											"value": "648"
										},
										{
											"begin": 12703,
											"end": 12755,
											"name": "JUMPI",
											"source": 17
										},
										{
											"begin": 12751,
											"end": 12752,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 12748,
											"end": 12749,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 12741,
											"end": 12753,
											"name": "REVERT",
											"source": 17
										},
										{
											"begin": 12703,
											"end": 12755,
											"name": "tag",
											"source": 17,
											"value": "648"
										},
										{
											"begin": 12703,
											"end": 12755,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12774,
											"end": 12790,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 12774,
											"end": 12790,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 12612,
											"end": 12796,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 12612,
											"end": 12796,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										},
										{
											"begin": 13080,
											"end": 13381,
											"name": "tag",
											"source": 17,
											"value": "541"
										},
										{
											"begin": 13080,
											"end": 13381,
											"name": "JUMPDEST",
											"source": 17
										},
										{
											"begin": 13209,
											"end": 13212,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13247,
											"end": 13253,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13241,
											"end": 13254,
											"name": "MLOAD",
											"source": 17
										},
										{
											"begin": 13293,
											"end": 13299,
											"name": "DUP1",
											"source": 17
										},
										{
											"begin": 13286,
											"end": 13290,
											"name": "PUSH",
											"source": 17,
											"value": "20"
										},
										{
											"begin": 13278,
											"end": 13284,
											"name": "DUP6",
											"source": 17
										},
										{
											"begin": 13274,
											"end": 13291,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13269,
											"end": 13272,
											"name": "DUP5",
											"source": 17
										},
										{
											"begin": 13263,
											"end": 13300,
											"name": "MCOPY",
											"source": 17
										},
										{
											"begin": 13355,
											"end": 13356,
											"name": "PUSH",
											"source": 17,
											"value": "0"
										},
										{
											"begin": 13319,
											"end": 13335,
											"name": "SWAP3",
											"source": 17
										},
										{
											"begin": 13319,
											"end": 13335,
											"name": "ADD",
											"source": 17
										},
										{
											"begin": 13344,
											"end": 13357,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 13344,
											"end": 13357,
											"name": "DUP3",
											"source": 17
										},
										{
											"begin": 13344,
											"end": 13357,
											"name": "MSTORE",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13319,
											"end": 13335,
											"name": "SWAP2",
											"source": 17
										},
										{
											"begin": 13080,
											"end": 13381,
											"name": "SWAP1",
											"source": 17
										},
										{
											"begin": -1,
											"end": -1,
											"name": "POP",
											"source": -1
										},
										{
											"begin": 13080,
											"end": 13381,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 17
										}
									],
									".data": {
										"75B20EEF8615DE99C108B05F0DBDA081C91897128CAA336D75DFFB97C4132B4D": "360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc",
										"9B87106A812D214D41AD9B68A21119E2948EAAF1040375C939EC808B8862455C": "65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
										"B3DA67D1B252AEAB7C8063542D95E75F82A5307A82535949BC38F7CF7BA8897F": "02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800",
										"C0C65A3718F3702D917C44106B91645B509D2E2D0979B70495C3BABCE192339F": "cd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300"
									}
								}
							},
							"sourceList": [
								"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
								"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
								"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
								"@openzeppelin/contracts/access/IAccessControl.sol",
								"@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
								"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
								"@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/StorageSlot.sol",
								"@openzeppelin/contracts/utils/introspection/IERC165.sol",
								"src/smartcontracts/CryptoQuestSwap.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"DEFAULT_ADMIN_ROLE()": "a217fddf",
							"FEE_RATE()": "2d11c58a",
							"LIQUIDITY_MANAGER_ROLE()": "242f0551",
							"PAUSER_ROLE()": "e63ab1e9",
							"UPGRADER_ROLE()": "f72c0d8b",
							"UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
							"addLiquidity(address,uint256)": "56688700",
							"cqtNFT()": "da069683",
							"cqtToken()": "34aab064",
							"getRoleAdmin(bytes32)": "248a9ca3",
							"grantRole(bytes32,address)": "2f2ff15d",
							"hasRole(bytes32,address)": "91d14854",
							"initialize(address,address,address,address,address,address)": "cc2a9a5b",
							"liquidityPools(address)": "0b0fd47e",
							"pause()": "8456cb59",
							"paused()": "5c975abb",
							"proxiableUUID()": "52d1902d",
							"removeLiquidity(address,uint256)": "a201ccf6",
							"renounceRole(bytes32,address)": "36568abe",
							"revokeRole(bytes32,address)": "d547741f",
							"supportsInterface(bytes4)": "01ffc9a7",
							"swapETHForNFT(uint256,uint256)": "49f0346e",
							"swapETHForTokens(address,uint256)": "51422e97",
							"swapNFTForETH(uint256,uint256)": "d9a37ad2",
							"swapTokensForETH(address,uint256,uint256)": "e15cc8da",
							"unpause()": "3f4ba83a",
							"updateLiquidityPool(address,uint256,uint256)": "c7088313",
							"upgradeToAndCall(address,bytes)": "4f1ef286",
							"withdrawETH(uint256)": "f14210a6",
							"withdrawNFT(uint256)": "023245d7",
							"withdrawTokens(address,uint256)": "06b091f9"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"AccessControlBadConfirmation\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"neededRole\",\"type\":\"bytes32\"}],\"name\":\"AccessControlUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EnforcedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ExpectedPause\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"name\":\"LiquidityAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"provider\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"name\":\"LiquidityRemoved\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"swapper\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"nftContract\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethAmount\",\"type\":\"uint256\"}],\"name\":\"NFTSwapped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"previousAdminRole\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"newAdminRole\",\"type\":\"bytes32\"}],\"name\":\"RoleAdminChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleGranted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"RoleRevoked\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"swapper\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"ethAmount\",\"type\":\"uint256\"}],\"name\":\"TokenSwapped\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEFAULT_ADMIN_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"FEE_RATE\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"LIQUIDITY_MANAGER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PAUSER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADER_ROLE\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"}],\"name\":\"addLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cqtNFT\",\"outputs\":[{\"internalType\":\"contract IERC721Upgradeable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"cqtToken\",\"outputs\":[{\"internalType\":\"contract IERC20Upgradeable\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"}],\"name\":\"getRoleAdmin\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"grantRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"hasRole\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"defaultAdmin\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pauser\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"upgrader\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"liquidityManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"cqtTokenAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"cqtNFTAddress\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"liquidityPools\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ethAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"totalLiquidity\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"liquidity\",\"type\":\"uint256\"}],\"name\":\"removeLiquidity\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"ethAmount\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"callerConfirmation\",\"type\":\"address\"}],\"name\":\"renounceRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"role\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"revokeRole\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minETH\",\"type\":\"uint256\"}],\"name\":\"swapETHForNFT\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"minTokens\",\"type\":\"uint256\"}],\"name\":\"swapETHForTokens\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minETH\",\"type\":\"uint256\"}],\"name\":\"swapNFTForETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"minETH\",\"type\":\"uint256\"}],\"name\":\"swapTokensForETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"newTokenAmount\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"newEthAmount\",\"type\":\"uint256\"}],\"name\":\"updateLiquidityPool\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"withdrawNFT\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"custom:security-contact\":\"jacquedegraff@creodamo.com\",\"errors\":{\"AccessControlBadConfirmation()\":[{\"details\":\"The caller of a function is not the expected one. NOTE: Don't confuse with {AccessControlUnauthorizedAccount}.\"}],\"AccessControlUnauthorizedAccount(address,bytes32)\":[{\"details\":\"The `account` is missing a role.\"}],\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"EnforcedPause()\":[{\"details\":\"The operation failed because the contract is paused.\"}],\"ExpectedPause()\":[{\"details\":\"The operation failed because the contract is not paused.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"RoleAdminChanged(bytes32,bytes32,bytes32)\":{\"details\":\"Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole` `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite {RoleAdminChanged} not being emitted signaling this.\"},\"RoleGranted(bytes32,address,address)\":{\"details\":\"Emitted when `account` is granted `role`. `sender` is the account that originated the contract call, an admin role bearer except when using {AccessControl-_setupRole}.\"},\"RoleRevoked(bytes32,address,address)\":{\"details\":\"Emitted when `account` is revoked `role`. `sender` is the account that originated the contract call:   - if using `revokeRole`, it is the admin role bearer   - if using `renounceRole`, it is the role bearer (i.e. `account`)\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"custom:oz-upgrades-unsafe-allow\":\"constructor\"},\"getRoleAdmin(bytes32)\":{\"details\":\"Returns the admin role that controls `role`. See {grantRole} and {revokeRole}. To change a role's admin, use {_setRoleAdmin}.\"},\"grantRole(bytes32,address)\":{\"details\":\"Grants `role` to `account`. If `account` had not been already granted `role`, emits a {RoleGranted} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleGranted} event.\"},\"hasRole(bytes32,address)\":{\"details\":\"Returns `true` if `account` has been granted `role`.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"renounceRole(bytes32,address)\":{\"details\":\"Revokes `role` from the calling account. Roles are often managed via {grantRole} and {revokeRole}: this function's purpose is to provide a mechanism for accounts to lose their privileges if they are compromised (such as when a trusted device is misplaced). If the calling account had been revoked `role`, emits a {RoleRevoked} event. Requirements: - the caller must be `callerConfirmation`. May emit a {RoleRevoked} event.\"},\"revokeRole(bytes32,address)\":{\"details\":\"Revokes `role` from `account`. If `account` had been granted `role`, emits a {RoleRevoked} event. Requirements: - the caller must have ``role``'s admin role. May emit a {RoleRevoked} event.\"},\"supportsInterface(bytes4)\":{\"details\":\"See {IERC165-supportsInterface}.\"},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/smartcontracts/CryptoQuestSwap.sol\":\"CryptoQuestSwap\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol\":{\"keccak256\":\"0x6662ec4e5cefca03eeadd073e9469df8d2944bb2ee8ec8f7622c2c46aab5f225\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4d8544c6f8daa4d1bc215c6a72fe0acdb748664a105b0e5efc19295667521d45\",\"dweb:/ipfs/QmdGWqdnXT8S3RgCR6aV8XHZrsybieMQLLnug1NtpSjEXN\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x3f13b947637c4969c0644cab4ef399cdc4b67f101463b8775c5a43b118558e53\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6683e6ade6985d394d32baaef5eea0d8b9ff0b3eca86ae413d6cdde114a9930\",\"dweb:/ipfs/QmdBE8T1BTddZxpdECMsb3KiCFyjNWmxcCddYrWFTXmWPj\"]},\"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol\":{\"keccak256\":\"0x0e1f0f5f62f67a881cd1a9597acbc0a5e4071f3c2c10449a183b922ae7272e3f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c25f742ff154998d19a669e2508c3597b363e123ce9144cd0fcf6521229f401f\",\"dweb:/ipfs/QmQXRuFzStEWqeEPbhQU6cAg9PaSowxJVo4PDKyRod7dco\"]},\"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol\":{\"keccak256\":\"0xbe63437e37e32162d5d11ea8f11a44378c092b4bcbb05b51a813fe4bf33297d4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://68a514febde6ffd8afe3cb5b40815d10c0a926063237d5d167cbaa90239f75ae\",\"dweb:/ipfs/QmVBvYeR6oGBw7K7vu5FMotr8josejtaGwugM68VTZacww\"]},\"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0x92915b7f7f642c6be3f65bfd1522feb5d5b6ef25f755f4dbb51df32c868f2f97\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85ad36d5cc7e190e1ee6c94b24659bc3a31396c4c36b6ffa6a509e10661f8007\",\"dweb:/ipfs/QmPFyc4zMh2zo6YWZt25gjm3YdR2hg6wGETaWw256fMmJJ\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol\":{\"keccak256\":\"0xdaba3f7c42c55b2896353f32bd27d4d5f8bae741b3b05d4c53f67abc4dc47ce8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fa2e61141c602510bcd2cd936ed9561922ac8772a9b9c9a9db091a74e354a45\",\"dweb:/ipfs/QmcHQDDoEBwJmwUbzoVkytvJsBx3KVHYFFnDkvRGWh9Wmh\"]},\"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol\":{\"keccak256\":\"0xc6cef87559d0aeffdf0a99803de655938a7779ec0a3cd5d4383483ad85565a09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://92ad7e572cf44e6b4b37631b44b62f9eb9fb1cf14d9ce51c1504d5dc7ccaf758\",\"dweb:/ipfs/QmcnbqX85tsWnUXPmtuPLE4SczME2sJaTfmqEFkuAJvWhy\"]},\"@openzeppelin/contracts/access/IAccessControl.sol\":{\"keccak256\":\"0xb6b36edd6a2999fd243ff226d6cbf84bd71af2432bbd0dfe19392996a1d9cb41\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1fd2f35495652e57e3f99bc6c510bc5f7dd398a176ea2e72d8ed730aebc6ca26\",\"dweb:/ipfs/QmTQV6X4gkikTib49cho5iDX3JvSQbdsoEChoDwrk3CbbH\"]},\"@openzeppelin/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"@openzeppelin/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"@openzeppelin/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"@openzeppelin/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x4296879f55019b23e135000eb36896057e7101fb7fb859c5ef690cf14643757b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87b3541437c8c443ccd36795e56a338ed12855eec17f8da624511b8d1a7e14df\",\"dweb:/ipfs/QmeJQCtZrQjtJLr6u7ZHWeH3pBnjtLWzvRrKViAi7UZqxL\"]},\"src/smartcontracts/CryptoQuestSwap.sol\":{\"keccak256\":\"0xb224d7e4d694f4b943c6c2d38d6e4d963605d918e5dd5be0e157d062ee4db43e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://22668c5457fc591b4e04333362f30840083e91a222e7d04fa0962b8f81bca5f6\",\"dweb:/ipfs/QmaXvDZUr3qiWScZrS6zCf9RvWgEyjNfc652EGFBkKSGc7\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 2085,
								"contract": "src/smartcontracts/CryptoQuestSwap.sol:CryptoQuestSwap",
								"label": "cqtToken",
								"offset": 0,
								"slot": "0",
								"type": "t_contract(IERC20Upgradeable)876"
							},
							{
								"astId": 2088,
								"contract": "src/smartcontracts/CryptoQuestSwap.sol:CryptoQuestSwap",
								"label": "cqtNFT",
								"offset": 0,
								"slot": "1",
								"type": "t_contract(IERC721Upgradeable)992"
							},
							{
								"astId": 2104,
								"contract": "src/smartcontracts/CryptoQuestSwap.sol:CryptoQuestSwap",
								"label": "liquidityPools",
								"offset": 0,
								"slot": "2",
								"type": "t_mapping(t_address,t_struct(LiquidityPool)2099_storage)"
							}
						],
						"types": {
							"t_address": {
								"encoding": "inplace",
								"label": "address",
								"numberOfBytes": "20"
							},
							"t_contract(IERC20Upgradeable)876": {
								"encoding": "inplace",
								"label": "contract IERC20Upgradeable",
								"numberOfBytes": "20"
							},
							"t_contract(IERC721Upgradeable)992": {
								"encoding": "inplace",
								"label": "contract IERC721Upgradeable",
								"numberOfBytes": "20"
							},
							"t_mapping(t_address,t_struct(LiquidityPool)2099_storage)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => struct CryptoQuestSwap.LiquidityPool)",
								"numberOfBytes": "32",
								"value": "t_struct(LiquidityPool)2099_storage"
							},
							"t_mapping(t_address,t_uint256)": {
								"encoding": "mapping",
								"key": "t_address",
								"label": "mapping(address => uint256)",
								"numberOfBytes": "32",
								"value": "t_uint256"
							},
							"t_struct(LiquidityPool)2099_storage": {
								"encoding": "inplace",
								"label": "struct CryptoQuestSwap.LiquidityPool",
								"members": [
									{
										"astId": 2090,
										"contract": "src/smartcontracts/CryptoQuestSwap.sol:CryptoQuestSwap",
										"label": "tokenAmount",
										"offset": 0,
										"slot": "0",
										"type": "t_uint256"
									},
									{
										"astId": 2092,
										"contract": "src/smartcontracts/CryptoQuestSwap.sol:CryptoQuestSwap",
										"label": "ethAmount",
										"offset": 0,
										"slot": "1",
										"type": "t_uint256"
									},
									{
										"astId": 2094,
										"contract": "src/smartcontracts/CryptoQuestSwap.sol:CryptoQuestSwap",
										"label": "totalLiquidity",
										"offset": 0,
										"slot": "2",
										"type": "t_uint256"
									},
									{
										"astId": 2098,
										"contract": "src/smartcontracts/CryptoQuestSwap.sol:CryptoQuestSwap",
										"label": "liquidity",
										"offset": 0,
										"slot": "3",
										"type": "t_mapping(t_address,t_uint256)"
									}
								],
								"numberOfBytes": "128"
							},
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			"@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
					"exportedSymbols": {
						"AccessControlUpgradeable": [
							362
						],
						"ContextUpgradeable": [
							1038
						],
						"ERC165Upgradeable": [
							1254
						],
						"IAccessControl": [
							1349
						],
						"Initializable": [
							616
						]
					},
					"id": 363,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
							"file": "@openzeppelin/contracts/access/IAccessControl.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 363,
							"sourceUnit": 1350,
							"src": "134:81:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "IAccessControl",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1349,
										"src": "142:14:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 5,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 363,
							"sourceUnit": 1039,
							"src": "216:67:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 4,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1038,
										"src": "224:18:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
							"file": "../utils/introspection/ERC165Upgradeable.sol",
							"id": 7,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 363,
							"sourceUnit": 1255,
							"src": "284:79:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 6,
										"name": "ERC165Upgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1254,
										"src": "292:17:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 9,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 363,
							"sourceUnit": 617,
							"src": "364:63:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 8,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 616,
										"src": "372:13:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 11,
										"name": "Initializable",
										"nameLocations": [
											"2136:13:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 616,
										"src": "2136:13:0"
									},
									"id": 12,
									"nodeType": "InheritanceSpecifier",
									"src": "2136:13:0"
								},
								{
									"baseName": {
										"id": 13,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"2151:18:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1038,
										"src": "2151:18:0"
									},
									"id": 14,
									"nodeType": "InheritanceSpecifier",
									"src": "2151:18:0"
								},
								{
									"baseName": {
										"id": 15,
										"name": "IAccessControl",
										"nameLocations": [
											"2171:14:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1349,
										"src": "2171:14:0"
									},
									"id": 16,
									"nodeType": "InheritanceSpecifier",
									"src": "2171:14:0"
								},
								{
									"baseName": {
										"id": 17,
										"name": "ERC165Upgradeable",
										"nameLocations": [
											"2187:17:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1254,
										"src": "2187:17:0"
									},
									"id": 18,
									"nodeType": "InheritanceSpecifier",
									"src": "2187:17:0"
								}
							],
							"canonicalName": "AccessControlUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 10,
								"nodeType": "StructuredDocumentation",
								"src": "429:1660:0",
								"text": " @dev Contract module that allows children to implement role-based access\n control mechanisms. This is a lightweight version that doesn't allow enumerating role\n members except through off-chain means by accessing the contract event logs. Some\n applications may benefit from on-chain enumerability, for those cases see\n {AccessControlEnumerable}.\n Roles are referred to by their `bytes32` identifier. These should be exposed\n in the external API and be unique. The best way to achieve this is by\n using `public constant` hash digests:\n ```solidity\n bytes32 public constant MY_ROLE = keccak256(\"MY_ROLE\");\n ```\n Roles can be used to represent a set of permissions. To restrict access to a\n function call, use {hasRole}:\n ```solidity\n function foo() public {\n     require(hasRole(MY_ROLE, msg.sender));\n     ...\n }\n ```\n Roles can be granted and revoked dynamically via the {grantRole} and\n {revokeRole} functions. Each role has an associated admin role, and only\n accounts that have a role's admin role can call {grantRole} and {revokeRole}.\n By default, the admin role for all roles is `DEFAULT_ADMIN_ROLE`, which means\n that only accounts with this role will be able to grant or revoke other\n roles. More complex role relationships can be created by using\n {_setRoleAdmin}.\n WARNING: The `DEFAULT_ADMIN_ROLE` is also its own admin: it has permission to\n grant and revoke this role. Extra precautions should be taken to secure\n accounts that have been granted it. We recommend using {AccessControlDefaultAdminRules}\n to enforce additional security measures for this role."
							},
							"fullyImplemented": true,
							"id": 362,
							"linearizedBaseContracts": [
								362,
								1254,
								2047,
								1349,
								1038,
								616
							],
							"name": "AccessControlUpgradeable",
							"nameLocation": "2108:24:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "AccessControlUpgradeable.RoleData",
									"id": 25,
									"members": [
										{
											"constant": false,
											"id": 22,
											"mutability": "mutable",
											"name": "hasRole",
											"nameLocation": "2270:7:0",
											"nodeType": "VariableDeclaration",
											"scope": 25,
											"src": "2237:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
												"typeString": "mapping(address => bool)"
											},
											"typeName": {
												"id": 21,
												"keyName": "account",
												"keyNameLocation": "2253:7:0",
												"keyType": {
													"id": 19,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2245:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "2237:32:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
													"typeString": "mapping(address => bool)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 20,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2264:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 24,
											"mutability": "mutable",
											"name": "adminRole",
											"nameLocation": "2295:9:0",
											"nodeType": "VariableDeclaration",
											"scope": 25,
											"src": "2287:17:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 23,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "2287:7:0",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "RoleData",
									"nameLocation": "2218:8:0",
									"nodeType": "StructDefinition",
									"scope": 362,
									"src": "2211:100:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "a217fddf",
									"id": 28,
									"mutability": "constant",
									"name": "DEFAULT_ADMIN_ROLE",
									"nameLocation": "2341:18:0",
									"nodeType": "VariableDeclaration",
									"scope": 362,
									"src": "2317:49:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 26,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2317:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30783030",
										"id": 27,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2362:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0x00"
									},
									"visibility": "public"
								},
								{
									"canonicalName": "AccessControlUpgradeable.AccessControlStorage",
									"documentation": {
										"id": 29,
										"nodeType": "StructuredDocumentation",
										"src": "2374:71:0",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.AccessControl"
									},
									"id": 35,
									"members": [
										{
											"constant": false,
											"id": 34,
											"mutability": "mutable",
											"name": "_roles",
											"nameLocation": "2522:6:0",
											"nodeType": "VariableDeclaration",
											"scope": 35,
											"src": "2488:40:0",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$",
												"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
											},
											"typeName": {
												"id": 33,
												"keyName": "role",
												"keyNameLocation": "2504:4:0",
												"keyType": {
													"id": 30,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2496:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "Mapping",
												"src": "2488:33:0",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$",
													"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 32,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 31,
														"name": "RoleData",
														"nameLocations": [
															"2512:8:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 25,
														"src": "2512:8:0"
													},
													"referencedDeclaration": 25,
													"src": "2512:8:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_RoleData_$25_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.RoleData"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AccessControlStorage",
									"nameLocation": "2457:20:0",
									"nodeType": "StructDefinition",
									"scope": 362,
									"src": "2450:85:0",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 38,
									"mutability": "constant",
									"name": "AccessControlStorageLocation",
									"nameLocation": "2683:28:0",
									"nodeType": "VariableDeclaration",
									"scope": 362,
									"src": "2658:122:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 36,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "2658:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307830326464376263376465633464636565646461373735653538646435343165303861313136633663353338313563306264303238313932663762363236383030",
										"id": 37,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "2714:66:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_1295953201772911215391058989745868821651057887752387839782086074958115661824_by_1",
											"typeString": "int_const 1295...(68 digits omitted)...1824"
										},
										"value": "0x02dd7bc7dec4dceedda775e58dd541e08a116c6c53815c0bd028192f7b626800"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 45,
										"nodeType": "Block",
										"src": "2877:87:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2896:62:0",
													"nodeType": "YulBlock",
													"src": "2896:62:0",
													"statements": [
														{
															"nativeSrc": "2910:38:0",
															"nodeType": "YulAssignment",
															"src": "2910:38:0",
															"value": {
																"name": "AccessControlStorageLocation",
																"nativeSrc": "2920:28:0",
																"nodeType": "YulIdentifier",
																"src": "2920:28:0"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "2910:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "2910:6:0"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 42,
														"isOffset": false,
														"isSlot": true,
														"src": "2910:6:0",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 38,
														"isOffset": false,
														"isSlot": false,
														"src": "2920:28:0",
														"valueSize": 1
													}
												],
												"id": 44,
												"nodeType": "InlineAssembly",
												"src": "2887:71:0"
											}
										]
									},
									"id": 46,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getAccessControlStorage",
									"nameLocation": "2796:24:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 39,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2820:2:0"
									},
									"returnParameters": {
										"id": 43,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 42,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "2874:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 46,
												"src": "2845:30:0",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
													"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
												},
												"typeName": {
													"id": 41,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 40,
														"name": "AccessControlStorage",
														"nameLocations": [
															"2845:20:0"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 35,
														"src": "2845:20:0"
													},
													"referencedDeclaration": 35,
													"src": "2845:20:0",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2844:32:0"
									},
									"scope": 362,
									"src": "2787:177:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 56,
										"nodeType": "Block",
										"src": "3181:44:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 52,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 49,
															"src": "3202:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 51,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															129,
															150
														],
														"referencedDeclaration": 129,
														"src": "3191:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32) view"
														}
													},
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3191:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 54,
												"nodeType": "ExpressionStatement",
												"src": "3191:16:0"
											},
											{
												"id": 55,
												"nodeType": "PlaceholderStatement",
												"src": "3217:1:0"
											}
										]
									},
									"documentation": {
										"id": 47,
										"nodeType": "StructuredDocumentation",
										"src": "2970:174:0",
										"text": " @dev Modifier that checks that an account has a specific role. Reverts\n with an {AccessControlUnauthorizedAccount} error including the required role."
									},
									"id": 57,
									"name": "onlyRole",
									"nameLocation": "3158:8:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 50,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 49,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3175:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 57,
												"src": "3167:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 48,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3167:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3166:14:0"
									},
									"src": "3149:76:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 62,
										"nodeType": "Block",
										"src": "3289:7:0",
										"statements": []
									},
									"id": 63,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 60,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 59,
												"name": "onlyInitializing",
												"nameLocations": [
													"3272:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "3272:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3272:16:0"
										}
									],
									"name": "__AccessControl_init",
									"nameLocation": "3240:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 58,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3260:2:0"
									},
									"returnParameters": {
										"id": 61,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3289:0:0"
									},
									"scope": 362,
									"src": "3231:65:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 68,
										"nodeType": "Block",
										"src": "3370:7:0",
										"statements": []
									},
									"id": 69,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 66,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 65,
												"name": "onlyInitializing",
												"nameLocations": [
													"3353:16:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "3353:16:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "3353:16:0"
										}
									],
									"name": "__AccessControl_init_unchained",
									"nameLocation": "3311:30:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 64,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3341:2:0"
									},
									"returnParameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3370:0:0"
									},
									"scope": 362,
									"src": "3302:75:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1253
									],
									"body": {
										"id": 90,
										"nodeType": "Block",
										"src": "3534:111:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 88,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														},
														"id": 83,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 78,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 72,
															"src": "3551:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"expression": {
																"arguments": [
																	{
																		"id": 80,
																		"name": "IAccessControl",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1349,
																		"src": "3571:14:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$1349_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_type$_t_contract$_IAccessControl_$1349_$",
																			"typeString": "type(contract IAccessControl)"
																		}
																	],
																	"id": 79,
																	"name": "type",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967269,
																	"src": "3566:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																		"typeString": "function () pure"
																	}
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3566:20:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_meta_type_t_contract$_IAccessControl_$1349",
																	"typeString": "type(contract IAccessControl)"
																}
															},
															"id": 82,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "3587:11:0",
															"memberName": "interfaceId",
															"nodeType": "MemberAccess",
															"src": "3566:32:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"src": "3551:47:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"arguments": [
															{
																"id": 86,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 72,
																"src": "3626:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															],
															"expression": {
																"id": 84,
																"name": "super",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967271,
																"src": "3602:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_super$_AccessControlUpgradeable_$362_$",
																	"typeString": "type(contract super AccessControlUpgradeable)"
																}
															},
															"id": 85,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3608:17:0",
															"memberName": "supportsInterface",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1253,
															"src": "3602:23:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes4_$returns$_t_bool_$",
																"typeString": "function (bytes4) view returns (bool)"
															}
														},
														"id": 87,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3602:36:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "3551:87:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 77,
												"id": 89,
												"nodeType": "Return",
												"src": "3544:94:0"
											}
										]
									},
									"documentation": {
										"id": 70,
										"nodeType": "StructuredDocumentation",
										"src": "3382:56:0",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 91,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "3452:17:0",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 74,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "3510:8:0"
									},
									"parameters": {
										"id": 73,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 72,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "3477:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "3470:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 71,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "3470:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3469:20:0"
									},
									"returnParameters": {
										"id": 77,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 91,
												"src": "3528:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 75,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3528:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3527:6:0"
									},
									"scope": 362,
									"src": "3443:202:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1316
									],
									"body": {
										"id": 115,
										"nodeType": "Block",
										"src": "3815:124:0",
										"statements": [
											{
												"assignments": [
													103
												],
												"declarations": [
													{
														"constant": false,
														"id": 103,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3854:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 115,
														"src": "3825:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
															"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
														},
														"typeName": {
															"id": 102,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 101,
																"name": "AccessControlStorage",
																"nameLocations": [
																	"3825:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 35,
																"src": "3825:20:0"
															},
															"referencedDeclaration": 35,
															"src": "3825:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 106,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 104,
														"name": "_getAccessControlStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "3858:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$",
															"typeString": "function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"
														}
													},
													"id": 105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3858:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3825:59:0"
											},
											{
												"expression": {
													"baseExpression": {
														"expression": {
															"baseExpression": {
																"expression": {
																	"id": 107,
																	"name": "$",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 103,
																	"src": "3901:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																		"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
																	}
																},
																"id": 108,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "3903:6:0",
																"memberName": "_roles",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 34,
																"src": "3901:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																}
															},
															"id": 110,
															"indexExpression": {
																"id": 109,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 94,
																"src": "3910:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "3901:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$25_storage",
																"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
															}
														},
														"id": 111,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3916:7:0",
														"memberName": "hasRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 22,
														"src": "3901:22:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
															"typeString": "mapping(address => bool)"
														}
													},
													"id": 113,
													"indexExpression": {
														"id": 112,
														"name": "account",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 96,
														"src": "3924:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3901:31:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 100,
												"id": 114,
												"nodeType": "Return",
												"src": "3894:38:0"
											}
										]
									},
									"documentation": {
										"id": 92,
										"nodeType": "StructuredDocumentation",
										"src": "3651:76:0",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 116,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "3741:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 97,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 94,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3757:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "3749:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 93,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3749:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 96,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "3771:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "3763:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 95,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3763:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3748:31:0"
									},
									"returnParameters": {
										"id": 100,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 99,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 116,
												"src": "3809:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 98,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "3809:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3808:6:0"
									},
									"scope": 362,
									"src": "3732:207:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 128,
										"nodeType": "Block",
										"src": "4204:47:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 123,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 119,
															"src": "4225:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 124,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1020,
																"src": "4231:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 125,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4231:12:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 122,
														"name": "_checkRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															129,
															150
														],
														"referencedDeclaration": 150,
														"src": "4214:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$__$",
															"typeString": "function (bytes32,address) view"
														}
													},
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4214:30:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 127,
												"nodeType": "ExpressionStatement",
												"src": "4214:30:0"
											}
										]
									},
									"documentation": {
										"id": 117,
										"nodeType": "StructuredDocumentation",
										"src": "3945:198:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `_msgSender()`\n is missing `role`. Overriding this function changes the behavior of the {onlyRole} modifier."
									},
									"id": 129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "4157:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 120,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 119,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4176:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "4168:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 118,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4168:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4167:14:0"
									},
									"returnParameters": {
										"id": 121,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4204:0:0"
									},
									"scope": 362,
									"src": "4148:103:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 149,
										"nodeType": "Block",
										"src": "4454:124:0",
										"statements": [
											{
												"condition": {
													"id": 141,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4468:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 138,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 132,
																"src": "4477:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 139,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 134,
																"src": "4483:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 137,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 116,
															"src": "4469:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 140,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4469:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 148,
												"nodeType": "IfStatement",
												"src": "4464:108:0",
												"trueBody": {
													"id": 147,
													"nodeType": "Block",
													"src": "4493:79:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 143,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 134,
																		"src": "4547:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 144,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 132,
																		"src": "4556:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	],
																	"id": 142,
																	"name": "AccessControlUnauthorizedAccount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1276,
																	"src": "4514:32:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$_t_bytes32_$returns$_t_error_$",
																		"typeString": "function (address,bytes32) pure returns (error)"
																	}
																},
																"id": 145,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4514:47:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 146,
															"nodeType": "RevertStatement",
															"src": "4507:54:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 130,
										"nodeType": "StructuredDocumentation",
										"src": "4257:119:0",
										"text": " @dev Reverts with an {AccessControlUnauthorizedAccount} error if `account`\n is missing `role`."
									},
									"id": 150,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkRole",
									"nameLocation": "4390:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 135,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 132,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4409:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4401:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 131,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4401:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 134,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "4423:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 150,
												"src": "4415:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 133,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4415:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4400:31:0"
									},
									"returnParameters": {
										"id": 136,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4454:0:0"
									},
									"scope": 362,
									"src": "4381:197:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1324
									],
									"body": {
										"id": 170,
										"nodeType": "Block",
										"src": "4833:117:0",
										"statements": [
											{
												"assignments": [
													160
												],
												"declarations": [
													{
														"constant": false,
														"id": 160,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4872:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 170,
														"src": "4843:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
															"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
														},
														"typeName": {
															"id": 159,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 158,
																"name": "AccessControlStorage",
																"nameLocations": [
																	"4843:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 35,
																"src": "4843:20:0"
															},
															"referencedDeclaration": 35,
															"src": "4843:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 163,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 161,
														"name": "_getAccessControlStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "4876:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$",
															"typeString": "function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"
														}
													},
													"id": 162,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4876:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4843:59:0"
											},
											{
												"expression": {
													"expression": {
														"baseExpression": {
															"expression": {
																"id": 164,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 160,
																"src": "4919:1:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																	"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
																}
															},
															"id": 165,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4921:6:0",
															"memberName": "_roles",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 34,
															"src": "4919:8:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$",
																"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
															}
														},
														"id": 167,
														"indexExpression": {
															"id": 166,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 153,
															"src": "4928:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "IndexAccess",
														"src": "4919:14:0",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_RoleData_$25_storage",
															"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
														}
													},
													"id": 168,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4934:9:0",
													"memberName": "adminRole",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 24,
													"src": "4919:24:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 157,
												"id": 169,
												"nodeType": "Return",
												"src": "4912:31:0"
											}
										]
									},
									"documentation": {
										"id": 151,
										"nodeType": "StructuredDocumentation",
										"src": "4584:170:0",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 171,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "4768:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 154,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 153,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "4789:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "4781:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 152,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4781:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4780:14:0"
									},
									"returnParameters": {
										"id": 157,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 156,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 171,
												"src": "4824:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 155,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "4824:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4823:9:0"
									},
									"scope": 362,
									"src": "4759:191:0",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1332
									],
									"body": {
										"id": 189,
										"nodeType": "Block",
										"src": "5340:42:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 185,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 174,
															"src": "5361:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 186,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 176,
															"src": "5367:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 184,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "5350:10:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 187,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5350:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 188,
												"nodeType": "ExpressionStatement",
												"src": "5350:25:0"
											}
										]
									},
									"documentation": {
										"id": 172,
										"nodeType": "StructuredDocumentation",
										"src": "4956:285:0",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleGranted} event."
									},
									"functionSelector": "2f2ff15d",
									"id": 190,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 180,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 174,
															"src": "5333:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 179,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5320:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5320:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 182,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 178,
												"name": "onlyRole",
												"nameLocations": [
													"5311:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "5311:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5311:28:0"
										}
									],
									"name": "grantRole",
									"nameLocation": "5255:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 177,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 174,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5273:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5265:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 173,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5265:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 176,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5287:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 190,
												"src": "5279:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 175,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5279:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5264:31:0"
									},
									"returnParameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5340:0:0"
									},
									"scope": 362,
									"src": "5246:136:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1340
									],
									"body": {
										"id": 208,
										"nodeType": "Block",
										"src": "5757:43:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 204,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "5779:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 205,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 195,
															"src": "5785:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 203,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 361,
														"src": "5767:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5767:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 207,
												"nodeType": "ExpressionStatement",
												"src": "5767:26:0"
											}
										]
									},
									"documentation": {
										"id": 191,
										"nodeType": "StructuredDocumentation",
										"src": "5388:269:0",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "d547741f",
									"id": 209,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"arguments": [
														{
															"id": 199,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 193,
															"src": "5750:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 198,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "5737:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5737:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 201,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 197,
												"name": "onlyRole",
												"nameLocations": [
													"5728:8:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "5728:8:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "5728:28:0"
										}
									],
									"name": "revokeRole",
									"nameLocation": "5671:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 196,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 193,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "5690:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "5682:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 192,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "5682:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 195,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "5704:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 209,
												"src": "5696:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 194,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5696:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5681:31:0"
									},
									"returnParameters": {
										"id": 202,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5757:0:0"
									},
									"scope": 362,
									"src": "5662:138:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										1348
									],
									"body": {
										"id": 231,
										"nodeType": "Block",
										"src": "6427:166:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 220,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 217,
														"name": "callerConfirmation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 214,
														"src": "6441:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 218,
															"name": "_msgSender",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1020,
															"src": "6463:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																"typeString": "function () view returns (address)"
															}
														},
														"id": 219,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "6463:12:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "6441:34:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 225,
												"nodeType": "IfStatement",
												"src": "6437:102:0",
												"trueBody": {
													"id": 224,
													"nodeType": "Block",
													"src": "6477:62:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 221,
																	"name": "AccessControlBadConfirmation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1279,
																	"src": "6498:28:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 222,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6498:30:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 223,
															"nodeType": "RevertStatement",
															"src": "6491:37:0"
														}
													]
												}
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 227,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 212,
															"src": "6561:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 228,
															"name": "callerConfirmation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 214,
															"src": "6567:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 226,
														"name": "_revokeRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 361,
														"src": "6549:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 229,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6549:37:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 230,
												"nodeType": "ExpressionStatement",
												"src": "6549:37:0"
											}
										]
									},
									"documentation": {
										"id": 210,
										"nodeType": "StructuredDocumentation",
										"src": "5806:537:0",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been revoked `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`.\n May emit a {RoleRevoked} event."
									},
									"functionSelector": "36568abe",
									"id": 232,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "6357:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 215,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 212,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6378:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "6370:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 211,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6370:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 214,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "6392:18:0",
												"nodeType": "VariableDeclaration",
												"scope": 232,
												"src": "6384:26:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 213,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6384:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6369:42:0"
									},
									"returnParameters": {
										"id": 216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6427:0:0"
									},
									"scope": 362,
									"src": "6348:245:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 267,
										"nodeType": "Block",
										"src": "6791:245:0",
										"statements": [
											{
												"assignments": [
													242
												],
												"declarations": [
													{
														"constant": false,
														"id": 242,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6830:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 267,
														"src": "6801:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
															"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
														},
														"typeName": {
															"id": 241,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 240,
																"name": "AccessControlStorage",
																"nameLocations": [
																	"6801:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 35,
																"src": "6801:20:0"
															},
															"referencedDeclaration": 35,
															"src": "6801:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 245,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 243,
														"name": "_getAccessControlStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "6834:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$",
															"typeString": "function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"
														}
													},
													"id": 244,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6834:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6801:59:0"
											},
											{
												"assignments": [
													247
												],
												"declarations": [
													{
														"constant": false,
														"id": 247,
														"mutability": "mutable",
														"name": "previousAdminRole",
														"nameLocation": "6878:17:0",
														"nodeType": "VariableDeclaration",
														"scope": 267,
														"src": "6870:25:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														},
														"typeName": {
															"id": 246,
															"name": "bytes32",
															"nodeType": "ElementaryTypeName",
															"src": "6870:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 251,
												"initialValue": {
													"arguments": [
														{
															"id": 249,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "6911:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 248,
														"name": "getRoleAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 171,
														"src": "6898:12:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
															"typeString": "function (bytes32) view returns (bytes32)"
														}
													},
													"id": 250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6898:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6870:46:0"
											},
											{
												"expression": {
													"id": 259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"expression": {
																	"id": 252,
																	"name": "$",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 242,
																	"src": "6926:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																		"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
																	}
																},
																"id": 255,
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6928:6:0",
																"memberName": "_roles",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 34,
																"src": "6926:8:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$",
																	"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																}
															},
															"id": 256,
															"indexExpression": {
																"id": 254,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 235,
																"src": "6935:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "6926:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_RoleData_$25_storage",
																"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
															}
														},
														"id": 257,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6941:9:0",
														"memberName": "adminRole",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 24,
														"src": "6926:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 258,
														"name": "adminRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 237,
														"src": "6953:9:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes32",
															"typeString": "bytes32"
														}
													},
													"src": "6926:36:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 260,
												"nodeType": "ExpressionStatement",
												"src": "6926:36:0"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 262,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 235,
															"src": "6994:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 263,
															"name": "previousAdminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 247,
															"src": "7000:17:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 264,
															"name": "adminRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 237,
															"src": "7019:9:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														],
														"id": 261,
														"name": "RoleAdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1288,
														"src": "6977:16:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bytes32_$_t_bytes32_$returns$__$",
															"typeString": "function (bytes32,bytes32,bytes32)"
														}
													},
													"id": 265,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6977:52:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 266,
												"nodeType": "EmitStatement",
												"src": "6972:57:0"
											}
										]
									},
									"documentation": {
										"id": 233,
										"nodeType": "StructuredDocumentation",
										"src": "6599:114:0",
										"text": " @dev Sets `adminRole` as ``role``'s admin role.\n Emits a {RoleAdminChanged} event."
									},
									"id": 268,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setRoleAdmin",
									"nameLocation": "6727:13:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 238,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 235,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "6749:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "6741:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 234,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6741:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 237,
												"mutability": "mutable",
												"name": "adminRole",
												"nameLocation": "6763:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "6755:17:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 236,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "6755:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6740:33:0"
									},
									"returnParameters": {
										"id": 239,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6791:0:0"
									},
									"scope": 362,
									"src": "6718:318:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 314,
										"nodeType": "Block",
										"src": "7353:304:0",
										"statements": [
											{
												"assignments": [
													280
												],
												"declarations": [
													{
														"constant": false,
														"id": 280,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7392:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 314,
														"src": "7363:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
															"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
														},
														"typeName": {
															"id": 279,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 278,
																"name": "AccessControlStorage",
																"nameLocations": [
																	"7363:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 35,
																"src": "7363:20:0"
															},
															"referencedDeclaration": 35,
															"src": "7363:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 283,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 281,
														"name": "_getAccessControlStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "7396:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$",
															"typeString": "function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"
														}
													},
													"id": 282,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7396:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7363:59:0"
											},
											{
												"condition": {
													"id": 288,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7436:23:0",
													"subExpression": {
														"arguments": [
															{
																"id": 285,
																"name": "role",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 271,
																"src": "7445:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															},
															{
																"id": 286,
																"name": "account",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 273,
																"src": "7451:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																},
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 284,
															"name": "hasRole",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 116,
															"src": "7437:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
																"typeString": "function (bytes32,address) view returns (bool)"
															}
														},
														"id": 287,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7437:22:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 312,
													"nodeType": "Block",
													"src": "7614:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 310,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7635:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 277,
															"id": 311,
															"nodeType": "Return",
															"src": "7628:12:0"
														}
													]
												},
												"id": 313,
												"nodeType": "IfStatement",
												"src": "7432:219:0",
												"trueBody": {
													"id": 309,
													"nodeType": "Block",
													"src": "7461:147:0",
													"statements": [
														{
															"expression": {
																"id": 298,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"expression": {
																					"id": 289,
																					"name": "$",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 280,
																					"src": "7475:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																						"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
																					}
																				},
																				"id": 292,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "7477:6:0",
																				"memberName": "_roles",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 34,
																				"src": "7475:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																				}
																			},
																			"id": 293,
																			"indexExpression": {
																				"id": 291,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 271,
																				"src": "7484:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "7475:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$25_storage",
																				"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
																			}
																		},
																		"id": 294,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "7490:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 22,
																		"src": "7475:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 296,
																	"indexExpression": {
																		"id": 295,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 273,
																		"src": "7498:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "7475:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 297,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7509:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "7475:38:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 299,
															"nodeType": "ExpressionStatement",
															"src": "7475:38:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 301,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 271,
																		"src": "7544:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 302,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 273,
																		"src": "7550:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 303,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1020,
																			"src": "7559:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 304,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "7559:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 300,
																	"name": "RoleGranted",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1297,
																	"src": "7532:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 305,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7532:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 306,
															"nodeType": "EmitStatement",
															"src": "7527:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 307,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "7593:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 277,
															"id": 308,
															"nodeType": "Return",
															"src": "7586:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "7042:223:0",
										"text": " @dev Attempts to grant `role` to `account` and returns a boolean indicating if `role` was granted.\n Internal function without access restriction.\n May emit a {RoleGranted} event."
									},
									"id": 315,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_grantRole",
									"nameLocation": "7279:10:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 274,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 271,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7298:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "7290:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 270,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7290:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 273,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7312:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "7304:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 272,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7304:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7289:31:0"
									},
									"returnParameters": {
										"id": 277,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 276,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 315,
												"src": "7347:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 275,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7347:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7346:6:0"
									},
									"scope": 362,
									"src": "7270:387:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 360,
										"nodeType": "Block",
										"src": "7976:304:0",
										"statements": [
											{
												"assignments": [
													327
												],
												"declarations": [
													{
														"constant": false,
														"id": 327,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "8015:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 360,
														"src": "7986:30:0",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
															"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
														},
														"typeName": {
															"id": 326,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 325,
																"name": "AccessControlStorage",
																"nameLocations": [
																	"7986:20:0"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 35,
																"src": "7986:20:0"
															},
															"referencedDeclaration": 35,
															"src": "7986:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																"typeString": "struct AccessControlUpgradeable.AccessControlStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 330,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 328,
														"name": "_getAccessControlStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 46,
														"src": "8019:24:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_AccessControlStorage_$35_storage_ptr_$",
															"typeString": "function () pure returns (struct AccessControlUpgradeable.AccessControlStorage storage pointer)"
														}
													},
													"id": 329,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8019:26:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
														"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7986:59:0"
											},
											{
												"condition": {
													"arguments": [
														{
															"id": 332,
															"name": "role",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 318,
															"src": "8067:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 333,
															"name": "account",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 320,
															"src": "8073:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 331,
														"name": "hasRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 116,
														"src": "8059:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) view returns (bool)"
														}
													},
													"id": 334,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8059:22:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 358,
													"nodeType": "Block",
													"src": "8237:37:0",
													"statements": [
														{
															"expression": {
																"hexValue": "66616c7365",
																"id": 356,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8258:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "false"
															},
															"functionReturnParameters": 324,
															"id": 357,
															"nodeType": "Return",
															"src": "8251:12:0"
														}
													]
												},
												"id": 359,
												"nodeType": "IfStatement",
												"src": "8055:219:0",
												"trueBody": {
													"id": 355,
													"nodeType": "Block",
													"src": "8083:148:0",
													"statements": [
														{
															"expression": {
																"id": 344,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"baseExpression": {
																		"expression": {
																			"baseExpression": {
																				"expression": {
																					"id": 335,
																					"name": "$",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 327,
																					"src": "8097:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_AccessControlStorage_$35_storage_ptr",
																						"typeString": "struct AccessControlUpgradeable.AccessControlStorage storage pointer"
																					}
																				},
																				"id": 338,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "8099:6:0",
																				"memberName": "_roles",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 34,
																				"src": "8097:8:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_RoleData_$25_storage_$",
																					"typeString": "mapping(bytes32 => struct AccessControlUpgradeable.RoleData storage ref)"
																				}
																			},
																			"id": 339,
																			"indexExpression": {
																				"id": 337,
																				"name": "role",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 318,
																				"src": "8106:4:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes32",
																					"typeString": "bytes32"
																				}
																			},
																			"isConstant": false,
																			"isLValue": true,
																			"isPure": false,
																			"lValueRequested": false,
																			"nodeType": "IndexAccess",
																			"src": "8097:14:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_RoleData_$25_storage",
																				"typeString": "struct AccessControlUpgradeable.RoleData storage ref"
																			}
																		},
																		"id": 340,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "8112:7:0",
																		"memberName": "hasRole",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 22,
																		"src": "8097:22:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
																			"typeString": "mapping(address => bool)"
																		}
																	},
																	"id": 342,
																	"indexExpression": {
																		"id": 341,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 320,
																		"src": "8120:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"nodeType": "IndexAccess",
																	"src": "8097:31:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 343,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "8131:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "8097:39:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 345,
															"nodeType": "ExpressionStatement",
															"src": "8097:39:0"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"id": 347,
																		"name": "role",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 318,
																		"src": "8167:4:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	{
																		"id": 348,
																		"name": "account",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 320,
																		"src": "8173:7:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"id": 349,
																			"name": "_msgSender",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1020,
																			"src": "8182:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																				"typeString": "function () view returns (address)"
																			}
																		},
																		"id": 350,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8182:12:0",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 346,
																	"name": "RoleRevoked",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1306,
																	"src": "8155:11:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
																		"typeString": "function (bytes32,address,address)"
																	}
																},
																"id": 351,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8155:40:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 352,
															"nodeType": "EmitStatement",
															"src": "8150:45:0"
														},
														{
															"expression": {
																"hexValue": "74727565",
																"id": 353,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "bool",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "8216:4:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"value": "true"
															},
															"functionReturnParameters": 324,
															"id": 354,
															"nodeType": "Return",
															"src": "8209:11:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 316,
										"nodeType": "StructuredDocumentation",
										"src": "7663:224:0",
										"text": " @dev Attempts to revoke `role` to `account` and returns a boolean indicating if `role` was revoked.\n Internal function without access restriction.\n May emit a {RoleRevoked} event."
									},
									"id": 361,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revokeRole",
									"nameLocation": "7901:11:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 321,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 318,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "7921:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "7913:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 317,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "7913:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 320,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "7935:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "7927:15:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 319,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7927:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7912:31:0"
									},
									"returnParameters": {
										"id": 324,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 323,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 361,
												"src": "7970:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 322,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "7970:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7969:6:0"
									},
									"scope": 362,
									"src": "7892:388:0",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 363,
							"src": "2090:6192:0",
							"usedErrors": [
								379,
								382,
								1276,
								1279
							],
							"usedEvents": [
								387,
								1288,
								1297,
								1306
							]
						}
					],
					"src": "108:8175:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
					"exportedSymbols": {
						"Initializable": [
							616
						]
					},
					"id": 617,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 364,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:1"
						},
						{
							"abstract": true,
							"baseContracts": [],
							"canonicalName": "Initializable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 365,
								"nodeType": "StructuredDocumentation",
								"src": "139:2209:1",
								"text": " @dev This is a base contract to aid in writing upgradeable contracts, or any kind of contract that will be deployed\n behind a proxy. Since proxied contracts do not make use of a constructor, it's common to move constructor logic to an\n external initializer function, usually called `initialize`. It then becomes necessary to protect this initializer\n function so it can only be called once. The {initializer} modifier provided by this contract will have this effect.\n The initialization functions use a version number. Once a version number is used, it is consumed and cannot be\n reused. This mechanism prevents re-execution of each \"step\" but allows the creation of new initialization steps in\n case an upgrade adds a module that needs to be initialized.\n For example:\n [.hljs-theme-light.nopadding]\n ```solidity\n contract MyToken is ERC20Upgradeable {\n     function initialize() initializer public {\n         __ERC20_init(\"MyToken\", \"MTK\");\n     }\n }\n contract MyTokenV2 is MyToken, ERC20PermitUpgradeable {\n     function initializeV2() reinitializer(2) public {\n         __ERC20Permit_init(\"MyToken\");\n     }\n }\n ```\n TIP: To avoid leaving the proxy in an uninitialized state, the initializer function should be called as early as\n possible by providing the encoded function call as the `_data` argument to {ERC1967Proxy-constructor}.\n CAUTION: When used with inheritance, manual care must be taken to not invoke a parent initializer twice, or to ensure\n that all initializers are idempotent. This is not verified automatically as constructors are by Solidity.\n [CAUTION]\n ====\n Avoid leaving a contract uninitialized.\n An uninitialized contract can be taken over by an attacker. This applies to both a proxy and its implementation\n contract, which may impact the proxy. To prevent the implementation contract from being used, you should invoke\n the {_disableInitializers} function in the constructor to automatically lock it when it is deployed:\n [.hljs-theme-light.nopadding]\n ```\n /// @custom:oz-upgrades-unsafe-allow constructor\n constructor() {\n     _disableInitializers();\n }\n ```\n ===="
							},
							"fullyImplemented": true,
							"id": 616,
							"linearizedBaseContracts": [
								616
							],
							"name": "Initializable",
							"nameLocation": "2367:13:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "Initializable.InitializableStorage",
									"documentation": {
										"id": 366,
										"nodeType": "StructuredDocumentation",
										"src": "2387:293:1",
										"text": " @dev Storage of the initializable contract.\n It's implemented on a custom ERC-7201 namespace to reduce the risk of storage collisions\n when using with upgradeable contracts.\n @custom:storage-location erc7201:openzeppelin.storage.Initializable"
									},
									"id": 373,
									"members": [
										{
											"constant": false,
											"id": 369,
											"mutability": "mutable",
											"name": "_initialized",
											"nameLocation": "2820:12:1",
											"nodeType": "VariableDeclaration",
											"scope": 373,
											"src": "2813:19:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint64",
												"typeString": "uint64"
											},
											"typeName": {
												"id": 368,
												"name": "uint64",
												"nodeType": "ElementaryTypeName",
												"src": "2813:6:1",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 372,
											"mutability": "mutable",
											"name": "_initializing",
											"nameLocation": "2955:13:1",
											"nodeType": "VariableDeclaration",
											"scope": 373,
											"src": "2950:18:1",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 371,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "2950:4:1",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "InitializableStorage",
									"nameLocation": "2692:20:1",
									"nodeType": "StructDefinition",
									"scope": 616,
									"src": "2685:290:1",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 376,
									"mutability": "constant",
									"name": "INITIALIZABLE_STORAGE",
									"nameLocation": "3123:21:1",
									"nodeType": "VariableDeclaration",
									"scope": 616,
									"src": "3098:115:1",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 374,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3098:7:1",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307866306335376531363834306466303430663135303838646332663831666533393163333932336265633733653233613936363265666339633232396336613030",
										"id": 375,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3147:66:1",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_108904022758810753673719992590105913556127789646572562039383141376366747609600_by_1",
											"typeString": "int_const 1089...(70 digits omitted)...9600"
										},
										"value": "0xf0c57e16840df040f15088dc2f81fe391c3923bec73e23a9662efc9c229c6a00"
									},
									"visibility": "private"
								},
								{
									"documentation": {
										"id": 377,
										"nodeType": "StructuredDocumentation",
										"src": "3220:60:1",
										"text": " @dev The contract is already initialized."
									},
									"errorSelector": "f92ee8a9",
									"id": 379,
									"name": "InvalidInitialization",
									"nameLocation": "3291:21:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 378,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3312:2:1"
									},
									"src": "3285:30:1"
								},
								{
									"documentation": {
										"id": 380,
										"nodeType": "StructuredDocumentation",
										"src": "3321:57:1",
										"text": " @dev The contract is not initializing."
									},
									"errorSelector": "d7e6bcf8",
									"id": 382,
									"name": "NotInitializing",
									"nameLocation": "3389:15:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 381,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3404:2:1"
									},
									"src": "3383:24:1"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 383,
										"nodeType": "StructuredDocumentation",
										"src": "3413:90:1",
										"text": " @dev Triggered when the contract has been initialized or reinitialized."
									},
									"eventSelector": "c7f505b2f371ae2175ee4913f4499e1f2633a7b5936321eed1cdaeb6115181d2",
									"id": 387,
									"name": "Initialized",
									"nameLocation": "3514:11:1",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 386,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 385,
												"indexed": false,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "3533:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 387,
												"src": "3526:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 384,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "3526:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3525:16:1"
									},
									"src": "3508:34:1"
								},
								{
									"body": {
										"id": 469,
										"nodeType": "Block",
										"src": "4092:1081:1",
										"statements": [
											{
												"assignments": [
													392
												],
												"declarations": [
													{
														"constant": false,
														"id": 392,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "4187:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 469,
														"src": "4158:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 391,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 390,
																"name": "InitializableStorage",
																"nameLocations": [
																	"4158:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 373,
																"src": "4158:20:1"
															},
															"referencedDeclaration": 373,
															"src": "4158:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 395,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 393,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "4191:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 394,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4191:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4158:59:1"
											},
											{
												"assignments": [
													397
												],
												"declarations": [
													{
														"constant": false,
														"id": 397,
														"mutability": "mutable",
														"name": "isTopLevelCall",
														"nameLocation": "4284:14:1",
														"nodeType": "VariableDeclaration",
														"scope": 469,
														"src": "4279:19:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 396,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4279:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 401,
												"initialValue": {
													"id": 400,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4301:16:1",
													"subExpression": {
														"expression": {
															"id": 398,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "4302:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 399,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4304:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 372,
														"src": "4302:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4279:38:1"
											},
											{
												"assignments": [
													403
												],
												"declarations": [
													{
														"constant": false,
														"id": 403,
														"mutability": "mutable",
														"name": "initialized",
														"nameLocation": "4334:11:1",
														"nodeType": "VariableDeclaration",
														"scope": 469,
														"src": "4327:18:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"typeName": {
															"id": 402,
															"name": "uint64",
															"nodeType": "ElementaryTypeName",
															"src": "4327:6:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 406,
												"initialValue": {
													"expression": {
														"id": 404,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 392,
														"src": "4348:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 405,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "4350:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 369,
													"src": "4348:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4327:35:1"
											},
											{
												"assignments": [
													408
												],
												"declarations": [
													{
														"constant": false,
														"id": 408,
														"mutability": "mutable",
														"name": "initialSetup",
														"nameLocation": "4711:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 469,
														"src": "4706:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 407,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4706:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 414,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 413,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 411,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 409,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "4726:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 410,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4741:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4726:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 412,
														"name": "isTopLevelCall",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 397,
														"src": "4746:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4726:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4706:54:1"
											},
											{
												"assignments": [
													416
												],
												"declarations": [
													{
														"constant": false,
														"id": 416,
														"mutability": "mutable",
														"name": "construction",
														"nameLocation": "4775:12:1",
														"nodeType": "VariableDeclaration",
														"scope": 469,
														"src": "4770:17:1",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 415,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4770:4:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 429,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 428,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 419,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 417,
															"name": "initialized",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 403,
															"src": "4790:11:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "31",
															"id": 418,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4805:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														"src": "4790:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 427,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 422,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "4818:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_Initializable_$616",
																				"typeString": "contract Initializable"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_Initializable_$616",
																				"typeString": "contract Initializable"
																			}
																		],
																		"id": 421,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "4810:7:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 420,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "4810:7:1",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 423,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "4810:13:1",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 424,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4824:4:1",
																"memberName": "code",
																"nodeType": "MemberAccess",
																"src": "4810:18:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 425,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4829:6:1",
															"memberName": "length",
															"nodeType": "MemberAccess",
															"src": "4810:25:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"hexValue": "30",
															"id": 426,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4839:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														},
														"src": "4810:30:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4790:50:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4770:70:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 434,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 431,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4855:13:1",
														"subExpression": {
															"id": 430,
															"name": "initialSetup",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 408,
															"src": "4856:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "&&",
													"rightExpression": {
														"id": 433,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "UnaryOperation",
														"operator": "!",
														"prefix": true,
														"src": "4872:13:1",
														"subExpression": {
															"id": 432,
															"name": "construction",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 416,
															"src": "4873:12:1",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4855:30:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 439,
												"nodeType": "IfStatement",
												"src": "4851:91:1",
												"trueBody": {
													"id": 438,
													"nodeType": "Block",
													"src": "4887:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 435,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 379,
																	"src": "4908:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 436,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4908:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 437,
															"nodeType": "RevertStatement",
															"src": "4901:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 440,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 392,
															"src": "4951:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 442,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4953:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 369,
														"src": "4951:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "31",
														"id": 443,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "4968:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_1_by_1",
															"typeString": "int_const 1"
														},
														"value": "1"
													},
													"src": "4951:18:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 445,
												"nodeType": "ExpressionStatement",
												"src": "4951:18:1"
											},
											{
												"condition": {
													"id": 446,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 397,
													"src": "4983:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 454,
												"nodeType": "IfStatement",
												"src": "4979:67:1",
												"trueBody": {
													"id": 453,
													"nodeType": "Block",
													"src": "4999:47:1",
													"statements": [
														{
															"expression": {
																"id": 451,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 447,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "5013:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 449,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5015:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 372,
																	"src": "5013:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "74727565",
																	"id": 450,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5031:4:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "true"
																},
																"src": "5013:22:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 452,
															"nodeType": "ExpressionStatement",
															"src": "5013:22:1"
														}
													]
												}
											},
											{
												"id": 455,
												"nodeType": "PlaceholderStatement",
												"src": "5055:1:1"
											},
											{
												"condition": {
													"id": 456,
													"name": "isTopLevelCall",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 397,
													"src": "5070:14:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 468,
												"nodeType": "IfStatement",
												"src": "5066:101:1",
												"trueBody": {
													"id": 467,
													"nodeType": "Block",
													"src": "5086:81:1",
													"statements": [
														{
															"expression": {
																"id": 461,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 457,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 392,
																		"src": "5100:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 459,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "5102:13:1",
																	"memberName": "_initializing",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 372,
																	"src": "5100:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"hexValue": "66616c7365",
																	"id": 460,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "bool",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5118:5:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	},
																	"value": "false"
																},
																"src": "5100:23:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 462,
															"nodeType": "ExpressionStatement",
															"src": "5100:23:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"hexValue": "31",
																		"id": 464,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5154:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		},
																		"value": "1"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_rational_1_by_1",
																			"typeString": "int_const 1"
																		}
																	],
																	"id": 463,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 387,
																	"src": "5142:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 465,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5142:14:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 466,
															"nodeType": "EmitStatement",
															"src": "5137:19:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 388,
										"nodeType": "StructuredDocumentation",
										"src": "3548:516:1",
										"text": " @dev A modifier that defines a protected initializer function that can be invoked at most once. In its scope,\n `onlyInitializing` functions can be used to initialize parent contracts.\n Similar to `reinitializer(1)`, except that in the context of a constructor an `initializer` may be invoked any\n number of times. This behavior in the constructor can be useful during testing and is not expected to be used in\n production.\n Emits an {Initialized} event."
									},
									"id": 470,
									"name": "initializer",
									"nameLocation": "4078:11:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 389,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4089:2:1"
									},
									"src": "4069:1104:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 516,
										"nodeType": "Block",
										"src": "6291:392:1",
										"statements": [
											{
												"assignments": [
													477
												],
												"declarations": [
													{
														"constant": false,
														"id": 477,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "6386:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 516,
														"src": "6357:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 476,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 475,
																"name": "InitializableStorage",
																"nameLocations": [
																	"6357:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 373,
																"src": "6357:20:1"
															},
															"referencedDeclaration": 373,
															"src": "6357:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 480,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 478,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "6390:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6390:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6357:59:1"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 487,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 481,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "6431:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 482,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6433:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 372,
														"src": "6431:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														},
														"id": 486,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"expression": {
																"id": 483,
																"name": "$",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 477,
																"src": "6450:1:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																	"typeString": "struct Initializable.InitializableStorage storage pointer"
																}
															},
															"id": 484,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6452:12:1",
															"memberName": "_initialized",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 369,
															"src": "6450:14:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 485,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 473,
															"src": "6468:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														},
														"src": "6450:25:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "6431:44:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 492,
												"nodeType": "IfStatement",
												"src": "6427:105:1",
												"trueBody": {
													"id": 491,
													"nodeType": "Block",
													"src": "6477:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 488,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 379,
																	"src": "6498:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 489,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6498:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 490,
															"nodeType": "RevertStatement",
															"src": "6491:30:1"
														}
													]
												}
											},
											{
												"expression": {
													"id": 497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 493,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "6541:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 495,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6543:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 369,
														"src": "6541:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 496,
														"name": "version",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 473,
														"src": "6558:7:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "6541:24:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"id": 498,
												"nodeType": "ExpressionStatement",
												"src": "6541:24:1"
											},
											{
												"expression": {
													"id": 503,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 499,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "6575:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 501,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6577:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 372,
														"src": "6575:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 502,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6593:4:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "6575:22:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 504,
												"nodeType": "ExpressionStatement",
												"src": "6575:22:1"
											},
											{
												"id": 505,
												"nodeType": "PlaceholderStatement",
												"src": "6607:1:1"
											},
											{
												"expression": {
													"id": 510,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 506,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 477,
															"src": "6618:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 508,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6620:13:1",
														"memberName": "_initializing",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 372,
														"src": "6618:15:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 509,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6636:5:1",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "6618:23:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 511,
												"nodeType": "ExpressionStatement",
												"src": "6618:23:1"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 513,
															"name": "version",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 473,
															"src": "6668:7:1",
															"typeDescriptions": {
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint64",
																"typeString": "uint64"
															}
														],
														"id": 512,
														"name": "Initialized",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 387,
														"src": "6656:11:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
															"typeString": "function (uint64)"
														}
													},
													"id": 514,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6656:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 515,
												"nodeType": "EmitStatement",
												"src": "6651:25:1"
											}
										]
									},
									"documentation": {
										"id": 471,
										"nodeType": "StructuredDocumentation",
										"src": "5179:1068:1",
										"text": " @dev A modifier that defines a protected reinitializer function that can be invoked at most once, and only if the\n contract hasn't been initialized to a greater version before. In its scope, `onlyInitializing` functions can be\n used to initialize parent contracts.\n A reinitializer may be used after the original initialization step. This is essential to configure modules that\n are added through upgrades and that require initialization.\n When `version` is 1, this modifier is similar to `initializer`, except that functions marked with `reinitializer`\n cannot be nested. If one is invoked in the context of another, execution will revert.\n Note that versions can jump in increments greater than 1; this implies that if multiple reinitializers coexist in\n a contract, executing them in the right order is up to the developer or operator.\n WARNING: Setting the version to 2**64 - 1 will prevent any future reinitialization.\n Emits an {Initialized} event."
									},
									"id": 517,
									"name": "reinitializer",
									"nameLocation": "6261:13:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 474,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 473,
												"mutability": "mutable",
												"name": "version",
												"nameLocation": "6282:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 517,
												"src": "6275:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 472,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "6275:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6274:16:1"
									},
									"src": "6252:431:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 524,
										"nodeType": "Block",
										"src": "6921:48:1",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 520,
														"name": "_checkInitializing",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 538,
														"src": "6931:18:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 521,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6931:20:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 522,
												"nodeType": "ExpressionStatement",
												"src": "6931:20:1"
											},
											{
												"id": 523,
												"nodeType": "PlaceholderStatement",
												"src": "6961:1:1"
											}
										]
									},
									"documentation": {
										"id": 518,
										"nodeType": "StructuredDocumentation",
										"src": "6689:199:1",
										"text": " @dev Modifier to protect an initialization function so that it can only be invoked by functions with the\n {initializer} and {reinitializer} modifiers, directly or indirectly."
									},
									"id": 525,
									"name": "onlyInitializing",
									"nameLocation": "6902:16:1",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 519,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6918:2:1"
									},
									"src": "6893:76:1",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 537,
										"nodeType": "Block",
										"src": "7136:89:1",
										"statements": [
											{
												"condition": {
													"id": 531,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "7150:18:1",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 529,
															"name": "_isInitializing",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 606,
															"src": "7151:15:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 530,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "7151:17:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 536,
												"nodeType": "IfStatement",
												"src": "7146:73:1",
												"trueBody": {
													"id": 535,
													"nodeType": "Block",
													"src": "7170:49:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 532,
																	"name": "NotInitializing",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 382,
																	"src": "7191:15:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 533,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7191:17:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 534,
															"nodeType": "RevertStatement",
															"src": "7184:24:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 526,
										"nodeType": "StructuredDocumentation",
										"src": "6975:104:1",
										"text": " @dev Reverts if the contract is not in an initializing state. See {onlyInitializing}."
									},
									"id": 538,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkInitializing",
									"nameLocation": "7093:18:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 527,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7111:2:1"
									},
									"returnParameters": {
										"id": 528,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7136:0:1"
									},
									"scope": 616,
									"src": "7084:141:1",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 583,
										"nodeType": "Block",
										"src": "7760:373:1",
										"statements": [
											{
												"assignments": [
													544
												],
												"declarations": [
													{
														"constant": false,
														"id": 544,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "7855:1:1",
														"nodeType": "VariableDeclaration",
														"scope": 583,
														"src": "7826:30:1",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage"
														},
														"typeName": {
															"id": 543,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 542,
																"name": "InitializableStorage",
																"nameLocations": [
																	"7826:20:1"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 373,
																"src": "7826:20:1"
															},
															"referencedDeclaration": 373,
															"src": "7826:20:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 547,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 545,
														"name": "_getInitializableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 615,
														"src": "7859:24:1",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$",
															"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
														}
													},
													"id": 546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7859:26:1",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7826:59:1"
											},
											{
												"condition": {
													"expression": {
														"id": 548,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 544,
														"src": "7900:1:1",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 549,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "7902:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 372,
													"src": "7900:15:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 554,
												"nodeType": "IfStatement",
												"src": "7896:76:1",
												"trueBody": {
													"id": 553,
													"nodeType": "Block",
													"src": "7917:55:1",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 550,
																	"name": "InvalidInitialization",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 379,
																	"src": "7938:21:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 551,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7938:23:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 552,
															"nodeType": "RevertStatement",
															"src": "7931:30:1"
														}
													]
												}
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													},
													"id": 562,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 555,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 544,
															"src": "7985:1:1",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																"typeString": "struct Initializable.InitializableStorage storage pointer"
															}
														},
														"id": 556,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7987:12:1",
														"memberName": "_initialized",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 369,
														"src": "7985:14:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 559,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "8008:6:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	},
																	"typeName": {
																		"id": 558,
																		"name": "uint64",
																		"nodeType": "ElementaryTypeName",
																		"src": "8008:6:1",
																		"typeDescriptions": {}
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_uint64_$",
																		"typeString": "type(uint64)"
																	}
																],
																"id": 557,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "8003:4:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 560,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8003:12:1",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_uint64",
																"typeString": "type(uint64)"
															}
														},
														"id": 561,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "8016:3:1",
														"memberName": "max",
														"nodeType": "MemberAccess",
														"src": "8003:16:1",
														"typeDescriptions": {
															"typeIdentifier": "t_uint64",
															"typeString": "uint64"
														}
													},
													"src": "7985:34:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 582,
												"nodeType": "IfStatement",
												"src": "7981:146:1",
												"trueBody": {
													"id": 581,
													"nodeType": "Block",
													"src": "8021:106:1",
													"statements": [
														{
															"expression": {
																"id": 571,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 563,
																		"name": "$",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 544,
																		"src": "8035:1:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
																			"typeString": "struct Initializable.InitializableStorage storage pointer"
																		}
																	},
																	"id": 565,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "8037:12:1",
																	"memberName": "_initialized",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 369,
																	"src": "8035:14:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"arguments": [
																			{
																				"id": 568,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "8057:6:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				},
																				"typeName": {
																					"id": 567,
																					"name": "uint64",
																					"nodeType": "ElementaryTypeName",
																					"src": "8057:6:1",
																					"typeDescriptions": {}
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_type$_t_uint64_$",
																					"typeString": "type(uint64)"
																				}
																			],
																			"id": 566,
																			"name": "type",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967269,
																			"src": "8052:4:1",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																				"typeString": "function () pure"
																			}
																		},
																		"id": 569,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "8052:12:1",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_meta_type_t_uint64",
																			"typeString": "type(uint64)"
																		}
																	},
																	"id": 570,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"memberLocation": "8065:3:1",
																	"memberName": "max",
																	"nodeType": "MemberAccess",
																	"src": "8052:16:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint64",
																		"typeString": "uint64"
																	}
																},
																"src": "8035:33:1",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint64",
																	"typeString": "uint64"
																}
															},
															"id": 572,
															"nodeType": "ExpressionStatement",
															"src": "8035:33:1"
														},
														{
															"eventCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 576,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": true,
																					"lValueRequested": false,
																					"nodeType": "ElementaryTypeNameExpression",
																					"src": "8104:6:1",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					},
																					"typeName": {
																						"id": 575,
																						"name": "uint64",
																						"nodeType": "ElementaryTypeName",
																						"src": "8104:6:1",
																						"typeDescriptions": {}
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_type$_t_uint64_$",
																						"typeString": "type(uint64)"
																					}
																				],
																				"id": 574,
																				"name": "type",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967269,
																				"src": "8099:4:1",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																					"typeString": "function () pure"
																				}
																			},
																			"id": 577,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "8099:12:1",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_meta_type_t_uint64",
																				"typeString": "type(uint64)"
																			}
																		},
																		"id": 578,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"memberLocation": "8112:3:1",
																		"memberName": "max",
																		"nodeType": "MemberAccess",
																		"src": "8099:16:1",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint64",
																			"typeString": "uint64"
																		}
																	],
																	"id": 573,
																	"name": "Initialized",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 387,
																	"src": "8087:11:1",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_event_nonpayable$_t_uint64_$returns$__$",
																		"typeString": "function (uint64)"
																	}
																},
																"id": 579,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "8087:29:1",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 580,
															"nodeType": "EmitStatement",
															"src": "8082:34:1"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 539,
										"nodeType": "StructuredDocumentation",
										"src": "7231:475:1",
										"text": " @dev Locks the contract, preventing any future reinitialization. This cannot be part of an initializer call.\n Calling this in the constructor of a contract will prevent that contract from being initialized or reinitialized\n to any version. It is recommended to use this to lock implementation contracts that are designed to be called\n through proxies.\n Emits an {Initialized} event the first time it is successfully executed."
									},
									"id": 584,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_disableInitializers",
									"nameLocation": "7720:20:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 540,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7740:2:1"
									},
									"returnParameters": {
										"id": 541,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7760:0:1"
									},
									"scope": 616,
									"src": "7711:422:1",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 594,
										"nodeType": "Block",
										"src": "8308:63:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 590,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 615,
															"src": "8325:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 591,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8325:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 592,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8352:12:1",
													"memberName": "_initialized",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 369,
													"src": "8325:39:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"functionReturnParameters": 589,
												"id": 593,
												"nodeType": "Return",
												"src": "8318:46:1"
											}
										]
									},
									"documentation": {
										"id": 585,
										"nodeType": "StructuredDocumentation",
										"src": "8139:99:1",
										"text": " @dev Returns the highest version that has been initialized. See {reinitializer}."
									},
									"id": 595,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializedVersion",
									"nameLocation": "8252:22:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 586,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8274:2:1"
									},
									"returnParameters": {
										"id": 589,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 588,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 595,
												"src": "8300:6:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint64",
													"typeString": "uint64"
												},
												"typeName": {
													"id": 587,
													"name": "uint64",
													"nodeType": "ElementaryTypeName",
													"src": "8300:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint64",
														"typeString": "uint64"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8299:8:1"
									},
									"scope": 616,
									"src": "8243:128:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 605,
										"nodeType": "Block",
										"src": "8543:64:1",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 601,
															"name": "_getInitializableStorage",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 615,
															"src": "8560:24:1",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_InitializableStorage_$373_storage_ptr_$",
																"typeString": "function () pure returns (struct Initializable.InitializableStorage storage pointer)"
															}
														},
														"id": 602,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "8560:26:1",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
															"typeString": "struct Initializable.InitializableStorage storage pointer"
														}
													},
													"id": 603,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "8587:13:1",
													"memberName": "_initializing",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 372,
													"src": "8560:40:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 600,
												"id": 604,
												"nodeType": "Return",
												"src": "8553:47:1"
											}
										]
									},
									"documentation": {
										"id": 596,
										"nodeType": "StructuredDocumentation",
										"src": "8377:105:1",
										"text": " @dev Returns `true` if the contract is currently initializing. See {onlyInitializing}."
									},
									"id": 606,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_isInitializing",
									"nameLocation": "8496:15:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 597,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8511:2:1"
									},
									"returnParameters": {
										"id": 600,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 599,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 606,
												"src": "8537:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 598,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "8537:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8536:6:1"
									},
									"scope": 616,
									"src": "8487:120:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 614,
										"nodeType": "Block",
										"src": "8827:80:1",
										"statements": [
											{
												"AST": {
													"nativeSrc": "8846:55:1",
													"nodeType": "YulBlock",
													"src": "8846:55:1",
													"statements": [
														{
															"nativeSrc": "8860:31:1",
															"nodeType": "YulAssignment",
															"src": "8860:31:1",
															"value": {
																"name": "INITIALIZABLE_STORAGE",
																"nativeSrc": "8870:21:1",
																"nodeType": "YulIdentifier",
																"src": "8870:21:1"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "8860:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "8860:6:1"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 611,
														"isOffset": false,
														"isSlot": true,
														"src": "8860:6:1",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 376,
														"isOffset": false,
														"isSlot": false,
														"src": "8870:21:1",
														"valueSize": 1
													}
												],
												"id": 613,
												"nodeType": "InlineAssembly",
												"src": "8837:64:1"
											}
										]
									},
									"documentation": {
										"id": 607,
										"nodeType": "StructuredDocumentation",
										"src": "8613:67:1",
										"text": " @dev Returns a pointer to the storage namespace."
									},
									"id": 615,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getInitializableStorage",
									"nameLocation": "8746:24:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 608,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8770:2:1"
									},
									"returnParameters": {
										"id": 612,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 611,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "8824:1:1",
												"nodeType": "VariableDeclaration",
												"scope": 615,
												"src": "8795:30:1",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
													"typeString": "struct Initializable.InitializableStorage"
												},
												"typeName": {
													"id": 610,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 609,
														"name": "InitializableStorage",
														"nameLocations": [
															"8795:20:1"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 373,
														"src": "8795:20:1"
													},
													"referencedDeclaration": 373,
													"src": "8795:20:1",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_InitializableStorage_$373_storage_ptr",
														"typeString": "struct Initializable.InitializableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8794:32:1"
									},
									"scope": 616,
									"src": "8737:170:1",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 617,
							"src": "2349:6560:1",
							"usedErrors": [
								379,
								382
							],
							"usedEvents": [
								387
							]
						}
					],
					"src": "113:8797:1"
				},
				"id": 1
			},
			"@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
					"exportedSymbols": {
						"ERC1967Utils": [
							1662
						],
						"IERC1822Proxiable": [
							1359
						],
						"Initializable": [
							616
						],
						"UUPSUpgradeable": [
							798
						]
					},
					"id": 799,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 618,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:2"
						},
						{
							"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"file": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
							"id": 620,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 799,
							"sourceUnit": 1360,
							"src": "141:88:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 619,
										"name": "IERC1822Proxiable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1359,
										"src": "149:17:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"file": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
							"id": 622,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 799,
							"sourceUnit": 1663,
							"src": "230:84:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 621,
										"name": "ERC1967Utils",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1662,
										"src": "238:12:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "./Initializable.sol",
							"id": 624,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 799,
							"sourceUnit": 617,
							"src": "315:50:2",
							"symbolAliases": [
								{
									"foreign": {
										"id": 623,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 616,
										"src": "323:13:2",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 626,
										"name": "Initializable",
										"nameLocations": [
											"1023:13:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 616,
										"src": "1023:13:2"
									},
									"id": 627,
									"nodeType": "InheritanceSpecifier",
									"src": "1023:13:2"
								},
								{
									"baseName": {
										"id": 628,
										"name": "IERC1822Proxiable",
										"nameLocations": [
											"1038:17:2"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1359,
										"src": "1038:17:2"
									},
									"id": 629,
									"nodeType": "InheritanceSpecifier",
									"src": "1038:17:2"
								}
							],
							"canonicalName": "UUPSUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 625,
								"nodeType": "StructuredDocumentation",
								"src": "367:618:2",
								"text": " @dev An upgradeability mechanism designed for UUPS proxies. The functions included here can perform an upgrade of an\n {ERC1967Proxy}, when this contract is set as the implementation behind such a proxy.\n A security mechanism ensures that an upgrade does not turn off upgradeability accidentally, although this risk is\n reinstated if the upgrade retains upgradeability but removes the security mechanism, e.g. by replacing\n `UUPSUpgradeable` with a custom implementation of upgrades.\n The {_authorizeUpgrade} function must be overridden to include access restriction to the upgrade mechanism."
							},
							"fullyImplemented": false,
							"id": 798,
							"linearizedBaseContracts": [
								798,
								1359,
								616
							],
							"name": "UUPSUpgradeable",
							"nameLocation": "1004:15:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"documentation": {
										"id": 630,
										"nodeType": "StructuredDocumentation",
										"src": "1062:61:2",
										"text": "@custom:oz-upgrades-unsafe-allow state-variable-immutable"
									},
									"id": 636,
									"mutability": "immutable",
									"name": "__self",
									"nameLocation": "1154:6:2",
									"nodeType": "VariableDeclaration",
									"scope": 798,
									"src": "1128:48:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_address",
										"typeString": "address"
									},
									"typeName": {
										"id": 631,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "1128:7:2",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"value": {
										"arguments": [
											{
												"id": 634,
												"name": "this",
												"nodeType": "Identifier",
												"overloadedDeclarations": [],
												"referencedDeclaration": 4294967268,
												"src": "1171:4:2",
												"typeDescriptions": {
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$798",
													"typeString": "contract UUPSUpgradeable"
												}
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_contract$_UUPSUpgradeable_$798",
													"typeString": "contract UUPSUpgradeable"
												}
											],
											"id": 633,
											"isConstant": false,
											"isLValue": false,
											"isPure": true,
											"lValueRequested": false,
											"nodeType": "ElementaryTypeNameExpression",
											"src": "1163:7:2",
											"typeDescriptions": {
												"typeIdentifier": "t_type$_t_address_$",
												"typeString": "type(address)"
											},
											"typeName": {
												"id": 632,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1163:7:2",
												"typeDescriptions": {}
											}
										},
										"id": 635,
										"isConstant": false,
										"isLValue": false,
										"isPure": false,
										"kind": "typeConversion",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "1163:13:2",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									},
									"visibility": "private"
								},
								{
									"constant": true,
									"documentation": {
										"id": 637,
										"nodeType": "StructuredDocumentation",
										"src": "1183:631:2",
										"text": " @dev The version of the upgrade interface of the contract. If this getter is missing, both `upgradeTo(address)`\n and `upgradeToAndCall(address,bytes)` are present, and `upgradeTo` must be used if no function should be called,\n while `upgradeToAndCall` will invoke the `receive` function if the second argument is the empty byte string.\n If the getter returns `\"5.0.0\"`, only `upgradeToAndCall(address,bytes)` is present, and the second argument must\n be the empty byte string if no function should be called, making it impossible to invoke the `receive` function\n during an upgrade."
									},
									"functionSelector": "ad3cb1cc",
									"id": 640,
									"mutability": "constant",
									"name": "UPGRADE_INTERFACE_VERSION",
									"nameLocation": "1842:25:2",
									"nodeType": "VariableDeclaration",
									"scope": 798,
									"src": "1819:58:2",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_string_memory_ptr",
										"typeString": "string"
									},
									"typeName": {
										"id": 638,
										"name": "string",
										"nodeType": "ElementaryTypeName",
										"src": "1819:6:2",
										"typeDescriptions": {
											"typeIdentifier": "t_string_storage_ptr",
											"typeString": "string"
										}
									},
									"value": {
										"hexValue": "352e302e30",
										"id": 639,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "string",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1870:7:2",
										"typeDescriptions": {
											"typeIdentifier": "t_stringliteral_2ade050ecfcf8ae20ae1d10a23573f9d7e0bad85e74a2cf8338a65401e64558c",
											"typeString": "literal_string \"5.0.0\""
										},
										"value": "5.0.0"
									},
									"visibility": "public"
								},
								{
									"documentation": {
										"id": 641,
										"nodeType": "StructuredDocumentation",
										"src": "1884:65:2",
										"text": " @dev The call is from an unauthorized context."
									},
									"errorSelector": "e07c8dba",
									"id": 643,
									"name": "UUPSUnauthorizedCallContext",
									"nameLocation": "1960:27:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 642,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1987:2:2"
									},
									"src": "1954:36:2"
								},
								{
									"documentation": {
										"id": 644,
										"nodeType": "StructuredDocumentation",
										"src": "1996:68:2",
										"text": " @dev The storage `slot` is unsupported as a UUID."
									},
									"errorSelector": "aa1d49a4",
									"id": 648,
									"name": "UUPSUnsupportedProxiableUUID",
									"nameLocation": "2075:28:2",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 647,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 646,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2112:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 648,
												"src": "2104:12:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 645,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2104:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2103:14:2"
									},
									"src": "2069:49:2"
								},
								{
									"body": {
										"id": 655,
										"nodeType": "Block",
										"src": "2643:41:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 651,
														"name": "_checkProxy",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 730,
														"src": "2653:11:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2653:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 653,
												"nodeType": "ExpressionStatement",
												"src": "2653:13:2"
											},
											{
												"id": 654,
												"nodeType": "PlaceholderStatement",
												"src": "2676:1:2"
											}
										]
									},
									"documentation": {
										"id": 649,
										"nodeType": "StructuredDocumentation",
										"src": "2124:493:2",
										"text": " @dev Check that the execution is being performed through a delegatecall call and that the execution context is\n a proxy contract with an implementation (as defined in ERC1967) pointing to self. This should only be the case\n for UUPS and transparent proxies that are using the current contract as their implementation. Execution of a\n function through ERC1167 minimal proxies (clones) would not normally pass this test, but is not guaranteed to\n fail."
									},
									"id": 656,
									"name": "onlyProxy",
									"nameLocation": "2631:9:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 650,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2640:2:2"
									},
									"src": "2622:62:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 663,
										"nodeType": "Block",
										"src": "2914:48:2",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 659,
														"name": "_checkNotDelegated",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 746,
														"src": "2924:18:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 660,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2924:20:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 661,
												"nodeType": "ExpressionStatement",
												"src": "2924:20:2"
											},
											{
												"id": 662,
												"nodeType": "PlaceholderStatement",
												"src": "2954:1:2"
											}
										]
									},
									"documentation": {
										"id": 657,
										"nodeType": "StructuredDocumentation",
										"src": "2690:195:2",
										"text": " @dev Check that the execution is not being performed through a delegate call. This allows a function to be\n callable on the implementing contract but not through proxies."
									},
									"id": 664,
									"name": "notDelegated",
									"nameLocation": "2899:12:2",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 658,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2911:2:2"
									},
									"src": "2890:72:2",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 669,
										"nodeType": "Block",
										"src": "3028:7:2",
										"statements": []
									},
									"id": 670,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 667,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 666,
												"name": "onlyInitializing",
												"nameLocations": [
													"3011:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "3011:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3011:16:2"
										}
									],
									"name": "__UUPSUpgradeable_init",
									"nameLocation": "2977:22:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 665,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2999:2:2"
									},
									"returnParameters": {
										"id": 668,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3028:0:2"
									},
									"scope": 798,
									"src": "2968:67:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 675,
										"nodeType": "Block",
										"src": "3111:7:2",
										"statements": []
									},
									"id": 676,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 673,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 672,
												"name": "onlyInitializing",
												"nameLocations": [
													"3094:16:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "3094:16:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3094:16:2"
										}
									],
									"name": "__UUPSUpgradeable_init_unchained",
									"nameLocation": "3050:32:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 671,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3082:2:2"
									},
									"returnParameters": {
										"id": 674,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3111:0:2"
									},
									"scope": 798,
									"src": "3041:77:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										1358
									],
									"body": {
										"id": 687,
										"nodeType": "Block",
										"src": "3783:56:2",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 684,
														"name": "ERC1967Utils",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1662,
														"src": "3800:12:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1662_$",
															"typeString": "type(library ERC1967Utils)"
														}
													},
													"id": 685,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"lValueRequested": false,
													"memberLocation": "3813:19:2",
													"memberName": "IMPLEMENTATION_SLOT",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1389,
													"src": "3800:32:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"functionReturnParameters": 683,
												"id": 686,
												"nodeType": "Return",
												"src": "3793:39:2"
											}
										]
									},
									"documentation": {
										"id": 677,
										"nodeType": "StructuredDocumentation",
										"src": "3123:577:2",
										"text": " @dev Implementation of the ERC1822 {proxiableUUID} function. This returns the storage slot used by the\n implementation. It is used to validate the implementation's compatibility when performing an upgrade.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
									},
									"functionSelector": "52d1902d",
									"id": 688,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 680,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 679,
												"name": "notDelegated",
												"nameLocations": [
													"3752:12:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 664,
												"src": "3752:12:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "3752:12:2"
										}
									],
									"name": "proxiableUUID",
									"nameLocation": "3714:13:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 678,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3727:2:2"
									},
									"returnParameters": {
										"id": 683,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 682,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 688,
												"src": "3774:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 681,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3774:7:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3773:9:2"
									},
									"scope": 798,
									"src": "3705:134:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "external"
								},
								{
									"body": {
										"id": 707,
										"nodeType": "Block",
										"src": "4263:109:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 699,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "4291:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 698,
														"name": "_authorizeUpgrade",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 752,
														"src": "4273:17:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4273:36:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 701,
												"nodeType": "ExpressionStatement",
												"src": "4273:36:2"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 703,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 691,
															"src": "4341:17:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 704,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 693,
															"src": "4360:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 702,
														"name": "_upgradeToAndCallUUPS",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 797,
														"src": "4319:21:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
															"typeString": "function (address,bytes memory)"
														}
													},
													"id": 705,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4319:46:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 706,
												"nodeType": "ExpressionStatement",
												"src": "4319:46:2"
											}
										]
									},
									"documentation": {
										"id": 689,
										"nodeType": "StructuredDocumentation",
										"src": "3845:308:2",
										"text": " @dev Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call\n encoded in `data`.\n Calls {_authorizeUpgrade}.\n Emits an {Upgraded} event.\n @custom:oz-upgrades-unsafe-allow-reachable delegatecall"
									},
									"functionSelector": "4f1ef286",
									"id": 708,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 696,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 695,
												"name": "onlyProxy",
												"nameLocations": [
													"4253:9:2"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 656,
												"src": "4253:9:2"
											},
											"nodeType": "ModifierInvocation",
											"src": "4253:9:2"
										}
									],
									"name": "upgradeToAndCall",
									"nameLocation": "4167:16:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 691,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "4192:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "4184:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 690,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4184:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 693,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4224:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 708,
												"src": "4211:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 692,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4211:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4183:46:2"
									},
									"returnParameters": {
										"id": 697,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4263:0:2"
									},
									"scope": 798,
									"src": "4158:214:2",
									"stateMutability": "payable",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 729,
										"nodeType": "Block",
										"src": "4644:267:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													},
													"id": 723,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 717,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [
																{
																	"id": 714,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "4679:4:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$798",
																		"typeString": "contract UUPSUpgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_UUPSUpgradeable_$798",
																		"typeString": "contract UUPSUpgradeable"
																	}
																],
																"id": 713,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4671:7:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 712,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4671:7:2",
																	"typeDescriptions": {}
																}
															},
															"id": 715,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4671:13:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "==",
														"rightExpression": {
															"id": 716,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "4688:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4671:23:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "||",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"id": 722,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"expression": {
																	"id": 718,
																	"name": "ERC1967Utils",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1662,
																	"src": "4749:12:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1662_$",
																		"typeString": "type(library ERC1967Utils)"
																	}
																},
																"id": 719,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4762:17:2",
																"memberName": "getImplementation",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1420,
																"src": "4749:30:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 720,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4749:32:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "!=",
														"rightExpression": {
															"id": 721,
															"name": "__self",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 636,
															"src": "4785:6:2",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"src": "4749:42:2",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"src": "4671:120:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 728,
												"nodeType": "IfStatement",
												"src": "4654:251:2",
												"trueBody": {
													"id": 727,
													"nodeType": "Block",
													"src": "4844:61:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 724,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 643,
																	"src": "4865:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 725,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4865:29:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 726,
															"nodeType": "RevertStatement",
															"src": "4858:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 709,
										"nodeType": "StructuredDocumentation",
										"src": "4378:216:2",
										"text": " @dev Reverts if the execution is not performed via delegatecall or the execution\n context is not of a proxy with an ERC1967-compliant implementation pointing to self.\n See {_onlyProxy}."
									},
									"id": 730,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkProxy",
									"nameLocation": "4608:11:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 710,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4619:2:2"
									},
									"returnParameters": {
										"id": 711,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4644:0:2"
									},
									"scope": 798,
									"src": "4599:312:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 745,
										"nodeType": "Block",
										"src": "5080:161:2",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 739,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"arguments": [
															{
																"id": 736,
																"name": "this",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967268,
																"src": "5102:4:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$798",
																	"typeString": "contract UUPSUpgradeable"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_contract$_UUPSUpgradeable_$798",
																	"typeString": "contract UUPSUpgradeable"
																}
															],
															"id": 735,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "5094:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 734,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "5094:7:2",
																"typeDescriptions": {}
															}
														},
														"id": 737,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "5094:13:2",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "!=",
													"rightExpression": {
														"id": 738,
														"name": "__self",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 636,
														"src": "5111:6:2",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5094:23:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 744,
												"nodeType": "IfStatement",
												"src": "5090:145:2",
												"trueBody": {
													"id": 743,
													"nodeType": "Block",
													"src": "5119:116:2",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 740,
																	"name": "UUPSUnauthorizedCallContext",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 643,
																	"src": "5195:27:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 741,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5195:29:2",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 742,
															"nodeType": "RevertStatement",
															"src": "5188:36:2"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 731,
										"nodeType": "StructuredDocumentation",
										"src": "4917:106:2",
										"text": " @dev Reverts if the execution is performed via delegatecall.\n See {notDelegated}."
									},
									"id": 746,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNotDelegated",
									"nameLocation": "5037:18:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 732,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5055:2:2"
									},
									"returnParameters": {
										"id": 733,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5080:0:2"
									},
									"scope": 798,
									"src": "5028:213:2",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 747,
										"nodeType": "StructuredDocumentation",
										"src": "5247:372:2",
										"text": " @dev Function that should revert when `msg.sender` is not authorized to upgrade the contract. Called by\n {upgradeToAndCall}.\n Normally, this function will use an xref:access.adoc[access control] modifier such as {Ownable-onlyOwner}.\n ```solidity\n function _authorizeUpgrade(address) internal onlyOwner {}\n ```"
									},
									"id": 752,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "_authorizeUpgrade",
									"nameLocation": "5633:17:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 750,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 749,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "5659:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 752,
												"src": "5651:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 748,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5651:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5650:27:2"
									},
									"returnParameters": {
										"id": 751,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5694:0:2"
									},
									"scope": 798,
									"src": "5624:71:2",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 796,
										"nodeType": "Block",
										"src": "6137:453:2",
										"statements": [
											{
												"clauses": [
													{
														"block": {
															"id": 785,
															"nodeType": "Block",
															"src": "6227:212:2",
															"statements": [
																{
																	"condition": {
																		"commonType": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		},
																		"id": 771,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 768,
																			"name": "slot",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 766,
																			"src": "6245:4:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "!=",
																		"rightExpression": {
																			"expression": {
																				"id": 769,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1662,
																				"src": "6253:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1662_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 770,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"memberLocation": "6266:19:2",
																			"memberName": "IMPLEMENTATION_SLOT",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1389,
																			"src": "6253:32:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes32",
																				"typeString": "bytes32"
																			}
																		},
																		"src": "6245:40:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	"id": 777,
																	"nodeType": "IfStatement",
																	"src": "6241:120:2",
																	"trueBody": {
																		"id": 776,
																		"nodeType": "Block",
																		"src": "6287:74:2",
																		"statements": [
																			{
																				"errorCall": {
																					"arguments": [
																						{
																							"id": 773,
																							"name": "slot",
																							"nodeType": "Identifier",
																							"overloadedDeclarations": [],
																							"referencedDeclaration": 766,
																							"src": "6341:4:2",
																							"typeDescriptions": {
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						}
																					],
																					"expression": {
																						"argumentTypes": [
																							{
																								"typeIdentifier": "t_bytes32",
																								"typeString": "bytes32"
																							}
																						],
																						"id": 772,
																						"name": "UUPSUnsupportedProxiableUUID",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 648,
																						"src": "6312:28:2",
																						"typeDescriptions": {
																							"typeIdentifier": "t_function_error_pure$_t_bytes32_$returns$_t_error_$",
																							"typeString": "function (bytes32) pure returns (error)"
																						}
																					},
																					"id": 774,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"kind": "functionCall",
																					"lValueRequested": false,
																					"nameLocations": [],
																					"names": [],
																					"nodeType": "FunctionCall",
																					"src": "6312:34:2",
																					"tryCall": false,
																					"typeDescriptions": {
																						"typeIdentifier": "t_error",
																						"typeString": "error"
																					}
																				},
																				"id": 775,
																				"nodeType": "RevertStatement",
																				"src": "6305:41:2"
																			}
																		]
																	}
																},
																{
																	"expression": {
																		"arguments": [
																			{
																				"id": 781,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "6404:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			{
																				"id": 782,
																				"name": "data",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 757,
																				"src": "6423:4:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				},
																				{
																					"typeIdentifier": "t_bytes_memory_ptr",
																					"typeString": "bytes memory"
																				}
																			],
																			"expression": {
																				"id": 778,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1662,
																				"src": "6374:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1662_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 780,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6387:16:2",
																			"memberName": "upgradeToAndCall",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1481,
																			"src": "6374:29:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$__$",
																				"typeString": "function (address,bytes memory)"
																			}
																		},
																		"id": 783,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6374:54:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_tuple$__$",
																			"typeString": "tuple()"
																		}
																	},
																	"id": 784,
																	"nodeType": "ExpressionStatement",
																	"src": "6374:54:2"
																}
															]
														},
														"errorName": "",
														"id": 786,
														"nodeType": "TryCatchClause",
														"parameters": {
															"id": 767,
															"nodeType": "ParameterList",
															"parameters": [
																{
																	"constant": false,
																	"id": 766,
																	"mutability": "mutable",
																	"name": "slot",
																	"nameLocation": "6221:4:2",
																	"nodeType": "VariableDeclaration",
																	"scope": 786,
																	"src": "6213:12:2",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	},
																	"typeName": {
																		"id": 765,
																		"name": "bytes32",
																		"nodeType": "ElementaryTypeName",
																		"src": "6213:7:2",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes32",
																			"typeString": "bytes32"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"src": "6212:14:2"
														},
														"src": "6204:235:2"
													},
													{
														"block": {
															"id": 793,
															"nodeType": "Block",
															"src": "6446:138:2",
															"statements": [
																{
																	"errorCall": {
																		"arguments": [
																			{
																				"id": 790,
																				"name": "newImplementation",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 755,
																				"src": "6555:17:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			],
																			"expression": {
																				"id": 787,
																				"name": "ERC1967Utils",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1662,
																				"src": "6513:12:2",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_contract$_ERC1967Utils_$1662_$",
																					"typeString": "type(library ERC1967Utils)"
																				}
																			},
																			"id": 789,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6526:28:2",
																			"memberName": "ERC1967InvalidImplementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1394,
																			"src": "6513:41:2",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																				"typeString": "function (address) pure returns (error)"
																			}
																		},
																		"id": 791,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6513:60:2",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_error",
																			"typeString": "error"
																		}
																	},
																	"id": 792,
																	"nodeType": "RevertStatement",
																	"src": "6506:67:2"
																}
															]
														},
														"errorName": "",
														"id": 794,
														"nodeType": "TryCatchClause",
														"src": "6440:144:2"
													}
												],
												"externalCall": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 761,
																	"name": "newImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 755,
																	"src": "6169:17:2",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 760,
																"name": "IERC1822Proxiable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1359,
																"src": "6151:17:2",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC1822Proxiable_$1359_$",
																	"typeString": "type(contract IERC1822Proxiable)"
																}
															},
															"id": 762,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6151:36:2",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC1822Proxiable_$1359",
																"typeString": "contract IERC1822Proxiable"
															}
														},
														"id": 763,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6188:13:2",
														"memberName": "proxiableUUID",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1358,
														"src": "6151:50:2",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
															"typeString": "function () view external returns (bytes32)"
														}
													},
													"id": 764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6151:52:2",
													"tryCall": true,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"id": 795,
												"nodeType": "TryStatement",
												"src": "6147:437:2"
											}
										]
									},
									"documentation": {
										"id": 753,
										"nodeType": "StructuredDocumentation",
										"src": "5701:346:2",
										"text": " @dev Performs an implementation upgrade with a security check for UUPS proxies, and additional setup call.\n As a security check, {proxiableUUID} is invoked in the new implementation, and the return value\n is expected to be the implementation slot in ERC1967.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 797,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_upgradeToAndCallUUPS",
									"nameLocation": "6061:21:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 758,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 755,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "6091:17:2",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "6083:25:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 754,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6083:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 757,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6123:4:2",
												"nodeType": "VariableDeclaration",
												"scope": 797,
												"src": "6110:17:2",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 756,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6110:5:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6082:46:2"
									},
									"returnParameters": {
										"id": 759,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6137:0:2"
									},
									"scope": 798,
									"src": "6052:538:2",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 799,
							"src": "986:5606:2",
							"usedErrors": [
								379,
								382,
								643,
								648,
								1394,
								1407,
								1685,
								1688
							],
							"usedEvents": [
								387,
								1373
							]
						}
					],
					"src": "115:6478:2"
				},
				"id": 2
			},
			"@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
					"exportedSymbols": {
						"IERC20Upgradeable": [
							876
						]
					},
					"id": 877,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 800,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "106:23:3"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC20Upgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 801,
								"nodeType": "StructuredDocumentation",
								"src": "131:70:3",
								"text": " @dev Interface of the ERC20 standard as defined in the EIP."
							},
							"fullyImplemented": false,
							"id": 876,
							"linearizedBaseContracts": [
								876
							],
							"name": "IERC20Upgradeable",
							"nameLocation": "212:17:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 802,
										"nodeType": "StructuredDocumentation",
										"src": "236:158:3",
										"text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 810,
									"name": "Transfer",
									"nameLocation": "405:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 809,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 804,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "430:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "414:20:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 803,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "414:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 806,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "452:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "436:18:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 805,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "436:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 808,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "464:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 810,
												"src": "456:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 807,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "456:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "413:57:3"
									},
									"src": "399:72:3"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 811,
										"nodeType": "StructuredDocumentation",
										"src": "477:148:3",
										"text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 819,
									"name": "Approval",
									"nameLocation": "636:8:3",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 818,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 813,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "661:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "645:21:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 812,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "645:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 815,
												"indexed": true,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "684:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "668:23:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 814,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "668:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 817,
												"indexed": false,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "701:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 819,
												"src": "693:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 816,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "693:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "644:63:3"
									},
									"src": "630:78:3"
								},
								{
									"documentation": {
										"id": 820,
										"nodeType": "StructuredDocumentation",
										"src": "714:66:3",
										"text": " @dev Returns the amount of tokens in existence."
									},
									"functionSelector": "18160ddd",
									"id": 825,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "totalSupply",
									"nameLocation": "794:11:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 821,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "805:2:3"
									},
									"returnParameters": {
										"id": 824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 823,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 825,
												"src": "831:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 822,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "831:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "830:9:3"
									},
									"scope": 876,
									"src": "785:55:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 826,
										"nodeType": "StructuredDocumentation",
										"src": "846:72:3",
										"text": " @dev Returns the amount of tokens owned by `account`."
									},
									"functionSelector": "70a08231",
									"id": 833,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "932:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 829,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 828,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "950:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 833,
												"src": "942:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 827,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "942:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "941:17:3"
									},
									"returnParameters": {
										"id": 832,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 831,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 833,
												"src": "982:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 830,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "982:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "981:9:3"
									},
									"scope": 876,
									"src": "923:68:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 834,
										"nodeType": "StructuredDocumentation",
										"src": "997:202:3",
										"text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "a9059cbb",
									"id": 843,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transfer",
									"nameLocation": "1213:8:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 839,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 836,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1230:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "1222:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 835,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1222:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 838,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1242:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "1234:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 837,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1234:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1221:28:3"
									},
									"returnParameters": {
										"id": 842,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 841,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 843,
												"src": "1268:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 840,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1268:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1267:6:3"
									},
									"scope": 876,
									"src": "1204:70:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 844,
										"nodeType": "StructuredDocumentation",
										"src": "1280:264:3",
										"text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
									},
									"functionSelector": "dd62ed3e",
									"id": 853,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "allowance",
									"nameLocation": "1558:9:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 849,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 846,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1576:5:3",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "1568:13:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 845,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1568:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 848,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "1591:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "1583:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 847,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1583:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1567:32:3"
									},
									"returnParameters": {
										"id": 852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 851,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 853,
												"src": "1623:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 850,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1623:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1622:9:3"
									},
									"scope": 876,
									"src": "1549:83:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 854,
										"nodeType": "StructuredDocumentation",
										"src": "1638:642:3",
										"text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 863,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "2294:7:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 859,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 856,
												"mutability": "mutable",
												"name": "spender",
												"nameLocation": "2310:7:3",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "2302:15:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 855,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2302:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 858,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2327:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "2319:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 857,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2319:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2301:33:3"
									},
									"returnParameters": {
										"id": 862,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 861,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 863,
												"src": "2353:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 860,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2353:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2352:6:3"
									},
									"scope": 876,
									"src": "2285:74:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 864,
										"nodeType": "StructuredDocumentation",
										"src": "2365:287:3",
										"text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 875,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "2666:12:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 871,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 866,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2687:4:3",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "2679:12:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 865,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 868,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2701:2:3",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "2693:10:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 867,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2693:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 870,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "2713:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "2705:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 869,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2705:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2678:42:3"
									},
									"returnParameters": {
										"id": 874,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 873,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 875,
												"src": "2739:4:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 872,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2739:4:3",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2738:6:3"
									},
									"scope": 876,
									"src": "2657:88:3",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 877,
							"src": "202:2545:3",
							"usedErrors": [],
							"usedEvents": [
								810,
								819
							]
						}
					],
					"src": "106:2642:3"
				},
				"id": 3
			},
			"@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol",
					"exportedSymbols": {
						"IERC165Upgradeable": [
							1266
						],
						"IERC721Upgradeable": [
							992
						]
					},
					"id": 993,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 878,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "108:23:4"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
							"file": "../../utils/introspection/IERC165Upgradeable.sol",
							"id": 879,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 993,
							"sourceUnit": 1267,
							"src": "133:58:4",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 881,
										"name": "IERC165Upgradeable",
										"nameLocations": [
											"293:18:4"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1266,
										"src": "293:18:4"
									},
									"id": 882,
									"nodeType": "InheritanceSpecifier",
									"src": "293:18:4"
								}
							],
							"canonicalName": "IERC721Upgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 880,
								"nodeType": "StructuredDocumentation",
								"src": "193:67:4",
								"text": " @dev Required interface of an ERC721 compliant contract."
							},
							"fullyImplemented": false,
							"id": 992,
							"linearizedBaseContracts": [
								992,
								1266
							],
							"name": "IERC721Upgradeable",
							"nameLocation": "271:18:4",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 883,
										"nodeType": "StructuredDocumentation",
										"src": "318:88:4",
										"text": " @dev Emitted when `tokenId` token is transferred from `from` to `to`."
									},
									"eventSelector": "ddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef",
									"id": 891,
									"name": "Transfer",
									"nameLocation": "417:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 885,
												"indexed": true,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "442:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "426:20:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 884,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "426:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 887,
												"indexed": true,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "464:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "448:18:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 886,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "448:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 889,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "484:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 891,
												"src": "468:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 888,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "468:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "425:67:4"
									},
									"src": "411:82:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 892,
										"nodeType": "StructuredDocumentation",
										"src": "499:94:4",
										"text": " @dev Emitted when `owner` enables `approved` to manage the `tokenId` token."
									},
									"eventSelector": "8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925",
									"id": 900,
									"name": "Approval",
									"nameLocation": "604:8:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 899,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 894,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "629:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "613:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 893,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "613:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 896,
												"indexed": true,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "652:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "636:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 895,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "636:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 898,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "678:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 900,
												"src": "662:23:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 897,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "662:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "612:74:4"
									},
									"src": "598:89:4"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 901,
										"nodeType": "StructuredDocumentation",
										"src": "693:117:4",
										"text": " @dev Emitted when `owner` enables or disables (`approved`) `operator` to manage all of its assets."
									},
									"eventSelector": "17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31",
									"id": 909,
									"name": "ApprovalForAll",
									"nameLocation": "821:14:4",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 908,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 903,
												"indexed": true,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "852:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "836:21:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 902,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "836:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 905,
												"indexed": true,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "875:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "859:24:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 904,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "859:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 907,
												"indexed": false,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "890:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 909,
												"src": "885:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 906,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "885:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "835:64:4"
									},
									"src": "815:85:4"
								},
								{
									"documentation": {
										"id": 910,
										"nodeType": "StructuredDocumentation",
										"src": "906:76:4",
										"text": " @dev Returns the number of tokens in ``owner``'s account."
									},
									"functionSelector": "70a08231",
									"id": 917,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "balanceOf",
									"nameLocation": "996:9:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 913,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 912,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1014:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 917,
												"src": "1006:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 911,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1006:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1005:15:4"
									},
									"returnParameters": {
										"id": 916,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 915,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "1052:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 917,
												"src": "1044:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 914,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1044:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1043:17:4"
									},
									"scope": 992,
									"src": "987:74:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 918,
										"nodeType": "StructuredDocumentation",
										"src": "1067:131:4",
										"text": " @dev Returns the owner of the `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "6352211e",
									"id": 925,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "ownerOf",
									"nameLocation": "1212:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 921,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 920,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1228:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "1220:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 919,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1220:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1219:17:4"
									},
									"returnParameters": {
										"id": 924,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 923,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "1268:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 925,
												"src": "1260:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 922,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1260:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1259:15:4"
									},
									"scope": 992,
									"src": "1203:72:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 926,
										"nodeType": "StructuredDocumentation",
										"src": "1281:556:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "b88d4fde",
									"id": 937,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "1851:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 935,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 928,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "1876:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "1868:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 927,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1868:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 930,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "1890:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "1882:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 929,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1882:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 932,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1902:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "1894:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 931,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1894:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 934,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "1926:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 937,
												"src": "1911:19:4",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 933,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1911:5:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1867:64:4"
									},
									"returnParameters": {
										"id": 936,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1940:0:4"
									},
									"scope": 992,
									"src": "1842:99:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 938,
										"nodeType": "StructuredDocumentation",
										"src": "1947:687:4",
										"text": " @dev Safely transfers `tokenId` token from `from` to `to`, checking first that contract recipients\n are aware of the ERC721 protocol to prevent tokens from being forever locked.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must exist and be owned by `from`.\n - If the caller is not `from`, it must have been allowed to move this token by either {approve} or {setApprovalForAll}.\n - If `to` refers to a smart contract, it must implement {IERC721Receiver-onERC721Received}, which is called upon a safe transfer.\n Emits a {Transfer} event."
									},
									"functionSelector": "42842e0e",
									"id": 947,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "safeTransferFrom",
									"nameLocation": "2648:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 945,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 940,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "2673:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "2665:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 939,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2665:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 942,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "2687:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "2679:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 941,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2679:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 944,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "2699:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 947,
												"src": "2691:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 943,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2691:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2664:43:4"
									},
									"returnParameters": {
										"id": 946,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2716:0:4"
									},
									"scope": 992,
									"src": "2639:78:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 948,
										"nodeType": "StructuredDocumentation",
										"src": "2723:732:4",
										"text": " @dev Transfers `tokenId` token from `from` to `to`.\n WARNING: Note that the caller is responsible to confirm that the recipient is capable of receiving ERC721\n or else they may be permanently lost. Usage of {safeTransferFrom} prevents loss, though the caller must\n understand this adds an external call which potentially creates a reentrancy vulnerability.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `tokenId` token must be owned by `from`.\n - If the caller is not `from`, it must be approved to move this token by either {approve} or {setApprovalForAll}.\n Emits a {Transfer} event."
									},
									"functionSelector": "23b872dd",
									"id": 957,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "transferFrom",
									"nameLocation": "3469:12:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 955,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 950,
												"mutability": "mutable",
												"name": "from",
												"nameLocation": "3490:4:4",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "3482:12:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 949,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3482:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 952,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "3504:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "3496:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 951,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3496:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 954,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "3516:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 957,
												"src": "3508:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 953,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3508:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3481:43:4"
									},
									"returnParameters": {
										"id": 956,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3533:0:4"
									},
									"scope": 992,
									"src": "3460:74:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 958,
										"nodeType": "StructuredDocumentation",
										"src": "3540:452:4",
										"text": " @dev Gives permission to `to` to transfer `tokenId` token to another account.\n The approval is cleared when the token is transferred.\n Only a single account can be approved at a time, so approving the zero address clears previous approvals.\n Requirements:\n - The caller must own the token or be an approved operator.\n - `tokenId` must exist.\n Emits an {Approval} event."
									},
									"functionSelector": "095ea7b3",
									"id": 965,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "approve",
									"nameLocation": "4006:7:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 963,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 960,
												"mutability": "mutable",
												"name": "to",
												"nameLocation": "4022:2:4",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "4014:10:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 959,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4014:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 962,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4034:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 965,
												"src": "4026:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 961,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4026:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4013:29:4"
									},
									"returnParameters": {
										"id": 964,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4051:0:4"
									},
									"scope": 992,
									"src": "3997:55:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 966,
										"nodeType": "StructuredDocumentation",
										"src": "4058:309:4",
										"text": " @dev Approve or remove `operator` as an operator for the caller.\n Operators can call {transferFrom} or {safeTransferFrom} for any token owned by the caller.\n Requirements:\n - The `operator` cannot be the caller.\n Emits an {ApprovalForAll} event."
									},
									"functionSelector": "a22cb465",
									"id": 973,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "setApprovalForAll",
									"nameLocation": "4381:17:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 971,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 968,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4407:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "4399:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 967,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4399:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 970,
												"mutability": "mutable",
												"name": "approved",
												"nameLocation": "4422:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 973,
												"src": "4417:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 969,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4417:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4398:33:4"
									},
									"returnParameters": {
										"id": 972,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4440:0:4"
									},
									"scope": 992,
									"src": "4372:69:4",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 974,
										"nodeType": "StructuredDocumentation",
										"src": "4447:139:4",
										"text": " @dev Returns the account approved for `tokenId` token.\n Requirements:\n - `tokenId` must exist."
									},
									"functionSelector": "081812fc",
									"id": 981,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getApproved",
									"nameLocation": "4600:11:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 977,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 976,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "4620:7:4",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "4612:15:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 975,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4612:7:4",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4611:17:4"
									},
									"returnParameters": {
										"id": 980,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 979,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4660:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 981,
												"src": "4652:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 978,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4652:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4651:18:4"
									},
									"scope": 992,
									"src": "4591:79:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 982,
										"nodeType": "StructuredDocumentation",
										"src": "4676:138:4",
										"text": " @dev Returns if the `operator` is allowed to manage all of the assets of `owner`.\n See {setApprovalForAll}"
									},
									"functionSelector": "e985e9c5",
									"id": 991,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "isApprovedForAll",
									"nameLocation": "4828:16:4",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 984,
												"mutability": "mutable",
												"name": "owner",
												"nameLocation": "4853:5:4",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "4845:13:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 983,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4845:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 986,
												"mutability": "mutable",
												"name": "operator",
												"nameLocation": "4868:8:4",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "4860:16:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 985,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4860:7:4",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4844:33:4"
									},
									"returnParameters": {
										"id": 990,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 989,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 991,
												"src": "4901:4:4",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 988,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4901:4:4",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4900:6:4"
									},
									"scope": 992,
									"src": "4819:88:4",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 993,
							"src": "261:4648:4",
							"usedErrors": [],
							"usedEvents": [
								891,
								900,
								909
							]
						}
					],
					"src": "108:4802:4"
				},
				"id": 4
			},
			"@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1038
						],
						"Initializable": [
							616
						]
					},
					"id": 1039,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 994,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:5"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 996,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1039,
							"sourceUnit": 617,
							"src": "126:63:5",
							"symbolAliases": [
								{
									"foreign": {
										"id": 995,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 616,
										"src": "134:13:5",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 998,
										"name": "Initializable",
										"nameLocations": [
											"728:13:5"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 616,
										"src": "728:13:5"
									},
									"id": 999,
									"nodeType": "InheritanceSpecifier",
									"src": "728:13:5"
								}
							],
							"canonicalName": "ContextUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 997,
								"nodeType": "StructuredDocumentation",
								"src": "191:496:5",
								"text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
							},
							"fullyImplemented": true,
							"id": 1038,
							"linearizedBaseContracts": [
								1038,
								616
							],
							"name": "ContextUpgradeable",
							"nameLocation": "706:18:5",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1004,
										"nodeType": "Block",
										"src": "800:7:5",
										"statements": []
									},
									"id": 1005,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1002,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1001,
												"name": "onlyInitializing",
												"nameLocations": [
													"783:16:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "783:16:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "783:16:5"
										}
									],
									"name": "__Context_init",
									"nameLocation": "757:14:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1000,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "771:2:5"
									},
									"returnParameters": {
										"id": 1003,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "800:0:5"
									},
									"scope": 1038,
									"src": "748:59:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1010,
										"nodeType": "Block",
										"src": "875:7:5",
										"statements": []
									},
									"id": 1011,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1008,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1007,
												"name": "onlyInitializing",
												"nameLocations": [
													"858:16:5"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "858:16:5"
											},
											"nodeType": "ModifierInvocation",
											"src": "858:16:5"
										}
									],
									"name": "__Context_init_unchained",
									"nameLocation": "822:24:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1006,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "846:2:5"
									},
									"returnParameters": {
										"id": 1009,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "875:0:5"
									},
									"scope": 1038,
									"src": "813:69:5",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1019,
										"nodeType": "Block",
										"src": "949:34:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1016,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "966:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1017,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "970:6:5",
													"memberName": "sender",
													"nodeType": "MemberAccess",
													"src": "966:10:5",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1015,
												"id": 1018,
												"nodeType": "Return",
												"src": "959:17:5"
											}
										]
									},
									"id": 1020,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgSender",
									"nameLocation": "896:10:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1012,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "906:2:5"
									},
									"returnParameters": {
										"id": 1015,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1014,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1020,
												"src": "940:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1013,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "940:7:5",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "939:9:5"
									},
									"scope": 1038,
									"src": "887:96:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1028,
										"nodeType": "Block",
										"src": "1056:32:5",
										"statements": [
											{
												"expression": {
													"expression": {
														"id": 1025,
														"name": "msg",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 4294967281,
														"src": "1073:3:5",
														"typeDescriptions": {
															"typeIdentifier": "t_magic_message",
															"typeString": "msg"
														}
													},
													"id": 1026,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "1077:4:5",
													"memberName": "data",
													"nodeType": "MemberAccess",
													"src": "1073:8:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_calldata_ptr",
														"typeString": "bytes calldata"
													}
												},
												"functionReturnParameters": 1024,
												"id": 1027,
												"nodeType": "Return",
												"src": "1066:15:5"
											}
										]
									},
									"id": 1029,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_msgData",
									"nameLocation": "998:8:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1021,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1006:2:5"
									},
									"returnParameters": {
										"id": 1024,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1023,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1029,
												"src": "1040:14:5",
												"stateVariable": false,
												"storageLocation": "calldata",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_calldata_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1022,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "1040:5:5",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1039:16:5"
									},
									"scope": 1038,
									"src": "989:99:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1036,
										"nodeType": "Block",
										"src": "1166:25:5",
										"statements": [
											{
												"expression": {
													"hexValue": "30",
													"id": 1034,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1183:1:5",
													"typeDescriptions": {
														"typeIdentifier": "t_rational_0_by_1",
														"typeString": "int_const 0"
													},
													"value": "0"
												},
												"functionReturnParameters": 1033,
												"id": 1035,
												"nodeType": "Return",
												"src": "1176:8:5"
											}
										]
									},
									"id": 1037,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_contextSuffixLength",
									"nameLocation": "1103:20:5",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1030,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1123:2:5"
									},
									"returnParameters": {
										"id": 1033,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1032,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1037,
												"src": "1157:7:5",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1031,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1157:7:5",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1156:9:5"
									},
									"scope": 1038,
									"src": "1094:97:5",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1039,
							"src": "688:505:5",
							"usedErrors": [
								379,
								382
							],
							"usedEvents": [
								387
							]
						}
					],
					"src": "101:1093:5"
				},
				"id": 5
			},
			"@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
					"exportedSymbols": {
						"ContextUpgradeable": [
							1038
						],
						"Initializable": [
							616
						],
						"PausableUpgradeable": [
							1214
						]
					},
					"id": 1215,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1040,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "102:24:6"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/ContextUpgradeable.sol",
							"file": "../utils/ContextUpgradeable.sol",
							"id": 1042,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1215,
							"sourceUnit": 1039,
							"src": "128:67:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1041,
										"name": "ContextUpgradeable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1038,
										"src": "136:18:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../proxy/utils/Initializable.sol",
							"id": 1044,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1215,
							"sourceUnit": 617,
							"src": "196:63:6",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1043,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 616,
										"src": "204:13:6",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1046,
										"name": "Initializable",
										"nameLocations": [
											"742:13:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 616,
										"src": "742:13:6"
									},
									"id": 1047,
									"nodeType": "InheritanceSpecifier",
									"src": "742:13:6"
								},
								{
									"baseName": {
										"id": 1048,
										"name": "ContextUpgradeable",
										"nameLocations": [
											"757:18:6"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1038,
										"src": "757:18:6"
									},
									"id": 1049,
									"nodeType": "InheritanceSpecifier",
									"src": "757:18:6"
								}
							],
							"canonicalName": "PausableUpgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1045,
								"nodeType": "StructuredDocumentation",
								"src": "261:439:6",
								"text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This module is used through inheritance. It will make available the\n modifiers `whenNotPaused` and `whenPaused`, which can be applied to\n the functions of your contract. Note that they will not be pausable by\n simply including this module, only once the modifiers are put in place."
							},
							"fullyImplemented": true,
							"id": 1214,
							"linearizedBaseContracts": [
								1214,
								1038,
								616
							],
							"name": "PausableUpgradeable",
							"nameLocation": "719:19:6",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "PausableUpgradeable.PausableStorage",
									"documentation": {
										"id": 1050,
										"nodeType": "StructuredDocumentation",
										"src": "782:66:6",
										"text": "@custom:storage-location erc7201:openzeppelin.storage.Pausable"
									},
									"id": 1053,
									"members": [
										{
											"constant": false,
											"id": 1052,
											"mutability": "mutable",
											"name": "_paused",
											"nameLocation": "891:7:6",
											"nodeType": "VariableDeclaration",
											"scope": 1053,
											"src": "886:12:6",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1051,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "886:4:6",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "PausableStorage",
									"nameLocation": "860:15:6",
									"nodeType": "StructDefinition",
									"scope": 1214,
									"src": "853:52:6",
									"visibility": "public"
								},
								{
									"constant": true,
									"id": 1056,
									"mutability": "constant",
									"name": "PausableStorageLocation",
									"nameLocation": "1048:23:6",
									"nodeType": "VariableDeclaration",
									"scope": 1214,
									"src": "1023:117:6",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1054,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1023:7:6",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307863643565643135633665313837653737653961656538383138346332316634663231383261623538323763623362376530376662656463643633663033333030",
										"id": 1055,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1074:66:6",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_92891662540554778686986514950364265630913525426840345632122912437671245656832_by_1",
											"typeString": "int_const 9289...(69 digits omitted)...6832"
										},
										"value": "0xcd5ed15c6e187e77e9aee88184c21f4f2182ab5827cb3b7e07fbedcd63f03300"
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 1063,
										"nodeType": "Block",
										"src": "1227:82:6",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1246:57:6",
													"nodeType": "YulBlock",
													"src": "1246:57:6",
													"statements": [
														{
															"nativeSrc": "1260:33:6",
															"nodeType": "YulAssignment",
															"src": "1260:33:6",
															"value": {
																"name": "PausableStorageLocation",
																"nativeSrc": "1270:23:6",
																"nodeType": "YulIdentifier",
																"src": "1270:23:6"
															},
															"variableNames": [
																{
																	"name": "$.slot",
																	"nativeSrc": "1260:6:6",
																	"nodeType": "YulIdentifier",
																	"src": "1260:6:6"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1060,
														"isOffset": false,
														"isSlot": true,
														"src": "1260:6:6",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1056,
														"isOffset": false,
														"isSlot": false,
														"src": "1270:23:6",
														"valueSize": 1
													}
												],
												"id": 1062,
												"nodeType": "InlineAssembly",
												"src": "1237:66:6"
											}
										]
									},
									"id": 1064,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_getPausableStorage",
									"nameLocation": "1156:19:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1057,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1175:2:6"
									},
									"returnParameters": {
										"id": 1061,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1060,
												"mutability": "mutable",
												"name": "$",
												"nameLocation": "1224:1:6",
												"nodeType": "VariableDeclaration",
												"scope": 1064,
												"src": "1200:25:6",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_PausableStorage_$1053_storage_ptr",
													"typeString": "struct PausableUpgradeable.PausableStorage"
												},
												"typeName": {
													"id": 1059,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1058,
														"name": "PausableStorage",
														"nameLocations": [
															"1200:15:6"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1053,
														"src": "1200:15:6"
													},
													"referencedDeclaration": 1053,
													"src": "1200:15:6",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PausableStorage_$1053_storage_ptr",
														"typeString": "struct PausableUpgradeable.PausableStorage"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1199:27:6"
									},
									"scope": 1214,
									"src": "1147:162:6",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1065,
										"nodeType": "StructuredDocumentation",
										"src": "1315:73:6",
										"text": " @dev Emitted when the pause is triggered by `account`."
									},
									"eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
									"id": 1069,
									"name": "Paused",
									"nameLocation": "1399:6:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1068,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1067,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1414:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1069,
												"src": "1406:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1066,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1406:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1405:17:6"
									},
									"src": "1393:30:6"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1070,
										"nodeType": "StructuredDocumentation",
										"src": "1429:70:6",
										"text": " @dev Emitted when the pause is lifted by `account`."
									},
									"eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
									"id": 1074,
									"name": "Unpaused",
									"nameLocation": "1510:8:6",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1073,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1072,
												"indexed": false,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1527:7:6",
												"nodeType": "VariableDeclaration",
												"scope": 1074,
												"src": "1519:15:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1071,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1519:7:6",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1518:17:6"
									},
									"src": "1504:32:6"
								},
								{
									"documentation": {
										"id": 1075,
										"nodeType": "StructuredDocumentation",
										"src": "1542:76:6",
										"text": " @dev The operation failed because the contract is paused."
									},
									"errorSelector": "d93c0665",
									"id": 1077,
									"name": "EnforcedPause",
									"nameLocation": "1629:13:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1076,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1642:2:6"
									},
									"src": "1623:22:6"
								},
								{
									"documentation": {
										"id": 1078,
										"nodeType": "StructuredDocumentation",
										"src": "1651:80:6",
										"text": " @dev The operation failed because the contract is not paused."
									},
									"errorSelector": "8dfc202b",
									"id": 1080,
									"name": "ExpectedPause",
									"nameLocation": "1742:13:6",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1079,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1755:2:6"
									},
									"src": "1736:22:6"
								},
								{
									"body": {
										"id": 1089,
										"nodeType": "Block",
										"src": "1889:44:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1086,
														"name": "__Pausable_init_unchained",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1108,
														"src": "1899:25:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 1087,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1899:27:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1088,
												"nodeType": "ExpressionStatement",
												"src": "1899:27:6"
											}
										]
									},
									"documentation": {
										"id": 1081,
										"nodeType": "StructuredDocumentation",
										"src": "1764:67:6",
										"text": " @dev Initializes the contract in unpaused state."
									},
									"id": 1090,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1084,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1083,
												"name": "onlyInitializing",
												"nameLocations": [
													"1872:16:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "1872:16:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1872:16:6"
										}
									],
									"name": "__Pausable_init",
									"nameLocation": "1845:15:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1082,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1860:2:6"
									},
									"returnParameters": {
										"id": 1085,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1889:0:6"
									},
									"scope": 1214,
									"src": "1836:97:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1107,
										"nodeType": "Block",
										"src": "2002:93:6",
										"statements": [
											{
												"assignments": [
													1097
												],
												"declarations": [
													{
														"constant": false,
														"id": 1097,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2036:1:6",
														"nodeType": "VariableDeclaration",
														"scope": 1107,
														"src": "2012:25:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PausableStorage_$1053_storage_ptr",
															"typeString": "struct PausableUpgradeable.PausableStorage"
														},
														"typeName": {
															"id": 1096,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1095,
																"name": "PausableStorage",
																"nameLocations": [
																	"2012:15:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1053,
																"src": "2012:15:6"
															},
															"referencedDeclaration": 1053,
															"src": "2012:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PausableStorage_$1053_storage_ptr",
																"typeString": "struct PausableUpgradeable.PausableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1100,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1098,
														"name": "_getPausableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1064,
														"src": "2040:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$1053_storage_ptr_$",
															"typeString": "function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"
														}
													},
													"id": 1099,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2040:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PausableStorage_$1053_storage_ptr",
														"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2012:49:6"
											},
											{
												"expression": {
													"id": 1105,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1101,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1097,
															"src": "2071:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PausableStorage_$1053_storage_ptr",
																"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
															}
														},
														"id": 1103,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2073:7:6",
														"memberName": "_paused",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1052,
														"src": "2071:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1104,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2083:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "2071:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1106,
												"nodeType": "ExpressionStatement",
												"src": "2071:17:6"
											}
										]
									},
									"id": 1108,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1093,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1092,
												"name": "onlyInitializing",
												"nameLocations": [
													"1985:16:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "1985:16:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "1985:16:6"
										}
									],
									"name": "__Pausable_init_unchained",
									"nameLocation": "1948:25:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1091,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1973:2:6"
									},
									"returnParameters": {
										"id": 1094,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2002:0:6"
									},
									"scope": 1214,
									"src": "1939:156:6",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1115,
										"nodeType": "Block",
										"src": "2306:47:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1111,
														"name": "_requireNotPaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1152,
														"src": "2316:17:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1112,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2316:19:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1113,
												"nodeType": "ExpressionStatement",
												"src": "2316:19:6"
											},
											{
												"id": 1114,
												"nodeType": "PlaceholderStatement",
												"src": "2345:1:6"
											}
										]
									},
									"documentation": {
										"id": 1109,
										"nodeType": "StructuredDocumentation",
										"src": "2101:175:6",
										"text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
									},
									"id": 1116,
									"name": "whenNotPaused",
									"nameLocation": "2290:13:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1110,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2303:2:6"
									},
									"src": "2281:72:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1123,
										"nodeType": "Block",
										"src": "2553:44:6",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1119,
														"name": "_requirePaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1165,
														"src": "2563:14:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$__$",
															"typeString": "function () view"
														}
													},
													"id": 1120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2563:16:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1121,
												"nodeType": "ExpressionStatement",
												"src": "2563:16:6"
											},
											{
												"id": 1122,
												"nodeType": "PlaceholderStatement",
												"src": "2589:1:6"
											}
										]
									},
									"documentation": {
										"id": 1117,
										"nodeType": "StructuredDocumentation",
										"src": "2359:167:6",
										"text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
									},
									"id": 1124,
									"name": "whenPaused",
									"nameLocation": "2540:10:6",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 1118,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2550:2:6"
									},
									"src": "2531:66:6",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1139,
										"nodeType": "Block",
										"src": "2745:92:6",
										"statements": [
											{
												"assignments": [
													1132
												],
												"declarations": [
													{
														"constant": false,
														"id": 1132,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "2779:1:6",
														"nodeType": "VariableDeclaration",
														"scope": 1139,
														"src": "2755:25:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PausableStorage_$1053_storage_ptr",
															"typeString": "struct PausableUpgradeable.PausableStorage"
														},
														"typeName": {
															"id": 1131,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1130,
																"name": "PausableStorage",
																"nameLocations": [
																	"2755:15:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1053,
																"src": "2755:15:6"
															},
															"referencedDeclaration": 1053,
															"src": "2755:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PausableStorage_$1053_storage_ptr",
																"typeString": "struct PausableUpgradeable.PausableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1135,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1133,
														"name": "_getPausableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1064,
														"src": "2783:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$1053_storage_ptr_$",
															"typeString": "function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"
														}
													},
													"id": 1134,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2783:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PausableStorage_$1053_storage_ptr",
														"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "2755:49:6"
											},
											{
												"expression": {
													"expression": {
														"id": 1136,
														"name": "$",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1132,
														"src": "2821:1:6",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PausableStorage_$1053_storage_ptr",
															"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
														}
													},
													"id": 1137,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2823:7:6",
													"memberName": "_paused",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1052,
													"src": "2821:9:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1129,
												"id": 1138,
												"nodeType": "Return",
												"src": "2814:16:6"
											}
										]
									},
									"documentation": {
										"id": 1125,
										"nodeType": "StructuredDocumentation",
										"src": "2603:84:6",
										"text": " @dev Returns true if the contract is paused, and false otherwise."
									},
									"functionSelector": "5c975abb",
									"id": 1140,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "paused",
									"nameLocation": "2701:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1126,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2707:2:6"
									},
									"returnParameters": {
										"id": 1129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1128,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1140,
												"src": "2739:4:6",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1127,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "2739:4:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2738:6:6"
									},
									"scope": 1214,
									"src": "2692:145:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								},
								{
									"body": {
										"id": 1151,
										"nodeType": "Block",
										"src": "2956:77:6",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1144,
														"name": "paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1140,
														"src": "2970:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
															"typeString": "function () view returns (bool)"
														}
													},
													"id": 1145,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2970:8:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1150,
												"nodeType": "IfStatement",
												"src": "2966:61:6",
												"trueBody": {
													"id": 1149,
													"nodeType": "Block",
													"src": "2980:47:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1146,
																	"name": "EnforcedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1077,
																	"src": "3001:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1147,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3001:15:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1148,
															"nodeType": "RevertStatement",
															"src": "2994:22:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1141,
										"nodeType": "StructuredDocumentation",
										"src": "2843:57:6",
										"text": " @dev Throws if the contract is paused."
									},
									"id": 1152,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requireNotPaused",
									"nameLocation": "2914:17:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1142,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2931:2:6"
									},
									"returnParameters": {
										"id": 1143,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2956:0:6"
									},
									"scope": 1214,
									"src": "2905:128:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1164,
										"nodeType": "Block",
										"src": "3153:78:6",
										"statements": [
											{
												"condition": {
													"id": 1158,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "3167:9:6",
													"subExpression": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"id": 1156,
															"name": "paused",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1140,
															"src": "3168:6:6",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
																"typeString": "function () view returns (bool)"
															}
														},
														"id": 1157,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3168:8:6",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1163,
												"nodeType": "IfStatement",
												"src": "3163:62:6",
												"trueBody": {
													"id": 1162,
													"nodeType": "Block",
													"src": "3178:47:6",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1159,
																	"name": "ExpectedPause",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1080,
																	"src": "3199:13:6",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1160,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3199:15:6",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1161,
															"nodeType": "RevertStatement",
															"src": "3192:22:6"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1153,
										"nodeType": "StructuredDocumentation",
										"src": "3039:61:6",
										"text": " @dev Throws if the contract is not paused."
									},
									"id": 1165,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_requirePaused",
									"nameLocation": "3114:14:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1154,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3128:2:6"
									},
									"returnParameters": {
										"id": 1155,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3153:0:6"
									},
									"scope": 1214,
									"src": "3105:126:6",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1188,
										"nodeType": "Block",
										"src": "3415:127:6",
										"statements": [
											{
												"assignments": [
													1173
												],
												"declarations": [
													{
														"constant": false,
														"id": 1173,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3449:1:6",
														"nodeType": "VariableDeclaration",
														"scope": 1188,
														"src": "3425:25:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PausableStorage_$1053_storage_ptr",
															"typeString": "struct PausableUpgradeable.PausableStorage"
														},
														"typeName": {
															"id": 1172,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1171,
																"name": "PausableStorage",
																"nameLocations": [
																	"3425:15:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1053,
																"src": "3425:15:6"
															},
															"referencedDeclaration": 1053,
															"src": "3425:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PausableStorage_$1053_storage_ptr",
																"typeString": "struct PausableUpgradeable.PausableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1176,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1174,
														"name": "_getPausableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1064,
														"src": "3453:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$1053_storage_ptr_$",
															"typeString": "function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"
														}
													},
													"id": 1175,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3453:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PausableStorage_$1053_storage_ptr",
														"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3425:49:6"
											},
											{
												"expression": {
													"id": 1181,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1177,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1173,
															"src": "3484:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PausableStorage_$1053_storage_ptr",
																"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
															}
														},
														"id": 1179,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3486:7:6",
														"memberName": "_paused",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1052,
														"src": "3484:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 1180,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3496:4:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "3484:16:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1182,
												"nodeType": "ExpressionStatement",
												"src": "3484:16:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1184,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1020,
																"src": "3522:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1185,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3522:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1183,
														"name": "Paused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1069,
														"src": "3515:6:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1186,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3515:20:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1187,
												"nodeType": "EmitStatement",
												"src": "3510:25:6"
											}
										]
									},
									"documentation": {
										"id": 1166,
										"nodeType": "StructuredDocumentation",
										"src": "3237:124:6",
										"text": " @dev Triggers stopped state.\n Requirements:\n - The contract must not be paused."
									},
									"id": 1189,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1169,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1168,
												"name": "whenNotPaused",
												"nameLocations": [
													"3401:13:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1116,
												"src": "3401:13:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "3401:13:6"
										}
									],
									"name": "_pause",
									"nameLocation": "3375:6:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1167,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3381:2:6"
									},
									"returnParameters": {
										"id": 1170,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3415:0:6"
									},
									"scope": 1214,
									"src": "3366:176:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1212,
										"nodeType": "Block",
										"src": "3722:130:6",
										"statements": [
											{
												"assignments": [
													1197
												],
												"declarations": [
													{
														"constant": false,
														"id": 1197,
														"mutability": "mutable",
														"name": "$",
														"nameLocation": "3756:1:6",
														"nodeType": "VariableDeclaration",
														"scope": 1212,
														"src": "3732:25:6",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_PausableStorage_$1053_storage_ptr",
															"typeString": "struct PausableUpgradeable.PausableStorage"
														},
														"typeName": {
															"id": 1196,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 1195,
																"name": "PausableStorage",
																"nameLocations": [
																	"3732:15:6"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 1053,
																"src": "3732:15:6"
															},
															"referencedDeclaration": 1053,
															"src": "3732:15:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PausableStorage_$1053_storage_ptr",
																"typeString": "struct PausableUpgradeable.PausableStorage"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1200,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 1198,
														"name": "_getPausableStorage",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1064,
														"src": "3760:19:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_PausableStorage_$1053_storage_ptr_$",
															"typeString": "function () pure returns (struct PausableUpgradeable.PausableStorage storage pointer)"
														}
													},
													"id": 1199,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3760:21:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_PausableStorage_$1053_storage_ptr",
														"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3732:49:6"
											},
											{
												"expression": {
													"id": 1205,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 1201,
															"name": "$",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1197,
															"src": "3791:1:6",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_PausableStorage_$1053_storage_ptr",
																"typeString": "struct PausableUpgradeable.PausableStorage storage pointer"
															}
														},
														"id": 1203,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3793:7:6",
														"memberName": "_paused",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1052,
														"src": "3791:9:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 1204,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3803:5:6",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "3791:17:6",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1206,
												"nodeType": "ExpressionStatement",
												"src": "3791:17:6"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1208,
																"name": "_msgSender",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1020,
																"src": "3832:10:6",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1209,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3832:12:6",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1207,
														"name": "Unpaused",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1074,
														"src": "3823:8:6",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1210,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3823:22:6",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1211,
												"nodeType": "EmitStatement",
												"src": "3818:27:6"
											}
										]
									},
									"documentation": {
										"id": 1190,
										"nodeType": "StructuredDocumentation",
										"src": "3548:121:6",
										"text": " @dev Returns to normal state.\n Requirements:\n - The contract must be paused."
									},
									"id": 1213,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1193,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1192,
												"name": "whenPaused",
												"nameLocations": [
													"3711:10:6"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1124,
												"src": "3711:10:6"
											},
											"nodeType": "ModifierInvocation",
											"src": "3711:10:6"
										}
									],
									"name": "_unpause",
									"nameLocation": "3683:8:6",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1191,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3691:2:6"
									},
									"returnParameters": {
										"id": 1194,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3722:0:6"
									},
									"scope": 1214,
									"src": "3674:178:6",
									"stateMutability": "nonpayable",
									"virtual": true,
									"visibility": "internal"
								}
							],
							"scope": 1215,
							"src": "701:3153:6",
							"usedErrors": [
								379,
								382,
								1077,
								1080
							],
							"usedEvents": [
								387,
								1069,
								1074
							]
						}
					],
					"src": "102:3753:6"
				},
				"id": 6
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/ERC165Upgradeable.sol",
					"exportedSymbols": {
						"ERC165Upgradeable": [
							1254
						],
						"IERC165": [
							2047
						],
						"Initializable": [
							616
						]
					},
					"id": 1255,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1216,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:7"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"file": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
							"id": 1218,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1255,
							"sourceUnit": 2048,
							"src": "140:80:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1217,
										"name": "IERC165",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2047,
										"src": "148:7:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "../../proxy/utils/Initializable.sol",
							"id": 1220,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1255,
							"sourceUnit": 617,
							"src": "221:66:7",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1219,
										"name": "Initializable",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 616,
										"src": "229:13:7",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": true,
							"baseContracts": [
								{
									"baseName": {
										"id": 1222,
										"name": "Initializable",
										"nameLocations": [
											"807:13:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 616,
										"src": "807:13:7"
									},
									"id": 1223,
									"nodeType": "InheritanceSpecifier",
									"src": "807:13:7"
								},
								{
									"baseName": {
										"id": 1224,
										"name": "IERC165",
										"nameLocations": [
											"822:7:7"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 2047,
										"src": "822:7:7"
									},
									"id": 1225,
									"nodeType": "InheritanceSpecifier",
									"src": "822:7:7"
								}
							],
							"canonicalName": "ERC165Upgradeable",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 1221,
								"nodeType": "StructuredDocumentation",
								"src": "289:478:7",
								"text": " @dev Implementation of the {IERC165} interface.\n Contracts that want to implement ERC165 should inherit from this contract and override {supportsInterface} to check\n for the additional interface id that will be supported. For example:\n ```solidity\n function supportsInterface(bytes4 interfaceId) public view virtual override returns (bool) {\n     return interfaceId == type(MyInterface).interfaceId || super.supportsInterface(interfaceId);\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 1254,
							"linearizedBaseContracts": [
								1254,
								2047,
								616
							],
							"name": "ERC165Upgradeable",
							"nameLocation": "786:17:7",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 1230,
										"nodeType": "Block",
										"src": "887:7:7",
										"statements": []
									},
									"id": 1231,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1228,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1227,
												"name": "onlyInitializing",
												"nameLocations": [
													"870:16:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "870:16:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "870:16:7"
										}
									],
									"name": "__ERC165_init",
									"nameLocation": "845:13:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1226,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "858:2:7"
									},
									"returnParameters": {
										"id": 1229,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "887:0:7"
									},
									"scope": 1254,
									"src": "836:58:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1236,
										"nodeType": "Block",
										"src": "961:7:7",
										"statements": []
									},
									"id": 1237,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 1234,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 1233,
												"name": "onlyInitializing",
												"nameLocations": [
													"944:16:7"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 525,
												"src": "944:16:7"
											},
											"nodeType": "ModifierInvocation",
											"src": "944:16:7"
										}
									],
									"name": "__ERC165_init_unchained",
									"nameLocation": "909:23:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1232,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "932:2:7"
									},
									"returnParameters": {
										"id": 1235,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "961:0:7"
									},
									"scope": 1254,
									"src": "900:68:7",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										2046
									],
									"body": {
										"id": 1252,
										"nodeType": "Block",
										"src": "1116:64:7",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													},
													"id": 1250,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1245,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1240,
														"src": "1133:11:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1247,
																	"name": "IERC165",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2047,
																	"src": "1153:7:7",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2047_$",
																		"typeString": "type(contract IERC165)"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_type$_t_contract$_IERC165_$2047_$",
																		"typeString": "type(contract IERC165)"
																	}
																],
																"id": 1246,
																"name": "type",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967269,
																"src": "1148:4:7",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_metatype_pure$__$returns$__$",
																	"typeString": "function () pure"
																}
															},
															"id": 1248,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1148:13:7",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_magic_meta_type_t_contract$_IERC165_$2047",
																"typeString": "type(contract IERC165)"
															}
														},
														"id": 1249,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"memberLocation": "1162:11:7",
														"memberName": "interfaceId",
														"nodeType": "MemberAccess",
														"src": "1148:25:7",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"src": "1133:40:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 1244,
												"id": 1251,
												"nodeType": "Return",
												"src": "1126:47:7"
											}
										]
									},
									"documentation": {
										"id": 1238,
										"nodeType": "StructuredDocumentation",
										"src": "973:56:7",
										"text": " @dev See {IERC165-supportsInterface}."
									},
									"functionSelector": "01ffc9a7",
									"id": 1253,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "1043:17:7",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1240,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "1068:11:7",
												"nodeType": "VariableDeclaration",
												"scope": 1253,
												"src": "1061:18:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1239,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "1061:6:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1060:20:7"
									},
									"returnParameters": {
										"id": 1244,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1243,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1253,
												"src": "1110:4:7",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1242,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1110:4:7",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1109:6:7"
									},
									"scope": 1254,
									"src": "1034:146:7",
									"stateMutability": "view",
									"virtual": true,
									"visibility": "public"
								}
							],
							"scope": 1255,
							"src": "768:414:7",
							"usedErrors": [
								379,
								382
							],
							"usedEvents": [
								387
							]
						}
					],
					"src": "114:1069:7"
				},
				"id": 7
			},
			"@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts-upgradeable/utils/introspection/IERC165Upgradeable.sol",
					"exportedSymbols": {
						"IERC165Upgradeable": [
							1266
						]
					},
					"id": 1267,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1256,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "100:23:8"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165Upgradeable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1257,
								"nodeType": "StructuredDocumentation",
								"src": "125:279:8",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 1266,
							"linearizedBaseContracts": [
								1266
							],
							"name": "IERC165Upgradeable",
							"nameLocation": "415:18:8",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1258,
										"nodeType": "StructuredDocumentation",
										"src": "440:340:8",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 1265,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "794:17:8",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1261,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1260,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "819:11:8",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "812:18:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 1259,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "812:6:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "811:20:8"
									},
									"returnParameters": {
										"id": 1264,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1263,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1265,
												"src": "855:4:8",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1262,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "855:4:8",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "854:6:8"
									},
									"scope": 1266,
									"src": "785:76:8",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1267,
							"src": "405:458:8",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "100:764:8"
				},
				"id": 8
			},
			"@openzeppelin/contracts/access/IAccessControl.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/access/IAccessControl.sol",
					"exportedSymbols": {
						"IAccessControl": [
							1349
						]
					},
					"id": 1350,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1268,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "109:24:9"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IAccessControl",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1269,
								"nodeType": "StructuredDocumentation",
								"src": "135:89:9",
								"text": " @dev External interface of AccessControl declared to support ERC165 detection."
							},
							"fullyImplemented": false,
							"id": 1349,
							"linearizedBaseContracts": [
								1349
							],
							"name": "IAccessControl",
							"nameLocation": "235:14:9",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1270,
										"nodeType": "StructuredDocumentation",
										"src": "256:56:9",
										"text": " @dev The `account` is missing a role."
									},
									"errorSelector": "e2517d3f",
									"id": 1276,
									"name": "AccessControlUnauthorizedAccount",
									"nameLocation": "323:32:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1275,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1272,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "364:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1276,
												"src": "356:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1271,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "356:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1274,
												"mutability": "mutable",
												"name": "neededRole",
												"nameLocation": "381:10:9",
												"nodeType": "VariableDeclaration",
												"scope": 1276,
												"src": "373:18:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1273,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "373:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "355:37:9"
									},
									"src": "317:76:9"
								},
								{
									"documentation": {
										"id": 1277,
										"nodeType": "StructuredDocumentation",
										"src": "399:148:9",
										"text": " @dev The caller of a function is not the expected one.\n NOTE: Don't confuse with {AccessControlUnauthorizedAccount}."
									},
									"errorSelector": "6697b232",
									"id": 1279,
									"name": "AccessControlBadConfirmation",
									"nameLocation": "558:28:9",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1278,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "586:2:9"
									},
									"src": "552:37:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1280,
										"nodeType": "StructuredDocumentation",
										"src": "595:254:9",
										"text": " @dev Emitted when `newAdminRole` is set as ``role``'s admin role, replacing `previousAdminRole`\n `DEFAULT_ADMIN_ROLE` is the starting admin for all roles, despite\n {RoleAdminChanged} not being emitted signaling this."
									},
									"eventSelector": "bd79b86ffe0ab8e8776151514217cd7cacd52c909f66475c3af44e129f0b00ff",
									"id": 1288,
									"name": "RoleAdminChanged",
									"nameLocation": "860:16:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1287,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1282,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "893:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "877:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1281,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "877:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1284,
												"indexed": true,
												"mutability": "mutable",
												"name": "previousAdminRole",
												"nameLocation": "915:17:9",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "899:33:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1283,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "899:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1286,
												"indexed": true,
												"mutability": "mutable",
												"name": "newAdminRole",
												"nameLocation": "950:12:9",
												"nodeType": "VariableDeclaration",
												"scope": 1288,
												"src": "934:28:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1285,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "934:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:87:9"
									},
									"src": "854:110:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1289,
										"nodeType": "StructuredDocumentation",
										"src": "970:212:9",
										"text": " @dev Emitted when `account` is granted `role`.\n `sender` is the account that originated the contract call, an admin role\n bearer except when using {AccessControl-_setupRole}."
									},
									"eventSelector": "2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d",
									"id": 1297,
									"name": "RoleGranted",
									"nameLocation": "1193:11:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1296,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1291,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1221:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "1205:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1290,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1205:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1293,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1243:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "1227:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1292,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1227:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1295,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1268:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1297,
												"src": "1252:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1294,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1252:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1204:71:9"
									},
									"src": "1187:89:9"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1298,
										"nodeType": "StructuredDocumentation",
										"src": "1282:275:9",
										"text": " @dev Emitted when `account` is revoked `role`.\n `sender` is the account that originated the contract call:\n   - if using `revokeRole`, it is the admin role bearer\n   - if using `renounceRole`, it is the role bearer (i.e. `account`)"
									},
									"eventSelector": "f6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b",
									"id": 1306,
									"name": "RoleRevoked",
									"nameLocation": "1568:11:9",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1305,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1300,
												"indexed": true,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1596:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1306,
												"src": "1580:20:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1299,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1580:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1302,
												"indexed": true,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1618:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1306,
												"src": "1602:23:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1301,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1602:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1304,
												"indexed": true,
												"mutability": "mutable",
												"name": "sender",
												"nameLocation": "1643:6:9",
												"nodeType": "VariableDeclaration",
												"scope": 1306,
												"src": "1627:22:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1303,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1627:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1579:71:9"
									},
									"src": "1562:89:9"
								},
								{
									"documentation": {
										"id": 1307,
										"nodeType": "StructuredDocumentation",
										"src": "1657:76:9",
										"text": " @dev Returns `true` if `account` has been granted `role`."
									},
									"functionSelector": "91d14854",
									"id": 1316,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "hasRole",
									"nameLocation": "1747:7:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1312,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1309,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "1763:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1316,
												"src": "1755:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1308,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1755:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1311,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "1777:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1316,
												"src": "1769:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1310,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1769:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1754:31:9"
									},
									"returnParameters": {
										"id": 1315,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1314,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1316,
												"src": "1809:4:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1313,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "1809:4:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1808:6:9"
									},
									"scope": 1349,
									"src": "1738:77:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1317,
										"nodeType": "StructuredDocumentation",
										"src": "1821:184:9",
										"text": " @dev Returns the admin role that controls `role`. See {grantRole} and\n {revokeRole}.\n To change a role's admin, use {AccessControl-_setRoleAdmin}."
									},
									"functionSelector": "248a9ca3",
									"id": 1324,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "getRoleAdmin",
									"nameLocation": "2019:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1320,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1319,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2040:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "2032:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1318,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2032:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2031:14:9"
									},
									"returnParameters": {
										"id": 1323,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1322,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1324,
												"src": "2069:7:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1321,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2069:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2068:9:9"
									},
									"scope": 1349,
									"src": "2010:68:9",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1325,
										"nodeType": "StructuredDocumentation",
										"src": "2084:239:9",
										"text": " @dev Grants `role` to `account`.\n If `account` had not been already granted `role`, emits a {RoleGranted}\n event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "2f2ff15d",
									"id": 1332,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "grantRole",
									"nameLocation": "2337:9:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1330,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1327,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2355:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1332,
												"src": "2347:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1326,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2347:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1329,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2369:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1332,
												"src": "2361:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1328,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2361:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2346:31:9"
									},
									"returnParameters": {
										"id": 1331,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2386:0:9"
									},
									"scope": 1349,
									"src": "2328:59:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1333,
										"nodeType": "StructuredDocumentation",
										"src": "2393:223:9",
										"text": " @dev Revokes `role` from `account`.\n If `account` had been granted `role`, emits a {RoleRevoked} event.\n Requirements:\n - the caller must have ``role``'s admin role."
									},
									"functionSelector": "d547741f",
									"id": 1340,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "revokeRole",
									"nameLocation": "2630:10:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1338,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1335,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "2649:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "2641:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1334,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2641:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1337,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "2663:7:9",
												"nodeType": "VariableDeclaration",
												"scope": 1340,
												"src": "2655:15:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1336,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2655:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2640:31:9"
									},
									"returnParameters": {
										"id": 1339,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2680:0:9"
									},
									"scope": 1349,
									"src": "2621:60:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"documentation": {
										"id": 1341,
										"nodeType": "StructuredDocumentation",
										"src": "2687:491:9",
										"text": " @dev Revokes `role` from the calling account.\n Roles are often managed via {grantRole} and {revokeRole}: this function's\n purpose is to provide a mechanism for accounts to lose their privileges\n if they are compromised (such as when a trusted device is misplaced).\n If the calling account had been granted `role`, emits a {RoleRevoked}\n event.\n Requirements:\n - the caller must be `callerConfirmation`."
									},
									"functionSelector": "36568abe",
									"id": 1348,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "renounceRole",
									"nameLocation": "3192:12:9",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1346,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1343,
												"mutability": "mutable",
												"name": "role",
												"nameLocation": "3213:4:9",
												"nodeType": "VariableDeclaration",
												"scope": 1348,
												"src": "3205:12:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1342,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3205:7:9",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1345,
												"mutability": "mutable",
												"name": "callerConfirmation",
												"nameLocation": "3227:18:9",
												"nodeType": "VariableDeclaration",
												"scope": 1348,
												"src": "3219:26:9",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1344,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3219:7:9",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3204:42:9"
									},
									"returnParameters": {
										"id": 1347,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3255:0:9"
									},
									"scope": 1349,
									"src": "3183:73:9",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1350,
							"src": "225:3033:9",
							"usedErrors": [
								1276,
								1279
							],
							"usedEvents": [
								1288,
								1297,
								1306
							]
						}
					],
					"src": "109:3150:9"
				},
				"id": 9
			},
			"@openzeppelin/contracts/interfaces/draft-IERC1822.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/interfaces/draft-IERC1822.sol",
					"exportedSymbols": {
						"IERC1822Proxiable": [
							1359
						]
					},
					"id": 1360,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1351,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "113:24:10"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC1822Proxiable",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1352,
								"nodeType": "StructuredDocumentation",
								"src": "139:203:10",
								"text": " @dev ERC1822: Universal Upgradeable Proxy Standard (UUPS) documents a method for upgradeability through a simplified\n proxy whose upgrades are fully controlled by the current implementation."
							},
							"fullyImplemented": false,
							"id": 1359,
							"linearizedBaseContracts": [
								1359
							],
							"name": "IERC1822Proxiable",
							"nameLocation": "353:17:10",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1353,
										"nodeType": "StructuredDocumentation",
										"src": "377:438:10",
										"text": " @dev Returns the storage slot that the proxiable contract assumes is being used to store the implementation\n address.\n IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks\n bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this\n function revert if invoked through a proxy."
									},
									"functionSelector": "52d1902d",
									"id": 1358,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "proxiableUUID",
									"nameLocation": "829:13:10",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1354,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "842:2:10"
									},
									"returnParameters": {
										"id": 1357,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1356,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1358,
												"src": "868:7:10",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1355,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "868:7:10",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "867:9:10"
									},
									"scope": 1359,
									"src": "820:57:10",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1360,
							"src": "343:536:10",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "113:767:10"
				},
				"id": 10
			},
			"@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/ERC1967/ERC1967Utils.sol",
					"exportedSymbols": {
						"Address": [
							1925
						],
						"ERC1967Utils": [
							1662
						],
						"IBeacon": [
							1672
						],
						"StorageSlot": [
							2035
						]
					},
					"id": 1663,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1361,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:11"
						},
						{
							"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
							"file": "../beacon/IBeacon.sol",
							"id": 1363,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1663,
							"sourceUnit": 1673,
							"src": "140:46:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1362,
										"name": "IBeacon",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1672,
										"src": "148:7:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "../../utils/Address.sol",
							"id": 1365,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1663,
							"sourceUnit": 1926,
							"src": "187:48:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1364,
										"name": "Address",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 1925,
										"src": "195:7:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
							"file": "../../utils/StorageSlot.sol",
							"id": 1367,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 1663,
							"sourceUnit": 2036,
							"src": "236:56:11",
							"symbolAliases": [
								{
									"foreign": {
										"id": 1366,
										"name": "StorageSlot",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 2035,
										"src": "244:11:11",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ERC1967Utils",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1368,
								"nodeType": "StructuredDocumentation",
								"src": "294:154:11",
								"text": " @dev This abstract contract provides getters and event emitting update functions for\n https://eips.ethereum.org/EIPS/eip-1967[EIP1967] slots."
							},
							"fullyImplemented": true,
							"id": 1662,
							"linearizedBaseContracts": [
								1662
							],
							"name": "ERC1967Utils",
							"nameLocation": "457:12:11",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"anonymous": false,
									"documentation": {
										"id": 1369,
										"nodeType": "StructuredDocumentation",
										"src": "660:68:11",
										"text": " @dev Emitted when the implementation is upgraded."
									},
									"eventSelector": "bc7cd75a20ee27fd9adebab32041f755214dbc6bffa90cc0225b39da2e5c2d3b",
									"id": 1373,
									"name": "Upgraded",
									"nameLocation": "739:8:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1372,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1371,
												"indexed": true,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "764:14:11",
												"nodeType": "VariableDeclaration",
												"scope": 1373,
												"src": "748:30:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1370,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "748:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "747:32:11"
									},
									"src": "733:47:11"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1374,
										"nodeType": "StructuredDocumentation",
										"src": "786:67:11",
										"text": " @dev Emitted when the admin account has changed."
									},
									"eventSelector": "7e644d79422f17c01e4894b5f4f588d331ebfa28653d42ae832dc59e38c9798f",
									"id": 1380,
									"name": "AdminChanged",
									"nameLocation": "864:12:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1379,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1376,
												"indexed": false,
												"mutability": "mutable",
												"name": "previousAdmin",
												"nameLocation": "885:13:11",
												"nodeType": "VariableDeclaration",
												"scope": 1380,
												"src": "877:21:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1375,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "877:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1378,
												"indexed": false,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "908:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1380,
												"src": "900:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1377,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "900:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "876:41:11"
									},
									"src": "858:60:11"
								},
								{
									"anonymous": false,
									"documentation": {
										"id": 1381,
										"nodeType": "StructuredDocumentation",
										"src": "924:59:11",
										"text": " @dev Emitted when the beacon is changed."
									},
									"eventSelector": "1cf3b03a6cf19fa2baba4df148e9dcabedea7f8a5c07840e207e5c089be95d3e",
									"id": 1385,
									"name": "BeaconUpgraded",
									"nameLocation": "994:14:11",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 1384,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1383,
												"indexed": true,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "1025:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1385,
												"src": "1009:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1382,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1009:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1008:24:11"
									},
									"src": "988:45:11"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1386,
										"nodeType": "StructuredDocumentation",
										"src": "1039:170:11",
										"text": " @dev Storage slot with the address of the current implementation.\n This is the keccak-256 hash of \"eip1967.proxy.implementation\" subtracted by 1."
									},
									"id": 1389,
									"mutability": "constant",
									"name": "IMPLEMENTATION_SLOT",
									"nameLocation": "1305:19:11",
									"nodeType": "VariableDeclaration",
									"scope": 1662,
									"src": "1279:114:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1387,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "1279:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307833363038393461313362613161333231303636376338323834393264623938646361336532303736636333373335613932306133636135303564333832626263",
										"id": 1388,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1327:66:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_24440054405305269366569402256811496959409073762505157381672968839269610695612_by_1",
											"typeString": "int_const 2444...(69 digits omitted)...5612"
										},
										"value": "0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc"
									},
									"visibility": "internal"
								},
								{
									"documentation": {
										"id": 1390,
										"nodeType": "StructuredDocumentation",
										"src": "1400:69:11",
										"text": " @dev The `implementation` of the proxy is invalid."
									},
									"errorSelector": "4c9c8ce3",
									"id": 1394,
									"name": "ERC1967InvalidImplementation",
									"nameLocation": "1480:28:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1393,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1392,
												"mutability": "mutable",
												"name": "implementation",
												"nameLocation": "1517:14:11",
												"nodeType": "VariableDeclaration",
												"scope": 1394,
												"src": "1509:22:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1391,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1509:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1508:24:11"
									},
									"src": "1474:59:11"
								},
								{
									"documentation": {
										"id": 1395,
										"nodeType": "StructuredDocumentation",
										"src": "1539:60:11",
										"text": " @dev The `admin` of the proxy is invalid."
									},
									"errorSelector": "62e77ba2",
									"id": 1399,
									"name": "ERC1967InvalidAdmin",
									"nameLocation": "1610:19:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1398,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1397,
												"mutability": "mutable",
												"name": "admin",
												"nameLocation": "1638:5:11",
												"nodeType": "VariableDeclaration",
												"scope": 1399,
												"src": "1630:13:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1396,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1630:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1629:15:11"
									},
									"src": "1604:41:11"
								},
								{
									"documentation": {
										"id": 1400,
										"nodeType": "StructuredDocumentation",
										"src": "1651:61:11",
										"text": " @dev The `beacon` of the proxy is invalid."
									},
									"errorSelector": "64ced0ec",
									"id": 1404,
									"name": "ERC1967InvalidBeacon",
									"nameLocation": "1723:20:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1403,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1402,
												"mutability": "mutable",
												"name": "beacon",
												"nameLocation": "1752:6:11",
												"nodeType": "VariableDeclaration",
												"scope": 1404,
												"src": "1744:14:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1401,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1744:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1743:16:11"
									},
									"src": "1717:43:11"
								},
								{
									"documentation": {
										"id": 1405,
										"nodeType": "StructuredDocumentation",
										"src": "1766:82:11",
										"text": " @dev An upgrade function sees `msg.value > 0` that may be lost."
									},
									"errorSelector": "b398979f",
									"id": 1407,
									"name": "ERC1967NonPayable",
									"nameLocation": "1859:17:11",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1406,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1876:2:11"
									},
									"src": "1853:26:11"
								},
								{
									"body": {
										"id": 1419,
										"nodeType": "Block",
										"src": "2018:77:11",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1415,
																"name": "IMPLEMENTATION_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1389,
																"src": "2062:19:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1413,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2035,
																"src": "2035:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2035_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 1414,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2047:14:11",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1957,
															"src": "2035:26:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1931_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 1416,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2035:47:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1931_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 1417,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "2083:5:11",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1930,
													"src": "2035:53:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1412,
												"id": 1418,
												"nodeType": "Return",
												"src": "2028:60:11"
											}
										]
									},
									"documentation": {
										"id": 1408,
										"nodeType": "StructuredDocumentation",
										"src": "1885:67:11",
										"text": " @dev Returns the current implementation address."
									},
									"id": 1420,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getImplementation",
									"nameLocation": "1966:17:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1409,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1983:2:11"
									},
									"returnParameters": {
										"id": 1412,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1411,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1420,
												"src": "2009:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1410,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2009:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2008:9:11"
									},
									"scope": 1662,
									"src": "1957:138:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1446,
										"nodeType": "Block",
										"src": "2249:218:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1430,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1426,
																"name": "newImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1423,
																"src": "2263:17:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1427,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "2281:4:11",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "2263:22:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1428,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2286:6:11",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2263:29:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1429,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2296:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2263:34:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1436,
												"nodeType": "IfStatement",
												"src": "2259:119:11",
												"trueBody": {
													"id": 1435,
													"nodeType": "Block",
													"src": "2299:79:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1432,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1423,
																		"src": "2349:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1431,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1394,
																	"src": "2320:28:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1433,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2320:47:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1434,
															"nodeType": "RevertStatement",
															"src": "2313:54:11"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1444,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 1440,
																	"name": "IMPLEMENTATION_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1389,
																	"src": "2414:19:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1437,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2035,
																	"src": "2387:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2035_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 1439,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2399:14:11",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1957,
																"src": "2387:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1931_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 1441,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "2387:47:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1931_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 1442,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "2435:5:11",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1930,
														"src": "2387:53:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1443,
														"name": "newImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1423,
														"src": "2443:17:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "2387:73:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1445,
												"nodeType": "ExpressionStatement",
												"src": "2387:73:11"
											}
										]
									},
									"documentation": {
										"id": 1421,
										"nodeType": "StructuredDocumentation",
										"src": "2101:80:11",
										"text": " @dev Stores a new address in the EIP1967 implementation slot."
									},
									"id": 1447,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setImplementation",
									"nameLocation": "2195:18:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1424,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1423,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2222:17:11",
												"nodeType": "VariableDeclaration",
												"scope": 1447,
												"src": "2214:25:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1422,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2214:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2213:27:11"
									},
									"returnParameters": {
										"id": 1425,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2249:0:11"
									},
									"scope": 1662,
									"src": "2186:281:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1480,
										"nodeType": "Block",
										"src": "2860:254:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1456,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1450,
															"src": "2889:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1455,
														"name": "_setImplementation",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1447,
														"src": "2870:18:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1457,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2870:37:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1458,
												"nodeType": "ExpressionStatement",
												"src": "2870:37:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1460,
															"name": "newImplementation",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1450,
															"src": "2931:17:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1459,
														"name": "Upgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1373,
														"src": "2922:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2922:27:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1462,
												"nodeType": "EmitStatement",
												"src": "2917:32:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1466,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1463,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1452,
															"src": "2964:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1464,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "2969:6:11",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "2964:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1465,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "2978:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "2964:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1478,
													"nodeType": "Block",
													"src": "3065:43:11",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1475,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1661,
																	"src": "3079:16:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1476,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3079:18:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1477,
															"nodeType": "ExpressionStatement",
															"src": "3079:18:11"
														}
													]
												},
												"id": 1479,
												"nodeType": "IfStatement",
												"src": "2960:148:11",
												"trueBody": {
													"id": 1474,
													"nodeType": "Block",
													"src": "2981:78:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1470,
																		"name": "newImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1450,
																		"src": "3024:17:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1471,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1452,
																		"src": "3043:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 1467,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1925,
																		"src": "2995:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$1925_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 1469,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3003:20:11",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1844,
																	"src": "2995:28:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 1472,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "2995:53:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1473,
															"nodeType": "ExpressionStatement",
															"src": "2995:53:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1448,
										"nodeType": "StructuredDocumentation",
										"src": "2473:301:11",
										"text": " @dev Performs implementation upgrade with additional setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-Upgraded} event."
									},
									"id": 1481,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeToAndCall",
									"nameLocation": "2788:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1453,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1450,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "2813:17:11",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "2805:25:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1449,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2805:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1452,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2845:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1481,
												"src": "2832:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1451,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2832:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2804:46:11"
									},
									"returnParameters": {
										"id": 1454,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2860:0:11"
									},
									"scope": 1662,
									"src": "2779:335:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1482,
										"nodeType": "StructuredDocumentation",
										"src": "3120:145:11",
										"text": " @dev Storage slot with the admin of the contract.\n This is the keccak-256 hash of \"eip1967.proxy.admin\" subtracted by 1."
									},
									"id": 1485,
									"mutability": "constant",
									"name": "ADMIN_SLOT",
									"nameLocation": "3361:10:11",
									"nodeType": "VariableDeclaration",
									"scope": 1662,
									"src": "3335:105:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1483,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "3335:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307862353331323736383461353638623331373361653133623966386136303136653234336536336236653865653131373864366137313738353062356436313033",
										"id": 1484,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "3374:66:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_81955473079516046949633743016697847541294818689821282749996681496272635257091_by_1",
											"typeString": "int_const 8195...(69 digits omitted)...7091"
										},
										"value": "0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1497,
										"nodeType": "Block",
										"src": "3844:68:11",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1493,
																"name": "ADMIN_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1485,
																"src": "3888:10:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1491,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2035,
																"src": "3861:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2035_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 1492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3873:14:11",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1957,
															"src": "3861:26:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1931_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 1494,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "3861:38:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1931_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 1495,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "3900:5:11",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1930,
													"src": "3861:44:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1490,
												"id": 1496,
												"nodeType": "Return",
												"src": "3854:51:11"
											}
										]
									},
									"documentation": {
										"id": 1486,
										"nodeType": "StructuredDocumentation",
										"src": "3447:340:11",
										"text": " @dev Returns the current admin.\n TIP: To get this value clients can read directly from the storage slot shown below (specified by EIP1967) using\n the https://eth.wiki/json-rpc/API#eth_getstorageat[`eth_getStorageAt`] RPC call.\n `0xb53127684a568b3173ae13b9f8a6016e243e63b6e8ee1178d6a717850b5d6103`"
									},
									"id": 1498,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAdmin",
									"nameLocation": "3801:8:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1487,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "3809:2:11"
									},
									"returnParameters": {
										"id": 1490,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1489,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1498,
												"src": "3835:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1488,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3835:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3834:9:11"
									},
									"scope": 1662,
									"src": "3792:120:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1528,
										"nodeType": "Block",
										"src": "4039:172:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"id": 1509,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 1504,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1501,
														"src": "4053:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"arguments": [
															{
																"hexValue": "30",
																"id": 1507,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4073:1:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																}
															],
															"id": 1506,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"nodeType": "ElementaryTypeNameExpression",
															"src": "4065:7:11",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_address_$",
																"typeString": "type(address)"
															},
															"typeName": {
																"id": 1505,
																"name": "address",
																"nodeType": "ElementaryTypeName",
																"src": "4065:7:11",
																"typeDescriptions": {}
															}
														},
														"id": 1508,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4065:10:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4053:22:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1518,
												"nodeType": "IfStatement",
												"src": "4049:91:11",
												"trueBody": {
													"id": 1517,
													"nodeType": "Block",
													"src": "4077:63:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"hexValue": "30",
																				"id": 1513,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "4126:1:11",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				}
																			],
																			"id": 1512,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "4118:7:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1511,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "4118:7:11",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1514,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "4118:10:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1510,
																	"name": "ERC1967InvalidAdmin",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1399,
																	"src": "4098:19:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1515,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4098:31:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1516,
															"nodeType": "RevertStatement",
															"src": "4091:38:11"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1526,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 1522,
																	"name": "ADMIN_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1485,
																	"src": "4176:10:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1519,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2035,
																	"src": "4149:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2035_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 1521,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4161:14:11",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1957,
																"src": "4149:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1931_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 1523,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4149:38:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1931_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 1524,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4188:5:11",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1930,
														"src": "4149:44:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1525,
														"name": "newAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1501,
														"src": "4196:8:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "4149:55:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1527,
												"nodeType": "ExpressionStatement",
												"src": "4149:55:11"
											}
										]
									},
									"documentation": {
										"id": 1499,
										"nodeType": "StructuredDocumentation",
										"src": "3918:71:11",
										"text": " @dev Stores a new address in the EIP1967 admin slot."
									},
									"id": 1529,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setAdmin",
									"nameLocation": "4003:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1502,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1501,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "4021:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1529,
												"src": "4013:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1500,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4013:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4012:18:11"
									},
									"returnParameters": {
										"id": 1503,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4039:0:11"
									},
									"scope": 1662,
									"src": "3994:217:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1545,
										"nodeType": "Block",
										"src": "4379:85:11",
										"statements": [
											{
												"eventCall": {
													"arguments": [
														{
															"arguments": [],
															"expression": {
																"argumentTypes": [],
																"id": 1536,
																"name": "getAdmin",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1498,
																"src": "4407:8:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
																	"typeString": "function () view returns (address)"
																}
															},
															"id": 1537,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4407:10:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1538,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1532,
															"src": "4419:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1535,
														"name": "AdminChanged",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1380,
														"src": "4394:12:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
															"typeString": "function (address,address)"
														}
													},
													"id": 1539,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4394:34:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1540,
												"nodeType": "EmitStatement",
												"src": "4389:39:11"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1542,
															"name": "newAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1532,
															"src": "4448:8:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1541,
														"name": "_setAdmin",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1529,
														"src": "4438:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1543,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4438:19:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1544,
												"nodeType": "ExpressionStatement",
												"src": "4438:19:11"
											}
										]
									},
									"documentation": {
										"id": 1530,
										"nodeType": "StructuredDocumentation",
										"src": "4217:109:11",
										"text": " @dev Changes the admin of the proxy.\n Emits an {IERC1967-AdminChanged} event."
									},
									"id": 1546,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "changeAdmin",
									"nameLocation": "4340:11:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1533,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1532,
												"mutability": "mutable",
												"name": "newAdmin",
												"nameLocation": "4360:8:11",
												"nodeType": "VariableDeclaration",
												"scope": 1546,
												"src": "4352:16:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1531,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4352:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4351:18:11"
									},
									"returnParameters": {
										"id": 1534,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4379:0:11"
									},
									"scope": 1662,
									"src": "4331:133:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"constant": true,
									"documentation": {
										"id": 1547,
										"nodeType": "StructuredDocumentation",
										"src": "4470:201:11",
										"text": " @dev The storage slot of the UpgradeableBeacon contract which defines the implementation for this proxy.\n This is the keccak-256 hash of \"eip1967.proxy.beacon\" subtracted by 1."
									},
									"id": 1550,
									"mutability": "constant",
									"name": "BEACON_SLOT",
									"nameLocation": "4767:11:11",
									"nodeType": "VariableDeclaration",
									"scope": 1662,
									"src": "4741:106:11",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 1548,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "4741:7:11",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "307861336630616437346535343233616562666438306433656634333436353738333335613961373261656165653539666636636233353832623335313333643530",
										"id": 1549,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "4781:66:11",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_74152234768234802001998023604048924213078445070507226371336425913862612794704_by_1",
											"typeString": "int_const 7415...(69 digits omitted)...4704"
										},
										"value": "0xa3f0ad74e5423aebfd80d3ef4346578335a9a72aeaee59ff6cb3582b35133d50"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1562,
										"nodeType": "Block",
										"src": "4963:69:11",
										"statements": [
											{
												"expression": {
													"expression": {
														"arguments": [
															{
																"id": 1558,
																"name": "BEACON_SLOT",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1550,
																"src": "5007:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes32",
																	"typeString": "bytes32"
																}
															],
															"expression": {
																"id": 1556,
																"name": "StorageSlot",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2035,
																"src": "4980:11:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2035_$",
																	"typeString": "type(library StorageSlot)"
																}
															},
															"id": 1557,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4992:14:11",
															"memberName": "getAddressSlot",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 1957,
															"src": "4980:26:11",
															"typeDescriptions": {
																"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1931_storage_ptr_$",
																"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
															}
														},
														"id": 1559,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "4980:39:11",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_AddressSlot_$1931_storage_ptr",
															"typeString": "struct StorageSlot.AddressSlot storage pointer"
														}
													},
													"id": 1560,
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"memberLocation": "5020:5:11",
													"memberName": "value",
													"nodeType": "MemberAccess",
													"referencedDeclaration": 1930,
													"src": "4980:45:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 1555,
												"id": 1561,
												"nodeType": "Return",
												"src": "4973:52:11"
											}
										]
									},
									"documentation": {
										"id": 1551,
										"nodeType": "StructuredDocumentation",
										"src": "4854:51:11",
										"text": " @dev Returns the current beacon."
									},
									"id": 1563,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBeacon",
									"nameLocation": "4919:9:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1552,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4928:2:11"
									},
									"returnParameters": {
										"id": 1555,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1554,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1563,
												"src": "4954:7:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1553,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4954:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4953:9:11"
									},
									"scope": 1662,
									"src": "4910:122:11",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1608,
										"nodeType": "Block",
										"src": "5161:390:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1573,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1569,
																"name": "newBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1566,
																"src": "5175:9:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1570,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5185:4:11",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5175:14:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1571,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5190:6:11",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5175:21:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1572,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5200:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5175:26:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1579,
												"nodeType": "IfStatement",
												"src": "5171:95:11",
												"trueBody": {
													"id": 1578,
													"nodeType": "Block",
													"src": "5203:63:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1575,
																		"name": "newBeacon",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1566,
																		"src": "5245:9:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1574,
																	"name": "ERC1967InvalidBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1404,
																	"src": "5224:20:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1576,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5224:31:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1577,
															"nodeType": "RevertStatement",
															"src": "5217:38:11"
														}
													]
												}
											},
											{
												"expression": {
													"id": 1587,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"arguments": [
																{
																	"id": 1583,
																	"name": "BEACON_SLOT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1550,
																	"src": "5303:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_bytes32",
																		"typeString": "bytes32"
																	}
																],
																"expression": {
																	"id": 1580,
																	"name": "StorageSlot",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2035,
																	"src": "5276:11:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_StorageSlot_$2035_$",
																		"typeString": "type(library StorageSlot)"
																	}
																},
																"id": 1582,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "5288:14:11",
																"memberName": "getAddressSlot",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 1957,
																"src": "5276:26:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_internal_pure$_t_bytes32_$returns$_t_struct$_AddressSlot_$1931_storage_ptr_$",
																	"typeString": "function (bytes32) pure returns (struct StorageSlot.AddressSlot storage pointer)"
																}
															},
															"id": 1584,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "functionCall",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5276:39:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_AddressSlot_$1931_storage_ptr",
																"typeString": "struct StorageSlot.AddressSlot storage pointer"
															}
														},
														"id": 1585,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5316:5:11",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1930,
														"src": "5276:45:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 1586,
														"name": "newBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1566,
														"src": "5324:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"src": "5276:57:11",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"id": 1588,
												"nodeType": "ExpressionStatement",
												"src": "5276:57:11"
											},
											{
												"assignments": [
													1590
												],
												"declarations": [
													{
														"constant": false,
														"id": 1590,
														"mutability": "mutable",
														"name": "beaconImplementation",
														"nameLocation": "5352:20:11",
														"nodeType": "VariableDeclaration",
														"scope": 1608,
														"src": "5344:28:11",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 1589,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "5344:7:11",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1596,
												"initialValue": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 1592,
																	"name": "newBeacon",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1566,
																	"src": "5383:9:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 1591,
																"name": "IBeacon",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1672,
																"src": "5375:7:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IBeacon_$1672_$",
																	"typeString": "type(contract IBeacon)"
																}
															},
															"id": 1593,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5375:18:11",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IBeacon_$1672",
																"typeString": "contract IBeacon"
															}
														},
														"id": 1594,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5394:14:11",
														"memberName": "implementation",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 1671,
														"src": "5375:33:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
															"typeString": "function () view external returns (address)"
														}
													},
													"id": 1595,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5375:35:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5344:66:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1601,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"expression": {
																"id": 1597,
																"name": "beaconImplementation",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1590,
																"src": "5424:20:11",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1598,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5445:4:11",
															"memberName": "code",
															"nodeType": "MemberAccess",
															"src": "5424:25:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1599,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5450:6:11",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5424:32:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 1600,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5460:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5424:37:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1607,
												"nodeType": "IfStatement",
												"src": "5420:125:11",
												"trueBody": {
													"id": 1606,
													"nodeType": "Block",
													"src": "5463:82:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"id": 1603,
																		"name": "beaconImplementation",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1590,
																		"src": "5513:20:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1602,
																	"name": "ERC1967InvalidImplementation",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1394,
																	"src": "5484:28:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1604,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5484:50:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1605,
															"nodeType": "RevertStatement",
															"src": "5477:57:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1564,
										"nodeType": "StructuredDocumentation",
										"src": "5038:71:11",
										"text": " @dev Stores a new beacon in the EIP1967 beacon slot."
									},
									"id": 1609,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_setBeacon",
									"nameLocation": "5123:10:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1567,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1566,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "5142:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1609,
												"src": "5134:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1565,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5134:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5133:19:11"
									},
									"returnParameters": {
										"id": 1568,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5161:0:11"
									},
									"scope": 1662,
									"src": "5114:437:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								},
								{
									"body": {
										"id": 1646,
										"nodeType": "Block",
										"src": "6155:254:11",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1618,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1612,
															"src": "6176:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1617,
														"name": "_setBeacon",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1609,
														"src": "6165:10:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1619,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6165:21:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1620,
												"nodeType": "ExpressionStatement",
												"src": "6165:21:11"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"id": 1622,
															"name": "newBeacon",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1612,
															"src": "6216:9:11",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 1621,
														"name": "BeaconUpgraded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1385,
														"src": "6201:14:11",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
															"typeString": "function (address)"
														}
													},
													"id": 1623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6201:25:11",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 1624,
												"nodeType": "EmitStatement",
												"src": "6196:30:11"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1628,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1625,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1614,
															"src": "6241:4:11",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1626,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6246:6:11",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "6241:11:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1627,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6255:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6241:15:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1644,
													"nodeType": "Block",
													"src": "6360:43:11",
													"statements": [
														{
															"expression": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1641,
																	"name": "_checkNonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1661,
																	"src": "6374:16:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
																		"typeString": "function ()"
																	}
																},
																"id": 1642,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6374:18:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1643,
															"nodeType": "ExpressionStatement",
															"src": "6374:18:11"
														}
													]
												},
												"id": 1645,
												"nodeType": "IfStatement",
												"src": "6237:166:11",
												"trueBody": {
													"id": 1640,
													"nodeType": "Block",
													"src": "6258:96:11",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [],
																		"expression": {
																			"argumentTypes": [],
																			"expression": {
																				"arguments": [
																					{
																						"id": 1633,
																						"name": "newBeacon",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 1612,
																						"src": "6309:9:11",
																						"typeDescriptions": {
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					}
																				],
																				"expression": {
																					"argumentTypes": [
																						{
																							"typeIdentifier": "t_address",
																							"typeString": "address"
																						}
																					],
																					"id": 1632,
																					"name": "IBeacon",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1672,
																					"src": "6301:7:11",
																					"typeDescriptions": {
																						"typeIdentifier": "t_type$_t_contract$_IBeacon_$1672_$",
																						"typeString": "type(contract IBeacon)"
																					}
																				},
																				"id": 1634,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"kind": "typeConversion",
																				"lValueRequested": false,
																				"nameLocations": [],
																				"names": [],
																				"nodeType": "FunctionCall",
																				"src": "6301:18:11",
																				"tryCall": false,
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_IBeacon_$1672",
																					"typeString": "contract IBeacon"
																				}
																			},
																			"id": 1635,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "6320:14:11",
																			"memberName": "implementation",
																			"nodeType": "MemberAccess",
																			"referencedDeclaration": 1671,
																			"src": "6301:33:11",
																			"typeDescriptions": {
																				"typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
																				"typeString": "function () view external returns (address)"
																			}
																		},
																		"id": 1636,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "functionCall",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "6301:35:11",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	},
																	{
																		"id": 1637,
																		"name": "data",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1614,
																		"src": "6338:4:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		},
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"expression": {
																		"id": 1629,
																		"name": "Address",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1925,
																		"src": "6272:7:11",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Address_$1925_$",
																			"typeString": "type(library Address)"
																		}
																	},
																	"id": 1631,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6280:20:11",
																	"memberName": "functionDelegateCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 1844,
																	"src": "6272:28:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
																		"typeString": "function (address,bytes memory) returns (bytes memory)"
																	}
																},
																"id": 1638,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6272:71:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"id": 1639,
															"nodeType": "ExpressionStatement",
															"src": "6272:71:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1610,
										"nodeType": "StructuredDocumentation",
										"src": "5557:514:11",
										"text": " @dev Change the beacon and trigger a setup call if data is nonempty.\n This function is payable only if the setup call is performed, otherwise `msg.value` is rejected\n to avoid stuck value in the contract.\n Emits an {IERC1967-BeaconUpgraded} event.\n CAUTION: Invoking this function has no effect on an instance of {BeaconProxy} since v5, since\n it uses an immutable beacon without looking at the value of the ERC-1967 beacon slot for\n efficiency."
									},
									"id": 1647,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "upgradeBeaconToAndCall",
									"nameLocation": "6085:22:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1615,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1612,
												"mutability": "mutable",
												"name": "newBeacon",
												"nameLocation": "6116:9:11",
												"nodeType": "VariableDeclaration",
												"scope": 1647,
												"src": "6108:17:11",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1611,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "6108:7:11",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1614,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "6140:4:11",
												"nodeType": "VariableDeclaration",
												"scope": 1647,
												"src": "6127:17:11",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1613,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "6127:5:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6107:38:11"
									},
									"returnParameters": {
										"id": 1616,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6155:0:11"
									},
									"scope": 1662,
									"src": "6076:333:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1660,
										"nodeType": "Block",
										"src": "6634:86:11",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1654,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1651,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "6648:3:11",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 1652,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6652:5:11",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "6648:9:11",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1653,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "6660:1:11",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "6648:13:11",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1659,
												"nodeType": "IfStatement",
												"src": "6644:70:11",
												"trueBody": {
													"id": 1658,
													"nodeType": "Block",
													"src": "6663:51:11",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1655,
																	"name": "ERC1967NonPayable",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1407,
																	"src": "6684:17:11",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1656,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6684:19:11",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1657,
															"nodeType": "RevertStatement",
															"src": "6677:26:11"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1648,
										"nodeType": "StructuredDocumentation",
										"src": "6415:178:11",
										"text": " @dev Reverts if `msg.value` is not zero. It can be used to avoid `msg.value` stuck in the contract\n if an upgrade doesn't perform an initialization call."
									},
									"id": 1661,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_checkNonPayable",
									"nameLocation": "6607:16:11",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1649,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6623:2:11"
									},
									"returnParameters": {
										"id": 1650,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6634:0:11"
									},
									"scope": 1662,
									"src": "6598:122:11",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1663,
							"src": "449:6273:11",
							"usedErrors": [
								1394,
								1399,
								1404,
								1407
							],
							"usedEvents": [
								1373,
								1380,
								1385
							]
						}
					],
					"src": "114:6609:11"
				},
				"id": 11
			},
			"@openzeppelin/contracts/proxy/beacon/IBeacon.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/proxy/beacon/IBeacon.sol",
					"exportedSymbols": {
						"IBeacon": [
							1672
						]
					},
					"id": 1673,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1664,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "108:24:12"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IBeacon",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 1665,
								"nodeType": "StructuredDocumentation",
								"src": "134:79:12",
								"text": " @dev This is the interface that {BeaconProxy} expects of its beacon."
							},
							"fullyImplemented": false,
							"id": 1672,
							"linearizedBaseContracts": [
								1672
							],
							"name": "IBeacon",
							"nameLocation": "224:7:12",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1666,
										"nodeType": "StructuredDocumentation",
										"src": "238:168:12",
										"text": " @dev Must return an address that can be used as a delegate call target.\n {UpgradeableBeacon} will check that this address is a contract."
									},
									"functionSelector": "5c60da1b",
									"id": 1671,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "implementation",
									"nameLocation": "420:14:12",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1667,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "434:2:12"
									},
									"returnParameters": {
										"id": 1670,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1669,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1671,
												"src": "460:7:12",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1668,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "460:7:12",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "459:9:12"
									},
									"scope": 1672,
									"src": "411:58:12",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 1673,
							"src": "214:257:12",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "108:364:12"
				},
				"id": 12
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							1925
						]
					},
					"id": 1926,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1674,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:13"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1675,
								"nodeType": "StructuredDocumentation",
								"src": "127:67:13",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 1925,
							"linearizedBaseContracts": [
								1925
							],
							"name": "Address",
							"nameLocation": "203:7:13",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 1676,
										"nodeType": "StructuredDocumentation",
										"src": "217:94:13",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cd786059",
									"id": 1680,
									"name": "AddressInsufficientBalance",
									"nameLocation": "322:26:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1679,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1678,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "357:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1680,
												"src": "349:15:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1677,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "349:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "348:17:13"
									},
									"src": "316:50:13"
								},
								{
									"documentation": {
										"id": 1681,
										"nodeType": "StructuredDocumentation",
										"src": "372:75:13",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 1685,
									"name": "AddressEmptyCode",
									"nameLocation": "458:16:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1684,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1683,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "483:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1685,
												"src": "475:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1682,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "475:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "474:16:13"
									},
									"src": "452:39:13"
								},
								{
									"documentation": {
										"id": 1686,
										"nodeType": "StructuredDocumentation",
										"src": "497:89:13",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "1425ea42",
									"id": 1688,
									"name": "FailedInnerCall",
									"nameLocation": "597:15:13",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 1687,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "612:2:13"
									},
									"src": "591:24:13"
								},
								{
									"body": {
										"id": 1728,
										"nodeType": "Block",
										"src": "1602:260:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1702,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1698,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1624:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1925",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1925",
																		"typeString": "library Address"
																	}
																],
																"id": 1697,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1616:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1696,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1616:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 1699,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1616:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1700,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1630:7:13",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1616:21:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1701,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1693,
														"src": "1640:6:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1616:30:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1711,
												"nodeType": "IfStatement",
												"src": "1612:109:13",
												"trueBody": {
													"id": 1710,
													"nodeType": "Block",
													"src": "1648:73:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1706,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "1704:4:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$1925",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$1925",
																					"typeString": "library Address"
																				}
																			],
																			"id": 1705,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "1696:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1704,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "1696:7:13",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1707,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "1696:13:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1703,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1680,
																	"src": "1669:26:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1708,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1669:41:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1709,
															"nodeType": "RevertStatement",
															"src": "1662:48:13"
														}
													]
												}
											},
											{
												"assignments": [
													1713,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 1713,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1737:7:13",
														"nodeType": "VariableDeclaration",
														"scope": 1728,
														"src": "1732:12:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1712,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1732:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 1720,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 1718,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1780:2:13",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 1714,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1691,
																"src": "1750:9:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 1715,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1760:4:13",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1750:14:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1717,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1716,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1693,
																"src": "1772:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1750:29:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1719,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1750:33:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1731:52:13"
											},
											{
												"condition": {
													"id": 1722,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1797:8:13",
													"subExpression": {
														"id": 1721,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1713,
														"src": "1798:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1727,
												"nodeType": "IfStatement",
												"src": "1793:63:13",
												"trueBody": {
													"id": 1726,
													"nodeType": "Block",
													"src": "1807:49:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1723,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1688,
																	"src": "1828:15:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1724,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1828:17:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1725,
															"nodeType": "RevertStatement",
															"src": "1821:24:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1689,
										"nodeType": "StructuredDocumentation",
										"src": "621:905:13",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 1729,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1540:9:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1694,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1691,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1566:9:13",
												"nodeType": "VariableDeclaration",
												"scope": 1729,
												"src": "1550:25:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 1690,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1550:15:13",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1693,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1585:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1729,
												"src": "1577:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1692,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1577:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1549:43:13"
									},
									"returnParameters": {
										"id": 1695,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1602:0:13"
									},
									"scope": 1925,
									"src": "1531:331:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1745,
										"nodeType": "Block",
										"src": "2794:62:13",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 1740,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1732,
															"src": "2833:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1741,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1734,
															"src": "2841:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 1742,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2847:1:13",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 1739,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1792,
														"src": "2811:21:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 1743,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2811:38:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1738,
												"id": 1744,
												"nodeType": "Return",
												"src": "2804:45:13"
											}
										]
									},
									"documentation": {
										"id": 1730,
										"nodeType": "StructuredDocumentation",
										"src": "1868:832:13",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {FailedInnerCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 1746,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2714:12:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1735,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1732,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2735:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1746,
												"src": "2727:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1731,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2727:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1734,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2756:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1746,
												"src": "2743:17:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1733,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2743:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2726:35:13"
									},
									"returnParameters": {
										"id": 1738,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1737,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1746,
												"src": "2780:12:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1736,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2780:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:14:13"
									},
									"scope": 1925,
									"src": "2705:151:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1791,
										"nodeType": "Block",
										"src": "3293:279:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1764,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 1760,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3315:4:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$1925",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$1925",
																		"typeString": "library Address"
																	}
																],
																"id": 1759,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3307:7:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 1758,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3307:7:13",
																	"typeDescriptions": {}
																}
															},
															"id": 1761,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3307:13:13",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1762,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3321:7:13",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3307:21:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 1763,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1753,
														"src": "3331:5:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3307:29:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 1773,
												"nodeType": "IfStatement",
												"src": "3303:108:13",
												"trueBody": {
													"id": 1772,
													"nodeType": "Block",
													"src": "3338:73:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"id": 1768,
																				"name": "this",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967268,
																				"src": "3394:4:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_contract$_Address_$1925",
																					"typeString": "library Address"
																				}
																			}
																		],
																		"expression": {
																			"argumentTypes": [
																				{
																					"typeIdentifier": "t_contract$_Address_$1925",
																					"typeString": "library Address"
																				}
																			],
																			"id": 1767,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": true,
																			"lValueRequested": false,
																			"nodeType": "ElementaryTypeNameExpression",
																			"src": "3386:7:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_type$_t_address_$",
																				"typeString": "type(address)"
																			},
																			"typeName": {
																				"id": 1766,
																				"name": "address",
																				"nodeType": "ElementaryTypeName",
																				"src": "3386:7:13",
																				"typeDescriptions": {}
																			}
																		},
																		"id": 1769,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"kind": "typeConversion",
																		"lValueRequested": false,
																		"nameLocations": [],
																		"names": [],
																		"nodeType": "FunctionCall",
																		"src": "3386:13:13",
																		"tryCall": false,
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 1765,
																	"name": "AddressInsufficientBalance",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1680,
																	"src": "3359:26:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																		"typeString": "function (address) pure returns (error)"
																	}
																},
																"id": 1770,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3359:41:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1771,
															"nodeType": "RevertStatement",
															"src": "3352:48:13"
														}
													]
												}
											},
											{
												"assignments": [
													1775,
													1777
												],
												"declarations": [
													{
														"constant": false,
														"id": 1775,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3426:7:13",
														"nodeType": "VariableDeclaration",
														"scope": 1791,
														"src": "3421:12:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1774,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3421:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1777,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3448:10:13",
														"nodeType": "VariableDeclaration",
														"scope": 1791,
														"src": "3435:23:13",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1776,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3435:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1784,
												"initialValue": {
													"arguments": [
														{
															"id": 1782,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1751,
															"src": "3488:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 1778,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1749,
																"src": "3462:6:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 1779,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3469:4:13",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3462:11:13",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 1781,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 1780,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1753,
																"src": "3481:5:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3462:25:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 1783,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3462:31:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3420:73:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1786,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1749,
															"src": "3537:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1787,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1775,
															"src": "3545:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1788,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1777,
															"src": "3554:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1785,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1884,
														"src": "3510:26:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3510:55:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1757,
												"id": 1790,
												"nodeType": "Return",
												"src": "3503:62:13"
											}
										]
									},
									"documentation": {
										"id": 1747,
										"nodeType": "StructuredDocumentation",
										"src": "2862:313:13",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 1792,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "3189:21:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1754,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1749,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3219:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1792,
												"src": "3211:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1748,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3211:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1751,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3240:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1792,
												"src": "3227:17:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1750,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3227:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1753,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3254:5:13",
												"nodeType": "VariableDeclaration",
												"scope": 1792,
												"src": "3246:13:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 1752,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3246:7:13",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3210:50:13"
									},
									"returnParameters": {
										"id": 1757,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1756,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1792,
												"src": "3279:12:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1755,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3279:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3278:14:13"
									},
									"scope": 1925,
									"src": "3180:392:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1817,
										"nodeType": "Block",
										"src": "3811:154:13",
										"statements": [
											{
												"assignments": [
													1803,
													1805
												],
												"declarations": [
													{
														"constant": false,
														"id": 1803,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3827:7:13",
														"nodeType": "VariableDeclaration",
														"scope": 1817,
														"src": "3822:12:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1802,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3822:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1805,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3849:10:13",
														"nodeType": "VariableDeclaration",
														"scope": 1817,
														"src": "3836:23:13",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1804,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3836:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1810,
												"initialValue": {
													"arguments": [
														{
															"id": 1808,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1797,
															"src": "3881:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1806,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1795,
															"src": "3863:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1807,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3870:10:13",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3863:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 1809,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3863:23:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3821:65:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1812,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1795,
															"src": "3930:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1813,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1803,
															"src": "3938:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1814,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1805,
															"src": "3947:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1811,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1884,
														"src": "3903:26:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1815,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3903:55:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1801,
												"id": 1816,
												"nodeType": "Return",
												"src": "3896:62:13"
											}
										]
									},
									"documentation": {
										"id": 1793,
										"nodeType": "StructuredDocumentation",
										"src": "3578:128:13",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 1818,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3720:18:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1798,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1795,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3747:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1818,
												"src": "3739:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1794,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3739:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1797,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3768:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1818,
												"src": "3755:17:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1796,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3755:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3738:35:13"
									},
									"returnParameters": {
										"id": 1801,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1800,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1818,
												"src": "3797:12:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1799,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3797:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3796:14:13"
									},
									"scope": 1925,
									"src": "3711:254:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1843,
										"nodeType": "Block",
										"src": "4203:156:13",
										"statements": [
											{
												"assignments": [
													1829,
													1831
												],
												"declarations": [
													{
														"constant": false,
														"id": 1829,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4219:7:13",
														"nodeType": "VariableDeclaration",
														"scope": 1843,
														"src": "4214:12:13",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 1828,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4214:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 1831,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4241:10:13",
														"nodeType": "VariableDeclaration",
														"scope": 1843,
														"src": "4228:23:13",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 1830,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4228:5:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 1836,
												"initialValue": {
													"arguments": [
														{
															"id": 1834,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1823,
															"src": "4275:4:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 1832,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1821,
															"src": "4255:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 1833,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4262:12:13",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4255:19:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 1835,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4255:25:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4213:67:13"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 1838,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1821,
															"src": "4324:6:13",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 1839,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1829,
															"src": "4332:7:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 1840,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1831,
															"src": "4341:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 1837,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1884,
														"src": "4297:26:13",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 1841,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4297:55:13",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 1827,
												"id": 1842,
												"nodeType": "Return",
												"src": "4290:62:13"
											}
										]
									},
									"documentation": {
										"id": 1819,
										"nodeType": "StructuredDocumentation",
										"src": "3971:130:13",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 1844,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "4115:20:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1824,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1821,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4144:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "4136:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1820,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4136:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1823,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "4165:4:13",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "4152:17:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1822,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4152:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4135:35:13"
									},
									"returnParameters": {
										"id": 1827,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1826,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1844,
												"src": "4189:12:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1825,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4189:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4188:14:13"
									},
									"scope": 1925,
									"src": "4106:253:13",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1883,
										"nodeType": "Block",
										"src": "4783:424:13",
										"statements": [
											{
												"condition": {
													"id": 1857,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4797:8:13",
													"subExpression": {
														"id": 1856,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1849,
														"src": "4798:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1881,
													"nodeType": "Block",
													"src": "4857:344:13",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 1872,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1866,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 1863,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 1851,
																			"src": "5045:10:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1864,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5056:6:13",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5045:17:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1865,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5066:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5045:22:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 1871,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 1867,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1847,
																				"src": "5071:6:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 1868,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "5078:4:13",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "5071:11:13",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 1869,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "5083:6:13",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "5071:18:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 1870,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "5093:1:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "5071:23:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "5045:49:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 1878,
															"nodeType": "IfStatement",
															"src": "5041:119:13",
															"trueBody": {
																"id": 1877,
																"nodeType": "Block",
																"src": "5096:64:13",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 1874,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 1847,
																					"src": "5138:6:13",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 1873,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 1685,
																				"src": "5121:16:13",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 1875,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "5121:24:13",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 1876,
																		"nodeType": "RevertStatement",
																		"src": "5114:31:13"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 1879,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1851,
																"src": "5180:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1855,
															"id": 1880,
															"nodeType": "Return",
															"src": "5173:17:13"
														}
													]
												},
												"id": 1882,
												"nodeType": "IfStatement",
												"src": "4793:408:13",
												"trueBody": {
													"id": 1862,
													"nodeType": "Block",
													"src": "4807:44:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1859,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1851,
																		"src": "4829:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1858,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1924,
																	"src": "4821:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1860,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4821:19:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1861,
															"nodeType": "ExpressionStatement",
															"src": "4821:19:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1845,
										"nodeType": "StructuredDocumentation",
										"src": "4365:255:13",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {FailedInnerCall}) in case of an\n unsuccessful call."
									},
									"id": 1884,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4634:26:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1852,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1847,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4678:6:13",
												"nodeType": "VariableDeclaration",
												"scope": 1884,
												"src": "4670:14:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 1846,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4670:7:13",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1849,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4699:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1884,
												"src": "4694:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1848,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4694:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1851,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4729:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 1884,
												"src": "4716:23:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1850,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4716:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4660:85:13"
									},
									"returnParameters": {
										"id": 1855,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1854,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1884,
												"src": "4769:12:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1853,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4769:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4768:14:13"
									},
									"scope": 1925,
									"src": "4625:582:13",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1905,
										"nodeType": "Block",
										"src": "5509:122:13",
										"statements": [
											{
												"condition": {
													"id": 1895,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5523:8:13",
													"subExpression": {
														"id": 1894,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1887,
														"src": "5524:7:13",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1903,
													"nodeType": "Block",
													"src": "5583:42:13",
													"statements": [
														{
															"expression": {
																"id": 1901,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 1889,
																"src": "5604:10:13",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 1893,
															"id": 1902,
															"nodeType": "Return",
															"src": "5597:17:13"
														}
													]
												},
												"id": 1904,
												"nodeType": "IfStatement",
												"src": "5519:106:13",
												"trueBody": {
													"id": 1900,
													"nodeType": "Block",
													"src": "5533:44:13",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 1897,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 1889,
																		"src": "5555:10:13",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 1896,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1924,
																	"src": "5547:7:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 1898,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5547:19:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 1899,
															"nodeType": "ExpressionStatement",
															"src": "5547:19:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1885,
										"nodeType": "StructuredDocumentation",
										"src": "5213:189:13",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {FailedInnerCall} error."
									},
									"id": 1906,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5416:16:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1890,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1887,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5438:7:13",
												"nodeType": "VariableDeclaration",
												"scope": 1906,
												"src": "5433:12:13",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 1886,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5433:4:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 1889,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5460:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 1906,
												"src": "5447:23:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1888,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5447:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5432:39:13"
									},
									"returnParameters": {
										"id": 1893,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1892,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 1906,
												"src": "5495:12:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1891,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5495:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5494:14:13"
									},
									"scope": 1925,
									"src": "5407:224:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1923,
										"nodeType": "Block",
										"src": "5798:461:13",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 1915,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 1912,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 1909,
															"src": "5874:10:13",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 1913,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5885:6:13",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5874:17:13",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 1914,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5894:1:13",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5874:21:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 1921,
													"nodeType": "Block",
													"src": "6204:49:13",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"id": 1918,
																	"name": "FailedInnerCall",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 1688,
																	"src": "6225:15:13",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 1919,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6225:17:13",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 1920,
															"nodeType": "RevertStatement",
															"src": "6218:24:13"
														}
													]
												},
												"id": 1922,
												"nodeType": "IfStatement",
												"src": "5870:383:13",
												"trueBody": {
													"id": 1917,
													"nodeType": "Block",
													"src": "5897:301:13",
													"statements": [
														{
															"AST": {
																"nativeSrc": "6055:133:13",
																"nodeType": "YulBlock",
																"src": "6055:133:13",
																"statements": [
																	{
																		"nativeSrc": "6073:40:13",
																		"nodeType": "YulVariableDeclaration",
																		"src": "6073:40:13",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "6102:10:13",
																					"nodeType": "YulIdentifier",
																					"src": "6102:10:13"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "6096:5:13",
																				"nodeType": "YulIdentifier",
																				"src": "6096:5:13"
																			},
																			"nativeSrc": "6096:17:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6096:17:13"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "6077:15:13",
																				"nodeType": "YulTypedName",
																				"src": "6077:15:13",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "6141:2:13",
																							"nodeType": "YulLiteral",
																							"src": "6141:2:13",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "6145:10:13",
																							"nodeType": "YulIdentifier",
																							"src": "6145:10:13"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "6137:3:13",
																						"nodeType": "YulIdentifier",
																						"src": "6137:3:13"
																					},
																					"nativeSrc": "6137:19:13",
																					"nodeType": "YulFunctionCall",
																					"src": "6137:19:13"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "6158:15:13",
																					"nodeType": "YulIdentifier",
																					"src": "6158:15:13"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "6130:6:13",
																				"nodeType": "YulIdentifier",
																				"src": "6130:6:13"
																			},
																			"nativeSrc": "6130:44:13",
																			"nodeType": "YulFunctionCall",
																			"src": "6130:44:13"
																		},
																		"nativeSrc": "6130:44:13",
																		"nodeType": "YulExpressionStatement",
																		"src": "6130:44:13"
																	}
																]
															},
															"documentation": "@solidity memory-safe-assembly",
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 1909,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6102:10:13",
																	"valueSize": 1
																},
																{
																	"declaration": 1909,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "6145:10:13",
																	"valueSize": 1
																}
															],
															"id": 1916,
															"nodeType": "InlineAssembly",
															"src": "6046:142:13"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 1907,
										"nodeType": "StructuredDocumentation",
										"src": "5637:101:13",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {FailedInnerCall}."
									},
									"id": 1924,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5752:7:13",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1910,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1909,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5773:10:13",
												"nodeType": "VariableDeclaration",
												"scope": 1924,
												"src": "5760:23:13",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 1908,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5760:5:13",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5759:25:13"
									},
									"returnParameters": {
										"id": 1911,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5798:0:13"
									},
									"scope": 1925,
									"src": "5743:516:13",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 1926,
							"src": "195:6066:13",
							"usedErrors": [
								1680,
								1685,
								1688
							],
							"usedEvents": []
						}
					],
					"src": "101:6161:13"
				},
				"id": 13
			},
			"@openzeppelin/contracts/utils/StorageSlot.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/StorageSlot.sol",
					"exportedSymbols": {
						"StorageSlot": [
							2035
						]
					},
					"id": 2036,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1927,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "193:24:14"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "StorageSlot",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 1928,
								"nodeType": "StructuredDocumentation",
								"src": "219:1025:14",
								"text": " @dev Library for reading and writing primitive types to specific storage slots.\n Storage slots are often used to avoid storage conflict when dealing with upgradeable contracts.\n This library helps with reading and writing to such slots without the need for inline assembly.\n The functions in this library return Slot structs that contain a `value` member that can be used to read or write.\n Example usage to set ERC1967 implementation slot:\n ```solidity\n contract ERC1967 {\n     bytes32 internal constant _IMPLEMENTATION_SLOT = 0x360894a13ba1a3210667c828492db98dca3e2076cc3735a920a3ca505d382bbc;\n     function _getImplementation() internal view returns (address) {\n         return StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value;\n     }\n     function _setImplementation(address newImplementation) internal {\n         require(newImplementation.code.length > 0);\n         StorageSlot.getAddressSlot(_IMPLEMENTATION_SLOT).value = newImplementation;\n     }\n }\n ```"
							},
							"fullyImplemented": true,
							"id": 2035,
							"linearizedBaseContracts": [
								2035
							],
							"name": "StorageSlot",
							"nameLocation": "1253:11:14",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"canonicalName": "StorageSlot.AddressSlot",
									"id": 1931,
									"members": [
										{
											"constant": false,
											"id": 1930,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1308:5:14",
											"nodeType": "VariableDeclaration",
											"scope": 1931,
											"src": "1300:13:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											},
											"typeName": {
												"id": 1929,
												"name": "address",
												"nodeType": "ElementaryTypeName",
												"src": "1300:7:14",
												"stateMutability": "nonpayable",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "AddressSlot",
									"nameLocation": "1278:11:14",
									"nodeType": "StructDefinition",
									"scope": 2035,
									"src": "1271:49:14",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BooleanSlot",
									"id": 1934,
									"members": [
										{
											"constant": false,
											"id": 1933,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1360:5:14",
											"nodeType": "VariableDeclaration",
											"scope": 1934,
											"src": "1355:10:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											},
											"typeName": {
												"id": 1932,
												"name": "bool",
												"nodeType": "ElementaryTypeName",
												"src": "1355:4:14",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BooleanSlot",
									"nameLocation": "1333:11:14",
									"nodeType": "StructDefinition",
									"scope": 2035,
									"src": "1326:46:14",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Bytes32Slot",
									"id": 1937,
									"members": [
										{
											"constant": false,
											"id": 1936,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1415:5:14",
											"nodeType": "VariableDeclaration",
											"scope": 1937,
											"src": "1407:13:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes32",
												"typeString": "bytes32"
											},
											"typeName": {
												"id": 1935,
												"name": "bytes32",
												"nodeType": "ElementaryTypeName",
												"src": "1407:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Bytes32Slot",
									"nameLocation": "1385:11:14",
									"nodeType": "StructDefinition",
									"scope": 2035,
									"src": "1378:49:14",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.Uint256Slot",
									"id": 1940,
									"members": [
										{
											"constant": false,
											"id": 1939,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1470:5:14",
											"nodeType": "VariableDeclaration",
											"scope": 1940,
											"src": "1462:13:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 1938,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1462:7:14",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "Uint256Slot",
									"nameLocation": "1440:11:14",
									"nodeType": "StructDefinition",
									"scope": 2035,
									"src": "1433:49:14",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.StringSlot",
									"id": 1943,
									"members": [
										{
											"constant": false,
											"id": 1942,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1523:5:14",
											"nodeType": "VariableDeclaration",
											"scope": 1943,
											"src": "1516:12:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_string_storage_ptr",
												"typeString": "string"
											},
											"typeName": {
												"id": 1941,
												"name": "string",
												"nodeType": "ElementaryTypeName",
												"src": "1516:6:14",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "StringSlot",
									"nameLocation": "1495:10:14",
									"nodeType": "StructDefinition",
									"scope": 2035,
									"src": "1488:47:14",
									"visibility": "public"
								},
								{
									"canonicalName": "StorageSlot.BytesSlot",
									"id": 1946,
									"members": [
										{
											"constant": false,
											"id": 1945,
											"mutability": "mutable",
											"name": "value",
											"nameLocation": "1574:5:14",
											"nodeType": "VariableDeclaration",
											"scope": 1946,
											"src": "1568:11:14",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes_storage_ptr",
												"typeString": "bytes"
											},
											"typeName": {
												"id": 1944,
												"name": "bytes",
												"nodeType": "ElementaryTypeName",
												"src": "1568:5:14",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												}
											},
											"visibility": "internal"
										}
									],
									"name": "BytesSlot",
									"nameLocation": "1548:9:14",
									"nodeType": "StructDefinition",
									"scope": 2035,
									"src": "1541:45:14",
									"visibility": "public"
								},
								{
									"body": {
										"id": 1956,
										"nodeType": "Block",
										"src": "1768:106:14",
										"statements": [
											{
												"AST": {
													"nativeSrc": "1830:38:14",
													"nodeType": "YulBlock",
													"src": "1830:38:14",
													"statements": [
														{
															"nativeSrc": "1844:14:14",
															"nodeType": "YulAssignment",
															"src": "1844:14:14",
															"value": {
																"name": "slot",
																"nativeSrc": "1854:4:14",
																"nodeType": "YulIdentifier",
																"src": "1854:4:14"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "1844:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "1844:6:14"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1953,
														"isOffset": false,
														"isSlot": true,
														"src": "1844:6:14",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1949,
														"isOffset": false,
														"isSlot": false,
														"src": "1854:4:14",
														"valueSize": 1
													}
												],
												"id": 1955,
												"nodeType": "InlineAssembly",
												"src": "1821:47:14"
											}
										]
									},
									"documentation": {
										"id": 1947,
										"nodeType": "StructuredDocumentation",
										"src": "1592:87:14",
										"text": " @dev Returns an `AddressSlot` with member `value` located at `slot`."
									},
									"id": 1957,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddressSlot",
									"nameLocation": "1693:14:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1950,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1949,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "1716:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 1957,
												"src": "1708:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1948,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1708:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1707:14:14"
									},
									"returnParameters": {
										"id": 1954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1953,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "1765:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1957,
												"src": "1745:21:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_AddressSlot_$1931_storage_ptr",
													"typeString": "struct StorageSlot.AddressSlot"
												},
												"typeName": {
													"id": 1952,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1951,
														"name": "AddressSlot",
														"nameLocations": [
															"1745:11:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1931,
														"src": "1745:11:14"
													},
													"referencedDeclaration": 1931,
													"src": "1745:11:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_AddressSlot_$1931_storage_ptr",
														"typeString": "struct StorageSlot.AddressSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1744:23:14"
									},
									"scope": 2035,
									"src": "1684:190:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1967,
										"nodeType": "Block",
										"src": "2056:106:14",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2118:38:14",
													"nodeType": "YulBlock",
													"src": "2118:38:14",
													"statements": [
														{
															"nativeSrc": "2132:14:14",
															"nodeType": "YulAssignment",
															"src": "2132:14:14",
															"value": {
																"name": "slot",
																"nativeSrc": "2142:4:14",
																"nodeType": "YulIdentifier",
																"src": "2142:4:14"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2132:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2132:6:14"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1964,
														"isOffset": false,
														"isSlot": true,
														"src": "2132:6:14",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1960,
														"isOffset": false,
														"isSlot": false,
														"src": "2142:4:14",
														"valueSize": 1
													}
												],
												"id": 1966,
												"nodeType": "InlineAssembly",
												"src": "2109:47:14"
											}
										]
									},
									"documentation": {
										"id": 1958,
										"nodeType": "StructuredDocumentation",
										"src": "1880:87:14",
										"text": " @dev Returns an `BooleanSlot` with member `value` located at `slot`."
									},
									"id": 1968,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBooleanSlot",
									"nameLocation": "1981:14:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1961,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1960,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2004:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 1968,
												"src": "1996:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1959,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "1996:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1995:14:14"
									},
									"returnParameters": {
										"id": 1965,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1964,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2053:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1968,
												"src": "2033:21:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BooleanSlot_$1934_storage_ptr",
													"typeString": "struct StorageSlot.BooleanSlot"
												},
												"typeName": {
													"id": 1963,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1962,
														"name": "BooleanSlot",
														"nameLocations": [
															"2033:11:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1934,
														"src": "2033:11:14"
													},
													"referencedDeclaration": 1934,
													"src": "2033:11:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BooleanSlot_$1934_storage_ptr",
														"typeString": "struct StorageSlot.BooleanSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2032:23:14"
									},
									"scope": 2035,
									"src": "1972:190:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1978,
										"nodeType": "Block",
										"src": "2344:106:14",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2406:38:14",
													"nodeType": "YulBlock",
													"src": "2406:38:14",
													"statements": [
														{
															"nativeSrc": "2420:14:14",
															"nodeType": "YulAssignment",
															"src": "2420:14:14",
															"value": {
																"name": "slot",
																"nativeSrc": "2430:4:14",
																"nodeType": "YulIdentifier",
																"src": "2430:4:14"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2420:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2420:6:14"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1975,
														"isOffset": false,
														"isSlot": true,
														"src": "2420:6:14",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1971,
														"isOffset": false,
														"isSlot": false,
														"src": "2430:4:14",
														"valueSize": 1
													}
												],
												"id": 1977,
												"nodeType": "InlineAssembly",
												"src": "2397:47:14"
											}
										]
									},
									"documentation": {
										"id": 1969,
										"nodeType": "StructuredDocumentation",
										"src": "2168:87:14",
										"text": " @dev Returns an `Bytes32Slot` with member `value` located at `slot`."
									},
									"id": 1979,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytes32Slot",
									"nameLocation": "2269:14:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1971,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2292:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 1979,
												"src": "2284:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1970,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2284:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2283:14:14"
									},
									"returnParameters": {
										"id": 1976,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1975,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2341:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1979,
												"src": "2321:21:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Bytes32Slot_$1937_storage_ptr",
													"typeString": "struct StorageSlot.Bytes32Slot"
												},
												"typeName": {
													"id": 1974,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1973,
														"name": "Bytes32Slot",
														"nameLocations": [
															"2321:11:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1937,
														"src": "2321:11:14"
													},
													"referencedDeclaration": 1937,
													"src": "2321:11:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Bytes32Slot_$1937_storage_ptr",
														"typeString": "struct StorageSlot.Bytes32Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2320:23:14"
									},
									"scope": 2035,
									"src": "2260:190:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 1989,
										"nodeType": "Block",
										"src": "2632:106:14",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2694:38:14",
													"nodeType": "YulBlock",
													"src": "2694:38:14",
													"statements": [
														{
															"nativeSrc": "2708:14:14",
															"nodeType": "YulAssignment",
															"src": "2708:14:14",
															"value": {
																"name": "slot",
																"nativeSrc": "2718:4:14",
																"nodeType": "YulIdentifier",
																"src": "2718:4:14"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2708:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2708:6:14"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1986,
														"isOffset": false,
														"isSlot": true,
														"src": "2708:6:14",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1982,
														"isOffset": false,
														"isSlot": false,
														"src": "2718:4:14",
														"valueSize": 1
													}
												],
												"id": 1988,
												"nodeType": "InlineAssembly",
												"src": "2685:47:14"
											}
										]
									},
									"documentation": {
										"id": 1980,
										"nodeType": "StructuredDocumentation",
										"src": "2456:87:14",
										"text": " @dev Returns an `Uint256Slot` with member `value` located at `slot`."
									},
									"id": 1990,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getUint256Slot",
									"nameLocation": "2557:14:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1983,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1982,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2580:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 1990,
												"src": "2572:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1981,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2572:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2571:14:14"
									},
									"returnParameters": {
										"id": 1987,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1986,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2629:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 1990,
												"src": "2609:21:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_Uint256Slot_$1940_storage_ptr",
													"typeString": "struct StorageSlot.Uint256Slot"
												},
												"typeName": {
													"id": 1985,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1984,
														"name": "Uint256Slot",
														"nameLocations": [
															"2609:11:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1940,
														"src": "2609:11:14"
													},
													"referencedDeclaration": 1940,
													"src": "2609:11:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_Uint256Slot_$1940_storage_ptr",
														"typeString": "struct StorageSlot.Uint256Slot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2608:23:14"
									},
									"scope": 2035,
									"src": "2548:190:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2000,
										"nodeType": "Block",
										"src": "2917:106:14",
										"statements": [
											{
												"AST": {
													"nativeSrc": "2979:38:14",
													"nodeType": "YulBlock",
													"src": "2979:38:14",
													"statements": [
														{
															"nativeSrc": "2993:14:14",
															"nodeType": "YulAssignment",
															"src": "2993:14:14",
															"value": {
																"name": "slot",
																"nativeSrc": "3003:4:14",
																"nodeType": "YulIdentifier",
																"src": "3003:4:14"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "2993:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "2993:6:14"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 1997,
														"isOffset": false,
														"isSlot": true,
														"src": "2993:6:14",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 1993,
														"isOffset": false,
														"isSlot": false,
														"src": "3003:4:14",
														"valueSize": 1
													}
												],
												"id": 1999,
												"nodeType": "InlineAssembly",
												"src": "2970:47:14"
											}
										]
									},
									"documentation": {
										"id": 1991,
										"nodeType": "StructuredDocumentation",
										"src": "2744:86:14",
										"text": " @dev Returns an `StringSlot` with member `value` located at `slot`."
									},
									"id": 2001,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "2844:13:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 1994,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1993,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "2866:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2001,
												"src": "2858:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 1992,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "2858:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2857:14:14"
									},
									"returnParameters": {
										"id": 1998,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 1997,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "2914:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2001,
												"src": "2895:20:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1943_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 1996,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 1995,
														"name": "StringSlot",
														"nameLocations": [
															"2895:10:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1943,
														"src": "2895:10:14"
													},
													"referencedDeclaration": 1943,
													"src": "2895:10:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1943_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2894:22:14"
									},
									"scope": 2035,
									"src": "2835:188:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2011,
										"nodeType": "Block",
										"src": "3225:112:14",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3287:44:14",
													"nodeType": "YulBlock",
													"src": "3287:44:14",
													"statements": [
														{
															"nativeSrc": "3301:20:14",
															"nodeType": "YulAssignment",
															"src": "3301:20:14",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3311:10:14",
																"nodeType": "YulIdentifier",
																"src": "3311:10:14"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3301:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3301:6:14"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2008,
														"isOffset": false,
														"isSlot": true,
														"src": "3301:6:14",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2004,
														"isOffset": false,
														"isSlot": true,
														"src": "3311:10:14",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 2010,
												"nodeType": "InlineAssembly",
												"src": "3278:53:14"
											}
										]
									},
									"documentation": {
										"id": 2002,
										"nodeType": "StructuredDocumentation",
										"src": "3029:101:14",
										"text": " @dev Returns an `StringSlot` representation of the string storage pointer `store`."
									},
									"id": 2012,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getStringSlot",
									"nameLocation": "3144:13:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2005,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2004,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3173:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2012,
												"src": "3158:20:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_string_storage_ptr",
													"typeString": "string"
												},
												"typeName": {
													"id": 2003,
													"name": "string",
													"nodeType": "ElementaryTypeName",
													"src": "3158:6:14",
													"typeDescriptions": {
														"typeIdentifier": "t_string_storage_ptr",
														"typeString": "string"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3157:22:14"
									},
									"returnParameters": {
										"id": 2009,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2008,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3222:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2012,
												"src": "3203:20:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_StringSlot_$1943_storage_ptr",
													"typeString": "struct StorageSlot.StringSlot"
												},
												"typeName": {
													"id": 2007,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2006,
														"name": "StringSlot",
														"nameLocations": [
															"3203:10:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1943,
														"src": "3203:10:14"
													},
													"referencedDeclaration": 1943,
													"src": "3203:10:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_StringSlot_$1943_storage_ptr",
														"typeString": "struct StorageSlot.StringSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3202:22:14"
									},
									"scope": 2035,
									"src": "3135:202:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2022,
										"nodeType": "Block",
										"src": "3513:106:14",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3575:38:14",
													"nodeType": "YulBlock",
													"src": "3575:38:14",
													"statements": [
														{
															"nativeSrc": "3589:14:14",
															"nodeType": "YulAssignment",
															"src": "3589:14:14",
															"value": {
																"name": "slot",
																"nativeSrc": "3599:4:14",
																"nodeType": "YulIdentifier",
																"src": "3599:4:14"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3589:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3589:6:14"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2019,
														"isOffset": false,
														"isSlot": true,
														"src": "3589:6:14",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2015,
														"isOffset": false,
														"isSlot": false,
														"src": "3599:4:14",
														"valueSize": 1
													}
												],
												"id": 2021,
												"nodeType": "InlineAssembly",
												"src": "3566:47:14"
											}
										]
									},
									"documentation": {
										"id": 2013,
										"nodeType": "StructuredDocumentation",
										"src": "3343:85:14",
										"text": " @dev Returns an `BytesSlot` with member `value` located at `slot`."
									},
									"id": 2023,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3442:12:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2016,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2015,
												"mutability": "mutable",
												"name": "slot",
												"nameLocation": "3463:4:14",
												"nodeType": "VariableDeclaration",
												"scope": 2023,
												"src": "3455:12:14",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes32",
													"typeString": "bytes32"
												},
												"typeName": {
													"id": 2014,
													"name": "bytes32",
													"nodeType": "ElementaryTypeName",
													"src": "3455:7:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3454:14:14"
									},
									"returnParameters": {
										"id": 2020,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2019,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3510:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2023,
												"src": "3492:19:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1946_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 2018,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2017,
														"name": "BytesSlot",
														"nameLocations": [
															"3492:9:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1946,
														"src": "3492:9:14"
													},
													"referencedDeclaration": 1946,
													"src": "3492:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1946_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3491:21:14"
									},
									"scope": 2035,
									"src": "3433:186:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2033,
										"nodeType": "Block",
										"src": "3816:112:14",
										"statements": [
											{
												"AST": {
													"nativeSrc": "3878:44:14",
													"nodeType": "YulBlock",
													"src": "3878:44:14",
													"statements": [
														{
															"nativeSrc": "3892:20:14",
															"nodeType": "YulAssignment",
															"src": "3892:20:14",
															"value": {
																"name": "store.slot",
																"nativeSrc": "3902:10:14",
																"nodeType": "YulIdentifier",
																"src": "3902:10:14"
															},
															"variableNames": [
																{
																	"name": "r.slot",
																	"nativeSrc": "3892:6:14",
																	"nodeType": "YulIdentifier",
																	"src": "3892:6:14"
																}
															]
														}
													]
												},
												"documentation": "@solidity memory-safe-assembly",
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 2030,
														"isOffset": false,
														"isSlot": true,
														"src": "3892:6:14",
														"suffix": "slot",
														"valueSize": 1
													},
													{
														"declaration": 2026,
														"isOffset": false,
														"isSlot": true,
														"src": "3902:10:14",
														"suffix": "slot",
														"valueSize": 1
													}
												],
												"id": 2032,
												"nodeType": "InlineAssembly",
												"src": "3869:53:14"
											}
										]
									},
									"documentation": {
										"id": 2024,
										"nodeType": "StructuredDocumentation",
										"src": "3625:99:14",
										"text": " @dev Returns an `BytesSlot` representation of the bytes storage pointer `store`."
									},
									"id": 2034,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getBytesSlot",
									"nameLocation": "3738:12:14",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2027,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2026,
												"mutability": "mutable",
												"name": "store",
												"nameLocation": "3765:5:14",
												"nodeType": "VariableDeclaration",
												"scope": 2034,
												"src": "3751:19:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_storage_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 2025,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3751:5:14",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3750:21:14"
									},
									"returnParameters": {
										"id": 2031,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2030,
												"mutability": "mutable",
												"name": "r",
												"nameLocation": "3813:1:14",
												"nodeType": "VariableDeclaration",
												"scope": 2034,
												"src": "3795:19:14",
												"stateVariable": false,
												"storageLocation": "storage",
												"typeDescriptions": {
													"typeIdentifier": "t_struct$_BytesSlot_$1946_storage_ptr",
													"typeString": "struct StorageSlot.BytesSlot"
												},
												"typeName": {
													"id": 2029,
													"nodeType": "UserDefinedTypeName",
													"pathNode": {
														"id": 2028,
														"name": "BytesSlot",
														"nameLocations": [
															"3795:9:14"
														],
														"nodeType": "IdentifierPath",
														"referencedDeclaration": 1946,
														"src": "3795:9:14"
													},
													"referencedDeclaration": 1946,
													"src": "3795:9:14",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_BytesSlot_$1946_storage_ptr",
														"typeString": "struct StorageSlot.BytesSlot"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3794:21:14"
									},
									"scope": 2035,
									"src": "3729:199:14",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 2036,
							"src": "1245:2685:14",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "193:3738:14"
				},
				"id": 14
			},
			"@openzeppelin/contracts/utils/introspection/IERC165.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							2047
						]
					},
					"id": 2048,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2037,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "115:24:15"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"documentation": {
								"id": 2038,
								"nodeType": "StructuredDocumentation",
								"src": "141:279:15",
								"text": " @dev Interface of the ERC165 standard, as defined in the\n https://eips.ethereum.org/EIPS/eip-165[EIP].\n Implementers can declare support of contract interfaces, which can then be\n queried by others ({ERC165Checker}).\n For an implementation, see {ERC165}."
							},
							"fullyImplemented": false,
							"id": 2047,
							"linearizedBaseContracts": [
								2047
							],
							"name": "IERC165",
							"nameLocation": "431:7:15",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 2039,
										"nodeType": "StructuredDocumentation",
										"src": "445:340:15",
										"text": " @dev Returns true if this contract implements the interface defined by\n `interfaceId`. See the corresponding\n https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified[EIP section]\n to learn more about how these ids are created.\n This function call must use less than 30 000 gas."
									},
									"functionSelector": "01ffc9a7",
									"id": 2046,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "799:17:15",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2042,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2041,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "824:11:15",
												"nodeType": "VariableDeclaration",
												"scope": 2046,
												"src": "817:18:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 2040,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "817:6:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "816:20:15"
									},
									"returnParameters": {
										"id": 2045,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2044,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2046,
												"src": "860:4:15",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 2043,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "860:4:15",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "859:6:15"
									},
									"scope": 2047,
									"src": "790:76:15",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2048,
							"src": "421:447:15",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "115:754:15"
				},
				"id": 15
			},
			"src/smartcontracts/CryptoQuestSwap.sol": {
				"ast": {
					"absolutePath": "src/smartcontracts/CryptoQuestSwap.sol",
					"exportedSymbols": {
						"AccessControlUpgradeable": [
							362
						],
						"ContextUpgradeable": [
							1038
						],
						"CryptoQuestSwap": [
							2991
						],
						"ERC165Upgradeable": [
							1254
						],
						"ERC1967Utils": [
							1662
						],
						"IAccessControl": [
							1349
						],
						"IERC165Upgradeable": [
							1266
						],
						"IERC1822Proxiable": [
							1359
						],
						"IERC20Upgradeable": [
							876
						],
						"IERC721Upgradeable": [
							992
						],
						"Initializable": [
							616
						],
						"PausableUpgradeable": [
							1214
						],
						"UUPSUpgradeable": [
							798
						]
					},
					"id": 2992,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 2049,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".25"
							],
							"nodeType": "PragmaDirective",
							"src": "81:24:16"
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/token/ERC20/IERC20Upgradeable.sol",
							"id": 2050,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2992,
							"sourceUnit": 877,
							"src": "107:79:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/token/ERC721/IERC721Upgradeable.sol",
							"id": 2051,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2992,
							"sourceUnit": 993,
							"src": "187:81:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/utils/PausableUpgradeable.sol",
							"id": 2052,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2992,
							"sourceUnit": 1215,
							"src": "269:75:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/access/AccessControlUpgradeable.sol",
							"id": 2053,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2992,
							"sourceUnit": 363,
							"src": "345:81:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
							"id": 2054,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2992,
							"sourceUnit": 617,
							"src": "427:75:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"file": "@openzeppelin/contracts-upgradeable/proxy/utils/UUPSUpgradeable.sol",
							"id": 2055,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 2992,
							"sourceUnit": 799,
							"src": "503:77:16",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 2057,
										"name": "Initializable",
										"nameLocations": [
											"666:13:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 616,
										"src": "666:13:16"
									},
									"id": 2058,
									"nodeType": "InheritanceSpecifier",
									"src": "666:13:16"
								},
								{
									"baseName": {
										"id": 2059,
										"name": "PausableUpgradeable",
										"nameLocations": [
											"681:19:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 1214,
										"src": "681:19:16"
									},
									"id": 2060,
									"nodeType": "InheritanceSpecifier",
									"src": "681:19:16"
								},
								{
									"baseName": {
										"id": 2061,
										"name": "AccessControlUpgradeable",
										"nameLocations": [
											"702:24:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 362,
										"src": "702:24:16"
									},
									"id": 2062,
									"nodeType": "InheritanceSpecifier",
									"src": "702:24:16"
								},
								{
									"baseName": {
										"id": 2063,
										"name": "UUPSUpgradeable",
										"nameLocations": [
											"728:15:16"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 798,
										"src": "728:15:16"
									},
									"id": 2064,
									"nodeType": "InheritanceSpecifier",
									"src": "728:15:16"
								}
							],
							"canonicalName": "CryptoQuestSwap",
							"contractDependencies": [],
							"contractKind": "contract",
							"documentation": {
								"id": 2056,
								"nodeType": "StructuredDocumentation",
								"src": "582:56:16",
								"text": "@custom:security-contact jacquedegraff@creodamo.com"
							},
							"fullyImplemented": true,
							"id": 2991,
							"linearizedBaseContracts": [
								2991,
								798,
								1359,
								362,
								1254,
								2047,
								1349,
								1214,
								1038,
								616
							],
							"name": "CryptoQuestSwap",
							"nameLocation": "647:15:16",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"functionSelector": "e63ab1e9",
									"id": 2069,
									"mutability": "constant",
									"name": "PAUSER_ROLE",
									"nameLocation": "774:11:16",
									"nodeType": "VariableDeclaration",
									"scope": 2991,
									"src": "750:62:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2065,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "750:7:16",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "5041555345525f524f4c45",
												"id": 2067,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "798:13:16",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
													"typeString": "literal_string \"PAUSER_ROLE\""
												},
												"value": "PAUSER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_65d7a28e3265b37a6474929f336521b332c1681b933f6cb9f3376673440d862a",
													"typeString": "literal_string \"PAUSER_ROLE\""
												}
											],
											"id": 2066,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "788:9:16",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 2068,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "788:24:16",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "f72c0d8b",
									"id": 2074,
									"mutability": "constant",
									"name": "UPGRADER_ROLE",
									"nameLocation": "842:13:16",
									"nodeType": "VariableDeclaration",
									"scope": 2991,
									"src": "818:66:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2070,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "818:7:16",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "55504752414445525f524f4c45",
												"id": 2072,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "868:15:16",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3",
													"typeString": "literal_string \"UPGRADER_ROLE\""
												},
												"value": "UPGRADER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_189ab7a9244df0848122154315af71fe140f3db0fe014031783b0946b8c9d2e3",
													"typeString": "literal_string \"UPGRADER_ROLE\""
												}
											],
											"id": 2071,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "858:9:16",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 2073,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "858:26:16",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "242f0551",
									"id": 2079,
									"mutability": "constant",
									"name": "LIQUIDITY_MANAGER_ROLE",
									"nameLocation": "914:22:16",
									"nodeType": "VariableDeclaration",
									"scope": 2991,
									"src": "890:84:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 2075,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "890:7:16",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"arguments": [
											{
												"hexValue": "4c49515549444954595f4d414e414745525f524f4c45",
												"id": 2077,
												"isConstant": false,
												"isLValue": false,
												"isPure": true,
												"kind": "string",
												"lValueRequested": false,
												"nodeType": "Literal",
												"src": "949:24:16",
												"typeDescriptions": {
													"typeIdentifier": "t_stringliteral_77e60b99a50d27fb027f6912a507d956105b4148adab27a86d235c8bcca8fa2f",
													"typeString": "literal_string \"LIQUIDITY_MANAGER_ROLE\""
												},
												"value": "LIQUIDITY_MANAGER_ROLE"
											}
										],
										"expression": {
											"argumentTypes": [
												{
													"typeIdentifier": "t_stringliteral_77e60b99a50d27fb027f6912a507d956105b4148adab27a86d235c8bcca8fa2f",
													"typeString": "literal_string \"LIQUIDITY_MANAGER_ROLE\""
												}
											],
											"id": 2076,
											"name": "keccak256",
											"nodeType": "Identifier",
											"overloadedDeclarations": [],
											"referencedDeclaration": 4294967288,
											"src": "939:9:16",
											"typeDescriptions": {
												"typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
												"typeString": "function (bytes memory) pure returns (bytes32)"
											}
										},
										"id": 2078,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "functionCall",
										"lValueRequested": false,
										"nameLocations": [],
										"names": [],
										"nodeType": "FunctionCall",
										"src": "939:35:16",
										"tryCall": false,
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"visibility": "public"
								},
								{
									"constant": true,
									"functionSelector": "2d11c58a",
									"id": 2082,
									"mutability": "constant",
									"name": "FEE_RATE",
									"nameLocation": "1005:8:16",
									"nodeType": "VariableDeclaration",
									"scope": 2991,
									"src": "981:36:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 2080,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "981:7:16",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"value": {
										"hexValue": "33",
										"id": 2081,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "1016:1:16",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_3_by_1",
											"typeString": "int_const 3"
										},
										"value": "3"
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "34aab064",
									"id": 2085,
									"mutability": "mutable",
									"name": "cqtToken",
									"nameLocation": "1061:8:16",
									"nodeType": "VariableDeclaration",
									"scope": 2991,
									"src": "1036:33:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC20Upgradeable_$876",
										"typeString": "contract IERC20Upgradeable"
									},
									"typeName": {
										"id": 2084,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2083,
											"name": "IERC20Upgradeable",
											"nameLocations": [
												"1036:17:16"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 876,
											"src": "1036:17:16"
										},
										"referencedDeclaration": 876,
										"src": "1036:17:16",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC20Upgradeable_$876",
											"typeString": "contract IERC20Upgradeable"
										}
									},
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "da069683",
									"id": 2088,
									"mutability": "mutable",
									"name": "cqtNFT",
									"nameLocation": "1101:6:16",
									"nodeType": "VariableDeclaration",
									"scope": 2991,
									"src": "1075:32:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_contract$_IERC721Upgradeable_$992",
										"typeString": "contract IERC721Upgradeable"
									},
									"typeName": {
										"id": 2087,
										"nodeType": "UserDefinedTypeName",
										"pathNode": {
											"id": 2086,
											"name": "IERC721Upgradeable",
											"nameLocations": [
												"1075:18:16"
											],
											"nodeType": "IdentifierPath",
											"referencedDeclaration": 992,
											"src": "1075:18:16"
										},
										"referencedDeclaration": 992,
										"src": "1075:18:16",
										"typeDescriptions": {
											"typeIdentifier": "t_contract$_IERC721Upgradeable_$992",
											"typeString": "contract IERC721Upgradeable"
										}
									},
									"visibility": "public"
								},
								{
									"canonicalName": "CryptoQuestSwap.LiquidityPool",
									"id": 2099,
									"members": [
										{
											"constant": false,
											"id": 2090,
											"mutability": "mutable",
											"name": "tokenAmount",
											"nameLocation": "1153:11:16",
											"nodeType": "VariableDeclaration",
											"scope": 2099,
											"src": "1145:19:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2089,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1145:7:16",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2092,
											"mutability": "mutable",
											"name": "ethAmount",
											"nameLocation": "1182:9:16",
											"nodeType": "VariableDeclaration",
											"scope": 2099,
											"src": "1174:17:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2091,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1174:7:16",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2094,
											"mutability": "mutable",
											"name": "totalLiquidity",
											"nameLocation": "1209:14:16",
											"nodeType": "VariableDeclaration",
											"scope": 2099,
											"src": "1201:22:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_uint256",
												"typeString": "uint256"
											},
											"typeName": {
												"id": 2093,
												"name": "uint256",
												"nodeType": "ElementaryTypeName",
												"src": "1201:7:16",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												}
											},
											"visibility": "internal"
										},
										{
											"constant": false,
											"id": 2098,
											"mutability": "mutable",
											"name": "liquidity",
											"nameLocation": "1261:9:16",
											"nodeType": "VariableDeclaration",
											"scope": 2099,
											"src": "1233:37:16",
											"stateVariable": false,
											"storageLocation": "default",
											"typeDescriptions": {
												"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
												"typeString": "mapping(address => uint256)"
											},
											"typeName": {
												"id": 2097,
												"keyName": "",
												"keyNameLocation": "-1:-1:-1",
												"keyType": {
													"id": 2095,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1241:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"nodeType": "Mapping",
												"src": "1233:27:16",
												"typeDescriptions": {
													"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
													"typeString": "mapping(address => uint256)"
												},
												"valueName": "",
												"valueNameLocation": "-1:-1:-1",
												"valueType": {
													"id": 2096,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1252:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												}
											},
											"visibility": "internal"
										}
									],
									"name": "LiquidityPool",
									"nameLocation": "1121:13:16",
									"nodeType": "StructDefinition",
									"scope": 2991,
									"src": "1114:163:16",
									"visibility": "public"
								},
								{
									"constant": false,
									"functionSelector": "0b0fd47e",
									"id": 2104,
									"mutability": "mutable",
									"name": "liquidityPools",
									"nameLocation": "1324:14:16",
									"nodeType": "VariableDeclaration",
									"scope": 2991,
									"src": "1283:55:16",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_address_$_t_struct$_LiquidityPool_$2099_storage_$",
										"typeString": "mapping(address => struct CryptoQuestSwap.LiquidityPool)"
									},
									"typeName": {
										"id": 2103,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 2100,
											"name": "address",
											"nodeType": "ElementaryTypeName",
											"src": "1291:7:16",
											"typeDescriptions": {
												"typeIdentifier": "t_address",
												"typeString": "address"
											}
										},
										"nodeType": "Mapping",
										"src": "1283:33:16",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_address_$_t_struct$_LiquidityPool_$2099_storage_$",
											"typeString": "mapping(address => struct CryptoQuestSwap.LiquidityPool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 2102,
											"nodeType": "UserDefinedTypeName",
											"pathNode": {
												"id": 2101,
												"name": "LiquidityPool",
												"nameLocations": [
													"1302:13:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 2099,
												"src": "1302:13:16"
											},
											"referencedDeclaration": 2099,
											"src": "1302:13:16",
											"typeDescriptions": {
												"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
												"typeString": "struct CryptoQuestSwap.LiquidityPool"
											}
										}
									},
									"visibility": "public"
								},
								{
									"anonymous": false,
									"eventSelector": "4a1a2a6176e9646d9e3157f7c2ab3c499f18337c0b0828cfb28e0a61de4a11f7",
									"id": 2116,
									"name": "LiquidityAdded",
									"nameLocation": "1351:14:16",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2115,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2106,
												"indexed": true,
												"mutability": "mutable",
												"name": "provider",
												"nameLocation": "1382:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 2116,
												"src": "1366:24:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2105,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1366:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2108,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1408:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2116,
												"src": "1392:21:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2107,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1392:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2110,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "1423:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 2116,
												"src": "1415:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2109,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1415:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2112,
												"indexed": false,
												"mutability": "mutable",
												"name": "ethAmount",
												"nameLocation": "1444:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 2116,
												"src": "1436:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2111,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1436:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2114,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1463:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 2116,
												"src": "1455:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2113,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1455:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1365:108:16"
									},
									"src": "1345:129:16"
								},
								{
									"anonymous": false,
									"eventSelector": "bc7d19d505c7ec4db83f3b51f19fb98c4c8a99922e7839d1ee608dfbee29501b",
									"id": 2128,
									"name": "LiquidityRemoved",
									"nameLocation": "1485:16:16",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2127,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2118,
												"indexed": true,
												"mutability": "mutable",
												"name": "provider",
												"nameLocation": "1518:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 2128,
												"src": "1502:24:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2117,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1502:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2120,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1544:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2128,
												"src": "1528:21:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2119,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1528:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2122,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "1559:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 2128,
												"src": "1551:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2121,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1551:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2124,
												"indexed": false,
												"mutability": "mutable",
												"name": "ethAmount",
												"nameLocation": "1580:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 2128,
												"src": "1572:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2123,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1572:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2126,
												"indexed": false,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "1599:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 2128,
												"src": "1591:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2125,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1591:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1501:108:16"
									},
									"src": "1479:131:16"
								},
								{
									"anonymous": false,
									"eventSelector": "30b60ee4dc75c0fb04420331b13e9ad7f8ff8fc51eac9c97d36fb20ccbe09d66",
									"id": 2138,
									"name": "TokenSwapped",
									"nameLocation": "1621:12:16",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2137,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2130,
												"indexed": true,
												"mutability": "mutable",
												"name": "swapper",
												"nameLocation": "1650:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2138,
												"src": "1634:23:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2129,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1634:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2132,
												"indexed": true,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "1675:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2138,
												"src": "1659:21:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2131,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1659:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2134,
												"indexed": false,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "1690:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 2138,
												"src": "1682:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2133,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1682:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2136,
												"indexed": false,
												"mutability": "mutable",
												"name": "ethAmount",
												"nameLocation": "1711:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 2138,
												"src": "1703:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2135,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1703:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1633:88:16"
									},
									"src": "1615:107:16"
								},
								{
									"anonymous": false,
									"eventSelector": "9181665db8d8d5fcce186f7b2cfebe8fbcdc3a003664bbfce2e790f57b076e65",
									"id": 2148,
									"name": "NFTSwapped",
									"nameLocation": "1733:10:16",
									"nodeType": "EventDefinition",
									"parameters": {
										"id": 2147,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2140,
												"indexed": true,
												"mutability": "mutable",
												"name": "swapper",
												"nameLocation": "1760:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2148,
												"src": "1744:23:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2139,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1744:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2142,
												"indexed": true,
												"mutability": "mutable",
												"name": "nftContract",
												"nameLocation": "1785:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 2148,
												"src": "1769:27:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2141,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1769:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2144,
												"indexed": true,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "1814:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2148,
												"src": "1798:23:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2143,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1798:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2146,
												"indexed": false,
												"mutability": "mutable",
												"name": "ethAmount",
												"nameLocation": "1831:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 2148,
												"src": "1823:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2145,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1823:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1743:98:16"
									},
									"src": "1727:115:16"
								},
								{
									"body": {
										"id": 2155,
										"nodeType": "Block",
										"src": "1915:39:16",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2152,
														"name": "_disableInitializers",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 584,
														"src": "1925:20:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2153,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1925:22:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2154,
												"nodeType": "ExpressionStatement",
												"src": "1925:22:16"
											}
										]
									},
									"documentation": {
										"id": 2149,
										"nodeType": "StructuredDocumentation",
										"src": "1848:48:16",
										"text": "@custom:oz-upgrades-unsafe-allow constructor"
									},
									"id": 2156,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2150,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1912:2:16"
									},
									"returnParameters": {
										"id": 2151,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1915:0:16"
									},
									"scope": 2991,
									"src": "1901:53:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2214,
										"nodeType": "Block",
										"src": "2183:411:16",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2173,
														"name": "__Pausable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1090,
														"src": "2193:15:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2174,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2193:17:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2175,
												"nodeType": "ExpressionStatement",
												"src": "2193:17:16"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2176,
														"name": "__AccessControl_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 63,
														"src": "2220:20:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2177,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2220:22:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2178,
												"nodeType": "ExpressionStatement",
												"src": "2220:22:16"
											},
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2179,
														"name": "__UUPSUpgradeable_init",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 670,
														"src": "2252:22:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2180,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2252:24:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2181,
												"nodeType": "ExpressionStatement",
												"src": "2252:24:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2183,
															"name": "DEFAULT_ADMIN_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 28,
															"src": "2298:18:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2184,
															"name": "defaultAdmin",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2158,
															"src": "2318:12:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2182,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "2287:10:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 2185,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2287:44:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2186,
												"nodeType": "ExpressionStatement",
												"src": "2287:44:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2188,
															"name": "PAUSER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2069,
															"src": "2352:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2189,
															"name": "pauser",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2160,
															"src": "2365:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2187,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "2341:10:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 2190,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2341:31:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2191,
												"nodeType": "ExpressionStatement",
												"src": "2341:31:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2193,
															"name": "UPGRADER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2074,
															"src": "2393:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2194,
															"name": "upgrader",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2162,
															"src": "2408:8:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2192,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "2382:10:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 2195,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2382:35:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2196,
												"nodeType": "ExpressionStatement",
												"src": "2382:35:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2198,
															"name": "LIQUIDITY_MANAGER_ROLE",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2079,
															"src": "2438:22:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															}
														},
														{
															"id": 2199,
															"name": "liquidityManager",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2164,
															"src": "2462:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes32",
																"typeString": "bytes32"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 2197,
														"name": "_grantRole",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 315,
														"src": "2427:10:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$_t_bool_$",
															"typeString": "function (bytes32,address) returns (bool)"
														}
													},
													"id": 2200,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2427:52:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2201,
												"nodeType": "ExpressionStatement",
												"src": "2427:52:16"
											},
											{
												"expression": {
													"id": 2206,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2202,
														"name": "cqtToken",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2085,
														"src": "2490:8:16",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Upgradeable_$876",
															"typeString": "contract IERC20Upgradeable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2204,
																"name": "cqtTokenAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2166,
																"src": "2519:15:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2203,
															"name": "IERC20Upgradeable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 876,
															"src": "2501:17:16",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$876_$",
																"typeString": "type(contract IERC20Upgradeable)"
															}
														},
														"id": 2205,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2501:34:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC20Upgradeable_$876",
															"typeString": "contract IERC20Upgradeable"
														}
													},
													"src": "2490:45:16",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC20Upgradeable_$876",
														"typeString": "contract IERC20Upgradeable"
													}
												},
												"id": 2207,
												"nodeType": "ExpressionStatement",
												"src": "2490:45:16"
											},
											{
												"expression": {
													"id": 2212,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2208,
														"name": "cqtNFT",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2088,
														"src": "2545:6:16",
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721Upgradeable_$992",
															"typeString": "contract IERC721Upgradeable"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [
															{
																"id": 2210,
																"name": "cqtNFTAddress",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2168,
																"src": "2573:13:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															],
															"id": 2209,
															"name": "IERC721Upgradeable",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 992,
															"src": "2554:18:16",
															"typeDescriptions": {
																"typeIdentifier": "t_type$_t_contract$_IERC721Upgradeable_$992_$",
																"typeString": "type(contract IERC721Upgradeable)"
															}
														},
														"id": 2211,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "typeConversion",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "2554:33:16",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_contract$_IERC721Upgradeable_$992",
															"typeString": "contract IERC721Upgradeable"
														}
													},
													"src": "2545:42:16",
													"typeDescriptions": {
														"typeIdentifier": "t_contract$_IERC721Upgradeable_$992",
														"typeString": "contract IERC721Upgradeable"
													}
												},
												"id": 2213,
												"nodeType": "ExpressionStatement",
												"src": "2545:42:16"
											}
										]
									},
									"functionSelector": "cc2a9a5b",
									"id": 2215,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2171,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2170,
												"name": "initializer",
												"nameLocations": [
													"2164:11:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 470,
												"src": "2164:11:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "2164:11:16"
										}
									],
									"name": "initialize",
									"nameLocation": "1969:10:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2169,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2158,
												"mutability": "mutable",
												"name": "defaultAdmin",
												"nameLocation": "1997:12:16",
												"nodeType": "VariableDeclaration",
												"scope": 2215,
												"src": "1989:20:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2157,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1989:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2160,
												"mutability": "mutable",
												"name": "pauser",
												"nameLocation": "2027:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2215,
												"src": "2019:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2159,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2019:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2162,
												"mutability": "mutable",
												"name": "upgrader",
												"nameLocation": "2051:8:16",
												"nodeType": "VariableDeclaration",
												"scope": 2215,
												"src": "2043:16:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2161,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2043:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2164,
												"mutability": "mutable",
												"name": "liquidityManager",
												"nameLocation": "2077:16:16",
												"nodeType": "VariableDeclaration",
												"scope": 2215,
												"src": "2069:24:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2163,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2069:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2166,
												"mutability": "mutable",
												"name": "cqtTokenAddress",
												"nameLocation": "2111:15:16",
												"nodeType": "VariableDeclaration",
												"scope": 2215,
												"src": "2103:23:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2165,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2103:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2168,
												"mutability": "mutable",
												"name": "cqtNFTAddress",
												"nameLocation": "2144:13:16",
												"nodeType": "VariableDeclaration",
												"scope": 2215,
												"src": "2136:21:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2167,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2136:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1979:184:16"
									},
									"returnParameters": {
										"id": 2172,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2183:0:16"
									},
									"scope": 2991,
									"src": "1960:634:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2224,
										"nodeType": "Block",
										"src": "2646:25:16",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2221,
														"name": "_pause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1189,
														"src": "2656:6:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2222,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2656:8:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2223,
												"nodeType": "ExpressionStatement",
												"src": "2656:8:16"
											}
										]
									},
									"functionSelector": "8456cb59",
									"id": 2225,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2218,
													"name": "PAUSER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2069,
													"src": "2633:11:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2219,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2217,
												"name": "onlyRole",
												"nameLocations": [
													"2624:8:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "2624:8:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "2624:21:16"
										}
									],
									"name": "pause",
									"nameLocation": "2609:5:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2216,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2614:2:16"
									},
									"returnParameters": {
										"id": 2220,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2646:0:16"
									},
									"scope": 2991,
									"src": "2600:71:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2234,
										"nodeType": "Block",
										"src": "2725:27:16",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"id": 2231,
														"name": "_unpause",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 1213,
														"src": "2735:8:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
															"typeString": "function ()"
														}
													},
													"id": 2232,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2735:10:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2233,
												"nodeType": "ExpressionStatement",
												"src": "2735:10:16"
											}
										]
									},
									"functionSelector": "3f4ba83a",
									"id": 2235,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2228,
													"name": "PAUSER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2069,
													"src": "2712:11:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2229,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2227,
												"name": "onlyRole",
												"nameLocations": [
													"2703:8:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "2703:8:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "2703:21:16"
										}
									],
									"name": "unpause",
									"nameLocation": "2686:7:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2226,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2693:2:16"
									},
									"returnParameters": {
										"id": 2230,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "2725:0:16"
									},
									"scope": 2991,
									"src": "2677:75:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 2391,
										"nodeType": "Block",
										"src": "2865:1142:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2249,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2247,
																"name": "tokenAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2239,
																"src": "2883:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2248,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2897:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2883:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e20616d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 2250,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2900:40:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1a4430203dcf8abbbd3446dbfc36d404c15a36b152eee41d8f82843f3bcf306f",
																"typeString": "literal_string \"Token amount must be greater than zero\""
															},
															"value": "Token amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1a4430203dcf8abbbd3446dbfc36d404c15a36b152eee41d8f82843f3bcf306f",
																"typeString": "literal_string \"Token amount must be greater than zero\""
															}
														],
														"id": 2246,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2875:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2251,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2875:66:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2252,
												"nodeType": "ExpressionStatement",
												"src": "2875:66:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2257,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2254,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "2959:3:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2255,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "2963:5:16",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "2959:9:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2256,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "2971:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "2959:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45544820616d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 2258,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2974:38:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6f2e13a40c8d5acc1536a801b548e60d12893ddab9aa84254a90ac0e27771d7b",
																"typeString": "literal_string \"ETH amount must be greater than zero\""
															},
															"value": "ETH amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6f2e13a40c8d5acc1536a801b548e60d12893ddab9aa84254a90ac0e27771d7b",
																"typeString": "literal_string \"ETH amount must be greater than zero\""
															}
														],
														"id": 2253,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "2951:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2259,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2951:62:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2260,
												"nodeType": "ExpressionStatement",
												"src": "2951:62:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2265,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3062:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2266,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3066:6:16",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3062:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2269,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3082:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_CryptoQuestSwap_$2991",
																		"typeString": "contract CryptoQuestSwap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_CryptoQuestSwap_$2991",
																		"typeString": "contract CryptoQuestSwap"
																	}
																],
																"id": 2268,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3074:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2267,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3074:7:16",
																	"typeDescriptions": {}
																}
															},
															"id": 2270,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3074:13:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2271,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2239,
															"src": "3089:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2262,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2237,
																	"src": "3042:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2261,
																"name": "IERC20Upgradeable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 876,
																"src": "3024:17:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$876_$",
																	"typeString": "type(contract IERC20Upgradeable)"
																}
															},
															"id": 2263,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3024:24:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$876",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"id": 2264,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3049:12:16",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 875,
														"src": "3024:37:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 2272,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3024:77:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2273,
												"nodeType": "ExpressionStatement",
												"src": "3024:77:16"
											},
											{
												"assignments": [
													2276
												],
												"declarations": [
													{
														"constant": false,
														"id": 2276,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "3134:4:16",
														"nodeType": "VariableDeclaration",
														"scope": 2391,
														"src": "3112:26:16",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
															"typeString": "struct CryptoQuestSwap.LiquidityPool"
														},
														"typeName": {
															"id": 2275,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2274,
																"name": "LiquidityPool",
																"nameLocations": [
																	"3112:13:16"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2099,
																"src": "3112:13:16"
															},
															"referencedDeclaration": 2099,
															"src": "3112:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
																"typeString": "struct CryptoQuestSwap.LiquidityPool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2280,
												"initialValue": {
													"baseExpression": {
														"id": 2277,
														"name": "liquidityPools",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2104,
														"src": "3141:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_LiquidityPool_$2099_storage_$",
															"typeString": "mapping(address => struct CryptoQuestSwap.LiquidityPool storage ref)"
														}
													},
													"id": 2279,
													"indexExpression": {
														"id": 2278,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2237,
														"src": "3156:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "3141:21:16",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage",
														"typeString": "struct CryptoQuestSwap.LiquidityPool storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3112:50:16"
											},
											{
												"assignments": [
													2282
												],
												"declarations": [
													{
														"constant": false,
														"id": 2282,
														"mutability": "mutable",
														"name": "liquidity",
														"nameLocation": "3180:9:16",
														"nodeType": "VariableDeclaration",
														"scope": 2391,
														"src": "3172:17:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2281,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "3172:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2283,
												"nodeType": "VariableDeclarationStatement",
												"src": "3172:17:16"
											},
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2287,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 2284,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2276,
															"src": "3204:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
																"typeString": "struct CryptoQuestSwap.LiquidityPool storage pointer"
															}
														},
														"id": 2285,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3209:14:16",
														"memberName": "totalLiquidity",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2094,
														"src": "3204:19:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "==",
													"rightExpression": {
														"hexValue": "30",
														"id": 2286,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "3227:1:16",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "3204:24:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 2362,
													"nodeType": "Block",
													"src": "3368:431:16",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		"id": 2315,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2310,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 2307,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2276,
																					"src": "3390:4:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
																						"typeString": "struct CryptoQuestSwap.LiquidityPool storage pointer"
																					}
																				},
																				"id": 2308,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3395:9:16",
																				"memberName": "ethAmount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2092,
																				"src": "3390:14:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 2309,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3407:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "3390:18:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "&&",
																		"rightExpression": {
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2314,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 2311,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2276,
																					"src": "3412:4:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
																						"typeString": "struct CryptoQuestSwap.LiquidityPool storage pointer"
																					}
																				},
																				"id": 2312,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3417:11:16",
																				"memberName": "tokenAmount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2090,
																				"src": "3412:16:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": ">",
																			"rightExpression": {
																				"hexValue": "30",
																				"id": 2313,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"kind": "number",
																				"lValueRequested": false,
																				"nodeType": "Literal",
																				"src": "3431:1:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_rational_0_by_1",
																					"typeString": "int_const 0"
																				},
																				"value": "0"
																			},
																			"src": "3412:20:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bool",
																				"typeString": "bool"
																			}
																		},
																		"src": "3390:42:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "496e76616c696420706f6f6c207374617465",
																		"id": 2316,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3434:20:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_33478ef0b103c4282d20f292429d8895d67f7b692c5602e5085240f8efab8cb9",
																			"typeString": "literal_string \"Invalid pool state\""
																		},
																		"value": "Invalid pool state"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_33478ef0b103c4282d20f292429d8895d67f7b692c5602e5085240f8efab8cb9",
																			"typeString": "literal_string \"Invalid pool state\""
																		}
																	],
																	"id": 2306,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3382:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2317,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3382:73:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2318,
															"nodeType": "ExpressionStatement",
															"src": "3382:73:16"
														},
														{
															"assignments": [
																2320
															],
															"declarations": [
																{
																	"constant": false,
																	"id": 2320,
																	"mutability": "mutable",
																	"name": "ethAmountRatio",
																	"nameLocation": "3478:14:16",
																	"nodeType": "VariableDeclaration",
																	"scope": 2362,
																	"src": "3470:22:16",
																	"stateVariable": false,
																	"storageLocation": "default",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"typeName": {
																		"id": 2319,
																		"name": "uint256",
																		"nodeType": "ElementaryTypeName",
																		"src": "3470:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"visibility": "internal"
																}
															],
															"id": 2329,
															"initialValue": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2328,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"components": [
																		{
																			"commonType": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			},
																			"id": 2324,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"leftExpression": {
																				"expression": {
																					"id": 2321,
																					"name": "pool",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2276,
																					"src": "3496:4:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
																						"typeString": "struct CryptoQuestSwap.LiquidityPool storage pointer"
																					}
																				},
																				"id": 2322,
																				"isConstant": false,
																				"isLValue": true,
																				"isPure": false,
																				"lValueRequested": false,
																				"memberLocation": "3501:9:16",
																				"memberName": "ethAmount",
																				"nodeType": "MemberAccess",
																				"referencedDeclaration": 2092,
																				"src": "3496:14:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"nodeType": "BinaryOperation",
																			"operator": "*",
																			"rightExpression": {
																				"id": 2323,
																				"name": "tokenAmount",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 2239,
																				"src": "3513:11:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			},
																			"src": "3496:28:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		}
																	],
																	"id": 2325,
																	"isConstant": false,
																	"isInlineArray": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"nodeType": "TupleExpression",
																	"src": "3495:30:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "/",
																"rightExpression": {
																	"expression": {
																		"id": 2326,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2276,
																		"src": "3528:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
																			"typeString": "struct CryptoQuestSwap.LiquidityPool storage pointer"
																		}
																	},
																	"id": 2327,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3533:11:16",
																	"memberName": "tokenAmount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2090,
																	"src": "3528:16:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3495:49:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "VariableDeclarationStatement",
															"src": "3470:74:16"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 2334,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"expression": {
																				"id": 2331,
																				"name": "msg",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 4294967281,
																				"src": "3566:3:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_magic_message",
																					"typeString": "msg"
																				}
																			},
																			"id": 2332,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "3570:5:16",
																			"memberName": "value",
																			"nodeType": "MemberAccess",
																			"src": "3566:9:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": ">=",
																		"rightExpression": {
																			"id": 2333,
																			"name": "ethAmountRatio",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2320,
																			"src": "3579:14:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "3566:27:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		}
																	},
																	{
																		"hexValue": "496e73756666696369656e742045544820616d6f756e74",
																		"id": 2335,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "string",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "3595:25:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_stringliteral_e13bed7f8aeefd33ee70192a57e4073346ec44f058c4968b39d9c85f63742e91",
																			"typeString": "literal_string \"Insufficient ETH amount\""
																		},
																		"value": "Insufficient ETH amount"
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bool",
																			"typeString": "bool"
																		},
																		{
																			"typeIdentifier": "t_stringliteral_e13bed7f8aeefd33ee70192a57e4073346ec44f058c4968b39d9c85f63742e91",
																			"typeString": "literal_string \"Insufficient ETH amount\""
																		}
																	],
																	"id": 2330,
																	"name": "require",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [
																		4294967278,
																		4294967278,
																		4294967278
																	],
																	"referencedDeclaration": 4294967278,
																	"src": "3558:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
																		"typeString": "function (bool,string memory) pure"
																	}
																},
																"id": 2336,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3558:63:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 2337,
															"nodeType": "ExpressionStatement",
															"src": "3558:63:16"
														},
														{
															"expression": {
																"id": 2342,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2338,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2276,
																		"src": "3636:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
																			"typeString": "struct CryptoQuestSwap.LiquidityPool storage pointer"
																		}
																	},
																	"id": 2340,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "3641:11:16",
																	"memberName": "tokenAmount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2090,
																	"src": "3636:16:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"id": 2341,
																	"name": "tokenAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2239,
																	"src": "3656:11:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3636:31:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2343,
															"nodeType": "ExpressionStatement",
															"src": "3636:31:16"
														},
														{
															"expression": {
																"id": 2349,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2344,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2276,
																		"src": "3681:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
																			"typeString": "struct CryptoQuestSwap.LiquidityPool storage pointer"
																		}
																	},
																	"id": 2346,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "3686:9:16",
																	"memberName": "ethAmount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2092,
																	"src": "3681:14:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "+=",
																"rightHandSide": {
																	"expression": {
																		"id": 2347,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3699:3:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2348,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3703:5:16",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "3699:9:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3681:27:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2350,
															"nodeType": "ExpressionStatement",
															"src": "3681:27:16"
														},
														{
															"expression": {
																"id": 2360,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2351,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2282,
																	"src": "3722:9:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2359,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 2355,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"expression": {
																						"id": 2352,
																						"name": "pool",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 2276,
																						"src": "3735:4:16",
																						"typeDescriptions": {
																							"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
																							"typeString": "struct CryptoQuestSwap.LiquidityPool storage pointer"
																						}
																					},
																					"id": 2353,
																					"isConstant": false,
																					"isLValue": true,
																					"isPure": false,
																					"lValueRequested": false,
																					"memberLocation": "3740:14:16",
																					"memberName": "totalLiquidity",
																					"nodeType": "MemberAccess",
																					"referencedDeclaration": 2094,
																					"src": "3735:19:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "*",
																				"rightExpression": {
																					"id": 2354,
																					"name": "tokenAmount",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 2239,
																					"src": "3757:11:16",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "3735:33:16",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 2356,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "3734:35:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"expression": {
																			"id": 2357,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2276,
																			"src": "3772:4:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
																				"typeString": "struct CryptoQuestSwap.LiquidityPool storage pointer"
																			}
																		},
																		"id": 2358,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3777:11:16",
																		"memberName": "tokenAmount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2090,
																		"src": "3772:16:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "3734:54:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3722:66:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2361,
															"nodeType": "ExpressionStatement",
															"src": "3722:66:16"
														}
													]
												},
												"id": 2363,
												"nodeType": "IfStatement",
												"src": "3200:599:16",
												"trueBody": {
													"id": 2305,
													"nodeType": "Block",
													"src": "3230:132:16",
													"statements": [
														{
															"expression": {
																"id": 2292,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2288,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2276,
																		"src": "3244:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
																			"typeString": "struct CryptoQuestSwap.LiquidityPool storage pointer"
																		}
																	},
																	"id": 2290,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "3249:11:16",
																	"memberName": "tokenAmount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2090,
																	"src": "3244:16:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 2291,
																	"name": "tokenAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2239,
																	"src": "3263:11:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3244:30:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2293,
															"nodeType": "ExpressionStatement",
															"src": "3244:30:16"
														},
														{
															"expression": {
																"id": 2299,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"expression": {
																		"id": 2294,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2276,
																		"src": "3288:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
																			"typeString": "struct CryptoQuestSwap.LiquidityPool storage pointer"
																		}
																	},
																	"id": 2296,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": true,
																	"memberLocation": "3293:9:16",
																	"memberName": "ethAmount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2092,
																	"src": "3288:14:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"expression": {
																		"id": 2297,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "3305:3:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2298,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3309:5:16",
																	"memberName": "value",
																	"nodeType": "MemberAccess",
																	"src": "3305:9:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3288:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2300,
															"nodeType": "ExpressionStatement",
															"src": "3288:26:16"
														},
														{
															"expression": {
																"id": 2303,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 2301,
																	"name": "liquidity",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2282,
																	"src": "3328:9:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 2302,
																	"name": "tokenAmount",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2239,
																	"src": "3340:11:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "3328:23:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 2304,
															"nodeType": "ExpressionStatement",
															"src": "3328:23:16"
														}
													]
												}
											},
											{
												"expression": {
													"id": 2368,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2364,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2276,
															"src": "3809:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
																"typeString": "struct CryptoQuestSwap.LiquidityPool storage pointer"
															}
														},
														"id": 2366,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "3814:14:16",
														"memberName": "totalLiquidity",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2094,
														"src": "3809:19:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2367,
														"name": "liquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2282,
														"src": "3832:9:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3809:32:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2369,
												"nodeType": "ExpressionStatement",
												"src": "3809:32:16"
											},
											{
												"expression": {
													"id": 2377,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 2370,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2276,
																"src": "3851:4:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
																	"typeString": "struct CryptoQuestSwap.LiquidityPool storage pointer"
																}
															},
															"id": 2374,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3856:9:16",
															"memberName": "liquidity",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2098,
															"src": "3851:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2375,
														"indexExpression": {
															"expression": {
																"id": 2372,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3866:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2373,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3870:6:16",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3866:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "3851:26:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2376,
														"name": "liquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2282,
														"src": "3881:9:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3851:39:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2378,
												"nodeType": "ExpressionStatement",
												"src": "3851:39:16"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2380,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3921:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2381,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3925:6:16",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "3921:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2382,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2237,
															"src": "3933:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2383,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2239,
															"src": "3940:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 2384,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "3953:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2385,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3957:5:16",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "3953:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2386,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2282,
															"src": "3964:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2379,
														"name": "LiquidityAdded",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2116,
														"src": "3906:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint256)"
														}
													},
													"id": 2387,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3906:68:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2388,
												"nodeType": "EmitStatement",
												"src": "3901:73:16"
											},
											{
												"expression": {
													"id": 2389,
													"name": "liquidity",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2282,
													"src": "3991:9:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2245,
												"id": 2390,
												"nodeType": "Return",
												"src": "3984:16:16"
											}
										]
									},
									"functionSelector": "56688700",
									"id": 2392,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2242,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2241,
												"name": "whenNotPaused",
												"nameLocations": [
													"2833:13:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1116,
												"src": "2833:13:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "2833:13:16"
										}
									],
									"name": "addLiquidity",
									"nameLocation": "2767:12:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2240,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2237,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "2788:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2392,
												"src": "2780:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2236,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2780:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2239,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "2803:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 2392,
												"src": "2795:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2238,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2795:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2779:36:16"
									},
									"returnParameters": {
										"id": 2245,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2244,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2392,
												"src": "2856:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2243,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "2856:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2855:9:16"
									},
									"scope": 2991,
									"src": "2758:1249:16",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2499,
										"nodeType": "Block",
										"src": "4144:674:16",
										"statements": [
											{
												"assignments": [
													2407
												],
												"declarations": [
													{
														"constant": false,
														"id": 2407,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "4176:4:16",
														"nodeType": "VariableDeclaration",
														"scope": 2499,
														"src": "4154:26:16",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
															"typeString": "struct CryptoQuestSwap.LiquidityPool"
														},
														"typeName": {
															"id": 2406,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2405,
																"name": "LiquidityPool",
																"nameLocations": [
																	"4154:13:16"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2099,
																"src": "4154:13:16"
															},
															"referencedDeclaration": 2099,
															"src": "4154:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
																"typeString": "struct CryptoQuestSwap.LiquidityPool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2411,
												"initialValue": {
													"baseExpression": {
														"id": 2408,
														"name": "liquidityPools",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2104,
														"src": "4183:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_LiquidityPool_$2099_storage_$",
															"typeString": "mapping(address => struct CryptoQuestSwap.LiquidityPool storage ref)"
														}
													},
													"id": 2410,
													"indexExpression": {
														"id": 2409,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2394,
														"src": "4198:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "4183:21:16",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage",
														"typeString": "struct CryptoQuestSwap.LiquidityPool storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4154:50:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2419,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"baseExpression": {
																	"expression": {
																		"id": 2413,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2407,
																		"src": "4222:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
																			"typeString": "struct CryptoQuestSwap.LiquidityPool storage pointer"
																		}
																	},
																	"id": 2414,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4227:9:16",
																	"memberName": "liquidity",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2098,
																	"src": "4222:14:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																		"typeString": "mapping(address => uint256)"
																	}
																},
																"id": 2417,
																"indexExpression": {
																	"expression": {
																		"id": 2415,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4237:3:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2416,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4241:6:16",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4237:10:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"isConstant": false,
																"isLValue": true,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "IndexAccess",
																"src": "4222:26:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2418,
																"name": "liquidity",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2396,
																"src": "4252:9:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "4222:39:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74206c6971756964697479",
															"id": 2420,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4263:24:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad",
																"typeString": "literal_string \"Insufficient liquidity\""
															},
															"value": "Insufficient liquidity"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad",
																"typeString": "literal_string \"Insufficient liquidity\""
															}
														],
														"id": 2412,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4214:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2421,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4214:74:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2422,
												"nodeType": "ExpressionStatement",
												"src": "4214:74:16"
											},
											{
												"expression": {
													"id": 2432,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2423,
														"name": "tokenAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2401,
														"src": "4299:11:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2431,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2427,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 2424,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2407,
																			"src": "4314:4:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
																				"typeString": "struct CryptoQuestSwap.LiquidityPool storage pointer"
																			}
																		},
																		"id": 2425,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4319:11:16",
																		"memberName": "tokenAmount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2090,
																		"src": "4314:16:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2426,
																		"name": "liquidity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2396,
																		"src": "4333:9:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4314:28:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2428,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4313:30:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"expression": {
																"id": 2429,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2407,
																"src": "4346:4:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
																	"typeString": "struct CryptoQuestSwap.LiquidityPool storage pointer"
																}
															},
															"id": 2430,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4351:14:16",
															"memberName": "totalLiquidity",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2094,
															"src": "4346:19:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4313:52:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4299:66:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2433,
												"nodeType": "ExpressionStatement",
												"src": "4299:66:16"
											},
											{
												"expression": {
													"id": 2443,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 2434,
														"name": "ethAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2403,
														"src": "4375:9:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 2442,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 2438,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 2435,
																			"name": "pool",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 2407,
																			"src": "4388:4:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
																				"typeString": "struct CryptoQuestSwap.LiquidityPool storage pointer"
																			}
																		},
																		"id": 2436,
																		"isConstant": false,
																		"isLValue": true,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4393:9:16",
																		"memberName": "ethAmount",
																		"nodeType": "MemberAccess",
																		"referencedDeclaration": 2092,
																		"src": "4388:14:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "*",
																	"rightExpression": {
																		"id": 2437,
																		"name": "liquidity",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2396,
																		"src": "4405:9:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "4388:26:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 2439,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "4387:28:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"expression": {
																"id": 2440,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2407,
																"src": "4418:4:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
																	"typeString": "struct CryptoQuestSwap.LiquidityPool storage pointer"
																}
															},
															"id": 2441,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4423:14:16",
															"memberName": "totalLiquidity",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2094,
															"src": "4418:19:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "4387:50:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4375:62:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2444,
												"nodeType": "ExpressionStatement",
												"src": "4375:62:16"
											},
											{
												"expression": {
													"id": 2449,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2445,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2407,
															"src": "4448:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
																"typeString": "struct CryptoQuestSwap.LiquidityPool storage pointer"
															}
														},
														"id": 2447,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4453:11:16",
														"memberName": "tokenAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2090,
														"src": "4448:16:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 2448,
														"name": "tokenAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2401,
														"src": "4468:11:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4448:31:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2450,
												"nodeType": "ExpressionStatement",
												"src": "4448:31:16"
											},
											{
												"expression": {
													"id": 2455,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2451,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2407,
															"src": "4489:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
																"typeString": "struct CryptoQuestSwap.LiquidityPool storage pointer"
															}
														},
														"id": 2453,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4494:9:16",
														"memberName": "ethAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2092,
														"src": "4489:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 2454,
														"name": "ethAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2403,
														"src": "4507:9:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4489:27:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2456,
												"nodeType": "ExpressionStatement",
												"src": "4489:27:16"
											},
											{
												"expression": {
													"id": 2461,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2457,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2407,
															"src": "4526:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
																"typeString": "struct CryptoQuestSwap.LiquidityPool storage pointer"
															}
														},
														"id": 2459,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "4531:14:16",
														"memberName": "totalLiquidity",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2094,
														"src": "4526:19:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 2460,
														"name": "liquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2396,
														"src": "4549:9:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4526:32:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2462,
												"nodeType": "ExpressionStatement",
												"src": "4526:32:16"
											},
											{
												"expression": {
													"id": 2470,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"expression": {
																"id": 2463,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2407,
																"src": "4568:4:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
																	"typeString": "struct CryptoQuestSwap.LiquidityPool storage pointer"
																}
															},
															"id": 2467,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4573:9:16",
															"memberName": "liquidity",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2098,
															"src": "4568:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
																"typeString": "mapping(address => uint256)"
															}
														},
														"id": 2468,
														"indexExpression": {
															"expression": {
																"id": 2465,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4583:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2466,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4587:6:16",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4583:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "4568:26:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 2469,
														"name": "liquidity",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2396,
														"src": "4598:9:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "4568:39:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2471,
												"nodeType": "ExpressionStatement",
												"src": "4568:39:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2476,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4652:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2477,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4656:6:16",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4652:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2478,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2401,
															"src": "4664:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2473,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2394,
																	"src": "4636:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2472,
																"name": "IERC20Upgradeable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 876,
																"src": "4618:17:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$876_$",
																	"typeString": "type(contract IERC20Upgradeable)"
																}
															},
															"id": 2474,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4618:24:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$876",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"id": 2475,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4643:8:16",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 843,
														"src": "4618:33:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 2479,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4618:58:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2480,
												"nodeType": "ExpressionStatement",
												"src": "4618:58:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2487,
															"name": "ethAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2403,
															"src": "4715:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 2483,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "4694:3:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2484,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "4698:6:16",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "4694:10:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2482,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "4686:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 2481,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "4686:8:16",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 2485,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "4686:19:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 2486,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4706:8:16",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "4686:28:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2488,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4686:39:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2489,
												"nodeType": "ExpressionStatement",
												"src": "4686:39:16"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2491,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "4758:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2492,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "4762:6:16",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "4758:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2493,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2394,
															"src": "4770:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2494,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2401,
															"src": "4777:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2495,
															"name": "ethAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2403,
															"src": "4790:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2496,
															"name": "liquidity",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2396,
															"src": "4801:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2490,
														"name": "LiquidityRemoved",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2128,
														"src": "4741:16:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256,uint256)"
														}
													},
													"id": 2497,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4741:70:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2498,
												"nodeType": "EmitStatement",
												"src": "4736:75:16"
											}
										]
									},
									"functionSelector": "a201ccf6",
									"id": 2500,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2399,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2398,
												"name": "whenNotPaused",
												"nameLocations": [
													"4081:13:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1116,
												"src": "4081:13:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "4081:13:16"
										}
									],
									"name": "removeLiquidity",
									"nameLocation": "4022:15:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2397,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2394,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4046:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2500,
												"src": "4038:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2393,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4038:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2396,
												"mutability": "mutable",
												"name": "liquidity",
												"nameLocation": "4061:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 2500,
												"src": "4053:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2395,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4053:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4037:34:16"
									},
									"returnParameters": {
										"id": 2404,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2401,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "4112:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 2500,
												"src": "4104:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2400,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4104:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2403,
												"mutability": "mutable",
												"name": "ethAmount",
												"nameLocation": "4133:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 2500,
												"src": "4125:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2402,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4125:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4103:40:16"
									},
									"scope": 2991,
									"src": "4013:805:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2586,
										"nodeType": "Block",
										"src": "4915:612:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2513,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2510,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "4933:3:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2511,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "4937:5:16",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "4933:9:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2512,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "4945:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "4933:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45544820616d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 2514,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "4948:38:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6f2e13a40c8d5acc1536a801b548e60d12893ddab9aa84254a90ac0e27771d7b",
																"typeString": "literal_string \"ETH amount must be greater than zero\""
															},
															"value": "ETH amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6f2e13a40c8d5acc1536a801b548e60d12893ddab9aa84254a90ac0e27771d7b",
																"typeString": "literal_string \"ETH amount must be greater than zero\""
															}
														],
														"id": 2509,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "4925:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2515,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4925:62:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2516,
												"nodeType": "ExpressionStatement",
												"src": "4925:62:16"
											},
											{
												"assignments": [
													2519
												],
												"declarations": [
													{
														"constant": false,
														"id": 2519,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "5019:4:16",
														"nodeType": "VariableDeclaration",
														"scope": 2586,
														"src": "4997:26:16",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
															"typeString": "struct CryptoQuestSwap.LiquidityPool"
														},
														"typeName": {
															"id": 2518,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2517,
																"name": "LiquidityPool",
																"nameLocations": [
																	"4997:13:16"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2099,
																"src": "4997:13:16"
															},
															"referencedDeclaration": 2099,
															"src": "4997:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
																"typeString": "struct CryptoQuestSwap.LiquidityPool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2523,
												"initialValue": {
													"baseExpression": {
														"id": 2520,
														"name": "liquidityPools",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2104,
														"src": "5026:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_LiquidityPool_$2099_storage_$",
															"typeString": "mapping(address => struct CryptoQuestSwap.LiquidityPool storage ref)"
														}
													},
													"id": 2522,
													"indexExpression": {
														"id": 2521,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2502,
														"src": "5041:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5026:21:16",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage",
														"typeString": "struct CryptoQuestSwap.LiquidityPool storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4997:50:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2533,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2528,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2525,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2519,
																		"src": "5065:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
																			"typeString": "struct CryptoQuestSwap.LiquidityPool storage pointer"
																		}
																	},
																	"id": 2526,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5070:9:16",
																	"memberName": "ethAmount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2092,
																	"src": "5065:14:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2527,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5082:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5065:18:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2532,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2529,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2519,
																		"src": "5087:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
																			"typeString": "struct CryptoQuestSwap.LiquidityPool storage pointer"
																		}
																	},
																	"id": 2530,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5092:11:16",
																	"memberName": "tokenAmount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2090,
																	"src": "5087:16:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2531,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5106:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5087:20:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5065:42:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74206c6971756964697479",
															"id": 2534,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5109:24:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad",
																"typeString": "literal_string \"Insufficient liquidity\""
															},
															"value": "Insufficient liquidity"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad",
																"typeString": "literal_string \"Insufficient liquidity\""
															}
														],
														"id": 2524,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5057:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2535,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5057:77:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2536,
												"nodeType": "ExpressionStatement",
												"src": "5057:77:16"
											},
											{
												"assignments": [
													2538
												],
												"declarations": [
													{
														"constant": false,
														"id": 2538,
														"mutability": "mutable",
														"name": "tokenAmount",
														"nameLocation": "5153:11:16",
														"nodeType": "VariableDeclaration",
														"scope": 2586,
														"src": "5145:19:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2537,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5145:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2547,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2540,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5183:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2541,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5187:5:16",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "5183:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 2542,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2519,
																"src": "5194:4:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
																	"typeString": "struct CryptoQuestSwap.LiquidityPool storage pointer"
																}
															},
															"id": 2543,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5199:9:16",
															"memberName": "ethAmount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2092,
															"src": "5194:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 2544,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2519,
																"src": "5210:4:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
																	"typeString": "struct CryptoQuestSwap.LiquidityPool storage pointer"
																}
															},
															"id": 2545,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5215:11:16",
															"memberName": "tokenAmount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2090,
															"src": "5210:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2539,
														"name": "getOutputAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2883,
														"src": "5167:15:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2546,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5167:60:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5145:82:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2551,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2549,
																"name": "tokenAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2538,
																"src": "5245:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2550,
																"name": "minTokens",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2504,
																"src": "5260:9:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5245:24:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536c69707061676520746f6c6572616e6365206578636565646564",
															"id": 2552,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5271:29:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_361d91cf655db75c726bec8a3cf71c20e42a2572c8d3e4485f3abe41657f4b10",
																"typeString": "literal_string \"Slippage tolerance exceeded\""
															},
															"value": "Slippage tolerance exceeded"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_361d91cf655db75c726bec8a3cf71c20e42a2572c8d3e4485f3abe41657f4b10",
																"typeString": "literal_string \"Slippage tolerance exceeded\""
															}
														],
														"id": 2548,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5237:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2553,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5237:64:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2554,
												"nodeType": "ExpressionStatement",
												"src": "5237:64:16"
											},
											{
												"expression": {
													"id": 2560,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2555,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2519,
															"src": "5312:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
																"typeString": "struct CryptoQuestSwap.LiquidityPool storage pointer"
															}
														},
														"id": 2557,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5317:9:16",
														"memberName": "ethAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2092,
														"src": "5312:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"expression": {
															"id": 2558,
															"name": "msg",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967281,
															"src": "5330:3:16",
															"typeDescriptions": {
																"typeIdentifier": "t_magic_message",
																"typeString": "msg"
															}
														},
														"id": 2559,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5334:5:16",
														"memberName": "value",
														"nodeType": "MemberAccess",
														"src": "5330:9:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5312:27:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2561,
												"nodeType": "ExpressionStatement",
												"src": "5312:27:16"
											},
											{
												"expression": {
													"id": 2566,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2562,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2519,
															"src": "5349:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
																"typeString": "struct CryptoQuestSwap.LiquidityPool storage pointer"
															}
														},
														"id": 2564,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "5354:11:16",
														"memberName": "tokenAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2090,
														"src": "5349:16:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 2565,
														"name": "tokenAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2538,
														"src": "5369:11:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "5349:31:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2567,
												"nodeType": "ExpressionStatement",
												"src": "5349:31:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2572,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5425:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2573,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5429:6:16",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5425:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2574,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2538,
															"src": "5437:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2569,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2502,
																	"src": "5409:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2568,
																"name": "IERC20Upgradeable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 876,
																"src": "5391:17:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$876_$",
																	"typeString": "type(contract IERC20Upgradeable)"
																}
															},
															"id": 2570,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "5391:24:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$876",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"id": 2571,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5416:8:16",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 843,
														"src": "5391:33:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 2575,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5391:58:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2576,
												"nodeType": "ExpressionStatement",
												"src": "5391:58:16"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2578,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5478:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2579,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5482:6:16",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "5478:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2580,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2502,
															"src": "5490:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2581,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2538,
															"src": "5497:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 2582,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "5510:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2583,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5514:5:16",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "5510:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2577,
														"name": "TokenSwapped",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2138,
														"src": "5465:12:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2584,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5465:55:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2585,
												"nodeType": "EmitStatement",
												"src": "5460:60:16"
											}
										]
									},
									"functionSelector": "51422e97",
									"id": 2587,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2507,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2506,
												"name": "whenNotPaused",
												"nameLocations": [
													"4901:13:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1116,
												"src": "4901:13:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "4901:13:16"
										}
									],
									"name": "swapETHForTokens",
									"nameLocation": "4833:16:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2505,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2502,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "4858:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2587,
												"src": "4850:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2501,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4850:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2504,
												"mutability": "mutable",
												"name": "minTokens",
												"nameLocation": "4873:9:16",
												"nodeType": "VariableDeclaration",
												"scope": 2587,
												"src": "4865:17:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2503,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "4865:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4849:34:16"
									},
									"returnParameters": {
										"id": 2508,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "4915:0:16"
									},
									"scope": 2991,
									"src": "4824:703:16",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2684,
										"nodeType": "Block",
										"src": "5634:679:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2601,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2599,
																"name": "tokenAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2591,
																"src": "5652:11:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2600,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "5666:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "5652:15:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "546f6b656e20616d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 2602,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5669:40:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_1a4430203dcf8abbbd3446dbfc36d404c15a36b152eee41d8f82843f3bcf306f",
																"typeString": "literal_string \"Token amount must be greater than zero\""
															},
															"value": "Token amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_1a4430203dcf8abbbd3446dbfc36d404c15a36b152eee41d8f82843f3bcf306f",
																"typeString": "literal_string \"Token amount must be greater than zero\""
															}
														],
														"id": 2598,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5644:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2603,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5644:66:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2604,
												"nodeType": "ExpressionStatement",
												"src": "5644:66:16"
											},
											{
												"assignments": [
													2607
												],
												"declarations": [
													{
														"constant": false,
														"id": 2607,
														"mutability": "mutable",
														"name": "pool",
														"nameLocation": "5742:4:16",
														"nodeType": "VariableDeclaration",
														"scope": 2684,
														"src": "5720:26:16",
														"stateVariable": false,
														"storageLocation": "storage",
														"typeDescriptions": {
															"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
															"typeString": "struct CryptoQuestSwap.LiquidityPool"
														},
														"typeName": {
															"id": 2606,
															"nodeType": "UserDefinedTypeName",
															"pathNode": {
																"id": 2605,
																"name": "LiquidityPool",
																"nameLocations": [
																	"5720:13:16"
																],
																"nodeType": "IdentifierPath",
																"referencedDeclaration": 2099,
																"src": "5720:13:16"
															},
															"referencedDeclaration": 2099,
															"src": "5720:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
																"typeString": "struct CryptoQuestSwap.LiquidityPool"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2611,
												"initialValue": {
													"baseExpression": {
														"id": 2608,
														"name": "liquidityPools",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2104,
														"src": "5749:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_address_$_t_struct$_LiquidityPool_$2099_storage_$",
															"typeString": "mapping(address => struct CryptoQuestSwap.LiquidityPool storage ref)"
														}
													},
													"id": 2610,
													"indexExpression": {
														"id": 2609,
														"name": "token",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2589,
														"src": "5764:5:16",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "5749:21:16",
													"typeDescriptions": {
														"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage",
														"typeString": "struct CryptoQuestSwap.LiquidityPool storage ref"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5720:50:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															"id": 2621,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2616,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2613,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2607,
																		"src": "5788:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
																			"typeString": "struct CryptoQuestSwap.LiquidityPool storage pointer"
																		}
																	},
																	"id": 2614,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5793:9:16",
																	"memberName": "ethAmount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2092,
																	"src": "5788:14:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2615,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5805:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5788:18:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "&&",
															"rightExpression": {
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2620,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"expression": {
																		"id": 2617,
																		"name": "pool",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2607,
																		"src": "5810:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
																			"typeString": "struct CryptoQuestSwap.LiquidityPool storage pointer"
																		}
																	},
																	"id": 2618,
																	"isConstant": false,
																	"isLValue": true,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "5815:11:16",
																	"memberName": "tokenAmount",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 2090,
																	"src": "5810:16:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": ">",
																"rightExpression": {
																	"hexValue": "30",
																	"id": 2619,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "5829:1:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"src": "5810:20:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"src": "5788:42:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e74206c6971756964697479",
															"id": 2622,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5832:24:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad",
																"typeString": "literal_string \"Insufficient liquidity\""
															},
															"value": "Insufficient liquidity"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_36435f17e62e176b853e8c37716e51b74bf692c7f7df8628db24bf070e8367ad",
																"typeString": "literal_string \"Insufficient liquidity\""
															}
														],
														"id": 2612,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5780:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2623,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5780:77:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2624,
												"nodeType": "ExpressionStatement",
												"src": "5780:77:16"
											},
											{
												"assignments": [
													2626
												],
												"declarations": [
													{
														"constant": false,
														"id": 2626,
														"mutability": "mutable",
														"name": "ethAmount",
														"nameLocation": "5876:9:16",
														"nodeType": "VariableDeclaration",
														"scope": 2684,
														"src": "5868:17:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2625,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "5868:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2634,
												"initialValue": {
													"arguments": [
														{
															"id": 2628,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2591,
															"src": "5904:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 2629,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2607,
																"src": "5917:4:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
																	"typeString": "struct CryptoQuestSwap.LiquidityPool storage pointer"
																}
															},
															"id": 2630,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5922:11:16",
															"memberName": "tokenAmount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2090,
															"src": "5917:16:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"expression": {
																"id": 2631,
																"name": "pool",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2607,
																"src": "5935:4:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
																	"typeString": "struct CryptoQuestSwap.LiquidityPool storage pointer"
																}
															},
															"id": 2632,
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "5940:9:16",
															"memberName": "ethAmount",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 2092,
															"src": "5935:14:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2627,
														"name": "getOutputAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2883,
														"src": "5888:15:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2633,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5888:62:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "5868:82:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2638,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2636,
																"name": "ethAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2626,
																"src": "5968:9:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2637,
																"name": "minETH",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2593,
																"src": "5981:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "5968:19:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536c69707061676520746f6c6572616e6365206578636565646564",
															"id": 2639,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "5989:29:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_361d91cf655db75c726bec8a3cf71c20e42a2572c8d3e4485f3abe41657f4b10",
																"typeString": "literal_string \"Slippage tolerance exceeded\""
															},
															"value": "Slippage tolerance exceeded"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_361d91cf655db75c726bec8a3cf71c20e42a2572c8d3e4485f3abe41657f4b10",
																"typeString": "literal_string \"Slippage tolerance exceeded\""
															}
														],
														"id": 2635,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "5960:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2640,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "5960:59:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2641,
												"nodeType": "ExpressionStatement",
												"src": "5960:59:16"
											},
											{
												"expression": {
													"id": 2646,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2642,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2607,
															"src": "6030:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
																"typeString": "struct CryptoQuestSwap.LiquidityPool storage pointer"
															}
														},
														"id": 2644,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6035:11:16",
														"memberName": "tokenAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2090,
														"src": "6030:16:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "+=",
													"rightHandSide": {
														"id": 2645,
														"name": "tokenAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2591,
														"src": "6050:11:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6030:31:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2647,
												"nodeType": "ExpressionStatement",
												"src": "6030:31:16"
											},
											{
												"expression": {
													"id": 2652,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"id": 2648,
															"name": "pool",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2607,
															"src": "6071:4:16",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage_ptr",
																"typeString": "struct CryptoQuestSwap.LiquidityPool storage pointer"
															}
														},
														"id": 2650,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "6076:9:16",
														"memberName": "ethAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2092,
														"src": "6071:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "-=",
													"rightHandSide": {
														"id": 2651,
														"name": "ethAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2626,
														"src": "6089:9:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "6071:27:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2653,
												"nodeType": "ExpressionStatement",
												"src": "6071:27:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2658,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6147:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2659,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6151:6:16",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6147:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2662,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6167:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_CryptoQuestSwap_$2991",
																		"typeString": "contract CryptoQuestSwap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_CryptoQuestSwap_$2991",
																		"typeString": "contract CryptoQuestSwap"
																	}
																],
																"id": 2661,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6159:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2660,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6159:7:16",
																	"typeDescriptions": {}
																}
															},
															"id": 2663,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6159:13:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2664,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2591,
															"src": "6174:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2655,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2589,
																	"src": "6127:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2654,
																"name": "IERC20Upgradeable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 876,
																"src": "6109:17:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$876_$",
																	"typeString": "type(contract IERC20Upgradeable)"
																}
															},
															"id": 2656,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6109:24:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$876",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"id": 2657,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6134:12:16",
														"memberName": "transferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 875,
														"src": "6109:37:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,address,uint256) external returns (bool)"
														}
													},
													"id": 2665,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6109:77:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2666,
												"nodeType": "ExpressionStatement",
												"src": "6109:77:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2673,
															"name": "ethAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2626,
															"src": "6225:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 2669,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "6204:3:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2670,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6208:6:16",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "6204:10:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2668,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6196:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 2667,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6196:8:16",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 2671,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6196:19:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 2672,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6216:8:16",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "6196:28:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2674,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6196:39:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2675,
												"nodeType": "ExpressionStatement",
												"src": "6196:39:16"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2677,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6264:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2678,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6268:6:16",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6264:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2679,
															"name": "token",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2589,
															"src": "6276:5:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2680,
															"name": "tokenAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2591,
															"src": "6283:11:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2681,
															"name": "ethAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2626,
															"src": "6296:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2676,
														"name": "TokenSwapped",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2138,
														"src": "6251:12:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2682,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6251:55:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2683,
												"nodeType": "EmitStatement",
												"src": "6246:60:16"
											}
										]
									},
									"functionSelector": "e15cc8da",
									"id": 2685,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2596,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2595,
												"name": "whenNotPaused",
												"nameLocations": [
													"5620:13:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1116,
												"src": "5620:13:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "5620:13:16"
										}
									],
									"name": "swapTokensForETH",
									"nameLocation": "5542:16:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2594,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2589,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "5567:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2685,
												"src": "5559:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2588,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "5559:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2591,
												"mutability": "mutable",
												"name": "tokenAmount",
												"nameLocation": "5582:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 2685,
												"src": "5574:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2590,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5574:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2593,
												"mutability": "mutable",
												"name": "minETH",
												"nameLocation": "5603:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2685,
												"src": "5595:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2592,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "5595:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5558:52:16"
									},
									"returnParameters": {
										"id": 2597,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5634:0:16"
									},
									"scope": 2991,
									"src": "5533:780:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2770,
										"nodeType": "Block",
										"src": "6406:554:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2698,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"id": 2695,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "6424:3:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2696,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6428:5:16",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "6424:9:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">",
															"rightExpression": {
																"hexValue": "30",
																"id": 2697,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "6436:1:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_0_by_1",
																	"typeString": "int_const 0"
																},
																"value": "0"
															},
															"src": "6424:13:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "45544820616d6f756e74206d7573742062652067726561746572207468616e207a65726f",
															"id": 2699,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6439:38:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_6f2e13a40c8d5acc1536a801b548e60d12893ddab9aa84254a90ac0e27771d7b",
																"typeString": "literal_string \"ETH amount must be greater than zero\""
															},
															"value": "ETH amount must be greater than zero"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_6f2e13a40c8d5acc1536a801b548e60d12893ddab9aa84254a90ac0e27771d7b",
																"typeString": "literal_string \"ETH amount must be greater than zero\""
															}
														],
														"id": 2694,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6416:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2700,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6416:62:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2701,
												"nodeType": "ExpressionStatement",
												"src": "6416:62:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2711,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 2705,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2687,
																		"src": "6511:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2703,
																		"name": "cqtNFT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2088,
																		"src": "6496:6:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Upgradeable_$992",
																			"typeString": "contract IERC721Upgradeable"
																		}
																	},
																	"id": 2704,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6503:7:16",
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 925,
																	"src": "6496:14:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view external returns (address)"
																	}
																},
																"id": 2706,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6496:23:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"arguments": [
																	{
																		"id": 2709,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "6531:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_CryptoQuestSwap_$2991",
																			"typeString": "contract CryptoQuestSwap"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_CryptoQuestSwap_$2991",
																			"typeString": "contract CryptoQuestSwap"
																		}
																	],
																	"id": 2708,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "6523:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2707,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "6523:7:16",
																		"typeDescriptions": {}
																	}
																},
																"id": 2710,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "6523:13:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "6496:40:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e4654206e6f74206f776e656420627920636f6e7472616374",
															"id": 2712,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6538:27:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_58daa56f77f4b6beb09b0245242e50eda058fa68d4bc8e521ae0632363e71e1a",
																"typeString": "literal_string \"NFT not owned by contract\""
															},
															"value": "NFT not owned by contract"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_58daa56f77f4b6beb09b0245242e50eda058fa68d4bc8e521ae0632363e71e1a",
																"typeString": "literal_string \"NFT not owned by contract\""
															}
														],
														"id": 2702,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6488:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2713,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6488:78:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2714,
												"nodeType": "ExpressionStatement",
												"src": "6488:78:16"
											},
											{
												"assignments": [
													2716
												],
												"declarations": [
													{
														"constant": false,
														"id": 2716,
														"mutability": "mutable",
														"name": "ethAmount",
														"nameLocation": "6585:9:16",
														"nodeType": "VariableDeclaration",
														"scope": 2770,
														"src": "6577:17:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2715,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "6577:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2730,
												"initialValue": {
													"arguments": [
														{
															"expression": {
																"id": 2718,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6613:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2719,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6617:5:16",
															"memberName": "value",
															"nodeType": "MemberAccess",
															"src": "6613:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2727,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 2722,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "6632:4:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_CryptoQuestSwap_$2991",
																				"typeString": "contract CryptoQuestSwap"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_CryptoQuestSwap_$2991",
																				"typeString": "contract CryptoQuestSwap"
																			}
																		],
																		"id": 2721,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "6624:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2720,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "6624:7:16",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2723,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "6624:13:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 2724,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6638:7:16",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "6624:21:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "-",
															"rightExpression": {
																"expression": {
																	"id": 2725,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "6648:3:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2726,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "6652:5:16",
																"memberName": "value",
																"nodeType": "MemberAccess",
																"src": "6648:9:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6624:33:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"hexValue": "31",
															"id": 2728,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6659:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															}
														],
														"id": 2717,
														"name": "getOutputAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2883,
														"src": "6597:15:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2729,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6597:64:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "6577:84:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2734,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2732,
																"name": "ethAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2716,
																"src": "6708:9:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2733,
																"name": "minETH",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2689,
																"src": "6721:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "6708:19:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536c69707061676520746f6c6572616e6365206578636565646564",
															"id": 2735,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "6729:29:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_361d91cf655db75c726bec8a3cf71c20e42a2572c8d3e4485f3abe41657f4b10",
																"typeString": "literal_string \"Slippage tolerance exceeded\""
															},
															"value": "Slippage tolerance exceeded"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_361d91cf655db75c726bec8a3cf71c20e42a2572c8d3e4485f3abe41657f4b10",
																"typeString": "literal_string \"Slippage tolerance exceeded\""
															}
														],
														"id": 2731,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "6700:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2736,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6700:59:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2737,
												"nodeType": "ExpressionStatement",
												"src": "6700:59:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2744,
															"name": "ethAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2716,
															"src": "6799:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 2740,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "6778:3:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2741,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6782:6:16",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "6778:10:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2739,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6770:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 2738,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6770:8:16",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 2742,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6770:19:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 2743,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6790:8:16",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "6770:28:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2745,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6770:39:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2746,
												"nodeType": "ExpressionStatement",
												"src": "6770:39:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2752,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "6851:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_CryptoQuestSwap_$2991",
																		"typeString": "contract CryptoQuestSwap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_CryptoQuestSwap_$2991",
																		"typeString": "contract CryptoQuestSwap"
																	}
																],
																"id": 2751,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6843:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2750,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6843:7:16",
																	"typeDescriptions": {}
																}
															},
															"id": 2753,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6843:13:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2754,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6858:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2755,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6862:6:16",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6858:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2756,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2687,
															"src": "6870:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2747,
															"name": "cqtNFT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2088,
															"src": "6819:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721Upgradeable_$992",
																"typeString": "contract IERC721Upgradeable"
															}
														},
														"id": 2749,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "6826:16:16",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 947,
														"src": "6819:23:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 2757,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6819:59:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2758,
												"nodeType": "ExpressionStatement",
												"src": "6819:59:16"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2760,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "6905:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2761,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "6909:6:16",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "6905:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2764,
																	"name": "cqtNFT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2088,
																	"src": "6925:6:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC721Upgradeable_$992",
																		"typeString": "contract IERC721Upgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC721Upgradeable_$992",
																		"typeString": "contract IERC721Upgradeable"
																	}
																],
																"id": 2763,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "6917:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2762,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "6917:7:16",
																	"typeDescriptions": {}
																}
															},
															"id": 2765,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "6917:15:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2766,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2687,
															"src": "6934:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2767,
															"name": "ethAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2716,
															"src": "6943:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2759,
														"name": "NFTSwapped",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2148,
														"src": "6894:10:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2768,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "6894:59:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2769,
												"nodeType": "EmitStatement",
												"src": "6889:64:16"
											}
										]
									},
									"functionSelector": "49f0346e",
									"id": 2771,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2692,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2691,
												"name": "whenNotPaused",
												"nameLocations": [
													"6392:13:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1116,
												"src": "6392:13:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "6392:13:16"
										}
									],
									"name": "swapETHForNFT",
									"nameLocation": "6328:13:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2690,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2687,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6350:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2771,
												"src": "6342:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2686,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6342:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2689,
												"mutability": "mutable",
												"name": "minETH",
												"nameLocation": "6367:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2771,
												"src": "6359:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2688,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6359:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6341:33:16"
									},
									"returnParameters": {
										"id": 2693,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "6406:0:16"
									},
									"scope": 2991,
									"src": "6319:641:16",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2842,
										"nodeType": "Block",
										"src": "7045:448:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"id": 2787,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"arguments": [
																	{
																		"id": 2783,
																		"name": "tokenId",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2773,
																		"src": "7078:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 2781,
																		"name": "cqtNFT",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 2088,
																		"src": "7063:6:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_IERC721Upgradeable_$992",
																			"typeString": "contract IERC721Upgradeable"
																		}
																	},
																	"id": 2782,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7070:7:16",
																	"memberName": "ownerOf",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 925,
																	"src": "7063:14:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
																		"typeString": "function (uint256) view external returns (address)"
																	}
																},
																"id": 2784,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7063:23:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "==",
															"rightExpression": {
																"expression": {
																	"id": 2785,
																	"name": "msg",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967281,
																	"src": "7090:3:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_magic_message",
																		"typeString": "msg"
																	}
																},
																"id": 2786,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "7094:6:16",
																"memberName": "sender",
																"nodeType": "MemberAccess",
																"src": "7090:10:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"src": "7063:37:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4e6f74206f776e6572206f66204e4654",
															"id": 2788,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7102:18:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c4a43c611968ec7565a8db7967f80ea40a0b06b4f2b3ed8286dbd1bbd126f721",
																"typeString": "literal_string \"Not owner of NFT\""
															},
															"value": "Not owner of NFT"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_c4a43c611968ec7565a8db7967f80ea40a0b06b4f2b3ed8286dbd1bbd126f721",
																"typeString": "literal_string \"Not owner of NFT\""
															}
														],
														"id": 2780,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7055:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2789,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7055:66:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2790,
												"nodeType": "ExpressionStatement",
												"src": "7055:66:16"
											},
											{
												"assignments": [
													2792
												],
												"declarations": [
													{
														"constant": false,
														"id": 2792,
														"mutability": "mutable",
														"name": "ethAmount",
														"nameLocation": "7140:9:16",
														"nodeType": "VariableDeclaration",
														"scope": 2842,
														"src": "7132:17:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2791,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7132:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2802,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "31",
															"id": 2794,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7168:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														{
															"hexValue": "31",
															"id": 2795,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7171:1:16",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															"value": "1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"id": 2798,
																		"name": "this",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967268,
																		"src": "7182:4:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_contract$_CryptoQuestSwap_$2991",
																			"typeString": "contract CryptoQuestSwap"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_contract$_CryptoQuestSwap_$2991",
																			"typeString": "contract CryptoQuestSwap"
																		}
																	],
																	"id": 2797,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"lValueRequested": false,
																	"nodeType": "ElementaryTypeNameExpression",
																	"src": "7174:7:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_address_$",
																		"typeString": "type(address)"
																	},
																	"typeName": {
																		"id": 2796,
																		"name": "address",
																		"nodeType": "ElementaryTypeName",
																		"src": "7174:7:16",
																		"typeDescriptions": {}
																	}
																},
																"id": 2799,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "7174:13:16",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 2800,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7188:7:16",
															"memberName": "balance",
															"nodeType": "MemberAccess",
															"src": "7174:21:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															{
																"typeIdentifier": "t_rational_1_by_1",
																"typeString": "int_const 1"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2793,
														"name": "getOutputAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2883,
														"src": "7152:15:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
															"typeString": "function (uint256,uint256,uint256) pure returns (uint256)"
														}
													},
													"id": 2801,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7152:44:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7132:64:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2806,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 2804,
																"name": "ethAmount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2792,
																"src": "7241:9:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2805,
																"name": "minETH",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2775,
																"src": "7254:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "7241:19:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "536c69707061676520746f6c6572616e6365206578636565646564",
															"id": 2807,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "7262:29:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_361d91cf655db75c726bec8a3cf71c20e42a2572c8d3e4485f3abe41657f4b10",
																"typeString": "literal_string \"Slippage tolerance exceeded\""
															},
															"value": "Slippage tolerance exceeded"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_361d91cf655db75c726bec8a3cf71c20e42a2572c8d3e4485f3abe41657f4b10",
																"typeString": "literal_string \"Slippage tolerance exceeded\""
															}
														],
														"id": 2803,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "7233:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2808,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7233:59:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2809,
												"nodeType": "ExpressionStatement",
												"src": "7233:59:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2813,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7327:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2814,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7331:6:16",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7327:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2817,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "7347:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_CryptoQuestSwap_$2991",
																		"typeString": "contract CryptoQuestSwap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_CryptoQuestSwap_$2991",
																		"typeString": "contract CryptoQuestSwap"
																	}
																],
																"id": 2816,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7339:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2815,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7339:7:16",
																	"typeDescriptions": {}
																}
															},
															"id": 2818,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7339:13:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2819,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2773,
															"src": "7354:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2810,
															"name": "cqtNFT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2088,
															"src": "7303:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721Upgradeable_$992",
																"typeString": "contract IERC721Upgradeable"
															}
														},
														"id": 2812,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7310:16:16",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 947,
														"src": "7303:23:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 2820,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7303:59:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2821,
												"nodeType": "ExpressionStatement",
												"src": "7303:59:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2828,
															"name": "ethAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2792,
															"src": "7401:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 2824,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "7380:3:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2825,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "7384:6:16",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "7380:10:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2823,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7372:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 2822,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7372:8:16",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 2826,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7372:19:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 2827,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "7392:8:16",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "7372:28:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2829,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7372:39:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2830,
												"nodeType": "ExpressionStatement",
												"src": "7372:39:16"
											},
											{
												"eventCall": {
													"arguments": [
														{
															"expression": {
																"id": 2832,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "7438:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2833,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "7442:6:16",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "7438:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"arguments": [
																{
																	"id": 2836,
																	"name": "cqtNFT",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2088,
																	"src": "7458:6:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_IERC721Upgradeable_$992",
																		"typeString": "contract IERC721Upgradeable"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_IERC721Upgradeable_$992",
																		"typeString": "contract IERC721Upgradeable"
																	}
																],
																"id": 2835,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "7450:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2834,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "7450:7:16",
																	"typeDescriptions": {}
																}
															},
															"id": 2837,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "7450:15:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2838,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2773,
															"src": "7467:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														{
															"id": 2839,
															"name": "ethAmount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2792,
															"src": "7476:9:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"id": 2831,
														"name": "NFTSwapped",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2148,
														"src": "7427:10:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256,uint256)"
														}
													},
													"id": 2840,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "7427:59:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2841,
												"nodeType": "EmitStatement",
												"src": "7422:64:16"
											}
										]
									},
									"functionSelector": "d9a37ad2",
									"id": 2843,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 2778,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2777,
												"name": "whenNotPaused",
												"nameLocations": [
													"7031:13:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 1116,
												"src": "7031:13:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "7031:13:16"
										}
									],
									"name": "swapNFTForETH",
									"nameLocation": "6975:13:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2776,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2773,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "6997:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2843,
												"src": "6989:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2772,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "6989:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2775,
												"mutability": "mutable",
												"name": "minETH",
												"nameLocation": "7014:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2843,
												"src": "7006:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2774,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7006:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "6988:33:16"
									},
									"returnParameters": {
										"id": 2779,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7045:0:16"
									},
									"scope": 2991,
									"src": "6966:527:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2882,
										"nodeType": "Block",
										"src": "7622:255:16",
										"statements": [
											{
												"assignments": [
													2855
												],
												"declarations": [
													{
														"constant": false,
														"id": 2855,
														"mutability": "mutable",
														"name": "inputAmountWithFee",
														"nameLocation": "7640:18:16",
														"nodeType": "VariableDeclaration",
														"scope": 2882,
														"src": "7632:26:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2854,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7632:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2862,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2861,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2856,
														"name": "inputAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2845,
														"src": "7661:11:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2859,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"leftExpression": {
																	"hexValue": "31303030",
																	"id": 2857,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7676:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	},
																	"value": "1000"
																},
																"nodeType": "BinaryOperation",
																"operator": "-",
																"rightExpression": {
																	"id": 2858,
																	"name": "FEE_RATE",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2082,
																	"src": "7683:8:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "7676:15:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2860,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7675:17:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7661:31:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7632:60:16"
											},
											{
												"assignments": [
													2864
												],
												"declarations": [
													{
														"constant": false,
														"id": 2864,
														"mutability": "mutable",
														"name": "numerator",
														"nameLocation": "7710:9:16",
														"nodeType": "VariableDeclaration",
														"scope": 2882,
														"src": "7702:17:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2863,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7702:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2868,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2867,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2865,
														"name": "inputAmountWithFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2855,
														"src": "7722:18:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "*",
													"rightExpression": {
														"id": 2866,
														"name": "outputReserve",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2849,
														"src": "7743:13:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7722:34:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7702:54:16"
											},
											{
												"assignments": [
													2870
												],
												"declarations": [
													{
														"constant": false,
														"id": 2870,
														"mutability": "mutable",
														"name": "denominator",
														"nameLocation": "7774:11:16",
														"nodeType": "VariableDeclaration",
														"scope": 2882,
														"src": "7766:19:16",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 2869,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "7766:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 2877,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2876,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 2873,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 2871,
																	"name": "inputReserve",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2847,
																	"src": "7789:12:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "*",
																"rightExpression": {
																	"hexValue": "31303030",
																	"id": 2872,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "7804:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1000_by_1",
																		"typeString": "int_const 1000"
																	},
																	"value": "1000"
																},
																"src": "7789:19:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 2874,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "7788:21:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"id": 2875,
														"name": "inputAmountWithFee",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2855,
														"src": "7812:18:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7788:42:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "7766:64:16"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 2880,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 2878,
														"name": "numerator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2864,
														"src": "7847:9:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"id": 2879,
														"name": "denominator",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2870,
														"src": "7859:11:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "7847:23:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 2853,
												"id": 2881,
												"nodeType": "Return",
												"src": "7840:30:16"
											}
										]
									},
									"id": 2883,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getOutputAmount",
									"nameLocation": "7508:15:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2850,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2845,
												"mutability": "mutable",
												"name": "inputAmount",
												"nameLocation": "7532:11:16",
												"nodeType": "VariableDeclaration",
												"scope": 2883,
												"src": "7524:19:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2844,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7524:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2847,
												"mutability": "mutable",
												"name": "inputReserve",
												"nameLocation": "7553:12:16",
												"nodeType": "VariableDeclaration",
												"scope": 2883,
												"src": "7545:20:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2846,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7545:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2849,
												"mutability": "mutable",
												"name": "outputReserve",
												"nameLocation": "7575:13:16",
												"nodeType": "VariableDeclaration",
												"scope": 2883,
												"src": "7567:21:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2848,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7567:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7523:66:16"
									},
									"returnParameters": {
										"id": 2853,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2852,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 2883,
												"src": "7613:7:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2851,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "7613:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7612:9:16"
									},
									"scope": 2991,
									"src": "7499:378:16",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"baseFunctions": [
										752
									],
									"body": {
										"id": 2892,
										"nodeType": "Block",
										"src": "7979:2:16",
										"statements": []
									},
									"id": 2893,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2888,
													"name": "UPGRADER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2074,
													"src": "7955:13:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2889,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2887,
												"name": "onlyRole",
												"nameLocations": [
													"7946:8:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "7946:8:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "7946:23:16"
										}
									],
									"name": "_authorizeUpgrade",
									"nameLocation": "7892:17:16",
									"nodeType": "FunctionDefinition",
									"overrides": {
										"id": 2890,
										"nodeType": "OverrideSpecifier",
										"overrides": [],
										"src": "7970:8:16"
									},
									"parameters": {
										"id": 2886,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2885,
												"mutability": "mutable",
												"name": "newImplementation",
												"nameLocation": "7918:17:16",
												"nodeType": "VariableDeclaration",
												"scope": 2893,
												"src": "7910:25:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2884,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "7910:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "7909:27:16"
									},
									"returnParameters": {
										"id": 2891,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "7979:0:16"
									},
									"scope": 2991,
									"src": "7883:98:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 2919,
										"nodeType": "Block",
										"src": "8119:123:16",
										"statements": [
											{
												"expression": {
													"id": 2910,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 2905,
																"name": "liquidityPools",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2104,
																"src": "8129:14:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_LiquidityPool_$2099_storage_$",
																	"typeString": "mapping(address => struct CryptoQuestSwap.LiquidityPool storage ref)"
																}
															},
															"id": 2907,
															"indexExpression": {
																"id": 2906,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2895,
																"src": "8144:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8129:21:16",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage",
																"typeString": "struct CryptoQuestSwap.LiquidityPool storage ref"
															}
														},
														"id": 2908,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8151:11:16",
														"memberName": "tokenAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2090,
														"src": "8129:33:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2909,
														"name": "newTokenAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2897,
														"src": "8165:14:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8129:50:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2911,
												"nodeType": "ExpressionStatement",
												"src": "8129:50:16"
											},
											{
												"expression": {
													"id": 2917,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"expression": {
															"baseExpression": {
																"id": 2912,
																"name": "liquidityPools",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2104,
																"src": "8189:14:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_mapping$_t_address_$_t_struct$_LiquidityPool_$2099_storage_$",
																	"typeString": "mapping(address => struct CryptoQuestSwap.LiquidityPool storage ref)"
																}
															},
															"id": 2914,
															"indexExpression": {
																"id": 2913,
																"name": "token",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2895,
																"src": "8204:5:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"isConstant": false,
															"isLValue": true,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "IndexAccess",
															"src": "8189:21:16",
															"typeDescriptions": {
																"typeIdentifier": "t_struct$_LiquidityPool_$2099_storage",
																"typeString": "struct CryptoQuestSwap.LiquidityPool storage ref"
															}
														},
														"id": 2915,
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"memberLocation": "8211:9:16",
														"memberName": "ethAmount",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 2092,
														"src": "8189:31:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"id": 2916,
														"name": "newEthAmount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 2899,
														"src": "8223:12:16",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "8189:46:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 2918,
												"nodeType": "ExpressionStatement",
												"src": "8189:46:16"
											}
										]
									},
									"functionSelector": "c7088313",
									"id": 2920,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2902,
													"name": "LIQUIDITY_MANAGER_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 2079,
													"src": "8095:22:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2903,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2901,
												"name": "onlyRole",
												"nameLocations": [
													"8086:8:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "8086:8:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "8086:32:16"
										}
									],
									"name": "updateLiquidityPool",
									"nameLocation": "7996:19:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2900,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2895,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8024:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2920,
												"src": "8016:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2894,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8016:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2897,
												"mutability": "mutable",
												"name": "newTokenAmount",
												"nameLocation": "8039:14:16",
												"nodeType": "VariableDeclaration",
												"scope": 2920,
												"src": "8031:22:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2896,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8031:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2899,
												"mutability": "mutable",
												"name": "newEthAmount",
												"nameLocation": "8063:12:16",
												"nodeType": "VariableDeclaration",
												"scope": 2920,
												"src": "8055:20:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2898,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8055:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8015:61:16"
									},
									"returnParameters": {
										"id": 2904,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8119:0:16"
									},
									"scope": 2991,
									"src": "7987:255:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2948,
										"nodeType": "Block",
										"src": "8323:127:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															},
															"id": 2935,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"expression": {
																	"arguments": [
																		{
																			"id": 2931,
																			"name": "this",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967268,
																			"src": "8349:4:16",
																			"typeDescriptions": {
																				"typeIdentifier": "t_contract$_CryptoQuestSwap_$2991",
																				"typeString": "contract CryptoQuestSwap"
																			}
																		}
																	],
																	"expression": {
																		"argumentTypes": [
																			{
																				"typeIdentifier": "t_contract$_CryptoQuestSwap_$2991",
																				"typeString": "contract CryptoQuestSwap"
																			}
																		],
																		"id": 2930,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"lValueRequested": false,
																		"nodeType": "ElementaryTypeNameExpression",
																		"src": "8341:7:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_address_$",
																			"typeString": "type(address)"
																		},
																		"typeName": {
																			"id": 2929,
																			"name": "address",
																			"nodeType": "ElementaryTypeName",
																			"src": "8341:7:16",
																			"typeDescriptions": {}
																		}
																	},
																	"id": 2932,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"kind": "typeConversion",
																	"lValueRequested": false,
																	"nameLocations": [],
																	"names": [],
																	"nodeType": "FunctionCall",
																	"src": "8341:13:16",
																	"tryCall": false,
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																},
																"id": 2933,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "8355:7:16",
																"memberName": "balance",
																"nodeType": "MemberAccess",
																"src": "8341:21:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": ">=",
															"rightExpression": {
																"id": 2934,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 2922,
																"src": "8366:6:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"src": "8341:31:16",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "496e73756666696369656e742062616c616e6365",
															"id": 2936,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "8374:22:16",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															},
															"value": "Insufficient balance"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_47533c3652efd02135ecc34b3fac8efc7b14bf0618b9392fd6e044a3d8a6eef5",
																"typeString": "literal_string \"Insufficient balance\""
															}
														],
														"id": 2928,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "8333:7:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 2937,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8333:64:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2938,
												"nodeType": "ExpressionStatement",
												"src": "8333:64:16"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 2945,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2922,
															"src": "8436:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"expression": {
																		"id": 2941,
																		"name": "msg",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 4294967281,
																		"src": "8415:3:16",
																		"typeDescriptions": {
																			"typeIdentifier": "t_magic_message",
																			"typeString": "msg"
																		}
																	},
																	"id": 2942,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "8419:6:16",
																	"memberName": "sender",
																	"nodeType": "MemberAccess",
																	"src": "8415:10:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2940,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8407:8:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_payable_$",
																	"typeString": "type(address payable)"
																},
																"typeName": {
																	"id": 2939,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8407:8:16",
																	"stateMutability": "payable",
																	"typeDescriptions": {}
																}
															},
															"id": 2943,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8407:19:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"id": 2944,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8427:8:16",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"src": "8407:28:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_transfer_nonpayable$_t_uint256_$returns$__$",
															"typeString": "function (uint256)"
														}
													},
													"id": 2946,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8407:36:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2947,
												"nodeType": "ExpressionStatement",
												"src": "8407:36:16"
											}
										]
									},
									"functionSelector": "f14210a6",
									"id": 2949,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2925,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 28,
													"src": "8303:18:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2926,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2924,
												"name": "onlyRole",
												"nameLocations": [
													"8294:8:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "8294:8:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "8294:28:16"
										}
									],
									"name": "withdrawETH",
									"nameLocation": "8257:11:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2923,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2922,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8277:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2949,
												"src": "8269:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2921,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8269:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8268:16:16"
									},
									"returnParameters": {
										"id": 2927,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8323:0:16"
									},
									"scope": 2991,
									"src": "8248:202:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2968,
										"nodeType": "Block",
										"src": "8549:70:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"id": 2963,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8593:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2964,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8597:6:16",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8593:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2965,
															"name": "amount",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2953,
															"src": "8605:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"arguments": [
																{
																	"id": 2960,
																	"name": "token",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 2951,
																	"src": "8577:5:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 2959,
																"name": "IERC20Upgradeable",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 876,
																"src": "8559:17:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_IERC20Upgradeable_$876_$",
																	"typeString": "type(contract IERC20Upgradeable)"
																}
															},
															"id": 2961,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8559:24:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC20Upgradeable_$876",
																"typeString": "contract IERC20Upgradeable"
															}
														},
														"id": 2962,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8584:8:16",
														"memberName": "transfer",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 843,
														"src": "8559:33:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
															"typeString": "function (address,uint256) external returns (bool)"
														}
													},
													"id": 2966,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8559:53:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 2967,
												"nodeType": "ExpressionStatement",
												"src": "8559:53:16"
											}
										]
									},
									"functionSelector": "06b091f9",
									"id": 2969,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2956,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 28,
													"src": "8529:18:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2957,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2955,
												"name": "onlyRole",
												"nameLocations": [
													"8520:8:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "8520:8:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "8520:28:16"
										}
									],
									"name": "withdrawTokens",
									"nameLocation": "8465:14:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2954,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2951,
												"mutability": "mutable",
												"name": "token",
												"nameLocation": "8488:5:16",
												"nodeType": "VariableDeclaration",
												"scope": 2969,
												"src": "8480:13:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 2950,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "8480:7:16",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 2953,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "8503:6:16",
												"nodeType": "VariableDeclaration",
												"scope": 2969,
												"src": "8495:14:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2952,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8495:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8479:31:16"
									},
									"returnParameters": {
										"id": 2958,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8549:0:16"
									},
									"scope": 2991,
									"src": "8456:163:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 2989,
										"nodeType": "Block",
										"src": "8701:76:16",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"arguments": [
																{
																	"id": 2982,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "8743:4:16",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_CryptoQuestSwap_$2991",
																		"typeString": "contract CryptoQuestSwap"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_CryptoQuestSwap_$2991",
																		"typeString": "contract CryptoQuestSwap"
																	}
																],
																"id": 2981,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "8735:7:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 2980,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "8735:7:16",
																	"typeDescriptions": {}
																}
															},
															"id": 2983,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "8735:13:16",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"expression": {
																"id": 2984,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "8750:3:16",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 2985,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "8754:6:16",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "8750:10:16",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 2986,
															"name": "tokenId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2971,
															"src": "8762:7:16",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														],
														"expression": {
															"id": 2977,
															"name": "cqtNFT",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 2088,
															"src": "8711:6:16",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_IERC721Upgradeable_$992",
																"typeString": "contract IERC721Upgradeable"
															}
														},
														"id": 2979,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "8718:16:16",
														"memberName": "safeTransferFrom",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 947,
														"src": "8711:23:16",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
															"typeString": "function (address,address,uint256) external"
														}
													},
													"id": 2987,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "8711:59:16",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 2988,
												"nodeType": "ExpressionStatement",
												"src": "8711:59:16"
											}
										]
									},
									"functionSelector": "023245d7",
									"id": 2990,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"arguments": [
												{
													"id": 2974,
													"name": "DEFAULT_ADMIN_ROLE",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 28,
													"src": "8681:18:16",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes32",
														"typeString": "bytes32"
													}
												}
											],
											"id": 2975,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 2973,
												"name": "onlyRole",
												"nameLocations": [
													"8672:8:16"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 57,
												"src": "8672:8:16"
											},
											"nodeType": "ModifierInvocation",
											"src": "8672:28:16"
										}
									],
									"name": "withdrawNFT",
									"nameLocation": "8634:11:16",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2972,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 2971,
												"mutability": "mutable",
												"name": "tokenId",
												"nameLocation": "8654:7:16",
												"nodeType": "VariableDeclaration",
												"scope": 2990,
												"src": "8646:15:16",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 2970,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "8646:7:16",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "8645:17:16"
									},
									"returnParameters": {
										"id": 2976,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "8701:0:16"
									},
									"scope": 2991,
									"src": "8625:152:16",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 2992,
							"src": "638:8141:16",
							"usedErrors": [
								379,
								382,
								643,
								648,
								1077,
								1080,
								1276,
								1279,
								1394,
								1407,
								1685,
								1688
							],
							"usedEvents": [
								387,
								1069,
								1074,
								1288,
								1297,
								1306,
								1373,
								2116,
								2128,
								2138,
								2148
							]
						}
					],
					"src": "81:8699:16"
				},
				"id": 16
			}
		}
	}
}